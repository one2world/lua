{\rtf1\ansi\ansicpg936\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset134\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset134\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset134\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\info 
{\title {\comment Lua_Docmention }Lua_Docmention}
{\comment \'D6\'C6\'D7\'F7\'D5\'DF doxygen1.8.20.}
{\creatim \yr2020\mo9\dy8\hr15\min45\sec6}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt Lua_Docmention}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
\'B0\'E6\'B1\'BE \par{\field\fldedit {\*\fldinst CREATEDATE \\*MERGEFORMAT}{\fldrslt 2020\'C4\'EA \'BE\'C5\'D4\'C2 8\'C8\'D5 \'D0\'C7\'C6\'DA\'B6\'FE }}\par
\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \'C4\'BF\'C2\'BC\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'B4\'FD\'B0\'EC\'CA\'C2\'CF\'EE\'C1\'D0\'B1\'ED{\tc \v \'B4\'FD\'B0\'EC\'CA\'C2\'CF\'EE\'C1\'D0\'B1\'ED}\par \pard\plain 
{\bkmkstart AAAAAAAEVQ}
{\bkmkend AAAAAAAEVQ}
\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C8\'AB\'BE\'D6 {\b stringtable}  \par
}
{\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\bkmkstart AAAAAAAEEM}
{\bkmkend AAAAAAAEEM}
  \par}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C8\'AB\'BE\'D6 {\b CallInfo}  \par
}
{\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\bkmkstart AAAAAAAEEN}
{\bkmkend AAAAAAAEEN}
yields\'B2\'BF\'B7\'D6 TODO \par}
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\'CB\'F7\'D2\'FD\par \pard\plain 
{\tc \v \'BD\'E1\'B9\'B9\'CC\'E5\'CB\'F7\'D2\'FD}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'D5\'E2\'C0\'EF\'C1\'D0\'B3\'F6\'C1\'CB\'CB\'F9\'D3\'D0\'BD\'E1\'B9\'B9\'CC\'E5\'A3\'AC\'B2\'A2\'B8\'BD\'B4\'F8\'BC\'F2\'D2\'AA\'CB\'B5\'C3\'F7:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b AbsLineInfo} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEEO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b BlockCnt} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEER \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b BuffFS} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEEZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CallInfo} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEFE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CallS} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEGA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CClosure} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEGD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b cD} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEGH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Closure} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEGO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ConsControl} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEGR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b DumpState} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEGX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Dyndata} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEHD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b expdesc} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEHK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Ftypes} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEHZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b FuncState} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEIE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b GCObject} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEIX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b GCUnion} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEIZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b global_State} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEJI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b GMatchState} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAELD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Header} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAELI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Labeldesc} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAELM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Labellist} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAELS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b LClosure} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAELW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b LexState} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEMA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b LG} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEMO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b LHS_assign} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEMR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b LoadF} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEMU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b LoadS} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEMY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b LoadState} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAENB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b LocVar} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAENF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b lua_Debug} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAENJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b lua_longjmp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEOB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b lua_State} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEOF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b luaL_Buffer} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEPC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b luaL_Reg} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEPK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b luaL_Stream} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEPN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b LX} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEPQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b MatchState} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEPT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Mbuffer} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEQD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Node} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEQH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Node::NodeKey} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEQK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Proto} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEQP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Rand64} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAERM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b RanState} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAERP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b RN} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAERR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SemInfo} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAERW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SParser} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAESA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b StackValue} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAESG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b str_Writer} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAESI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b stringtable} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAESL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Table} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAESP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Token} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAESZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b TString} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAETC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b TValue} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAETL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b UBox} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAETN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Udata} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAETQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Udata0} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAETX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b UpVal} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEUE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Upvaldesc} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEUN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b UValue} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEUS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Value} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEUV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Vardesc} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEVB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Zio} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEVJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'CE\'C4\'BC\'FE\'CB\'F7\'D2\'FD\par \pard\plain 
{\tc \v \'CE\'C4\'BC\'FE\'CB\'F7\'D2\'FD}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'CE\'C4\'BC\'FE\'C1\'D0\'B1\'ED\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'D5\'E2\'C0\'EF\'C1\'D0\'B3\'F6\'C1\'CB\'CB\'F9\'D3\'D0\'CE\'C4\'BC\'FE\'A3\'AC\'B2\'A2\'B8\'BD\'B4\'F8\'BC\'F2\'D2\'AA\'CB\'B5\'C3\'F7:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b D:/gitworkspace/lua/src/{\b lapi.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/gitworkspace/lua/src/{\b lapi.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/gitworkspace/lua/src/{\b lauxlib.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/gitworkspace/lua/src/{\b lauxlib.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/gitworkspace/lua/src/{\b lbaselib.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/gitworkspace/lua/src/{\b lcode.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/gitworkspace/lua/src/{\b lcode.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/gitworkspace/lua/src/{\b lcorolib.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/gitworkspace/lua/src/{\b lctype.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/gitworkspace/lua/src/{\b lctype.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/gitworkspace/lua/src/{\b ldblib.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/gitworkspace/lua/src/{\b ldebug.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/gitworkspace/lua/src/{\b ldebug.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/gitworkspace/lua/src/{\b ldo.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/gitworkspace/lua/src/{\b ldo.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/gitworkspace/lua/src/{\b ldump.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABAK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/gitworkspace/lua/src/{\b lfunc.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABBG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/gitworkspace/lua/src/{\b lfunc.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABBZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/gitworkspace/lua/src/{\b lgc.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/gitworkspace/lua/src/{\b lgc.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABGG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/gitworkspace/lua/src/{\b linit.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABIY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/gitworkspace/lua/src/{\b liolib.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABJD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/gitworkspace/lua/src/{\b ljumptab.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/gitworkspace/lua/src/{\b llex.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABMA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/gitworkspace/lua/src/{\b llex.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABNF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/gitworkspace/lua/src/{\b llimits.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABPE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/gitworkspace/lua/src/{\b lmathlib.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABRW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/gitworkspace/lua/src/{\b lmem.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABTX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/gitworkspace/lua/src/{\b lmem.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABUK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/gitworkspace/lua/src/{\b loadlib.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABVH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/gitworkspace/lua/src/{\b lobject.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABXB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/gitworkspace/lua/src/{\b lobject.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABYL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/gitworkspace/lua/src/{\b lopcodes.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACFD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/gitworkspace/lua/src/{\b lopcodes.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACFH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/gitworkspace/lua/src/{\b lopnames.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACLM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/gitworkspace/lua/src/{\b loslib.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACLO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/gitworkspace/lua/src/{\b lparser.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACMX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/gitworkspace/lua/src/{\b lparser.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACRF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/gitworkspace/lua/src/{\b lprefix.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACSP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/gitworkspace/lua/src/{\b lstate.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACST \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/gitworkspace/lua/src/{\b lstate.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACTU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/gitworkspace/lua/src/{\b lstring.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACVW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/gitworkspace/lua/src/{\b lstring.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACWQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/gitworkspace/lua/src/{\b lstrlib.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACXH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/gitworkspace/lua/src/{\b ltable.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADBQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/gitworkspace/lua/src/{\b ltable.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADDR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/gitworkspace/lua/src/{\b ltablib.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADEN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/gitworkspace/lua/src/{\b ltm.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADFQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/gitworkspace/lua/src/{\b ltm.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADGK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/gitworkspace/lua/src/{\b lua.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADIE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/gitworkspace/lua/src/{\b lua.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADKC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/gitworkspace/lua/src/{\b lua.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADSE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/gitworkspace/lua/src/{\b luac.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADSF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/gitworkspace/lua/src/{\b luaconf.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADTU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/gitworkspace/lua/src/{\b lualib.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADVV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/gitworkspace/lua/src/{\b lundump.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADWS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/gitworkspace/lua/src/{\b lundump.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADXT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/gitworkspace/lua/src/{\b lutf8lib.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADYC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/gitworkspace/lua/src/{\b lvm.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADYX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/gitworkspace/lua/src/{\b lvm.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAECI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/gitworkspace/lua/src/{\b lzio.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEDQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b D:/gitworkspace/lua/src/{\b lzio.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEDW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\'CB\'B5\'C3\'F7{\tc \v \'BD\'E1\'B9\'B9\'CC\'E5\'CB\'B5\'C3\'F7}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
AbsLineInfo\'BD\'E1\'B9\'B9\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v AbsLineInfo}
{\xe \v AbsLineInfo}
{\bkmkstart AAAAAAAEEO}
{\bkmkend AAAAAAAEEO}
\par
{
{\f2 #include <lobject.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b pc}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b line}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 519 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v line\:AbsLineInfo}
{\xe \v AbsLineInfo\:line}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int line}}
\par
{\bkmkstart AAAAAAAEEP}
{\bkmkend AAAAAAAEEP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 521 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v pc\:AbsLineInfo}
{\xe \v AbsLineInfo\:pc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int pc}}
\par
{\bkmkstart AAAAAAAEEQ}
{\bkmkend AAAAAAAEEQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 520 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'BD\'E1\'B9\'B9\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/gitworkspace/lua/src/{\b lobject.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BlockCnt\'BD\'E1\'B9\'B9\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v BlockCnt}
{\xe \v BlockCnt}
{\bkmkstart AAAAAAAEER}
{\bkmkend AAAAAAAEER}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b BlockCnt} * {\b previous}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b firstlabel}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b firstgoto}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b lu_byte} {\b nactvar}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b lu_byte} {\b upval}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b lu_byte} {\b isloop}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b lu_byte} {\b insidetbc}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 49 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v firstgoto\:BlockCnt}
{\xe \v BlockCnt\:firstgoto}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int firstgoto}}
\par
{\bkmkstart AAAAAAAEES}
{\bkmkend AAAAAAAEES}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 52 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v firstlabel\:BlockCnt}
{\xe \v BlockCnt\:firstlabel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int firstlabel}}
\par
{\bkmkstart AAAAAAAEET}
{\bkmkend AAAAAAAEET}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 51 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v insidetbc\:BlockCnt}
{\xe \v BlockCnt\:insidetbc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lu_byte} insidetbc}}
\par
{\bkmkstart AAAAAAAEEU}
{\bkmkend AAAAAAAEEU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 56 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v isloop\:BlockCnt}
{\xe \v BlockCnt\:isloop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lu_byte} isloop}}
\par
{\bkmkstart AAAAAAAEEV}
{\bkmkend AAAAAAAEEV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 55 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v nactvar\:BlockCnt}
{\xe \v BlockCnt\:nactvar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lu_byte} nactvar}}
\par
{\bkmkstart AAAAAAAEEW}
{\bkmkend AAAAAAAEEW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 53 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v previous\:BlockCnt}
{\xe \v BlockCnt\:previous}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b BlockCnt}* previous}}
\par
{\bkmkstart AAAAAAAEEX}
{\bkmkend AAAAAAAEEX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 50 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v upval\:BlockCnt}
{\xe \v BlockCnt\:upval}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lu_byte} upval}}
\par
{\bkmkstart AAAAAAAEEY}
{\bkmkend AAAAAAAEEY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 54 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'BD\'E1\'B9\'B9\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/gitworkspace/lua/src/{\b lparser.c}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BuffFS\'BD\'E1\'B9\'B9\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v BuffFS}
{\xe \v BuffFS}
{\bkmkstart AAAAAAAEEZ}
{\bkmkend AAAAAAAEEZ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b lua_State} * {\b L}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b pushed}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b blen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b space} [{\b BUFVFS}]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D4\'DA\'CE\'C4\'BC\'FE lobject.c \'B5\'DA 381 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v blen\:BuffFS}
{\xe \v BuffFS\:blen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int blen}}
\par
{\bkmkstart AAAAAAAEFA}
{\bkmkend AAAAAAAEFA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.c \'B5\'DA 384 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v L\:BuffFS}
{\xe \v BuffFS\:L}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lua_State}* L}}
\par
{\bkmkstart AAAAAAAEFB}
{\bkmkend AAAAAAAEFB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.c \'B5\'DA 382 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v pushed\:BuffFS}
{\xe \v BuffFS\:pushed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int pushed}}
\par
{\bkmkstart AAAAAAAEFC}
{\bkmkend AAAAAAAEFC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.c \'B5\'DA 383 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v space\:BuffFS}
{\xe \v BuffFS\:space}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char space[{\b BUFVFS}]}}
\par
{\bkmkstart AAAAAAAEFD}
{\bkmkend AAAAAAAEFD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.c \'B5\'DA 385 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'BD\'E1\'B9\'B9\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/gitworkspace/lua/src/{\b lobject.c}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CallInfo\'BD\'E1\'B9\'B9\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v CallInfo}
{\xe \v CallInfo}
{\bkmkstart AAAAAAAEFE}
{\bkmkend AAAAAAAEFE}
\par
{
{\f2 #include <lstate.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b StkId} {\b func}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
function index in the stack }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b StkId} {\b top}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
top for this function }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b CallInfo} * {\b previous}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b CallInfo} * {\b next}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
dynamic call link }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union \{\par

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ struct \{\par

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ \~ const {\b Instruction} * {\b savedpc}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< only for Lua functions }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ \~ volatile {\b l_signalT} {\b trap}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ \~ int {\b nextraargs}\par
}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ \} {\b l}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ struct \{\par

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ \~ {\b lua_KFunction} {\b k}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< only for C functions }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ \~ ptrdiff_t {\b old_errfunc}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ \~ {\b lua_KContext} {\b ctx}\par
}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ \} {\b c}\par
}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\} {\b u}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union \{\par

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ int {\b funcidx}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ int {\b nyield}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ struct \{\par

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ \~ unsigned short {\b ftransfer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ \~ unsigned short {\b ntransfer}\par
}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ \} {\b transferinfo}\par
}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\} {\b u2}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short {\b nresults}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned short {\b callstatus}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Information about a call. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'D7\'A2\'BD\'E2\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\'BC\'C7\'C2\'BC\'C1\'CB\'BA\'AF\'CA\'FD\'D4\'DA\'B6\'D1\'D5\'BB\'D6\'D0\'B5\'C4\'CE\'BB\'D6\'C3,\'BA\'AF\'CA\'FDtop\'A3\'AC\'C7\'B0\'D2\'BB\'B8\'F6\'B5\'F7\'D3\'C3\'B5\'C4\'BA\'AF\'CA\'FD(\'C8\'E7\'B9\'FB\'B1\'BB\'B5\'F7\'D3\'C3\'D5\'DF),\'BA\'F3\'D2\'BB\'B8\'F6\'B5\'F7\'D3\'C3\'BA\'AF\'CA\'FD(\'C8\'E7\'B9\'FB\'B5\'F7\'D3\'C3\'D5\'DF)\'A1\'A3c func\'BA\'CD lua func\'C7\'F8\'B7\'D6\'B9\'AB\'D3\'C3union\'A3\'AC\'B5\'F7\'D3\'C3\'D7\'B4\'CC\'AC\'A1\'A2\'B7\'B5\'BB\'D8\'D6\'B5\'B8\'F6\'CA\'FD\'A1\'A3 \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B4\'FD\'B0\'EC\'CA\'C2\'CF\'EE:\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid yields\'B2\'BF\'B7\'D6 TODO \par
}
}{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 172 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v c\:CallInfo}
{\xe \v CallInfo\:c}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct \{ ... \}  c}}
\par
{\bkmkstart AAAAAAAEFF}
{\bkmkend AAAAAAAEFF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v callstatus\:CallInfo}
{\xe \v CallInfo\:callstatus}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned short callstatus}}
\par
{\bkmkstart AAAAAAAEFG}
{\bkmkend AAAAAAAEFG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 197 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v ctx\:CallInfo}
{\xe \v CallInfo\:ctx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lua_KContext} ctx}}
\par
{\bkmkstart AAAAAAAEFH}
{\bkmkend AAAAAAAEFH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 185 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v ftransfer\:CallInfo}
{\xe \v CallInfo\:ftransfer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned short ftransfer}}
\par
{\bkmkstart AAAAAAAEFI}
{\bkmkend AAAAAAAEFI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 192 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v func\:CallInfo}
{\xe \v CallInfo\:func}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b StkId} func}}
\par
{\bkmkstart AAAAAAAEFJ}
{\bkmkend AAAAAAAEFJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
function index in the stack }}\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 173 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v funcidx\:CallInfo}
{\xe \v CallInfo\:funcidx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int funcidx}}
\par
{\bkmkstart AAAAAAAEFK}
{\bkmkend AAAAAAAEFK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 189 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v k\:CallInfo}
{\xe \v CallInfo\:k}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lua_KFunction} k}}
\par
{\bkmkstart AAAAAAAEFL}
{\bkmkend AAAAAAAEFL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< only for C functions }}\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 183 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v l\:CallInfo}
{\xe \v CallInfo\:l}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct \{ ... \}  l}}
\par
{\bkmkstart AAAAAAAEFM}
{\bkmkend AAAAAAAEFM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v next\:CallInfo}
{\xe \v CallInfo\:next}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b CallInfo} * next}}
\par
{\bkmkstart AAAAAAAEFN}
{\bkmkend AAAAAAAEFN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
dynamic call link }}\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 175 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v nextraargs\:CallInfo}
{\xe \v CallInfo\:nextraargs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int nextraargs}}
\par
{\bkmkstart AAAAAAAEFO}
{\bkmkend AAAAAAAEFO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 180 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v nresults\:CallInfo}
{\xe \v CallInfo\:nresults}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short nresults}}
\par
{\bkmkstart AAAAAAAEFP}
{\bkmkend AAAAAAAEFP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 196 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v ntransfer\:CallInfo}
{\xe \v CallInfo\:ntransfer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned short ntransfer}}
\par
{\bkmkstart AAAAAAAEFQ}
{\bkmkend AAAAAAAEFQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 193 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v nyield\:CallInfo}
{\xe \v CallInfo\:nyield}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int nyield}}
\par
{\bkmkstart AAAAAAAEFR}
{\bkmkend AAAAAAAEFR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 190 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v old_errfunc\:CallInfo}
{\xe \v CallInfo\:old_errfunc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ptrdiff_t old_errfunc}}
\par
{\bkmkstart AAAAAAAEFS}
{\bkmkend AAAAAAAEFS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 184 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v previous\:CallInfo}
{\xe \v CallInfo\:previous}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b CallInfo}* previous}}
\par
{\bkmkstart AAAAAAAEFT}
{\bkmkend AAAAAAAEFT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 175 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v savedpc\:CallInfo}
{\xe \v CallInfo\:savedpc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b Instruction}* savedpc}}
\par
{\bkmkstart AAAAAAAEFU}
{\bkmkend AAAAAAAEFU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< only for Lua functions }}\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 178 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v top\:CallInfo}
{\xe \v CallInfo\:top}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b StkId} top}}
\par
{\bkmkstart AAAAAAAEFV}
{\bkmkend AAAAAAAEFV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
top for this function }}\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 174 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v transferinfo\:CallInfo}
{\xe \v CallInfo\:transferinfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct \{ ... \}  transferinfo}}
\par
{\bkmkstart AAAAAAAEFW}
{\bkmkend AAAAAAAEFW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v trap\:CallInfo}
{\xe \v CallInfo\:trap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
volatile {\b l_signalT} trap}}
\par
{\bkmkstart AAAAAAAEFX}
{\bkmkend AAAAAAAEFX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 179 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v u\:CallInfo}
{\xe \v CallInfo\:u}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
union \{ ... \}  u}}
\par
{\bkmkstart AAAAAAAEFY}
{\bkmkend AAAAAAAEFY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v u2\:CallInfo}
{\xe \v CallInfo\:u2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
union \{ ... \}  u2}}
\par
{\bkmkstart AAAAAAAEFZ}
{\bkmkend AAAAAAAEFZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'BD\'E1\'B9\'B9\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/gitworkspace/lua/src/{\b lstate.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CallS\'BD\'E1\'B9\'B9\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v CallS}
{\xe \v CallS}
{\bkmkstart AAAAAAAEGA}
{\bkmkend AAAAAAAEGA}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b StkId} {\b func}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b nresults}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 989 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v func\:CallS}
{\xe \v CallS\:func}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b StkId} func}}
\par
{\bkmkstart AAAAAAAEGB}
{\bkmkend AAAAAAAEGB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 990 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v nresults\:CallS}
{\xe \v CallS\:nresults}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int nresults}}
\par
{\bkmkstart AAAAAAAEGC}
{\bkmkend AAAAAAAEGC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 991 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'BD\'E1\'B9\'B9\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/gitworkspace/lua/src/{\b lapi.c}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CClosure\'BD\'E1\'B9\'B9\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v CClosure}
{\xe \v CClosure}
{\bkmkstart AAAAAAAEGD}
{\bkmkend AAAAAAAEGD}
\par
{
{\f2 #include <lobject.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ClosureHeader}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b lua_CFunction} {\b f}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TValue} {\b upvalue} [1]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 621 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v ClosureHeader\:CClosure}
{\xe \v CClosure\:ClosureHeader}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ClosureHeader}}
\par
{\bkmkstart AAAAAAAEGE}
{\bkmkend AAAAAAAEGE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 622 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v f\:CClosure}
{\xe \v CClosure\:f}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lua_CFunction} f}}
\par
{\bkmkstart AAAAAAAEGF}
{\bkmkend AAAAAAAEGF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 623 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v upvalue\:CClosure}
{\xe \v CClosure\:upvalue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TValue} upvalue[1]}}
\par
{\bkmkstart AAAAAAAEGG}
{\bkmkend AAAAAAAEGG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 624 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'BD\'E1\'B9\'B9\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/gitworkspace/lua/src/{\b lobject.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
cD\'BD\'E1\'B9\'B9\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v cD}
{\xe \v cD}
{\bkmkstart AAAAAAAEGH}
{\bkmkend AAAAAAAEGH}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b c}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union \{\par

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ double {\b d}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ void * {\b p}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ {\b lua_Integer} {\b i}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ {\b lua_Number} {\b n}\par
}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\} {\b u}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 1353 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v c\:cD}
{\xe \v cD\:c}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char c}}
\par
{\bkmkstart AAAAAAAEGI}
{\bkmkend AAAAAAAEGI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 1354 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v d\:cD}
{\xe \v cD\:d}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double d}}
\par
{\bkmkstart AAAAAAAEGJ}
{\bkmkend AAAAAAAEGJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 1355 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v i\:cD}
{\xe \v cD\:i}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lua_Integer} i}}
\par
{\bkmkstart AAAAAAAEGK}
{\bkmkend AAAAAAAEGK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 1355 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v n\:cD}
{\xe \v cD\:n}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lua_Number} n}}
\par
{\bkmkstart AAAAAAAEGL}
{\bkmkend AAAAAAAEGL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 1355 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v p\:cD}
{\xe \v cD\:p}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void* p}}
\par
{\bkmkstart AAAAAAAEGM}
{\bkmkend AAAAAAAEGM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 1355 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v u\:cD}
{\xe \v cD\:u}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
union \{ ... \}  u}}
\par
{\bkmkstart AAAAAAAEGN}
{\bkmkend AAAAAAAEGN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'BD\'E1\'B9\'B9\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/gitworkspace/lua/src/{\b lstrlib.c}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Closure\'C1\'AA\'BA\'CF\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v Closure}
{\xe \v Closure}
{\bkmkstart AAAAAAAEGO}
{\bkmkend AAAAAAAEGO}
\par
{
{\f2 #include <lobject.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CClosure} {\b c}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LClosure} {\b l}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 635 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v c\:Closure}
{\xe \v Closure\:c}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CClosure} c}}
\par
{\bkmkstart AAAAAAAEGP}
{\bkmkend AAAAAAAEGP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 636 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v l\:Closure}
{\xe \v Closure\:l}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LClosure} l}}
\par
{\bkmkstart AAAAAAAEGQ}
{\bkmkend AAAAAAAEGQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 637 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C1\'AA\'BA\'CF\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/gitworkspace/lua/src/{\b lobject.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ConsControl\'BD\'E1\'B9\'B9\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v ConsControl}
{\xe \v ConsControl}
{\bkmkstart AAAAAAAEGR}
{\bkmkend AAAAAAAEGR}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b expdesc} {\b v}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b expdesc} * {\b t}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b nh}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b na}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b tostore}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 828 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v na\:ConsControl}
{\xe \v ConsControl\:na}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int na}}
\par
{\bkmkstart AAAAAAAEGS}
{\bkmkend AAAAAAAEGS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 832 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v nh\:ConsControl}
{\xe \v ConsControl\:nh}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int nh}}
\par
{\bkmkstart AAAAAAAEGT}
{\bkmkend AAAAAAAEGT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 831 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v t\:ConsControl}
{\xe \v ConsControl\:t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b expdesc}* t}}
\par
{\bkmkstart AAAAAAAEGU}
{\bkmkend AAAAAAAEGU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 830 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v tostore\:ConsControl}
{\xe \v ConsControl\:tostore}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int tostore}}
\par
{\bkmkstart AAAAAAAEGV}
{\bkmkend AAAAAAAEGV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 833 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v v\:ConsControl}
{\xe \v ConsControl\:v}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b expdesc} v}}
\par
{\bkmkstart AAAAAAAEGW}
{\bkmkend AAAAAAAEGW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 829 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'BD\'E1\'B9\'B9\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/gitworkspace/lua/src/{\b lparser.c}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
DumpState\'BD\'E1\'B9\'B9\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v DumpState}
{\xe \v DumpState}
{\bkmkstart AAAAAAAEGX}
{\bkmkend AAAAAAAEGX}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b lua_State} * {\b L}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b lua_Writer} {\b writer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void * {\b data}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b strip}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b status}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D4\'DA\'CE\'C4\'BC\'FE ldump.c \'B5\'DA 22 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v data\:DumpState}
{\xe \v DumpState\:data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void* data}}
\par
{\bkmkstart AAAAAAAEGY}
{\bkmkend AAAAAAAEGY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldump.c \'B5\'DA 25 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v L\:DumpState}
{\xe \v DumpState\:L}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lua_State}* L}}
\par
{\bkmkstart AAAAAAAEGZ}
{\bkmkend AAAAAAAEGZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldump.c \'B5\'DA 23 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v status\:DumpState}
{\xe \v DumpState\:status}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int status}}
\par
{\bkmkstart AAAAAAAEHA}
{\bkmkend AAAAAAAEHA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldump.c \'B5\'DA 27 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v strip\:DumpState}
{\xe \v DumpState\:strip}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int strip}}
\par
{\bkmkstart AAAAAAAEHB}
{\bkmkend AAAAAAAEHB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldump.c \'B5\'DA 26 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v writer\:DumpState}
{\xe \v DumpState\:writer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lua_Writer} writer}}
\par
{\bkmkstart AAAAAAAEHC}
{\bkmkend AAAAAAAEHC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldump.c \'B5\'DA 24 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'BD\'E1\'B9\'B9\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/gitworkspace/lua/src/{\b ldump.c}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Dyndata\'BD\'E1\'B9\'B9\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v Dyndata}
{\xe \v Dyndata}
{\bkmkstart AAAAAAAEHD}
{\bkmkend AAAAAAAEHD}
\par
{
{\f2 #include <lparser.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct \{\par

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ {\b Vardesc} * {\b arr}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ int {\b n}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ int {\b size}\par
}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\} {\b actvar}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Labellist} {\b gt}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Labellist} {\b label}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D4\'DA\'CE\'C4\'BC\'FE lparser.h \'B5\'DA 127 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v actvar\:Dyndata}
{\xe \v Dyndata\:actvar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct \{ ... \}  actvar}}
\par
{\bkmkstart AAAAAAAEHE}
{\bkmkend AAAAAAAEHE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v arr\:Dyndata}
{\xe \v Dyndata\:arr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Vardesc}* arr}}
\par
{\bkmkstart AAAAAAAEHF}
{\bkmkend AAAAAAAEHF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.h \'B5\'DA 129 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v gt\:Dyndata}
{\xe \v Dyndata\:gt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Labellist} gt}}
\par
{\bkmkstart AAAAAAAEHG}
{\bkmkend AAAAAAAEHG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.h \'B5\'DA 133 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v label\:Dyndata}
{\xe \v Dyndata\:label}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Labellist} label}}
\par
{\bkmkstart AAAAAAAEHH}
{\bkmkend AAAAAAAEHH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.h \'B5\'DA 134 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v n\:Dyndata}
{\xe \v Dyndata\:n}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int n}}
\par
{\bkmkstart AAAAAAAEHI}
{\bkmkend AAAAAAAEHI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.h \'B5\'DA 130 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v size\:Dyndata}
{\xe \v Dyndata\:size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int size}}
\par
{\bkmkstart AAAAAAAEHJ}
{\bkmkend AAAAAAAEHJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.h \'B5\'DA 131 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'BD\'E1\'B9\'B9\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/gitworkspace/lua/src/{\b lparser.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
expdesc\'BD\'E1\'B9\'B9\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v expdesc}
{\xe \v expdesc}
{\bkmkstart AAAAAAAEHK}
{\bkmkend AAAAAAAEHK}
\par
{
{\f2 #include <lparser.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b expkind} {\b k}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union \{\par

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ {\b lua_Integer} {\b ival}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ {\b lua_Number} {\b nval}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ {\b TString} * {\b strval}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ int {\b info}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ struct \{\par

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ \~ short {\b idx}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ \~ {\b lu_byte} {\b t}\par
}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ \} {\b ind}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ struct \{\par

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ \~ {\b lu_byte} {\b sidx}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ \~ unsigned short {\b vidx}\par
}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ \} {\b var}\par
}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\} {\b u}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b t}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b f}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D4\'DA\'CE\'C4\'BC\'FE lparser.h \'B5\'DA 67 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v f\:expdesc}
{\xe \v expdesc\:f}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int f}}
\par
{\bkmkstart AAAAAAAEHL}
{\bkmkend AAAAAAAEHL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.h \'B5\'DA 84 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v idx\:expdesc}
{\xe \v expdesc\:idx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short idx}}
\par
{\bkmkstart AAAAAAAEHM}
{\bkmkend AAAAAAAEHM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.h \'B5\'DA 75 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v ind\:expdesc}
{\xe \v expdesc\:ind}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct \{ ... \}  ind}}
\par
{\bkmkstart AAAAAAAEHN}
{\bkmkend AAAAAAAEHN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v info\:expdesc}
{\xe \v expdesc\:info}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int info}}
\par
{\bkmkstart AAAAAAAEHO}
{\bkmkend AAAAAAAEHO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.h \'B5\'DA 73 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v ival\:expdesc}
{\xe \v expdesc\:ival}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lua_Integer} ival}}
\par
{\bkmkstart AAAAAAAEHP}
{\bkmkend AAAAAAAEHP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.h \'B5\'DA 70 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v k\:expdesc}
{\xe \v expdesc\:k}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b expkind} k}}
\par
{\bkmkstart AAAAAAAEHQ}
{\bkmkend AAAAAAAEHQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.h \'B5\'DA 68 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v nval\:expdesc}
{\xe \v expdesc\:nval}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lua_Number} nval}}
\par
{\bkmkstart AAAAAAAEHR}
{\bkmkend AAAAAAAEHR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.h \'B5\'DA 71 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v sidx\:expdesc}
{\xe \v expdesc\:sidx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lu_byte} sidx}}
\par
{\bkmkstart AAAAAAAEHS}
{\bkmkend AAAAAAAEHS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.h \'B5\'DA 79 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v strval\:expdesc}
{\xe \v expdesc\:strval}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TString}* strval}}
\par
{\bkmkstart AAAAAAAEHT}
{\bkmkend AAAAAAAEHT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.h \'B5\'DA 72 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v t\:expdesc}
{\xe \v expdesc\:t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lu_byte} t}}
\par
{\bkmkstart AAAAAAAEHU}
{\bkmkend AAAAAAAEHU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.h \'B5\'DA 76 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v t\:expdesc}
{\xe \v expdesc\:t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int t}}
\par
{\bkmkstart AAAAAAAEHV}
{\bkmkend AAAAAAAEHV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.h \'B5\'DA 83 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v u\:expdesc}
{\xe \v expdesc\:u}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
union \{ ... \}  u}}
\par
{\bkmkstart AAAAAAAEHW}
{\bkmkend AAAAAAAEHW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v var\:expdesc}
{\xe \v expdesc\:var}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct \{ ... \}  var}}
\par
{\bkmkstart AAAAAAAEHX}
{\bkmkend AAAAAAAEHX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v vidx\:expdesc}
{\xe \v expdesc\:vidx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned short vidx}}
\par
{\bkmkstart AAAAAAAEHY}
{\bkmkend AAAAAAAEHY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.h \'B5\'DA 80 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'BD\'E1\'B9\'B9\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/gitworkspace/lua/src/{\b lparser.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Ftypes\'C1\'AA\'BA\'CF\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v Ftypes}
{\xe \v Ftypes}
{\bkmkstart AAAAAAAEHZ}
{\bkmkend AAAAAAAEHZ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b f}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b d}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b lua_Number} {\b n}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b buff} [5 *sizeof({\b lua_Number})]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 1364 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v buff\:Ftypes}
{\xe \v Ftypes\:buff}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char buff[5 *sizeof({\b lua_Number})]}}
\par
{\bkmkstart AAAAAAAEIA}
{\bkmkend AAAAAAAEIA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 1368 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v d\:Ftypes}
{\xe \v Ftypes\:d}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double d}}
\par
{\bkmkstart AAAAAAAEIB}
{\bkmkend AAAAAAAEIB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 1366 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v f\:Ftypes}
{\xe \v Ftypes\:f}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float f}}
\par
{\bkmkstart AAAAAAAEIC}
{\bkmkend AAAAAAAEIC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 1365 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v n\:Ftypes}
{\xe \v Ftypes\:n}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lua_Number} n}}
\par
{\bkmkstart AAAAAAAEID}
{\bkmkend AAAAAAAEID}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 1367 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C1\'AA\'BA\'CF\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/gitworkspace/lua/src/{\b lstrlib.c}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
FuncState\'BD\'E1\'B9\'B9\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v FuncState}
{\xe \v FuncState}
{\bkmkstart AAAAAAAEIE}
{\bkmkend AAAAAAAEIE}
\par
{
{\f2 #include <lparser.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Proto} * {\b f}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b FuncState} * {\b prev}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LexState} * {\b ls}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b BlockCnt} * {\b bl}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b pc}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b lasttarget}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b previousline}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b nk}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b np}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b nabslineinfo}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b firstlocal}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b firstlabel}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short {\b ndebugvars}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b lu_byte} {\b nactvar}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b lu_byte} {\b nups}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b lu_byte} {\b freereg}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b lu_byte} {\b iwthabs}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b lu_byte} {\b needclose}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D4\'DA\'CE\'C4\'BC\'FE lparser.h \'B5\'DA 143 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v bl\:FuncState}
{\xe \v FuncState\:bl}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b BlockCnt}* bl}}
\par
{\bkmkstart AAAAAAAEIF}
{\bkmkend AAAAAAAEIF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.h \'B5\'DA 147 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v f\:FuncState}
{\xe \v FuncState\:f}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Proto}* f}}
\par
{\bkmkstart AAAAAAAEIG}
{\bkmkend AAAAAAAEIG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.h \'B5\'DA 144 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v firstlabel\:FuncState}
{\xe \v FuncState\:firstlabel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int firstlabel}}
\par
{\bkmkstart AAAAAAAEIH}
{\bkmkend AAAAAAAEIH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.h \'B5\'DA 155 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v firstlocal\:FuncState}
{\xe \v FuncState\:firstlocal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int firstlocal}}
\par
{\bkmkstart AAAAAAAEII}
{\bkmkend AAAAAAAEII}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.h \'B5\'DA 154 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v freereg\:FuncState}
{\xe \v FuncState\:freereg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lu_byte} freereg}}
\par
{\bkmkstart AAAAAAAEIJ}
{\bkmkend AAAAAAAEIJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.h \'B5\'DA 159 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v iwthabs\:FuncState}
{\xe \v FuncState\:iwthabs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lu_byte} iwthabs}}
\par
{\bkmkstart AAAAAAAEIK}
{\bkmkend AAAAAAAEIK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.h \'B5\'DA 160 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lasttarget\:FuncState}
{\xe \v FuncState\:lasttarget}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int lasttarget}}
\par
{\bkmkstart AAAAAAAEIL}
{\bkmkend AAAAAAAEIL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.h \'B5\'DA 149 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v ls\:FuncState}
{\xe \v FuncState\:ls}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b LexState}* ls}}
\par
{\bkmkstart AAAAAAAEIM}
{\bkmkend AAAAAAAEIM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.h \'B5\'DA 146 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v nabslineinfo\:FuncState}
{\xe \v FuncState\:nabslineinfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int nabslineinfo}}
\par
{\bkmkstart AAAAAAAEIN}
{\bkmkend AAAAAAAEIN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.h \'B5\'DA 153 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v nactvar\:FuncState}
{\xe \v FuncState\:nactvar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lu_byte} nactvar}}
\par
{\bkmkstart AAAAAAAEIO}
{\bkmkend AAAAAAAEIO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.h \'B5\'DA 157 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v ndebugvars\:FuncState}
{\xe \v FuncState\:ndebugvars}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short ndebugvars}}
\par
{\bkmkstart AAAAAAAEIP}
{\bkmkend AAAAAAAEIP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.h \'B5\'DA 156 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v needclose\:FuncState}
{\xe \v FuncState\:needclose}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lu_byte} needclose}}
\par
{\bkmkstart AAAAAAAEIQ}
{\bkmkend AAAAAAAEIQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.h \'B5\'DA 161 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v nk\:FuncState}
{\xe \v FuncState\:nk}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int nk}}
\par
{\bkmkstart AAAAAAAEIR}
{\bkmkend AAAAAAAEIR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.h \'B5\'DA 151 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v np\:FuncState}
{\xe \v FuncState\:np}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int np}}
\par
{\bkmkstart AAAAAAAEIS}
{\bkmkend AAAAAAAEIS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.h \'B5\'DA 152 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v nups\:FuncState}
{\xe \v FuncState\:nups}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lu_byte} nups}}
\par
{\bkmkstart AAAAAAAEIT}
{\bkmkend AAAAAAAEIT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.h \'B5\'DA 158 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v pc\:FuncState}
{\xe \v FuncState\:pc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int pc}}
\par
{\bkmkstart AAAAAAAEIU}
{\bkmkend AAAAAAAEIU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.h \'B5\'DA 148 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v prev\:FuncState}
{\xe \v FuncState\:prev}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b FuncState}* prev}}
\par
{\bkmkstart AAAAAAAEIV}
{\bkmkend AAAAAAAEIV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.h \'B5\'DA 145 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v previousline\:FuncState}
{\xe \v FuncState\:previousline}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int previousline}}
\par
{\bkmkstart AAAAAAAEIW}
{\bkmkend AAAAAAAEIW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.h \'B5\'DA 150 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'BD\'E1\'B9\'B9\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/gitworkspace/lua/src/{\b lparser.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
GCObject\'BD\'E1\'B9\'B9\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v GCObject}
{\xe \v GCObject}
{\bkmkstart AAAAAAAEIX}
{\bkmkend AAAAAAAEIX}
\par
{
{\f2 #include <lobject.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CommonHeader}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 267 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v CommonHeader\:GCObject}
{\xe \v GCObject\:CommonHeader}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CommonHeader}}
\par
{\bkmkstart AAAAAAAEIY}
{\bkmkend AAAAAAAEIY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 268 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'BD\'E1\'B9\'B9\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/gitworkspace/lua/src/{\b lobject.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
GCUnion\'C1\'AA\'BA\'CF\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v GCUnion}
{\xe \v GCUnion}
{\bkmkstart AAAAAAAEIZ}
{\bkmkend AAAAAAAEIZ}
\par
{
{\f2 #include <lstate.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GCObject} {\b gc}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b TString} {\b ts}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Udata} {\b u}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union {\b Closure} {\b cl}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Table} {\b h}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Proto} {\b p}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b lua_State} {\b th}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b UpVal} {\b upv}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 316 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v cl\:GCUnion}
{\xe \v GCUnion\:cl}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
union {\b Closure} cl}}
\par
{\bkmkstart AAAAAAAEJA}
{\bkmkend AAAAAAAEJA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 317 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v gc\:GCUnion}
{\xe \v GCUnion\:gc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GCObject} gc}}
\par
{\bkmkstart AAAAAAAEJB}
{\bkmkend AAAAAAAEJB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 317 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v h\:GCUnion}
{\xe \v GCUnion\:h}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b Table} h}}
\par
{\bkmkstart AAAAAAAEJC}
{\bkmkend AAAAAAAEJC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 317 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v p\:GCUnion}
{\xe \v GCUnion\:p}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b Proto} p}}
\par
{\bkmkstart AAAAAAAEJD}
{\bkmkend AAAAAAAEJD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 317 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v th\:GCUnion}
{\xe \v GCUnion\:th}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b lua_State} th}}
\par
{\bkmkstart AAAAAAAEJE}
{\bkmkend AAAAAAAEJE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 317 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v ts\:GCUnion}
{\xe \v GCUnion\:ts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b TString} ts}}
\par
{\bkmkstart AAAAAAAEJF}
{\bkmkend AAAAAAAEJF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 317 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v u\:GCUnion}
{\xe \v GCUnion\:u}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b Udata} u}}
\par
{\bkmkstart AAAAAAAEJG}
{\bkmkend AAAAAAAEJG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 317 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v upv\:GCUnion}
{\xe \v GCUnion\:upv}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b UpVal} upv}}
\par
{\bkmkstart AAAAAAAEJH}
{\bkmkend AAAAAAAEJH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 317 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C1\'AA\'BA\'CF\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/gitworkspace/lua/src/{\b lstate.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
global_State\'BD\'E1\'B9\'B9\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v global_State}
{\xe \v global_State}
{\bkmkstart AAAAAAAEJI}
{\bkmkend AAAAAAAEJI}
\par
{
{\f2 #include <lstate.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b lua_Alloc} {\b frealloc}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void * {\b ud}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b l_mem} {\b totalbytes}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b l_mem} {\b GCdebt}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b lu_mem} {\b GCestimate}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b lu_mem} {\b lastatomic}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b stringtable} {\b strt}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TValue} {\b l_registry}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TValue} {\b nilvalue}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b seed}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b lu_byte} {\b currentwhite}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b lu_byte} {\b gcstate}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b lu_byte} {\b gckind}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b lu_byte} {\b genminormul}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b lu_byte} {\b genmajormul}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b lu_byte} {\b gcrunning}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b lu_byte} {\b gcemergency}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b lu_byte} {\b gcpause}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b lu_byte} {\b gcstepmul}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b lu_byte} {\b gcstepsize}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GCObject} * {\b allgc}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GCObject} ** {\b sweepgc}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GCObject} * {\b finobj}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GCObject} * {\b gray}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GCObject} * {\b grayagain}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GCObject} * {\b weak}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GCObject} * {\b ephemeron}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GCObject} * {\b allweak}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GCObject} * {\b tobefnz}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GCObject} * {\b fixedgc}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GCObject} * {\b survival}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GCObject} * {\b old}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GCObject} * {\b reallyold}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GCObject} * {\b finobjsur}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GCObject} * {\b finobjold}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GCObject} * {\b finobjrold}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b lua_State} * {\b twups}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b lua_CFunction} {\b panic}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b lua_State} * {\b mainthread}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TString} * {\b memerrmsg}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TString} * {\b tmname} [{\b TM_N}]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Table} * {\b mt} [{\b LUA_NUMTAGS}]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TString} * {\b strcache} [{\b STRCACHE_N}][{\b STRCACHE_M}]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b lua_WarnFunction} {\b warnf}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void * {\b ud_warn}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b Cstacklimit}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 230 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v allgc\:global_State}
{\xe \v global_State\:allgc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GCObject}* allgc}}
\par
{\bkmkstart AAAAAAAEJJ}
{\bkmkend AAAAAAAEJJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 251 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v allweak\:global_State}
{\xe \v global_State\:allweak}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GCObject}* allweak}}
\par
{\bkmkstart AAAAAAAEJK}
{\bkmkend AAAAAAAEJK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 258 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v Cstacklimit\:global_State}
{\xe \v global_State\:Cstacklimit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int Cstacklimit}}
\par
{\bkmkstart AAAAAAAEJL}
{\bkmkend AAAAAAAEJL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 277 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v currentwhite\:global_State}
{\xe \v global_State\:currentwhite}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lu_byte} currentwhite}}
\par
{\bkmkstart AAAAAAAEJM}
{\bkmkend AAAAAAAEJM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 241 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v ephemeron\:global_State}
{\xe \v global_State\:ephemeron}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GCObject}* ephemeron}}
\par
{\bkmkstart AAAAAAAEJN}
{\bkmkend AAAAAAAEJN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 257 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v finobj\:global_State}
{\xe \v global_State\:finobj}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GCObject}* finobj}}
\par
{\bkmkstart AAAAAAAEJO}
{\bkmkend AAAAAAAEJO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 253 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v finobjold\:global_State}
{\xe \v global_State\:finobjold}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GCObject}* finobjold}}
\par
{\bkmkstart AAAAAAAEJP}
{\bkmkend AAAAAAAEJP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 266 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v finobjrold\:global_State}
{\xe \v global_State\:finobjrold}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GCObject}* finobjrold}}
\par
{\bkmkstart AAAAAAAEJQ}
{\bkmkend AAAAAAAEJQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 267 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v finobjsur\:global_State}
{\xe \v global_State\:finobjsur}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GCObject}* finobjsur}}
\par
{\bkmkstart AAAAAAAEJR}
{\bkmkend AAAAAAAEJR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 265 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v fixedgc\:global_State}
{\xe \v global_State\:fixedgc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GCObject}* fixedgc}}
\par
{\bkmkstart AAAAAAAEJS}
{\bkmkend AAAAAAAEJS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 260 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v frealloc\:global_State}
{\xe \v global_State\:frealloc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lua_Alloc} frealloc}}
\par
{\bkmkstart AAAAAAAEJT}
{\bkmkend AAAAAAAEJT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 231 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v GCdebt\:global_State}
{\xe \v global_State\:GCdebt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b l_mem} GCdebt}}
\par
{\bkmkstart AAAAAAAEJU}
{\bkmkend AAAAAAAEJU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 234 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v gcemergency\:global_State}
{\xe \v global_State\:gcemergency}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lu_byte} gcemergency}}
\par
{\bkmkstart AAAAAAAEJV}
{\bkmkend AAAAAAAEJV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 247 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v GCestimate\:global_State}
{\xe \v global_State\:GCestimate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lu_mem} GCestimate}}
\par
{\bkmkstart AAAAAAAEJW}
{\bkmkend AAAAAAAEJW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 235 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v gckind\:global_State}
{\xe \v global_State\:gckind}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lu_byte} gckind}}
\par
{\bkmkstart AAAAAAAEJX}
{\bkmkend AAAAAAAEJX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 243 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v gcpause\:global_State}
{\xe \v global_State\:gcpause}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lu_byte} gcpause}}
\par
{\bkmkstart AAAAAAAEJY}
{\bkmkend AAAAAAAEJY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 248 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v gcrunning\:global_State}
{\xe \v global_State\:gcrunning}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lu_byte} gcrunning}}
\par
{\bkmkstart AAAAAAAEJZ}
{\bkmkend AAAAAAAEJZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 246 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v gcstate\:global_State}
{\xe \v global_State\:gcstate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lu_byte} gcstate}}
\par
{\bkmkstart AAAAAAAEKA}
{\bkmkend AAAAAAAEKA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 242 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v gcstepmul\:global_State}
{\xe \v global_State\:gcstepmul}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lu_byte} gcstepmul}}
\par
{\bkmkstart AAAAAAAEKB}
{\bkmkend AAAAAAAEKB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 249 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v gcstepsize\:global_State}
{\xe \v global_State\:gcstepsize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lu_byte} gcstepsize}}
\par
{\bkmkstart AAAAAAAEKC}
{\bkmkend AAAAAAAEKC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 250 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v genmajormul\:global_State}
{\xe \v global_State\:genmajormul}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lu_byte} genmajormul}}
\par
{\bkmkstart AAAAAAAEKD}
{\bkmkend AAAAAAAEKD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 245 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v genminormul\:global_State}
{\xe \v global_State\:genminormul}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lu_byte} genminormul}}
\par
{\bkmkstart AAAAAAAEKE}
{\bkmkend AAAAAAAEKE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 244 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v gray\:global_State}
{\xe \v global_State\:gray}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GCObject}* gray}}
\par
{\bkmkstart AAAAAAAEKF}
{\bkmkend AAAAAAAEKF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 254 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v grayagain\:global_State}
{\xe \v global_State\:grayagain}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GCObject}* grayagain}}
\par
{\bkmkstart AAAAAAAEKG}
{\bkmkend AAAAAAAEKG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 255 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v l_registry\:global_State}
{\xe \v global_State\:l_registry}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TValue} l_registry}}
\par
{\bkmkstart AAAAAAAEKH}
{\bkmkend AAAAAAAEKH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 238 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lastatomic\:global_State}
{\xe \v global_State\:lastatomic}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lu_mem} lastatomic}}
\par
{\bkmkstart AAAAAAAEKI}
{\bkmkend AAAAAAAEKI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 236 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v mainthread\:global_State}
{\xe \v global_State\:mainthread}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b lua_State}* mainthread}}
\par
{\bkmkstart AAAAAAAEKJ}
{\bkmkend AAAAAAAEKJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 270 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v memerrmsg\:global_State}
{\xe \v global_State\:memerrmsg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TString}* memerrmsg}}
\par
{\bkmkstart AAAAAAAEKK}
{\bkmkend AAAAAAAEKK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 271 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v mt\:global_State}
{\xe \v global_State\:mt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b Table}* mt[{\b LUA_NUMTAGS}]}}
\par
{\bkmkstart AAAAAAAEKL}
{\bkmkend AAAAAAAEKL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 273 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v nilvalue\:global_State}
{\xe \v global_State\:nilvalue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TValue} nilvalue}}
\par
{\bkmkstart AAAAAAAEKM}
{\bkmkend AAAAAAAEKM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 239 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v old\:global_State}
{\xe \v global_State\:old}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GCObject}* old}}
\par
{\bkmkstart AAAAAAAEKN}
{\bkmkend AAAAAAAEKN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 263 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v panic\:global_State}
{\xe \v global_State\:panic}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lua_CFunction} panic}}
\par
{\bkmkstart AAAAAAAEKO}
{\bkmkend AAAAAAAEKO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 269 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v reallyold\:global_State}
{\xe \v global_State\:reallyold}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GCObject}* reallyold}}
\par
{\bkmkstart AAAAAAAEKP}
{\bkmkend AAAAAAAEKP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 264 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v seed\:global_State}
{\xe \v global_State\:seed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int seed}}
\par
{\bkmkstart AAAAAAAEKQ}
{\bkmkend AAAAAAAEKQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 240 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v strcache\:global_State}
{\xe \v global_State\:strcache}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TString}* strcache[{\b STRCACHE_N}][{\b STRCACHE_M}]}}
\par
{\bkmkstart AAAAAAAEKR}
{\bkmkend AAAAAAAEKR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 274 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v strt\:global_State}
{\xe \v global_State\:strt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b stringtable} strt}}
\par
{\bkmkstart AAAAAAAEKS}
{\bkmkend AAAAAAAEKS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 237 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v survival\:global_State}
{\xe \v global_State\:survival}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GCObject}* survival}}
\par
{\bkmkstart AAAAAAAEKT}
{\bkmkend AAAAAAAEKT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 262 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v sweepgc\:global_State}
{\xe \v global_State\:sweepgc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GCObject}** sweepgc}}
\par
{\bkmkstart AAAAAAAEKU}
{\bkmkend AAAAAAAEKU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 252 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v tmname\:global_State}
{\xe \v global_State\:tmname}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TString}* tmname[{\b TM_N}]}}
\par
{\bkmkstart AAAAAAAEKV}
{\bkmkend AAAAAAAEKV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 272 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v tobefnz\:global_State}
{\xe \v global_State\:tobefnz}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GCObject}* tobefnz}}
\par
{\bkmkstart AAAAAAAEKW}
{\bkmkend AAAAAAAEKW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 259 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v totalbytes\:global_State}
{\xe \v global_State\:totalbytes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b l_mem} totalbytes}}
\par
{\bkmkstart AAAAAAAEKX}
{\bkmkend AAAAAAAEKX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 233 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v twups\:global_State}
{\xe \v global_State\:twups}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b lua_State}* twups}}
\par
{\bkmkstart AAAAAAAEKY}
{\bkmkend AAAAAAAEKY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 268 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v ud\:global_State}
{\xe \v global_State\:ud}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void* ud}}
\par
{\bkmkstart AAAAAAAEKZ}
{\bkmkend AAAAAAAEKZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 232 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v ud_warn\:global_State}
{\xe \v global_State\:ud_warn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void* ud_warn}}
\par
{\bkmkstart AAAAAAAELA}
{\bkmkend AAAAAAAELA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 276 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v warnf\:global_State}
{\xe \v global_State\:warnf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lua_WarnFunction} warnf}}
\par
{\bkmkstart AAAAAAAELB}
{\bkmkend AAAAAAAELB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 275 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v weak\:global_State}
{\xe \v global_State\:weak}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GCObject}* weak}}
\par
{\bkmkstart AAAAAAAELC}
{\bkmkend AAAAAAAELC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 256 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'BD\'E1\'B9\'B9\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/gitworkspace/lua/src/{\b lstate.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
GMatchState\'BD\'E1\'B9\'B9\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v GMatchState}
{\xe \v GMatchState}
{\bkmkstart AAAAAAAELD}
{\bkmkend AAAAAAAELD}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b src}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b p}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b lastmatch}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MatchState} {\b ms}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 827 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v lastmatch\:GMatchState}
{\xe \v GMatchState\:lastmatch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* lastmatch}}
\par
{\bkmkstart AAAAAAAELE}
{\bkmkend AAAAAAAELE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 830 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v ms\:GMatchState}
{\xe \v GMatchState\:ms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b MatchState} ms}}
\par
{\bkmkstart AAAAAAAELF}
{\bkmkend AAAAAAAELF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 831 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v p\:GMatchState}
{\xe \v GMatchState\:p}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* p}}
\par
{\bkmkstart AAAAAAAELG}
{\bkmkend AAAAAAAELG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 829 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v src\:GMatchState}
{\xe \v GMatchState\:src}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* src}}
\par
{\bkmkstart AAAAAAAELH}
{\bkmkend AAAAAAAELH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 828 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'BD\'E1\'B9\'B9\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/gitworkspace/lua/src/{\b lstrlib.c}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Header\'BD\'E1\'B9\'B9\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v Header}
{\xe \v Header}
{\bkmkstart AAAAAAAELI}
{\bkmkend AAAAAAAELI}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b lua_State} * {\b L}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b islittle}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b maxalign}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 1375 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v islittle\:Header}
{\xe \v Header\:islittle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int islittle}}
\par
{\bkmkstart AAAAAAAELJ}
{\bkmkend AAAAAAAELJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 1377 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v L\:Header}
{\xe \v Header\:L}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lua_State}* L}}
\par
{\bkmkstart AAAAAAAELK}
{\bkmkend AAAAAAAELK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 1376 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v maxalign\:Header}
{\xe \v Header\:maxalign}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int maxalign}}
\par
{\bkmkstart AAAAAAAELL}
{\bkmkend AAAAAAAELL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 1378 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'BD\'E1\'B9\'B9\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/gitworkspace/lua/src/{\b lstrlib.c}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Labeldesc\'BD\'E1\'B9\'B9\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v Labeldesc}
{\xe \v Labeldesc}
{\bkmkstart AAAAAAAELM}
{\bkmkend AAAAAAAELM}
\par
{
{\f2 #include <lparser.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TString} * {\b name}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b pc}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b line}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b lu_byte} {\b nactvar}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b lu_byte} {\b close}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D4\'DA\'CE\'C4\'BC\'FE lparser.h \'B5\'DA 109 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v close\:Labeldesc}
{\xe \v Labeldesc\:close}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lu_byte} close}}
\par
{\bkmkstart AAAAAAAELN}
{\bkmkend AAAAAAAELN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.h \'B5\'DA 114 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v line\:Labeldesc}
{\xe \v Labeldesc\:line}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int line}}
\par
{\bkmkstart AAAAAAAELO}
{\bkmkend AAAAAAAELO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.h \'B5\'DA 112 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v nactvar\:Labeldesc}
{\xe \v Labeldesc\:nactvar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lu_byte} nactvar}}
\par
{\bkmkstart AAAAAAAELP}
{\bkmkend AAAAAAAELP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.h \'B5\'DA 113 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v name\:Labeldesc}
{\xe \v Labeldesc\:name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TString}* name}}
\par
{\bkmkstart AAAAAAAELQ}
{\bkmkend AAAAAAAELQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.h \'B5\'DA 110 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v pc\:Labeldesc}
{\xe \v Labeldesc\:pc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int pc}}
\par
{\bkmkstart AAAAAAAELR}
{\bkmkend AAAAAAAELR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.h \'B5\'DA 111 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'BD\'E1\'B9\'B9\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/gitworkspace/lua/src/{\b lparser.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Labellist\'BD\'E1\'B9\'B9\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v Labellist}
{\xe \v Labellist}
{\bkmkstart AAAAAAAELS}
{\bkmkend AAAAAAAELS}
\par
{
{\f2 #include <lparser.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Labeldesc} * {\b arr}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b n}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b size}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D4\'DA\'CE\'C4\'BC\'FE lparser.h \'B5\'DA 119 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v arr\:Labellist}
{\xe \v Labellist\:arr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Labeldesc}* arr}}
\par
{\bkmkstart AAAAAAAELT}
{\bkmkend AAAAAAAELT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.h \'B5\'DA 120 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v n\:Labellist}
{\xe \v Labellist\:n}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int n}}
\par
{\bkmkstart AAAAAAAELU}
{\bkmkend AAAAAAAELU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.h \'B5\'DA 121 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v size\:Labellist}
{\xe \v Labellist\:size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int size}}
\par
{\bkmkstart AAAAAAAELV}
{\bkmkend AAAAAAAELV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.h \'B5\'DA 122 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'BD\'E1\'B9\'B9\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/gitworkspace/lua/src/{\b lparser.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LClosure\'BD\'E1\'B9\'B9\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v LClosure}
{\xe \v LClosure}
{\bkmkstart AAAAAAAELW}
{\bkmkend AAAAAAAELW}
\par
{
{\f2 #include <lobject.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ClosureHeader}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Proto} * {\b p}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b UpVal} * {\b upvals} [1]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 628 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v ClosureHeader\:LClosure}
{\xe \v LClosure\:ClosureHeader}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ClosureHeader}}
\par
{\bkmkstart AAAAAAAELX}
{\bkmkend AAAAAAAELX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 629 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v p\:LClosure}
{\xe \v LClosure\:p}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b Proto}* p}}
\par
{\bkmkstart AAAAAAAELY}
{\bkmkend AAAAAAAELY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 630 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v upvals\:LClosure}
{\xe \v LClosure\:upvals}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b UpVal}* upvals[1]}}
\par
{\bkmkstart AAAAAAAELZ}
{\bkmkend AAAAAAAELZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 631 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'BD\'E1\'B9\'B9\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/gitworkspace/lua/src/{\b lobject.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LexState\'BD\'E1\'B9\'B9\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v LexState}
{\xe \v LexState}
{\bkmkstart AAAAAAAEMA}
{\bkmkend AAAAAAAEMA}
\par
{
{\f2 #include <llex.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b current}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b linenumber}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b lastline}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Token} {\b t}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Token} {\b lookahead}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b FuncState} * {\b fs}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b lua_State} * {\b L}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ZIO} * {\b z}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Mbuffer} * {\b buff}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Table} * {\b h}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Dyndata} * {\b dyd}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TString} * {\b source}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TString} * {\b envn}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D4\'DA\'CE\'C4\'BC\'FE llex.h \'B5\'DA 58 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v buff\:LexState}
{\xe \v LexState\:buff}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Mbuffer}* buff}}
\par
{\bkmkstart AAAAAAAEMB}
{\bkmkend AAAAAAAEMB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llex.h \'B5\'DA 67 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v current\:LexState}
{\xe \v LexState\:current}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int current}}
\par
{\bkmkstart AAAAAAAEMC}
{\bkmkend AAAAAAAEMC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llex.h \'B5\'DA 59 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v dyd\:LexState}
{\xe \v LexState\:dyd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b Dyndata}* dyd}}
\par
{\bkmkstart AAAAAAAEMD}
{\bkmkend AAAAAAAEMD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llex.h \'B5\'DA 69 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v envn\:LexState}
{\xe \v LexState\:envn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TString}* envn}}
\par
{\bkmkstart AAAAAAAEME}
{\bkmkend AAAAAAAEME}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llex.h \'B5\'DA 71 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v fs\:LexState}
{\xe \v LexState\:fs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b FuncState}* fs}}
\par
{\bkmkstart AAAAAAAEMF}
{\bkmkend AAAAAAAEMF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llex.h \'B5\'DA 64 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v h\:LexState}
{\xe \v LexState\:h}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Table}* h}}
\par
{\bkmkstart AAAAAAAEMG}
{\bkmkend AAAAAAAEMG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llex.h \'B5\'DA 68 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v L\:LexState}
{\xe \v LexState\:L}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b lua_State}* L}}
\par
{\bkmkstart AAAAAAAEMH}
{\bkmkend AAAAAAAEMH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llex.h \'B5\'DA 65 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lastline\:LexState}
{\xe \v LexState\:lastline}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int lastline}}
\par
{\bkmkstart AAAAAAAEMI}
{\bkmkend AAAAAAAEMI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llex.h \'B5\'DA 61 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v linenumber\:LexState}
{\xe \v LexState\:linenumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int linenumber}}
\par
{\bkmkstart AAAAAAAEMJ}
{\bkmkend AAAAAAAEMJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llex.h \'B5\'DA 60 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lookahead\:LexState}
{\xe \v LexState\:lookahead}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Token} lookahead}}
\par
{\bkmkstart AAAAAAAEMK}
{\bkmkend AAAAAAAEMK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llex.h \'B5\'DA 63 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v source\:LexState}
{\xe \v LexState\:source}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TString}* source}}
\par
{\bkmkstart AAAAAAAEML}
{\bkmkend AAAAAAAEML}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llex.h \'B5\'DA 70 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v t\:LexState}
{\xe \v LexState\:t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Token} t}}
\par
{\bkmkstart AAAAAAAEMM}
{\bkmkend AAAAAAAEMM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llex.h \'B5\'DA 62 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v z\:LexState}
{\xe \v LexState\:z}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ZIO}* z}}
\par
{\bkmkstart AAAAAAAEMN}
{\bkmkend AAAAAAAEMN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llex.h \'B5\'DA 66 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'BD\'E1\'B9\'B9\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/gitworkspace/lua/src/{\b llex.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LG\'BD\'E1\'B9\'B9\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v LG}
{\xe \v LG}
{\bkmkstart AAAAAAAEMO}
{\bkmkend AAAAAAAEMO}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LX} {\b l}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b global_State} {\b g}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D4\'DA\'CE\'C4\'BC\'FE lstate.c \'B5\'DA 44 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v g\:LG}
{\xe \v LG\:g}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b global_State} g}}
\par
{\bkmkstart AAAAAAAEMP}
{\bkmkend AAAAAAAEMP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.c \'B5\'DA 46 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v l\:LG}
{\xe \v LG\:l}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LX} l}}
\par
{\bkmkstart AAAAAAAEMQ}
{\bkmkend AAAAAAAEMQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.c \'B5\'DA 45 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'BD\'E1\'B9\'B9\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/gitworkspace/lua/src/{\b lstate.c}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LHS_assign\'BD\'E1\'B9\'B9\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v LHS_assign}
{\xe \v LHS_assign}
{\bkmkstart AAAAAAAEMR}
{\bkmkend AAAAAAAEMR}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LHS_assign} * {\b prev}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b expdesc} {\b v}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 1309 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v prev\:LHS_assign}
{\xe \v LHS_assign\:prev}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b LHS_assign}* prev}}
\par
{\bkmkstart AAAAAAAEMS}
{\bkmkend AAAAAAAEMS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 1310 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v v\:LHS_assign}
{\xe \v LHS_assign\:v}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b expdesc} v}}
\par
{\bkmkstart AAAAAAAEMT}
{\bkmkend AAAAAAAEMT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 1311 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'BD\'E1\'B9\'B9\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/gitworkspace/lua/src/{\b lparser.c}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LoadF\'BD\'E1\'B9\'B9\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v LoadF}
{\xe \v LoadF}
{\bkmkstart AAAAAAAEMU}
{\bkmkend AAAAAAAEMU}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b n}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
FILE * {\b f}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b buff} [BUFSIZ]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 684 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v buff\:LoadF}
{\xe \v LoadF\:buff}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char buff[BUFSIZ]}}
\par
{\bkmkstart AAAAAAAEMV}
{\bkmkend AAAAAAAEMV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 687 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v f\:LoadF}
{\xe \v LoadF\:f}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
FILE* f}}
\par
{\bkmkstart AAAAAAAEMW}
{\bkmkend AAAAAAAEMW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 686 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v n\:LoadF}
{\xe \v LoadF\:n}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int n}}
\par
{\bkmkstart AAAAAAAEMX}
{\bkmkend AAAAAAAEMX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 685 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'BD\'E1\'B9\'B9\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/gitworkspace/lua/src/{\b lauxlib.c}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LoadS\'BD\'E1\'B9\'B9\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v LoadS}
{\xe \v LoadS}
{\bkmkstart AAAAAAAEMY}
{\bkmkend AAAAAAAEMY}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b s}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
size_t {\b size}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 788 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v s\:LoadS}
{\xe \v LoadS\:s}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* s}}
\par
{\bkmkstart AAAAAAAEMZ}
{\bkmkend AAAAAAAEMZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 789 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v size\:LoadS}
{\xe \v LoadS\:size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
size_t size}}
\par
{\bkmkstart AAAAAAAENA}
{\bkmkend AAAAAAAENA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 790 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'BD\'E1\'B9\'B9\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/gitworkspace/lua/src/{\b lauxlib.c}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LoadState\'BD\'E1\'B9\'B9\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v LoadState}
{\xe \v LoadState}
{\bkmkstart AAAAAAAENB}
{\bkmkend AAAAAAAENB}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b lua_State} * {\b L}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ZIO} * {\b Z}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b name}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D4\'DA\'CE\'C4\'BC\'FE lundump.c \'B5\'DA 33 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v L\:LoadState}
{\xe \v LoadState\:L}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lua_State}* L}}
\par
{\bkmkstart AAAAAAAENC}
{\bkmkend AAAAAAAENC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lundump.c \'B5\'DA 34 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v name\:LoadState}
{\xe \v LoadState\:name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* name}}
\par
{\bkmkstart AAAAAAAEND}
{\bkmkend AAAAAAAEND}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lundump.c \'B5\'DA 36 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v Z\:LoadState}
{\xe \v LoadState\:Z}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ZIO}* Z}}
\par
{\bkmkstart AAAAAAAENE}
{\bkmkend AAAAAAAENE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lundump.c \'B5\'DA 35 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'BD\'E1\'B9\'B9\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/gitworkspace/lua/src/{\b lundump.c}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LocVar\'BD\'E1\'B9\'B9\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v LocVar}
{\xe \v LocVar}
{\bkmkstart AAAAAAAENF}
{\bkmkend AAAAAAAENF}
\par
{
{\f2 #include <lobject.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TString} * {\b varname}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b startpc}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b endpc}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 502 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v endpc\:LocVar}
{\xe \v LocVar\:endpc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int endpc}}
\par
{\bkmkstart AAAAAAAENG}
{\bkmkend AAAAAAAENG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 505 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v startpc\:LocVar}
{\xe \v LocVar\:startpc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int startpc}}
\par
{\bkmkstart AAAAAAAENH}
{\bkmkend AAAAAAAENH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 504 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v varname\:LocVar}
{\xe \v LocVar\:varname}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TString}* varname}}
\par
{\bkmkstart AAAAAAAENI}
{\bkmkend AAAAAAAENI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 503 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'BD\'E1\'B9\'B9\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/gitworkspace/lua/src/{\b lobject.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lua_Debug\'BD\'E1\'B9\'B9\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v lua_Debug}
{\xe \v lua_Debug}
{\bkmkstart AAAAAAAENJ}
{\bkmkend AAAAAAAENJ}
\par
{
{\f2 #include <lua.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b event}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b name}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b namewhat}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b what}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b source}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
size_t {\b srclen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b currentline}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b linedefined}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b lastlinedefined}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned char {\b nups}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned char {\b nparams}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b isvararg}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b istailcall}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned short {\b ftransfer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned short {\b ntransfer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b short_src} [{\b LUA_IDSIZE}]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b CallInfo} * {\b i_ci}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 469 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v currentline\:lua_Debug}
{\xe \v lua_Debug\:currentline}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int currentline}}
\par
{\bkmkstart AAAAAAAENK}
{\bkmkend AAAAAAAENK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 476 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v event\:lua_Debug}
{\xe \v lua_Debug\:event}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int event}}
\par
{\bkmkstart AAAAAAAENL}
{\bkmkend AAAAAAAENL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 470 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v ftransfer\:lua_Debug}
{\xe \v lua_Debug\:ftransfer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned short ftransfer}}
\par
{\bkmkstart AAAAAAAENM}
{\bkmkend AAAAAAAENM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 483 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v i_ci\:lua_Debug}
{\xe \v lua_Debug\:i_ci}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b CallInfo}* i_ci}}
\par
{\bkmkstart AAAAAAAENN}
{\bkmkend AAAAAAAENN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 487 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v istailcall\:lua_Debug}
{\xe \v lua_Debug\:istailcall}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char istailcall}}
\par
{\bkmkstart AAAAAAAENO}
{\bkmkend AAAAAAAENO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 482 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v isvararg\:lua_Debug}
{\xe \v lua_Debug\:isvararg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char isvararg}}
\par
{\bkmkstart AAAAAAAENP}
{\bkmkend AAAAAAAENP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 481 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lastlinedefined\:lua_Debug}
{\xe \v lua_Debug\:lastlinedefined}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int lastlinedefined}}
\par
{\bkmkstart AAAAAAAENQ}
{\bkmkend AAAAAAAENQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 478 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v linedefined\:lua_Debug}
{\xe \v lua_Debug\:linedefined}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int linedefined}}
\par
{\bkmkstart AAAAAAAENR}
{\bkmkend AAAAAAAENR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 477 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v name\:lua_Debug}
{\xe \v lua_Debug\:name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* name}}
\par
{\bkmkstart AAAAAAAENS}
{\bkmkend AAAAAAAENS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 471 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v namewhat\:lua_Debug}
{\xe \v lua_Debug\:namewhat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* namewhat}}
\par
{\bkmkstart AAAAAAAENT}
{\bkmkend AAAAAAAENT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 472 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v nparams\:lua_Debug}
{\xe \v lua_Debug\:nparams}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned char nparams}}
\par
{\bkmkstart AAAAAAAENU}
{\bkmkend AAAAAAAENU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 480 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v ntransfer\:lua_Debug}
{\xe \v lua_Debug\:ntransfer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned short ntransfer}}
\par
{\bkmkstart AAAAAAAENV}
{\bkmkend AAAAAAAENV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 484 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v nups\:lua_Debug}
{\xe \v lua_Debug\:nups}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned char nups}}
\par
{\bkmkstart AAAAAAAENW}
{\bkmkend AAAAAAAENW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 479 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v short_src\:lua_Debug}
{\xe \v lua_Debug\:short_src}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char short_src[{\b LUA_IDSIZE}]}}
\par
{\bkmkstart AAAAAAAENX}
{\bkmkend AAAAAAAENX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 485 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v source\:lua_Debug}
{\xe \v lua_Debug\:source}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* source}}
\par
{\bkmkstart AAAAAAAENY}
{\bkmkend AAAAAAAENY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 474 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v srclen\:lua_Debug}
{\xe \v lua_Debug\:srclen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
size_t srclen}}
\par
{\bkmkstart AAAAAAAENZ}
{\bkmkend AAAAAAAENZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 475 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v what\:lua_Debug}
{\xe \v lua_Debug\:what}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* what}}
\par
{\bkmkstart AAAAAAAEOA}
{\bkmkend AAAAAAAEOA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 473 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'BD\'E1\'B9\'B9\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/gitworkspace/lua/src/{\b lua.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lua_longjmp\'BD\'E1\'B9\'B9\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v lua_longjmp}
{\xe \v lua_longjmp}
{\bkmkstart AAAAAAAEOB}
{\bkmkend AAAAAAAEOB}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b lua_longjmp} * {\b previous}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b luai_jmpbuf} {\b b}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
volatile int {\b status}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D4\'DA\'CE\'C4\'BC\'FE ldo.c \'B5\'DA 84 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v b\:lua_longjmp}
{\xe \v lua_longjmp\:b}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b luai_jmpbuf} b}}
\par
{\bkmkstart AAAAAAAEOC}
{\bkmkend AAAAAAAEOC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldo.c \'B5\'DA 86 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v previous\:lua_longjmp}
{\xe \v lua_longjmp\:previous}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b lua_longjmp}* previous}}
\par
{\bkmkstart AAAAAAAEOD}
{\bkmkend AAAAAAAEOD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldo.c \'B5\'DA 85 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v status\:lua_longjmp}
{\xe \v lua_longjmp\:status}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
volatile int status}}
\par
{\bkmkstart AAAAAAAEOE}
{\bkmkend AAAAAAAEOE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldo.c \'B5\'DA 87 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'BD\'E1\'B9\'B9\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/gitworkspace/lua/src/{\b ldo.c}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lua_State\'BD\'E1\'B9\'B9\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v lua_State}
{\xe \v lua_State}
{\bkmkstart AAAAAAAEOF}
{\bkmkend AAAAAAAEOF}
\par
{
{\f2 #include <lstate.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CommonHeader}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b lu_byte} {\b status}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b lu_byte} {\b allowhook}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned short {\b nci}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b StkId} {\b top}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b global_State} * {\b l_G}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CallInfo} * {\b ci}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b Instruction} * {\b oldpc}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b StkId} {\b stack_last}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b StkId} {\b stack}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b UpVal} * {\b openupval}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GCObject} * {\b gclist}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b lua_State} * {\b twups}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b lua_longjmp} * {\b errorJmp}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CallInfo} {\b base_ci}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
volatile {\b lua_Hook} {\b hook}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ptrdiff_t {\b errfunc}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b l_uint32} {\b nCcalls}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b stacksize}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b basehookcount}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b hookcount}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
volatile {\b l_signalT} {\b hookmask}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 284 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v allowhook\:lua_State}
{\xe \v lua_State\:allowhook}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lu_byte} allowhook}}
\par
{\bkmkstart AAAAAAAEOG}
{\bkmkend AAAAAAAEOG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 287 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v base_ci\:lua_State}
{\xe \v lua_State\:base_ci}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CallInfo} base_ci}}
\par
{\bkmkstart AAAAAAAEOH}
{\bkmkend AAAAAAAEOH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 299 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v basehookcount\:lua_State}
{\xe \v lua_State\:basehookcount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int basehookcount}}
\par
{\bkmkstart AAAAAAAEOI}
{\bkmkend AAAAAAAEOI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 304 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v ci\:lua_State}
{\xe \v lua_State\:ci}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CallInfo}* ci}}
\par
{\bkmkstart AAAAAAAEOJ}
{\bkmkend AAAAAAAEOJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 291 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v CommonHeader\:lua_State}
{\xe \v lua_State\:CommonHeader}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CommonHeader}}
\par
{\bkmkstart AAAAAAAEOK}
{\bkmkend AAAAAAAEOK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 285 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v errfunc\:lua_State}
{\xe \v lua_State\:errfunc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ptrdiff_t errfunc}}
\par
{\bkmkstart AAAAAAAEOL}
{\bkmkend AAAAAAAEOL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 301 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v errorJmp\:lua_State}
{\xe \v lua_State\:errorJmp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b lua_longjmp}* errorJmp}}
\par
{\bkmkstart AAAAAAAEOM}
{\bkmkend AAAAAAAEOM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 298 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v gclist\:lua_State}
{\xe \v lua_State\:gclist}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GCObject}* gclist}}
\par
{\bkmkstart AAAAAAAEON}
{\bkmkend AAAAAAAEON}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 296 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v hook\:lua_State}
{\xe \v lua_State\:hook}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
volatile {\b lua_Hook} hook}}
\par
{\bkmkstart AAAAAAAEOO}
{\bkmkend AAAAAAAEOO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 300 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v hookcount\:lua_State}
{\xe \v lua_State\:hookcount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int hookcount}}
\par
{\bkmkstart AAAAAAAEOP}
{\bkmkend AAAAAAAEOP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 305 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v hookmask\:lua_State}
{\xe \v lua_State\:hookmask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
volatile {\b l_signalT} hookmask}}
\par
{\bkmkstart AAAAAAAEOQ}
{\bkmkend AAAAAAAEOQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 306 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v l_G\:lua_State}
{\xe \v lua_State\:l_G}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b global_State}* l_G}}
\par
{\bkmkstart AAAAAAAEOR}
{\bkmkend AAAAAAAEOR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 290 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v nCcalls\:lua_State}
{\xe \v lua_State\:nCcalls}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b l_uint32} nCcalls}}
\par
{\bkmkstart AAAAAAAEOS}
{\bkmkend AAAAAAAEOS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 302 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v nci\:lua_State}
{\xe \v lua_State\:nci}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned short nci}}
\par
{\bkmkstart AAAAAAAEOT}
{\bkmkend AAAAAAAEOT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 288 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v oldpc\:lua_State}
{\xe \v lua_State\:oldpc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b Instruction}* oldpc}}
\par
{\bkmkstart AAAAAAAEOU}
{\bkmkend AAAAAAAEOU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 292 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v openupval\:lua_State}
{\xe \v lua_State\:openupval}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b UpVal}* openupval}}
\par
{\bkmkstart AAAAAAAEOV}
{\bkmkend AAAAAAAEOV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 295 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v stack\:lua_State}
{\xe \v lua_State\:stack}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b StkId} stack}}
\par
{\bkmkstart AAAAAAAEOW}
{\bkmkend AAAAAAAEOW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 294 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v stack_last\:lua_State}
{\xe \v lua_State\:stack_last}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b StkId} stack_last}}
\par
{\bkmkstart AAAAAAAEOX}
{\bkmkend AAAAAAAEOX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 293 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v stacksize\:lua_State}
{\xe \v lua_State\:stacksize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int stacksize}}
\par
{\bkmkstart AAAAAAAEOY}
{\bkmkend AAAAAAAEOY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 303 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v status\:lua_State}
{\xe \v lua_State\:status}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lu_byte} status}}
\par
{\bkmkstart AAAAAAAEOZ}
{\bkmkend AAAAAAAEOZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 286 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v top\:lua_State}
{\xe \v lua_State\:top}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b StkId} top}}
\par
{\bkmkstart AAAAAAAEPA}
{\bkmkend AAAAAAAEPA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 289 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v twups\:lua_State}
{\xe \v lua_State\:twups}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b lua_State}* twups}}
\par
{\bkmkstart AAAAAAAEPB}
{\bkmkend AAAAAAAEPB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 297 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'BD\'E1\'B9\'B9\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/gitworkspace/lua/src/{\b lstate.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
luaL_Buffer\'BD\'E1\'B9\'B9\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v luaL_Buffer}
{\xe \v luaL_Buffer}
{\bkmkstart AAAAAAAEPC}
{\bkmkend AAAAAAAEPC}
\par
{
{\f2 #include <lauxlib.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b b}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
size_t {\b size}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
size_t {\b n}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b lua_State} * {\b L}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union \{\par

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ {\b LUAI_MAXALIGN}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ char {\b b} [{\b LUAL_BUFFERSIZE}]\par
}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\} {\b init}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.h \'B5\'DA 166 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v b\:luaL_Buffer}
{\xe \v luaL_Buffer\:b}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* b}}
\par
{\bkmkstart AAAAAAAEPD}
{\bkmkend AAAAAAAEPD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.h \'B5\'DA 167 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v b\:luaL_Buffer}
{\xe \v luaL_Buffer\:b}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char b[{\b LUAL_BUFFERSIZE}]}}
\par
{\bkmkstart AAAAAAAEPE}
{\bkmkend AAAAAAAEPE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.h \'B5\'DA 173 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v init\:luaL_Buffer}
{\xe \v luaL_Buffer\:init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
union \{ ... \}  init}}
\par
{\bkmkstart AAAAAAAEPF}
{\bkmkend AAAAAAAEPF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v L\:luaL_Buffer}
{\xe \v luaL_Buffer\:L}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lua_State}* L}}
\par
{\bkmkstart AAAAAAAEPG}
{\bkmkend AAAAAAAEPG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.h \'B5\'DA 170 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUAI_MAXALIGN\:luaL_Buffer}
{\xe \v luaL_Buffer\:LUAI_MAXALIGN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
LUAI_MAXALIGN}}
\par
{\bkmkstart AAAAAAAEPH}
{\bkmkend AAAAAAAEPH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.h \'B5\'DA 172 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v n\:luaL_Buffer}
{\xe \v luaL_Buffer\:n}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
size_t n}}
\par
{\bkmkstart AAAAAAAEPI}
{\bkmkend AAAAAAAEPI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.h \'B5\'DA 169 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v size\:luaL_Buffer}
{\xe \v luaL_Buffer\:size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
size_t size}}
\par
{\bkmkstart AAAAAAAEPJ}
{\bkmkend AAAAAAAEPJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.h \'B5\'DA 168 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'BD\'E1\'B9\'B9\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/gitworkspace/lua/src/{\b lauxlib.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
luaL_Reg\'BD\'E1\'B9\'B9\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v luaL_Reg}
{\xe \v luaL_Reg}
{\bkmkstart AAAAAAAEPK}
{\bkmkend AAAAAAAEPK}
\par
{
{\f2 #include <lauxlib.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b name}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b lua_CFunction} {\b func}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.h \'B5\'DA 37 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v func\:luaL_Reg}
{\xe \v luaL_Reg\:func}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lua_CFunction} func}}
\par
{\bkmkstart AAAAAAAEPL}
{\bkmkend AAAAAAAEPL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.h \'B5\'DA 39 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v name\:luaL_Reg}
{\xe \v luaL_Reg\:name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* name}}
\par
{\bkmkstart AAAAAAAEPM}
{\bkmkend AAAAAAAEPM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.h \'B5\'DA 38 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'BD\'E1\'B9\'B9\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/gitworkspace/lua/src/{\b lauxlib.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
luaL_Stream\'BD\'E1\'B9\'B9\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v luaL_Stream}
{\xe \v luaL_Stream}
{\bkmkstart AAAAAAAEPN}
{\bkmkend AAAAAAAEPN}
\par
{
{\f2 #include <lauxlib.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
FILE * {\b f}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b lua_CFunction} {\b closef}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.h \'B5\'DA 220 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v closef\:luaL_Stream}
{\xe \v luaL_Stream\:closef}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lua_CFunction} closef}}
\par
{\bkmkstart AAAAAAAEPO}
{\bkmkend AAAAAAAEPO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.h \'B5\'DA 222 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v f\:luaL_Stream}
{\xe \v luaL_Stream\:f}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
FILE* f}}
\par
{\bkmkstart AAAAAAAEPP}
{\bkmkend AAAAAAAEPP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.h \'B5\'DA 221 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'BD\'E1\'B9\'B9\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/gitworkspace/lua/src/{\b lauxlib.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LX\'BD\'E1\'B9\'B9\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v LX}
{\xe \v LX}
{\bkmkstart AAAAAAAEPQ}
{\bkmkend AAAAAAAEPQ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b lu_byte} {\b extra_} [{\b LUA_EXTRASPACE}]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b lua_State} {\b l}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D4\'DA\'CE\'C4\'BC\'FE lstate.c \'B5\'DA 35 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v extra_\:LX}
{\xe \v LX\:extra_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lu_byte} extra_[{\b LUA_EXTRASPACE}]}}
\par
{\bkmkstart AAAAAAAEPR}
{\bkmkend AAAAAAAEPR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.c \'B5\'DA 36 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v l\:LX}
{\xe \v LX\:l}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lua_State} l}}
\par
{\bkmkstart AAAAAAAEPS}
{\bkmkend AAAAAAAEPS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.c \'B5\'DA 37 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'BD\'E1\'B9\'B9\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/gitworkspace/lua/src/{\b lstate.c}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
MatchState\'BD\'E1\'B9\'B9\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v MatchState}
{\xe \v MatchState}
{\bkmkstart AAAAAAAEPT}
{\bkmkend AAAAAAAEPT}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b src_init}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b src_end}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b p_end}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b lua_State} * {\b L}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b matchdepth}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned char {\b level}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct \{\par

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ const char * {\b init}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ ptrdiff_t {\b len}\par
}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\} {\b capture} [{\b LUA_MAXCAPTURES}]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 356 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v capture\:MatchState}
{\xe \v MatchState\:capture}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct \{ ... \}  capture[{\b LUA_MAXCAPTURES}]}}
\par
{\bkmkstart AAAAAAAEPU}
{\bkmkend AAAAAAAEPU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v init\:MatchState}
{\xe \v MatchState\:init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* init}}
\par
{\bkmkstart AAAAAAAEPV}
{\bkmkend AAAAAAAEPV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 364 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v L\:MatchState}
{\xe \v MatchState\:L}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lua_State}* L}}
\par
{\bkmkstart AAAAAAAEPW}
{\bkmkend AAAAAAAEPW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 360 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v len\:MatchState}
{\xe \v MatchState\:len}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ptrdiff_t len}}
\par
{\bkmkstart AAAAAAAEPX}
{\bkmkend AAAAAAAEPX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 365 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v level\:MatchState}
{\xe \v MatchState\:level}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned char level}}
\par
{\bkmkstart AAAAAAAEPY}
{\bkmkend AAAAAAAEPY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 362 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v matchdepth\:MatchState}
{\xe \v MatchState\:matchdepth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int matchdepth}}
\par
{\bkmkstart AAAAAAAEPZ}
{\bkmkend AAAAAAAEPZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 361 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v p_end\:MatchState}
{\xe \v MatchState\:p_end}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* p_end}}
\par
{\bkmkstart AAAAAAAEQA}
{\bkmkend AAAAAAAEQA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 359 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v src_end\:MatchState}
{\xe \v MatchState\:src_end}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* src_end}}
\par
{\bkmkstart AAAAAAAEQB}
{\bkmkend AAAAAAAEQB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 358 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v src_init\:MatchState}
{\xe \v MatchState\:src_init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* src_init}}
\par
{\bkmkstart AAAAAAAEQC}
{\bkmkend AAAAAAAEQC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 357 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'BD\'E1\'B9\'B9\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/gitworkspace/lua/src/{\b lstrlib.c}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Mbuffer\'BD\'E1\'B9\'B9\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v Mbuffer}
{\xe \v Mbuffer}
{\bkmkstart AAAAAAAEQD}
{\bkmkend AAAAAAAEQD}
\par
{
{\f2 #include <lzio.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b buffer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
size_t {\b n}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
size_t {\b buffsize}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D4\'DA\'CE\'C4\'BC\'FE lzio.h \'B5\'DA 23 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v buffer\:Mbuffer}
{\xe \v Mbuffer\:buffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* buffer}}
\par
{\bkmkstart AAAAAAAEQE}
{\bkmkend AAAAAAAEQE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lzio.h \'B5\'DA 24 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v buffsize\:Mbuffer}
{\xe \v Mbuffer\:buffsize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
size_t buffsize}}
\par
{\bkmkstart AAAAAAAEQF}
{\bkmkend AAAAAAAEQF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lzio.h \'B5\'DA 26 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v n\:Mbuffer}
{\xe \v Mbuffer\:n}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
size_t n}}
\par
{\bkmkstart AAAAAAAEQG}
{\bkmkend AAAAAAAEQG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lzio.h \'B5\'DA 25 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'BD\'E1\'B9\'B9\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/gitworkspace/lua/src/{\b lzio.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Node\'C1\'AA\'BA\'CF\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v Node}
{\xe \v Node}
{\bkmkstart AAAAAAAEQH}
{\bkmkend AAAAAAAEQH}
\par
{
{\f2 #include <lobject.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b NodeKey}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Node::NodeKey} {\b u}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TValue} {\b i_val}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 673 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v i_val\:Node}
{\xe \v Node\:i_val}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TValue} i_val}}
\par
{\bkmkstart AAAAAAAEQI}
{\bkmkend AAAAAAAEQI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 680 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v u\:Node}
{\xe \v Node\:u}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b Node::NodeKey} u}}
\par
{\bkmkstart AAAAAAAEQJ}
{\bkmkend AAAAAAAEQJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C1\'AA\'BA\'CF\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/gitworkspace/lua/src/{\b lobject.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Node::NodeKey\'BD\'E1\'B9\'B9\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v Node::NodeKey}
{\xe \v Node::NodeKey}
{\bkmkstart AAAAAAAEQK}
{\bkmkend AAAAAAAEQK}
\par
{
{\f2 #include <lobject.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TValuefields}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b lu_byte} {\b key_tt}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b next}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Value} {\b key_val}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 674 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v key_tt\:Node::NodeKey}
{\xe \v Node::NodeKey\:key_tt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lu_byte} key_tt}}
\par
{\bkmkstart AAAAAAAEQL}
{\bkmkend AAAAAAAEQL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 676 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v key_val\:Node::NodeKey}
{\xe \v Node::NodeKey\:key_val}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Value} key_val}}
\par
{\bkmkstart AAAAAAAEQM}
{\bkmkend AAAAAAAEQM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 678 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v next\:Node::NodeKey}
{\xe \v Node::NodeKey\:next}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int next}}
\par
{\bkmkstart AAAAAAAEQN}
{\bkmkend AAAAAAAEQN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 677 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v TValuefields\:Node::NodeKey}
{\xe \v Node::NodeKey\:TValuefields}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TValuefields}}
\par
{\bkmkstart AAAAAAAEQO}
{\bkmkend AAAAAAAEQO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 675 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'BD\'E1\'B9\'B9\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/gitworkspace/lua/src/{\b lobject.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Proto\'BD\'E1\'B9\'B9\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v Proto}
{\xe \v Proto}
{\bkmkstart AAAAAAAEQP}
{\bkmkend AAAAAAAEQP}
\par
{
{\f2 #include <lobject.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CommonHeader}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b lu_byte} {\b numparams}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b lu_byte} {\b is_vararg}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b lu_byte} {\b maxstacksize}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b sizeupvalues}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b sizek}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b sizecode}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b sizelineinfo}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b sizep}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b sizelocvars}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b sizeabslineinfo}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b linedefined}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b lastlinedefined}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TValue} * {\b k}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Instruction} * {\b code}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Proto} ** {\b p}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Upvaldesc} * {\b upvalues}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ls_byte} * {\b lineinfo}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b AbsLineInfo} * {\b abslineinfo}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LocVar} * {\b locvars}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TString} * {\b source}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GCObject} * {\b gclist}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 527 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v abslineinfo\:Proto}
{\xe \v Proto\:abslineinfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b AbsLineInfo}* abslineinfo}}
\par
{\bkmkstart AAAAAAAEQQ}
{\bkmkend AAAAAAAEQQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 546 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v code\:Proto}
{\xe \v Proto\:code}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Instruction}* code}}
\par
{\bkmkstart AAAAAAAEQR}
{\bkmkend AAAAAAAEQR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 542 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v CommonHeader\:Proto}
{\xe \v Proto\:CommonHeader}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CommonHeader}}
\par
{\bkmkstart AAAAAAAEQS}
{\bkmkend AAAAAAAEQS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 528 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v gclist\:Proto}
{\xe \v Proto\:gclist}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GCObject}* gclist}}
\par
{\bkmkstart AAAAAAAEQT}
{\bkmkend AAAAAAAEQT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 549 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v is_vararg\:Proto}
{\xe \v Proto\:is_vararg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lu_byte} is_vararg}}
\par
{\bkmkstart AAAAAAAEQU}
{\bkmkend AAAAAAAEQU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 530 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v k\:Proto}
{\xe \v Proto\:k}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TValue}* k}}
\par
{\bkmkstart AAAAAAAEQV}
{\bkmkend AAAAAAAEQV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 541 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lastlinedefined\:Proto}
{\xe \v Proto\:lastlinedefined}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int lastlinedefined}}
\par
{\bkmkstart AAAAAAAEQW}
{\bkmkend AAAAAAAEQW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 540 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v linedefined\:Proto}
{\xe \v Proto\:linedefined}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int linedefined}}
\par
{\bkmkstart AAAAAAAEQX}
{\bkmkend AAAAAAAEQX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 539 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lineinfo\:Proto}
{\xe \v Proto\:lineinfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ls_byte}* lineinfo}}
\par
{\bkmkstart AAAAAAAEQY}
{\bkmkend AAAAAAAEQY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 545 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v locvars\:Proto}
{\xe \v Proto\:locvars}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LocVar}* locvars}}
\par
{\bkmkstart AAAAAAAEQZ}
{\bkmkend AAAAAAAEQZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 547 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v maxstacksize\:Proto}
{\xe \v Proto\:maxstacksize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lu_byte} maxstacksize}}
\par
{\bkmkstart AAAAAAAERA}
{\bkmkend AAAAAAAERA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 531 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v numparams\:Proto}
{\xe \v Proto\:numparams}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lu_byte} numparams}}
\par
{\bkmkstart AAAAAAAERB}
{\bkmkend AAAAAAAERB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 529 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v p\:Proto}
{\xe \v Proto\:p}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b Proto}** p}}
\par
{\bkmkstart AAAAAAAERC}
{\bkmkend AAAAAAAERC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 543 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v sizeabslineinfo\:Proto}
{\xe \v Proto\:sizeabslineinfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int sizeabslineinfo}}
\par
{\bkmkstart AAAAAAAERD}
{\bkmkend AAAAAAAERD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 538 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v sizecode\:Proto}
{\xe \v Proto\:sizecode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int sizecode}}
\par
{\bkmkstart AAAAAAAERE}
{\bkmkend AAAAAAAERE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 534 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v sizek\:Proto}
{\xe \v Proto\:sizek}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int sizek}}
\par
{\bkmkstart AAAAAAAERF}
{\bkmkend AAAAAAAERF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 533 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v sizelineinfo\:Proto}
{\xe \v Proto\:sizelineinfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int sizelineinfo}}
\par
{\bkmkstart AAAAAAAERG}
{\bkmkend AAAAAAAERG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 535 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v sizelocvars\:Proto}
{\xe \v Proto\:sizelocvars}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int sizelocvars}}
\par
{\bkmkstart AAAAAAAERH}
{\bkmkend AAAAAAAERH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 537 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v sizep\:Proto}
{\xe \v Proto\:sizep}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int sizep}}
\par
{\bkmkstart AAAAAAAERI}
{\bkmkend AAAAAAAERI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 536 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v sizeupvalues\:Proto}
{\xe \v Proto\:sizeupvalues}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int sizeupvalues}}
\par
{\bkmkstart AAAAAAAERJ}
{\bkmkend AAAAAAAERJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 532 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v source\:Proto}
{\xe \v Proto\:source}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TString}* source}}
\par
{\bkmkstart AAAAAAAERK}
{\bkmkend AAAAAAAERK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 548 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v upvalues\:Proto}
{\xe \v Proto\:upvalues}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Upvaldesc}* upvalues}}
\par
{\bkmkstart AAAAAAAERL}
{\bkmkend AAAAAAAERL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 544 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'BD\'E1\'B9\'B9\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/gitworkspace/lua/src/{\b lobject.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Rand64\'BD\'E1\'B9\'B9\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v Rand64}
{\xe \v Rand64}
{\bkmkstart AAAAAAAERM}
{\bkmkend AAAAAAAERM}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b lu_int32} {\b h}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b lu_int32} {\b l}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D4\'DA\'CE\'C4\'BC\'FE lmathlib.c \'B5\'DA 360 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v h\:Rand64}
{\xe \v Rand64\:h}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lu_int32} h}}
\par
{\bkmkstart AAAAAAAERN}
{\bkmkend AAAAAAAERN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmathlib.c \'B5\'DA 361 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v l\:Rand64}
{\xe \v Rand64\:l}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lu_int32} l}}
\par
{\bkmkstart AAAAAAAERO}
{\bkmkend AAAAAAAERO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmathlib.c \'B5\'DA 362 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'BD\'E1\'B9\'B9\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/gitworkspace/lua/src/{\b lmathlib.c}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RanState\'BD\'E1\'B9\'B9\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v RanState}
{\xe \v RanState}
{\bkmkstart AAAAAAAERP}
{\bkmkend AAAAAAAERP}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Rand64} {\b s} [4]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D4\'DA\'CE\'C4\'BC\'FE lmathlib.c \'B5\'DA 516 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v s\:RanState}
{\xe \v RanState\:s}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Rand64} s[4]}}
\par
{\bkmkstart AAAAAAAERQ}
{\bkmkend AAAAAAAERQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmathlib.c \'B5\'DA 517 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'BD\'E1\'B9\'B9\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/gitworkspace/lua/src/{\b lmathlib.c}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RN\'BD\'E1\'B9\'B9\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v RN}
{\xe \v RN}
{\bkmkstart AAAAAAAERR}
{\bkmkend AAAAAAAERR}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
FILE * {\b f}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b c}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b n}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b buff} [{\b L_MAXLENNUM}+1]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D4\'DA\'CE\'C4\'BC\'FE liolib.c \'B5\'DA 414 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v buff\:RN}
{\xe \v RN\:buff}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char buff[{\b L_MAXLENNUM}+1]}}
\par
{\bkmkstart AAAAAAAERS}
{\bkmkend AAAAAAAERS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE liolib.c \'B5\'DA 418 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v c\:RN}
{\xe \v RN\:c}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int c}}
\par
{\bkmkstart AAAAAAAERT}
{\bkmkend AAAAAAAERT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE liolib.c \'B5\'DA 416 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v f\:RN}
{\xe \v RN\:f}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
FILE* f}}
\par
{\bkmkstart AAAAAAAERU}
{\bkmkend AAAAAAAERU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE liolib.c \'B5\'DA 415 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v n\:RN}
{\xe \v RN\:n}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int n}}
\par
{\bkmkstart AAAAAAAERV}
{\bkmkend AAAAAAAERV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE liolib.c \'B5\'DA 417 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'BD\'E1\'B9\'B9\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/gitworkspace/lua/src/{\b liolib.c}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SemInfo\'C1\'AA\'BA\'CF\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v SemInfo}
{\xe \v SemInfo}
{\bkmkstart AAAAAAAERW}
{\bkmkend AAAAAAAERW}
\par
{
{\f2 #include <llex.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b lua_Number} {\b r}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b lua_Integer} {\b i}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TString} * {\b ts}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D4\'DA\'CE\'C4\'BC\'FE llex.h \'B5\'DA 43 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v i\:SemInfo}
{\xe \v SemInfo\:i}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lua_Integer} i}}
\par
{\bkmkstart AAAAAAAERX}
{\bkmkend AAAAAAAERX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llex.h \'B5\'DA 45 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v r\:SemInfo}
{\xe \v SemInfo\:r}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lua_Number} r}}
\par
{\bkmkstart AAAAAAAERY}
{\bkmkend AAAAAAAERY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llex.h \'B5\'DA 44 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v ts\:SemInfo}
{\xe \v SemInfo\:ts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TString}* ts}}
\par
{\bkmkstart AAAAAAAERZ}
{\bkmkend AAAAAAAERZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llex.h \'B5\'DA 46 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C1\'AA\'BA\'CF\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/gitworkspace/lua/src/{\b llex.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SParser\'BD\'E1\'B9\'B9\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v SParser}
{\xe \v SParser}
{\bkmkstart AAAAAAAESA}
{\bkmkend AAAAAAAESA}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ZIO} * {\b z}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Mbuffer} {\b buff}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Dyndata} {\b dyd}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b mode}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b name}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D4\'DA\'CE\'C4\'BC\'FE ldo.c \'B5\'DA 768 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v buff\:SParser}
{\xe \v SParser\:buff}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Mbuffer} buff}}
\par
{\bkmkstart AAAAAAAESB}
{\bkmkend AAAAAAAESB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldo.c \'B5\'DA 770 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v dyd\:SParser}
{\xe \v SParser\:dyd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Dyndata} dyd}}
\par
{\bkmkstart AAAAAAAESC}
{\bkmkend AAAAAAAESC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldo.c \'B5\'DA 771 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v mode\:SParser}
{\xe \v SParser\:mode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* mode}}
\par
{\bkmkstart AAAAAAAESD}
{\bkmkend AAAAAAAESD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldo.c \'B5\'DA 772 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v name\:SParser}
{\xe \v SParser\:name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* name}}
\par
{\bkmkstart AAAAAAAESE}
{\bkmkend AAAAAAAESE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldo.c \'B5\'DA 773 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v z\:SParser}
{\xe \v SParser\:z}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ZIO}* z}}
\par
{\bkmkstart AAAAAAAESF}
{\bkmkend AAAAAAAESF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldo.c \'B5\'DA 769 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'BD\'E1\'B9\'B9\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/gitworkspace/lua/src/{\b ldo.c}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
StackValue\'C1\'AA\'BA\'CF\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v StackValue}
{\xe \v StackValue}
{\bkmkstart AAAAAAAESG}
{\bkmkend AAAAAAAESG}
\par
{
{\f2 #include <lobject.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TValue} {\b val}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 138 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v val\:StackValue}
{\xe \v StackValue\:val}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TValue} val}}
\par
{\bkmkstart AAAAAAAESH}
{\bkmkend AAAAAAAESH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 139 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C1\'AA\'BA\'CF\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/gitworkspace/lua/src/{\b lobject.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
str_Writer\'BD\'E1\'B9\'B9\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v str_Writer}
{\xe \v str_Writer}
{\bkmkstart AAAAAAAESI}
{\bkmkend AAAAAAAESI}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b init}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b luaL_Buffer} {\b B}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 215 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v B\:str_Writer}
{\xe \v str_Writer\:B}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b luaL_Buffer} B}}
\par
{\bkmkstart AAAAAAAESJ}
{\bkmkend AAAAAAAESJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 217 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v init\:str_Writer}
{\xe \v str_Writer\:init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int init}}
\par
{\bkmkstart AAAAAAAESK}
{\bkmkend AAAAAAAESK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 216 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'BD\'E1\'B9\'B9\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/gitworkspace/lua/src/{\b lstrlib.c}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
stringtable\'BD\'E1\'B9\'B9\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v stringtable}
{\xe \v stringtable}
{\bkmkstart AAAAAAAESL}
{\bkmkend AAAAAAAESL}
\par
{
{\f2 #include <lstate.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TString} ** {\b hash}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b nuse}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
number of elements }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b size}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
hash table for strings \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B4\'FD\'B0\'EC\'CA\'C2\'CF\'EE:\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \par
}
}{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 161 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v hash\:stringtable}
{\xe \v stringtable\:hash}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TString}** hash}}
\par
{\bkmkstart AAAAAAAESM}
{\bkmkend AAAAAAAESM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 162 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v nuse\:stringtable}
{\xe \v stringtable\:nuse}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int nuse}}
\par
{\bkmkstart AAAAAAAESN}
{\bkmkend AAAAAAAESN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
number of elements }}\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 163 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v size\:stringtable}
{\xe \v stringtable\:size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int size}}
\par
{\bkmkstart AAAAAAAESO}
{\bkmkend AAAAAAAESO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 164 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'BD\'E1\'B9\'B9\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/gitworkspace/lua/src/{\b lstate.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Table\'BD\'E1\'B9\'B9\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v Table}
{\xe \v Table}
{\bkmkstart AAAAAAAESP}
{\bkmkend AAAAAAAESP}
\par
{
{\f2 #include <lobject.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CommonHeader}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b lu_byte} {\b flags}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b lu_byte} {\b lsizenode}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b alimit}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TValue} * {\b array}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Node} * {\b node}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Node} * {\b lastfree}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Table} * {\b metatable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GCObject} * {\b gclist}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 711 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v alimit\:Table}
{\xe \v Table\:alimit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int alimit}}
\par
{\bkmkstart AAAAAAAESQ}
{\bkmkend AAAAAAAESQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 715 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v array\:Table}
{\xe \v Table\:array}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TValue}* array}}
\par
{\bkmkstart AAAAAAAESR}
{\bkmkend AAAAAAAESR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 716 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v CommonHeader\:Table}
{\xe \v Table\:CommonHeader}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CommonHeader}}
\par
{\bkmkstart AAAAAAAESS}
{\bkmkend AAAAAAAESS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 712 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v flags\:Table}
{\xe \v Table\:flags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lu_byte} flags}}
\par
{\bkmkstart AAAAAAAEST}
{\bkmkend AAAAAAAEST}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 713 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v gclist\:Table}
{\xe \v Table\:gclist}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GCObject}* gclist}}
\par
{\bkmkstart AAAAAAAESU}
{\bkmkend AAAAAAAESU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 720 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lastfree\:Table}
{\xe \v Table\:lastfree}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Node}* lastfree}}
\par
{\bkmkstart AAAAAAAESV}
{\bkmkend AAAAAAAESV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 718 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lsizenode\:Table}
{\xe \v Table\:lsizenode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lu_byte} lsizenode}}
\par
{\bkmkstart AAAAAAAESW}
{\bkmkend AAAAAAAESW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 714 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v metatable\:Table}
{\xe \v Table\:metatable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b Table}* metatable}}
\par
{\bkmkstart AAAAAAAESX}
{\bkmkend AAAAAAAESX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 719 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v node\:Table}
{\xe \v Table\:node}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Node}* node}}
\par
{\bkmkstart AAAAAAAESY}
{\bkmkend AAAAAAAESY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 717 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'BD\'E1\'B9\'B9\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/gitworkspace/lua/src/{\b lobject.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Token\'BD\'E1\'B9\'B9\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v Token}
{\xe \v Token}
{\bkmkstart AAAAAAAESZ}
{\bkmkend AAAAAAAESZ}
\par
{
{\f2 #include <llex.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b token}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SemInfo} {\b seminfo}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D4\'DA\'CE\'C4\'BC\'FE llex.h \'B5\'DA 50 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v seminfo\:Token}
{\xe \v Token\:seminfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SemInfo} seminfo}}
\par
{\bkmkstart AAAAAAAETA}
{\bkmkend AAAAAAAETA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llex.h \'B5\'DA 52 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v token\:Token}
{\xe \v Token\:token}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int token}}
\par
{\bkmkstart AAAAAAAETB}
{\bkmkend AAAAAAAETB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llex.h \'B5\'DA 51 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'BD\'E1\'B9\'B9\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/gitworkspace/lua/src/{\b llex.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TString\'BD\'E1\'B9\'B9\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v TString}
{\xe \v TString}
{\bkmkstart AAAAAAAETC}
{\bkmkend AAAAAAAETC}
\par
{
{\f2 #include <lobject.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CommonHeader}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b lu_byte} {\b extra}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b lu_byte} {\b shrlen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b hash}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union \{\par

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ size_t {\b lnglen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ struct {\b TString} * {\b hnext}\par
}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\} {\b u}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b contents} [1]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 361 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v CommonHeader\:TString}
{\xe \v TString\:CommonHeader}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CommonHeader}}
\par
{\bkmkstart AAAAAAAETD}
{\bkmkend AAAAAAAETD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 362 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v contents\:TString}
{\xe \v TString\:contents}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char contents[1]}}
\par
{\bkmkstart AAAAAAAETE}
{\bkmkend AAAAAAAETE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 370 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v extra\:TString}
{\xe \v TString\:extra}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lu_byte} extra}}
\par
{\bkmkstart AAAAAAAETF}
{\bkmkend AAAAAAAETF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 363 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v hash\:TString}
{\xe \v TString\:hash}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int hash}}
\par
{\bkmkstart AAAAAAAETG}
{\bkmkend AAAAAAAETG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 365 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v hnext\:TString}
{\xe \v TString\:hnext}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b TString}* hnext}}
\par
{\bkmkstart AAAAAAAETH}
{\bkmkend AAAAAAAETH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 368 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lnglen\:TString}
{\xe \v TString\:lnglen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
size_t lnglen}}
\par
{\bkmkstart AAAAAAAETI}
{\bkmkend AAAAAAAETI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 367 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v shrlen\:TString}
{\xe \v TString\:shrlen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lu_byte} shrlen}}
\par
{\bkmkstart AAAAAAAETJ}
{\bkmkend AAAAAAAETJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 364 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v u\:TString}
{\xe \v TString\:u}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
union \{ ... \}  u}}
\par
{\bkmkstart AAAAAAAETK}
{\bkmkend AAAAAAAETK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'BD\'E1\'B9\'B9\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/gitworkspace/lua/src/{\b lobject.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TValue\'BD\'E1\'B9\'B9\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v TValue}
{\xe \v TValue}
{\bkmkstart AAAAAAAETL}
{\bkmkend AAAAAAAETL}
\par
{
{\f2 #include <lobject.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TValuefields}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 63 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v TValuefields\:TValue}
{\xe \v TValue\:TValuefields}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TValuefields}}
\par
{\bkmkstart AAAAAAAETM}
{\bkmkend AAAAAAAETM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 64 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'BD\'E1\'B9\'B9\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/gitworkspace/lua/src/{\b lobject.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
UBox\'BD\'E1\'B9\'B9\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v UBox}
{\xe \v UBox}
{\bkmkstart AAAAAAAETN}
{\bkmkend AAAAAAAETN}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void * {\b box}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
size_t {\b bsize}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 467 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v box\:UBox}
{\xe \v UBox\:box}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void* box}}
\par
{\bkmkstart AAAAAAAETO}
{\bkmkend AAAAAAAETO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 468 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v bsize\:UBox}
{\xe \v UBox\:bsize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
size_t bsize}}
\par
{\bkmkstart AAAAAAAETP}
{\bkmkend AAAAAAAETP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 469 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'BD\'E1\'B9\'B9\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/gitworkspace/lua/src/{\b lauxlib.c}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Udata\'BD\'E1\'B9\'B9\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v Udata}
{\xe \v Udata}
{\bkmkstart AAAAAAAETQ}
{\bkmkend AAAAAAAETQ}
\par
{
{\f2 #include <lobject.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CommonHeader}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned short {\b nuvalue}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
size_t {\b len}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Table} * {\b metatable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GCObject} * {\b gclist}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b UValue} {\b uv} [1]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 436 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v CommonHeader\:Udata}
{\xe \v Udata\:CommonHeader}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CommonHeader}}
\par
{\bkmkstart AAAAAAAETR}
{\bkmkend AAAAAAAETR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 437 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v gclist\:Udata}
{\xe \v Udata\:gclist}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GCObject}* gclist}}
\par
{\bkmkstart AAAAAAAETS}
{\bkmkend AAAAAAAETS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 441 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v len\:Udata}
{\xe \v Udata\:len}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
size_t len}}
\par
{\bkmkstart AAAAAAAETT}
{\bkmkend AAAAAAAETT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 439 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v metatable\:Udata}
{\xe \v Udata\:metatable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b Table}* metatable}}
\par
{\bkmkstart AAAAAAAETU}
{\bkmkend AAAAAAAETU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 440 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v nuvalue\:Udata}
{\xe \v Udata\:nuvalue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned short nuvalue}}
\par
{\bkmkstart AAAAAAAETV}
{\bkmkend AAAAAAAETV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 438 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v uv\:Udata}
{\xe \v Udata\:uv}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b UValue} uv[1]}}
\par
{\bkmkstart AAAAAAAETW}
{\bkmkend AAAAAAAETW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 442 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'BD\'E1\'B9\'B9\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/gitworkspace/lua/src/{\b lobject.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Udata0\'BD\'E1\'B9\'B9\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v Udata0}
{\xe \v Udata0}
{\bkmkstart AAAAAAAETX}
{\bkmkend AAAAAAAETX}
\par
{
{\f2 #include <lobject.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CommonHeader}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned short {\b nuvalue}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
size_t {\b len}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Table} * {\b metatable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union \{\par

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ {\b LUAI_MAXALIGN}\par
}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\} {\b bindata}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 455 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v bindata\:Udata0}
{\xe \v Udata0\:bindata}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
union \{ ... \}  bindata}}
\par
{\bkmkstart AAAAAAAETY}
{\bkmkend AAAAAAAETY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CommonHeader\:Udata0}
{\xe \v Udata0\:CommonHeader}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CommonHeader}}
\par
{\bkmkstart AAAAAAAETZ}
{\bkmkend AAAAAAAETZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 456 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v len\:Udata0}
{\xe \v Udata0\:len}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
size_t len}}
\par
{\bkmkstart AAAAAAAEUA}
{\bkmkend AAAAAAAEUA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 458 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUAI_MAXALIGN\:Udata0}
{\xe \v Udata0\:LUAI_MAXALIGN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
LUAI_MAXALIGN}}
\par
{\bkmkstart AAAAAAAEUB}
{\bkmkend AAAAAAAEUB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 460 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v metatable\:Udata0}
{\xe \v Udata0\:metatable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b Table}* metatable}}
\par
{\bkmkstart AAAAAAAEUC}
{\bkmkend AAAAAAAEUC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 459 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v nuvalue\:Udata0}
{\xe \v Udata0\:nuvalue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned short nuvalue}}
\par
{\bkmkstart AAAAAAAEUD}
{\bkmkend AAAAAAAEUD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 457 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'BD\'E1\'B9\'B9\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/gitworkspace/lua/src/{\b lobject.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
UpVal\'BD\'E1\'B9\'B9\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v UpVal}
{\xe \v UpVal}
{\bkmkstart AAAAAAAEUE}
{\bkmkend AAAAAAAEUE}
\par
{
{\f2 #include <lobject.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CommonHeader}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b lu_byte} {\b tbc}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TValue} * {\b v}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union \{\par

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ struct \{\par

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ \~ struct {\b UpVal} * {\b next}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ \~ struct {\b UpVal} ** {\b previous}\par
}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ \} {\b open}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ {\b TValue} {\b value}\par
}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\} {\b u}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 603 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v CommonHeader\:UpVal}
{\xe \v UpVal\:CommonHeader}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CommonHeader}}
\par
{\bkmkstart AAAAAAAEUF}
{\bkmkend AAAAAAAEUF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 604 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v next\:UpVal}
{\xe \v UpVal\:next}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b UpVal}* next}}
\par
{\bkmkstart AAAAAAAEUG}
{\bkmkend AAAAAAAEUG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 609 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v open\:UpVal}
{\xe \v UpVal\:open}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct \{ ... \}  open}}
\par
{\bkmkstart AAAAAAAEUH}
{\bkmkend AAAAAAAEUH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v previous\:UpVal}
{\xe \v UpVal\:previous}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b UpVal}** previous}}
\par
{\bkmkstart AAAAAAAEUI}
{\bkmkend AAAAAAAEUI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 610 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v tbc\:UpVal}
{\xe \v UpVal\:tbc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lu_byte} tbc}}
\par
{\bkmkstart AAAAAAAEUJ}
{\bkmkend AAAAAAAEUJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 605 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v u\:UpVal}
{\xe \v UpVal\:u}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
union \{ ... \}  u}}
\par
{\bkmkstart AAAAAAAEUK}
{\bkmkend AAAAAAAEUK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v v\:UpVal}
{\xe \v UpVal\:v}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TValue}* v}}
\par
{\bkmkstart AAAAAAAEUL}
{\bkmkend AAAAAAAEUL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 606 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v value\:UpVal}
{\xe \v UpVal\:value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TValue} value}}
\par
{\bkmkstart AAAAAAAEUM}
{\bkmkend AAAAAAAEUM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 612 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'BD\'E1\'B9\'B9\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/gitworkspace/lua/src/{\b lobject.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Upvaldesc\'BD\'E1\'B9\'B9\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v Upvaldesc}
{\xe \v Upvaldesc}
{\bkmkstart AAAAAAAEUN}
{\bkmkend AAAAAAAEUN}
\par
{
{\f2 #include <lobject.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TString} * {\b name}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b lu_byte} {\b instack}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b lu_byte} {\b idx}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b lu_byte} {\b kind}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 490 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v idx\:Upvaldesc}
{\xe \v Upvaldesc\:idx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lu_byte} idx}}
\par
{\bkmkstart AAAAAAAEUO}
{\bkmkend AAAAAAAEUO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 493 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v instack\:Upvaldesc}
{\xe \v Upvaldesc\:instack}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lu_byte} instack}}
\par
{\bkmkstart AAAAAAAEUP}
{\bkmkend AAAAAAAEUP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 492 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v kind\:Upvaldesc}
{\xe \v Upvaldesc\:kind}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lu_byte} kind}}
\par
{\bkmkstart AAAAAAAEUQ}
{\bkmkend AAAAAAAEUQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 494 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v name\:Upvaldesc}
{\xe \v Upvaldesc\:name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TString}* name}}
\par
{\bkmkstart AAAAAAAEUR}
{\bkmkend AAAAAAAEUR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 491 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'BD\'E1\'B9\'B9\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/gitworkspace/lua/src/{\b lobject.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
UValue\'C1\'AA\'BA\'CF\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v UValue}
{\xe \v UValue}
{\bkmkstart AAAAAAAEUS}
{\bkmkend AAAAAAAEUS}
\par
{
{\f2 #include <lobject.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TValue} {\b uv}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_MAXALIGN}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 426 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v LUAI_MAXALIGN\:UValue}
{\xe \v UValue\:LUAI_MAXALIGN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
LUAI_MAXALIGN}}
\par
{\bkmkstart AAAAAAAEUT}
{\bkmkend AAAAAAAEUT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 428 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v uv\:UValue}
{\xe \v UValue\:uv}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TValue} uv}}
\par
{\bkmkstart AAAAAAAEUU}
{\bkmkend AAAAAAAEUU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 427 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C1\'AA\'BA\'CF\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/gitworkspace/lua/src/{\b lobject.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Value\'C1\'AA\'BA\'CF\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v Value}
{\xe \v Value}
{\bkmkstart AAAAAAAEUV}
{\bkmkend AAAAAAAEUV}
\par
{
{\f2 #include <lobject.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b GCObject} * {\b gc}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void * {\b p}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b lua_CFunction} {\b f}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b lua_Integer} {\b i}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b lua_Number} {\b n}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 47 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v f\:Value}
{\xe \v Value\:f}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lua_CFunction} f}}
\par
{\bkmkstart AAAAAAAEUW}
{\bkmkend AAAAAAAEUW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 50 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v gc\:Value}
{\xe \v Value\:gc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b GCObject}* gc}}
\par
{\bkmkstart AAAAAAAEUX}
{\bkmkend AAAAAAAEUX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 48 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v i\:Value}
{\xe \v Value\:i}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lua_Integer} i}}
\par
{\bkmkstart AAAAAAAEUY}
{\bkmkend AAAAAAAEUY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 51 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v n\:Value}
{\xe \v Value\:n}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lua_Number} n}}
\par
{\bkmkstart AAAAAAAEUZ}
{\bkmkend AAAAAAAEUZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 52 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v p\:Value}
{\xe \v Value\:p}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void* p}}
\par
{\bkmkstart AAAAAAAEVA}
{\bkmkend AAAAAAAEVA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 49 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C1\'AA\'BA\'CF\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/gitworkspace/lua/src/{\b lobject.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Vardesc\'C1\'AA\'BA\'CF\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v Vardesc}
{\xe \v Vardesc}
{\bkmkstart AAAAAAAEVB}
{\bkmkend AAAAAAAEVB}
\par
{
{\f2 #include <lparser.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct \{\par

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ {\b TValuefields}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ {\b lu_byte} {\b kind}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ {\b lu_byte} {\b sidx}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ short {\b pidx}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ {\b TString} * {\b name}\par
}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\} {\b vd}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TValue} {\b k}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D4\'DA\'CE\'C4\'BC\'FE lparser.h \'B5\'DA 95 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v k\:Vardesc}
{\xe \v Vardesc\:k}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TValue} k}}
\par
{\bkmkstart AAAAAAAEVC}
{\bkmkend AAAAAAAEVC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.h \'B5\'DA 103 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v kind\:Vardesc}
{\xe \v Vardesc\:kind}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lu_byte} kind}}
\par
{\bkmkstart AAAAAAAEVD}
{\bkmkend AAAAAAAEVD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.h \'B5\'DA 98 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v name\:Vardesc}
{\xe \v Vardesc\:name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TString}* name}}
\par
{\bkmkstart AAAAAAAEVE}
{\bkmkend AAAAAAAEVE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.h \'B5\'DA 101 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v pidx\:Vardesc}
{\xe \v Vardesc\:pidx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short pidx}}
\par
{\bkmkstart AAAAAAAEVF}
{\bkmkend AAAAAAAEVF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.h \'B5\'DA 100 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v sidx\:Vardesc}
{\xe \v Vardesc\:sidx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lu_byte} sidx}}
\par
{\bkmkstart AAAAAAAEVG}
{\bkmkend AAAAAAAEVG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.h \'B5\'DA 99 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v TValuefields\:Vardesc}
{\xe \v Vardesc\:TValuefields}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TValuefields}}
\par
{\bkmkstart AAAAAAAEVH}
{\bkmkend AAAAAAAEVH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.h \'B5\'DA 97 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v vd\:Vardesc}
{\xe \v Vardesc\:vd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct \{ ... \}  vd}}
\par
{\bkmkstart AAAAAAAEVI}
{\bkmkend AAAAAAAEVI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C1\'AA\'BA\'CF\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/gitworkspace/lua/src/{\b lparser.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Zio\'BD\'E1\'B9\'B9\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v Zio}
{\xe \v Zio}
{\bkmkstart AAAAAAAEVJ}
{\bkmkend AAAAAAAEVJ}
\par
{
{\f2 #include <lzio.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
size_t {\b n}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b p}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b lua_Reader} {\b reader}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void * {\b data}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b lua_State} * {\b L}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
\'D4\'DA\'CE\'C4\'BC\'FE lzio.h \'B5\'DA 55 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v data\:Zio}
{\xe \v Zio\:data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void* data}}
\par
{\bkmkstart AAAAAAAEVK}
{\bkmkend AAAAAAAEVK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lzio.h \'B5\'DA 59 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v L\:Zio}
{\xe \v Zio\:L}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lua_State}* L}}
\par
{\bkmkstart AAAAAAAEVL}
{\bkmkend AAAAAAAEVL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lzio.h \'B5\'DA 60 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v n\:Zio}
{\xe \v Zio\:n}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
size_t n}}
\par
{\bkmkstart AAAAAAAEVM}
{\bkmkend AAAAAAAEVM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lzio.h \'B5\'DA 56 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v p\:Zio}
{\xe \v Zio\:p}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* p}}
\par
{\bkmkstart AAAAAAAEVN}
{\bkmkend AAAAAAAEVN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lzio.h \'B5\'DA 57 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v reader\:Zio}
{\xe \v Zio\:reader}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lua_Reader} reader}}
\par
{\bkmkstart AAAAAAAEVO}
{\bkmkend AAAAAAAEVO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lzio.h \'B5\'DA 58 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'BD\'E1\'B9\'B9\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D:/gitworkspace/lua/src/{\b lzio.h}\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'CE\'C4\'BC\'FE\'CB\'B5\'C3\'F7{\tc \v \'CE\'C4\'BC\'FE\'CB\'B5\'C3\'F7}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/gitworkspace/lua/src/lapi.c \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v D:/gitworkspace/lua/src/lapi.c}
{\xe \v D:/gitworkspace/lua/src/lapi.c}
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "lprefix.h"}\par
{\f2 #include <limits.h>}\par
{\f2 #include <stdarg.h>}\par
{\f2 #include <string.h>}\par
{\f2 #include "lua.h"}\par
{\f2 #include "lapi.h"}\par
{\f2 #include "ldebug.h"}\par
{\f2 #include "ldo.h"}\par
{\f2 #include "lfunc.h"}\par
{\f2 #include "lgc.h"}\par
{\f2 #include "lmem.h"}\par
{\f2 #include "lobject.h"}\par
{\f2 #include "lstate.h"}\par
{\f2 #include "lstring.h"}\par
{\f2 #include "ltable.h"}\par
{\f2 #include "ltm.h"}\par
{\f2 #include "lundump.h"}\par
{\f2 #include "lvm.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b CallS}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lapi_c}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_CORE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b isvalid}(L,  o)\~ (!{\b ttisnil}(o) || o != &{\b G}(L)->nilvalue)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ispseudo}(i)\~ ((i) <= {\b LUA_REGISTRYINDEX})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b isupvalue}(i)\~ ((i) < {\b LUA_REGISTRYINDEX})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b checkresults}(L,  na,  nr)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b TValue} * {\b index2value} ({\b lua_State} *L, int idx)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b StkId} {\b index2stack} ({\b lua_State} *L, int idx)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int {\b lua_checkstack} ({\b lua_State} *L, int n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} void {\b lua_xmove} ({\b lua_State} *from, {\b lua_State} *to, int n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} {\b lua_CFunction} {\b lua_atpanic} ({\b lua_State} *L, {\b lua_CFunction} panicf)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} {\b lua_Number} {\b lua_version} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int {\b lua_absindex} ({\b lua_State} *L, int idx)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int {\b lua_gettop} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} void {\b lua_settop} ({\b lua_State} *L, int idx)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b reverse} ({\b lua_State} *L, {\b StkId} from, {\b StkId} to)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} void {\b lua_rotate} ({\b lua_State} *L, int idx, int n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} void {\b lua_copy} ({\b lua_State} *L, int fromidx, int toidx)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} void {\b lua_pushvalue} ({\b lua_State} *L, int idx)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int {\b lua_type} ({\b lua_State} *L, int idx)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} const char * {\b lua_typename} ({\b lua_State} *L, int t)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int {\b lua_iscfunction} ({\b lua_State} *L, int idx)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int {\b lua_isinteger} ({\b lua_State} *L, int idx)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int {\b lua_isnumber} ({\b lua_State} *L, int idx)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int {\b lua_isstring} ({\b lua_State} *L, int idx)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int {\b lua_isuserdata} ({\b lua_State} *L, int idx)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int {\b lua_rawequal} ({\b lua_State} *L, int index1, int index2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} void {\b lua_arith} ({\b lua_State} *L, int op)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int {\b lua_compare} ({\b lua_State} *L, int index1, int index2, int op)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} size_t {\b lua_stringtonumber} ({\b lua_State} *L, const char *s)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} {\b lua_Number} {\b lua_tonumberx} ({\b lua_State} *L, int idx, int *pisnum)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} {\b lua_Integer} {\b lua_tointegerx} ({\b lua_State} *L, int idx, int *pisnum)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int {\b lua_toboolean} ({\b lua_State} *L, int idx)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} const char * {\b lua_tolstring} ({\b lua_State} *L, int idx, size_t *len)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} {\b lua_Unsigned} {\b lua_rawlen} ({\b lua_State} *L, int idx)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} {\b lua_CFunction} {\b lua_tocfunction} ({\b lua_State} *L, int idx)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void * {\b touserdata} (const {\b TValue} *o)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} void * {\b lua_touserdata} ({\b lua_State} *L, int idx)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} {\b lua_State} * {\b lua_tothread} ({\b lua_State} *L, int idx)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} const void * {\b lua_topointer} ({\b lua_State} *L, int idx)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} void {\b lua_pushnil} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} void {\b lua_pushnumber} ({\b lua_State} *L, {\b lua_Number} n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} void {\b lua_pushinteger} ({\b lua_State} *L, {\b lua_Integer} n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} const char * {\b lua_pushlstring} ({\b lua_State} *L, const char *s, size_t len)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} const char * {\b lua_pushstring} ({\b lua_State} *L, const char *s)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} const char * {\b lua_pushvfstring} ({\b lua_State} *L, const char *fmt, va_list argp)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} const char * {\b lua_pushfstring} ({\b lua_State} *L, const char *fmt,...)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} void {\b lua_pushcclosure} ({\b lua_State} *L, {\b lua_CFunction} fn, int n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} void {\b lua_pushboolean} ({\b lua_State} *L, int b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} void {\b lua_pushlightuserdata} ({\b lua_State} *L, void *p)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int {\b lua_pushthread} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b auxgetstr} ({\b lua_State} *L, const {\b TValue} *t, const char *k)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int {\b lua_getglobal} ({\b lua_State} *L, const char *name)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int {\b lua_gettable} ({\b lua_State} *L, int idx)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int {\b lua_getfield} ({\b lua_State} *L, int idx, const char *k)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int {\b lua_geti} ({\b lua_State} *L, int idx, {\b lua_Integer} n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b finishrawget} ({\b lua_State} *L, const {\b TValue} *val)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b Table} * {\b gettable} ({\b lua_State} *L, int idx)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int {\b lua_rawget} ({\b lua_State} *L, int idx)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int {\b lua_rawgeti} ({\b lua_State} *L, int idx, {\b lua_Integer} n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int {\b lua_rawgetp} ({\b lua_State} *L, int idx, const void *p)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} void {\b lua_createtable} ({\b lua_State} *L, int narray, int nrec)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int {\b lua_getmetatable} ({\b lua_State} *L, int objindex)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int {\b lua_getiuservalue} ({\b lua_State} *L, int idx, int n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b auxsetstr} ({\b lua_State} *L, const {\b TValue} *t, const char *k)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} void {\b lua_setglobal} ({\b lua_State} *L, const char *name)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} void {\b lua_settable} ({\b lua_State} *L, int idx)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} void {\b lua_setfield} ({\b lua_State} *L, int idx, const char *k)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} void {\b lua_seti} ({\b lua_State} *L, int idx, {\b lua_Integer} n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b aux_rawset} ({\b lua_State} *L, int idx, {\b TValue} *key, int n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} void {\b lua_rawset} ({\b lua_State} *L, int idx)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} void {\b lua_rawsetp} ({\b lua_State} *L, int idx, const void *p)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} void {\b lua_rawseti} ({\b lua_State} *L, int idx, {\b lua_Integer} n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int {\b lua_setmetatable} ({\b lua_State} *L, int objindex)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int {\b lua_setiuservalue} ({\b lua_State} *L, int idx, int n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} void {\b lua_callk} ({\b lua_State} *L, int nargs, int nresults, {\b lua_KContext} ctx, {\b lua_KFunction} k)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b f_call} ({\b lua_State} *L, void *ud)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int {\b lua_pcallk} ({\b lua_State} *L, int nargs, int nresults, int errfunc, {\b lua_KContext} ctx, {\b lua_KFunction} k)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int {\b lua_load} ({\b lua_State} *L, {\b lua_Reader} {\b reader}, void *data, const char *chunkname, const char *mode)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int {\b lua_dump} ({\b lua_State} *L, {\b lua_Writer} {\b writer}, void *data, int strip)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int {\b lua_status} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int {\b lua_gc} ({\b lua_State} *L, int what,...)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int {\b lua_error} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int {\b lua_next} ({\b lua_State} *L, int idx)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} void {\b lua_toclose} ({\b lua_State} *L, int idx)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} void {\b lua_concat} ({\b lua_State} *L, int n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} void {\b lua_len} ({\b lua_State} *L, int idx)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} {\b lua_Alloc} {\b lua_getallocf} ({\b lua_State} *L, void **ud)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} void {\b lua_setallocf} ({\b lua_State} *L, {\b lua_Alloc} f, void *ud)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b lua_setwarnf} ({\b lua_State} *L, {\b lua_WarnFunction} f, void *ud)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b lua_warning} ({\b lua_State} *L, const char *msg, int tocont)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} void * {\b lua_newuserdatauv} ({\b lua_State} *L, size_t size, int nuvalue)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const char * {\b aux_upvalue} ({\b TValue} *fi, int n, {\b TValue} **val, {\b GCObject} **owner)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} const char * {\b lua_getupvalue} ({\b lua_State} *L, int funcindex, int n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} const char * {\b lua_setupvalue} ({\b lua_State} *L, int funcindex, int n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b UpVal} ** {\b getupvalref} ({\b lua_State} *L, int fidx, int n, {\b LClosure} **pf)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} void * {\b lua_upvalueid} ({\b lua_State} *L, int fidx, int n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} void {\b lua_upvaluejoin} ({\b lua_State} *L, int fidx1, int n1, int fidx2, int n2)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char {\b lua_ident} []\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v checkresults\:lapi.c}
{\xe \v lapi.c\:checkresults}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define checkresults( L,  na,  nr)}}
\par
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid      api_check(L, (nr) == LUA_MULTRET || (L->ci->top - L->top >= (nr) - (na)), \\\par
    {\cf22 "results from function overflow current stack size"})\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 958 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v ispseudo\:lapi.c}
{\xe \v lapi.c\:ispseudo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ispseudo( i)\~ ((i) <= {\b LUA_REGISTRYINDEX})}}
\par
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 50 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v isupvalue\:lapi.c}
{\xe \v lapi.c\:isupvalue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define isupvalue( i)\~ ((i) < {\b LUA_REGISTRYINDEX})}}
\par
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 53 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v isvalid\:lapi.c}
{\xe \v lapi.c\:isvalid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define isvalid( L,  o)\~ (!{\b ttisnil}(o) || o != &{\b G}(L)->nilvalue)}}
\par
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 46 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lapi_c\:lapi.c}
{\xe \v lapi.c\:lapi_c}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lapi_c}}
\par
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 7 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_CORE\:lapi.c}
{\xe \v lapi.c\:LUA_CORE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_CORE}}
\par
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 8 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v aux_rawset\:lapi.c}
{\xe \v lapi.c\:aux_rawset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void aux_rawset ({\b lua_State} *  {\i L}, int  {\i idx}, {\b TValue} *  {\i key}, int  {\i n}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 854 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v aux_upvalue\:lapi.c}
{\xe \v lapi.c\:aux_upvalue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static const char* aux_upvalue ({\b TValue} *  {\i fi}, int  {\i n}, {\b TValue} **  {\i val}, {\b GCObject} **  {\i owner}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 1312 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v auxgetstr\:lapi.c}
{\xe \v lapi.c\:auxgetstr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int auxgetstr ({\b lua_State} *  {\i L}, const {\b TValue} *  {\i t}, const char *  {\i k}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 609 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v auxsetstr\:lapi.c}
{\xe \v lapi.c\:auxsetstr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void auxsetstr ({\b lua_State} *  {\i L}, const {\b TValue} *  {\i t}, const char *  {\i k}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 788 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v f_call\:lapi.c}
{\xe \v lapi.c\:f_call}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void f_call ({\b lua_State} *  {\i L}, void *  {\i ud}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 995 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v finishrawget\:lapi.c}
{\xe \v lapi.c\:finishrawget}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int finishrawget ({\b lua_State} *  {\i L}, const {\b TValue} *  {\i val}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 673 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v gettable\:lapi.c}
{\xe \v lapi.c\:gettable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b Table}* gettable ({\b lua_State} *  {\i L}, int  {\i idx}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 684 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v getupvalref\:lapi.c}
{\xe \v lapi.c\:getupvalref}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b UpVal}** getupvalref ({\b lua_State} *  {\i L}, int  {\i fidx}, int  {\i n}, {\b LClosure} **  {\i pf}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 1372 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v index2stack\:lapi.c}
{\xe \v lapi.c\:index2stack}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b StkId} index2stack ({\b lua_State} *  {\i L}, int  {\i idx}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 83 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v index2value\:lapi.c}
{\xe \v lapi.c\:index2value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b TValue}* index2value ({\b lua_State} *  {\i L}, int  {\i idx}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 56 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_absindex\:lapi.c}
{\xe \v lapi.c\:lua_absindex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int lua_absindex ({\b lua_State} *  {\i L}, int  {\i idx})}}
\par
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 160 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_arith\:lapi.c}
{\xe \v lapi.c\:lua_arith}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} void lua_arith ({\b lua_State} *  {\i L}, int  {\i op})}}
\par
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 308 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_atpanic\:lapi.c}
{\xe \v lapi.c\:lua_atpanic}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} {\b lua_CFunction} lua_atpanic ({\b lua_State} *  {\i L}, {\b lua_CFunction}  {\i panicf})}}
\par
{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 135 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_callk\:lapi.c}
{\xe \v lapi.c\:lua_callk}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} void lua_callk ({\b lua_State} *  {\i L}, int  {\i nargs}, int  {\i nresults}, {\b lua_KContext}  {\i ctx}, {\b lua_KFunction}  {\i k})}}
\par
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 963 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_checkstack\:lapi.c}
{\xe \v lapi.c\:lua_checkstack}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int lua_checkstack ({\b lua_State} *  {\i L}, int  {\i n})}}
\par
{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 98 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_compare\:lapi.c}
{\xe \v lapi.c\:lua_compare}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int lua_compare ({\b lua_State} *  {\i L}, int  {\i index1}, int  {\i index2}, int  {\i op})}}
\par
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 324 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_concat\:lapi.c}
{\xe \v lapi.c\:lua_concat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} void lua_concat ({\b lua_State} *  {\i L}, int  {\i n})}}
\par
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 1238 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_copy\:lapi.c}
{\xe \v lapi.c\:lua_copy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} void lua_copy ({\b lua_State} *  {\i L}, int  {\i fromidx}, int  {\i toidx})}}
\par
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 228 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_createtable\:lapi.c}
{\xe \v lapi.c\:lua_createtable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} void lua_createtable ({\b lua_State} *  {\i L}, int  {\i narray}, int  {\i nrec})}}
\par
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 721 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_dump\:lapi.c}
{\xe \v lapi.c\:lua_dump}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int lua_dump ({\b lua_State} *  {\i L}, {\b lua_Writer}  {\i writer}, void *  {\i data}, int  {\i strip})}}
\par
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 1070 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_error\:lapi.c}
{\xe \v lapi.c\:lua_error}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int lua_error ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 1196 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_gc\:lapi.c}
{\xe \v lapi.c\:lua_gc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int lua_gc ({\b lua_State} *  {\i L}, int  {\i what},   {\i ...})}}
\par
{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 1093 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_getallocf\:lapi.c}
{\xe \v lapi.c\:lua_getallocf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} {\b lua_Alloc} lua_getallocf ({\b lua_State} *  {\i L}, void **  {\i ud})}}
\par
{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 1264 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_getfield\:lapi.c}
{\xe \v lapi.c\:lua_getfield}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int lua_getfield ({\b lua_State} *  {\i L}, int  {\i idx}, const char *  {\i k})}}
\par
{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 648 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_getglobal\:lapi.c}
{\xe \v lapi.c\:lua_getglobal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int lua_getglobal ({\b lua_State} *  {\i L}, const char *  {\i name})}}
\par
{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 626 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_geti\:lapi.c}
{\xe \v lapi.c\:lua_geti}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int lua_geti ({\b lua_State} *  {\i L}, int  {\i idx}, {\b lua_Integer}  {\i n})}}
\par
{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 654 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_getiuservalue\:lapi.c}
{\xe \v lapi.c\:lua_getiuservalue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int lua_getiuservalue ({\b lua_State} *  {\i L}, int  {\i idx}, int  {\i n})}}
\par
{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 761 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_getmetatable\:lapi.c}
{\xe \v lapi.c\:lua_getmetatable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int lua_getmetatable ({\b lua_State} *  {\i L}, int  {\i objindex})}}
\par
{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 734 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_gettable\:lapi.c}
{\xe \v lapi.c\:lua_gettable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int lua_gettable ({\b lua_State} *  {\i L}, int  {\i idx})}}
\par
{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 633 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_gettop\:lapi.c}
{\xe \v lapi.c\:lua_gettop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int lua_gettop ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 167 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_getupvalue\:lapi.c}
{\xe \v lapi.c\:lua_getupvalue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} const char* lua_getupvalue ({\b lua_State} *  {\i L}, int  {\i funcindex}, int  {\i n})}}
\par
{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 1339 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_iscfunction\:lapi.c}
{\xe \v lapi.c\:lua_iscfunction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int lua_iscfunction ({\b lua_State} *  {\i L}, int  {\i idx})}}
\par
{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 270 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_isinteger\:lapi.c}
{\xe \v lapi.c\:lua_isinteger}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int lua_isinteger ({\b lua_State} *  {\i L}, int  {\i idx})}}
\par
{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 276 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_isnumber\:lapi.c}
{\xe \v lapi.c\:lua_isnumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int lua_isnumber ({\b lua_State} *  {\i L}, int  {\i idx})}}
\par
{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 282 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_isstring\:lapi.c}
{\xe \v lapi.c\:lua_isstring}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int lua_isstring ({\b lua_State} *  {\i L}, int  {\i idx})}}
\par
{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 289 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_isuserdata\:lapi.c}
{\xe \v lapi.c\:lua_isuserdata}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int lua_isuserdata ({\b lua_State} *  {\i L}, int  {\i idx})}}
\par
{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 295 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_len\:lapi.c}
{\xe \v lapi.c\:lua_len}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} void lua_len ({\b lua_State} *  {\i L}, int  {\i idx})}}
\par
{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 1254 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_load\:lapi.c}
{\xe \v lapi.c\:lua_load}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int lua_load ({\b lua_State} *  {\i L}, {\b lua_Reader}  {\i reader}, void *  {\i data}, const char *  {\i chunkname}, const char *  {\i mode})}}
\par
{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 1046 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_newuserdatauv\:lapi.c}
{\xe \v lapi.c\:lua_newuserdatauv}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} void* lua_newuserdatauv ({\b lua_State} *  {\i L}, size_t  {\i size}, int  {\i nuvalue})}}
\par
{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 1298 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_next\:lapi.c}
{\xe \v lapi.c\:lua_next}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int lua_next ({\b lua_State} *  {\i L}, int  {\i idx})}}
\par
{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 1205 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_pcallk\:lapi.c}
{\xe \v lapi.c\:lua_pcallk}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int lua_pcallk ({\b lua_State} *  {\i L}, int  {\i nargs}, int  {\i nresults}, int  {\i errfunc}, {\b lua_KContext}  {\i ctx}, {\b lua_KFunction}  {\i k})}}
\par
{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 1002 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_pushboolean\:lapi.c}
{\xe \v lapi.c\:lua_pushboolean}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} void lua_pushboolean ({\b lua_State} *  {\i L}, int  {\i b})}}
\par
{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 575 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_pushcclosure\:lapi.c}
{\xe \v lapi.c\:lua_pushcclosure}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} void lua_pushcclosure ({\b lua_State} *  {\i L}, {\b lua_CFunction}  {\i fn}, int  {\i n})}}
\par
{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 550 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_pushfstring\:lapi.c}
{\xe \v lapi.c\:lua_pushfstring}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} const char* lua_pushfstring ({\b lua_State} *  {\i L}, const char *  {\i fmt},   {\i ...})}}
\par
{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 537 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_pushinteger\:lapi.c}
{\xe \v lapi.c\:lua_pushinteger}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} void lua_pushinteger ({\b lua_State} *  {\i L}, {\b lua_Integer}  {\i n})}}
\par
{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 484 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_pushlightuserdata\:lapi.c}
{\xe \v lapi.c\:lua_pushlightuserdata}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} void lua_pushlightuserdata ({\b lua_State} *  {\i L}, void *  {\i p})}}
\par
{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 586 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_pushlstring\:lapi.c}
{\xe \v lapi.c\:lua_pushlstring}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} const char* lua_pushlstring ({\b lua_State} *  {\i L}, const char *  {\i s}, size_t  {\i len})}}
\par
{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 497 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_pushnil\:lapi.c}
{\xe \v lapi.c\:lua_pushnil}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} void lua_pushnil ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 468 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_pushnumber\:lapi.c}
{\xe \v lapi.c\:lua_pushnumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} void lua_pushnumber ({\b lua_State} *  {\i L}, {\b lua_Number}  {\i n})}}
\par
{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 476 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_pushstring\:lapi.c}
{\xe \v lapi.c\:lua_pushstring}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} const char* lua_pushstring ({\b lua_State} *  {\i L}, const char *  {\i s})}}
\par
{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 509 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_pushthread\:lapi.c}
{\xe \v lapi.c\:lua_pushthread}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int lua_pushthread ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 594 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_pushvalue\:lapi.c}
{\xe \v lapi.c\:lua_pushvalue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} void lua_pushvalue ({\b lua_State} *  {\i L}, int  {\i idx})}}
\par
{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 243 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_pushvfstring\:lapi.c}
{\xe \v lapi.c\:lua_pushvfstring}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} const char* lua_pushvfstring ({\b lua_State} *  {\i L}, const char *  {\i fmt}, va_list  {\i argp})}}
\par
{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 526 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_rawequal\:lapi.c}
{\xe \v lapi.c\:lua_rawequal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int lua_rawequal ({\b lua_State} *  {\i L}, int  {\i index1}, int  {\i index2})}}
\par
{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 301 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_rawget\:lapi.c}
{\xe \v lapi.c\:lua_rawget}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int lua_rawget ({\b lua_State} *  {\i L}, int  {\i idx})}}
\par
{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 691 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_rawgeti\:lapi.c}
{\xe \v lapi.c\:lua_rawgeti}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int lua_rawgeti ({\b lua_State} *  {\i L}, int  {\i idx}, {\b lua_Integer}  {\i n})}}
\par
{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 703 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_rawgetp\:lapi.c}
{\xe \v lapi.c\:lua_rawgetp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int lua_rawgetp ({\b lua_State} *  {\i L}, int  {\i idx}, const void *  {\i p})}}
\par
{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 711 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_rawlen\:lapi.c}
{\xe \v lapi.c\:lua_rawlen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} {\b lua_Unsigned} lua_rawlen ({\b lua_State} *  {\i L}, int  {\i idx})}}
\par
{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 397 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_rawset\:lapi.c}
{\xe \v lapi.c\:lua_rawset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} void lua_rawset ({\b lua_State} *  {\i L}, int  {\i idx})}}
\par
{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 869 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_rawseti\:lapi.c}
{\xe \v lapi.c\:lua_rawseti}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} void lua_rawseti ({\b lua_State} *  {\i L}, int  {\i idx}, {\b lua_Integer}  {\i n})}}
\par
{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 881 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_rawsetp\:lapi.c}
{\xe \v lapi.c\:lua_rawsetp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} void lua_rawsetp ({\b lua_State} *  {\i L}, int  {\i idx}, const void *  {\i p})}}
\par
{\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 874 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_rotate\:lapi.c}
{\xe \v lapi.c\:lua_rotate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} void lua_rotate ({\b lua_State} *  {\i L}, int  {\i idx}, int  {\i n})}}
\par
{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 214 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_setallocf\:lapi.c}
{\xe \v lapi.c\:lua_setallocf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} void lua_setallocf ({\b lua_State} *  {\i L}, {\b lua_Alloc}  {\i f}, void *  {\i ud})}}
\par
{\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 1274 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_setfield\:lapi.c}
{\xe \v lapi.c\:lua_setfield}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} void lua_setfield ({\b lua_State} *  {\i L}, int  {\i idx}, const char *  {\i k})}}
\par
{\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 829 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_setglobal\:lapi.c}
{\xe \v lapi.c\:lua_setglobal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} void lua_setglobal ({\b lua_State} *  {\i L}, const char *  {\i name})}}
\par
{\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 806 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_seti\:lapi.c}
{\xe \v lapi.c\:lua_seti}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} void lua_seti ({\b lua_State} *  {\i L}, int  {\i idx}, {\b lua_Integer}  {\i n})}}
\par
{\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 835 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_setiuservalue\:lapi.c}
{\xe \v lapi.c\:lua_setiuservalue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int lua_setiuservalue ({\b lua_State} *  {\i L}, int  {\i idx}, int  {\i n})}}
\par
{\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 933 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_setmetatable\:lapi.c}
{\xe \v lapi.c\:lua_setmetatable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int lua_setmetatable ({\b lua_State} *  {\i L}, int  {\i objindex})}}
\par
{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 893 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_settable\:lapi.c}
{\xe \v lapi.c\:lua_settable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} void lua_settable ({\b lua_State} *  {\i L}, int  {\i idx})}}
\par
{\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 813 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_settop\:lapi.c}
{\xe \v lapi.c\:lua_settop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} void lua_settop ({\b lua_State} *  {\i L}, int  {\i idx})}}
\par
{\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 172 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_setupvalue\:lapi.c}
{\xe \v lapi.c\:lua_setupvalue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} const char* lua_setupvalue ({\b lua_State} *  {\i L}, int  {\i funcindex}, int  {\i n})}}
\par
{\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 1353 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_setwarnf\:lapi.c}
{\xe \v lapi.c\:lua_setwarnf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void lua_setwarnf ({\b lua_State} *  {\i L}, {\b lua_WarnFunction}  {\i f}, void *  {\i ud})}}
\par
{\bkmkstart AAAAAAAADA}
{\bkmkend AAAAAAAADA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 1282 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_status\:lapi.c}
{\xe \v lapi.c\:lua_status}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int lua_status ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAAADB}
{\bkmkend AAAAAAAADB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 1085 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_stringtonumber\:lapi.c}
{\xe \v lapi.c\:lua_stringtonumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} size_t lua_stringtonumber ({\b lua_State} *  {\i L}, const char *  {\i s})}}
\par
{\bkmkstart AAAAAAAADC}
{\bkmkend AAAAAAAADC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 344 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_toboolean\:lapi.c}
{\xe \v lapi.c\:lua_toboolean}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int lua_toboolean ({\b lua_State} *  {\i L}, int  {\i idx})}}
\par
{\bkmkstart AAAAAAAADD}
{\bkmkend AAAAAAAADD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 372 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_tocfunction\:lapi.c}
{\xe \v lapi.c\:lua_tocfunction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} {\b lua_CFunction} lua_tocfunction ({\b lua_State} *  {\i L}, int  {\i idx})}}
\par
{\bkmkstart AAAAAAAADE}
{\bkmkend AAAAAAAADE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 409 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_toclose\:lapi.c}
{\xe \v lapi.c\:lua_toclose}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} void lua_toclose ({\b lua_State} *  {\i L}, int  {\i idx})}}
\par
{\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 1222 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_tointegerx\:lapi.c}
{\xe \v lapi.c\:lua_tointegerx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} {\b lua_Integer} lua_tointegerx ({\b lua_State} *  {\i L}, int  {\i idx}, int *  {\i pisnum})}}
\par
{\bkmkstart AAAAAAAADG}
{\bkmkend AAAAAAAADG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 362 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_tolstring\:lapi.c}
{\xe \v lapi.c\:lua_tolstring}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} const char* lua_tolstring ({\b lua_State} *  {\i L}, int  {\i idx}, size_t *  {\i len})}}
\par
{\bkmkstart AAAAAAAADH}
{\bkmkend AAAAAAAADH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 378 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_tonumberx\:lapi.c}
{\xe \v lapi.c\:lua_tonumberx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} {\b lua_Number} lua_tonumberx ({\b lua_State} *  {\i L}, int  {\i idx}, int *  {\i pisnum})}}
\par
{\bkmkstart AAAAAAAADI}
{\bkmkend AAAAAAAADI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 352 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_topointer\:lapi.c}
{\xe \v lapi.c\:lua_topointer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} const void* lua_topointer ({\b lua_State} *  {\i L}, int  {\i idx})}}
\par
{\bkmkstart AAAAAAAADJ}
{\bkmkend AAAAAAAADJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 446 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_tothread\:lapi.c}
{\xe \v lapi.c\:lua_tothread}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} {\b lua_State}* lua_tothread ({\b lua_State} *  {\i L}, int  {\i idx})}}
\par
{\bkmkstart AAAAAAAADK}
{\bkmkend AAAAAAAADK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 433 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_touserdata\:lapi.c}
{\xe \v lapi.c\:lua_touserdata}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} void* lua_touserdata ({\b lua_State} *  {\i L}, int  {\i idx})}}
\par
{\bkmkstart AAAAAAAADL}
{\bkmkend AAAAAAAADL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 427 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_type\:lapi.c}
{\xe \v lapi.c\:lua_type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int lua_type ({\b lua_State} *  {\i L}, int  {\i idx})}}
\par
{\bkmkstart AAAAAAAADM}
{\bkmkend AAAAAAAADM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 257 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_typename\:lapi.c}
{\xe \v lapi.c\:lua_typename}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} const char* lua_typename ({\b lua_State} *  {\i L}, int  {\i t})}}
\par
{\bkmkstart AAAAAAAADN}
{\bkmkend AAAAAAAADN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 263 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_upvalueid\:lapi.c}
{\xe \v lapi.c\:lua_upvalueid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} void* lua_upvalueid ({\b lua_State} *  {\i L}, int  {\i fidx}, int  {\i n})}}
\par
{\bkmkstart AAAAAAAADO}
{\bkmkend AAAAAAAADO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 1383 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_upvaluejoin\:lapi.c}
{\xe \v lapi.c\:lua_upvaluejoin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} void lua_upvaluejoin ({\b lua_State} *  {\i L}, int  {\i fidx1}, int  {\i n1}, int  {\i fidx2}, int  {\i n2})}}
\par
{\bkmkstart AAAAAAAADP}
{\bkmkend AAAAAAAADP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 1402 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_version\:lapi.c}
{\xe \v lapi.c\:lua_version}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} {\b lua_Number} lua_version ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAAADQ}
{\bkmkend AAAAAAAADQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 145 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_warning\:lapi.c}
{\xe \v lapi.c\:lua_warning}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void lua_warning ({\b lua_State} *  {\i L}, const char *  {\i msg}, int  {\i tocont})}}
\par
{\bkmkstart AAAAAAAADR}
{\bkmkend AAAAAAAADR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 1290 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_xmove\:lapi.c}
{\xe \v lapi.c\:lua_xmove}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} void lua_xmove ({\b lua_State} *  {\i from}, {\b lua_State} *  {\i to}, int  {\i n})}}
\par
{\bkmkstart AAAAAAAADS}
{\bkmkend AAAAAAAADS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 119 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v reverse\:lapi.c}
{\xe \v lapi.c\:reverse}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void reverse ({\b lua_State} *  {\i L}, {\b StkId}  {\i from}, {\b StkId}  {\i to}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAADT}
{\bkmkend AAAAAAAADT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 200 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v touserdata\:lapi.c}
{\xe \v lapi.c\:touserdata}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void* touserdata (const {\b TValue} *  {\i o}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAADU}
{\bkmkend AAAAAAAADU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 418 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v lua_ident\:lapi.c}
{\xe \v lapi.c\:lua_ident}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char lua_ident[]}}
\par
{\bkmkstart AAAAAAAADV}
{\bkmkend AAAAAAAADV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'B3\'F5\'CA\'BC\'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid =\par
  {\cf22 "$LuaVersion: "} LUA_COPYRIGHT {\cf22 " $"}\par
  {\cf22 "$LuaAuthors: "} LUA_AUTHORS {\cf22 " $"}\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 35 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/gitworkspace/lua/src/lapi.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v D:/gitworkspace/lua/src/lapi.h}
{\xe \v D:/gitworkspace/lua/src/lapi.h}
{\bkmkstart AAAAAAAADW}
{\bkmkend AAAAAAAADW}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "llimits.h"}\par
{\f2 #include "lstate.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b api_incr_top}(L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b adjustresults}(L,  nres)\~     \{ if ((nres) <= {\b LUA_MULTRET} && L->ci->top < L->top) L->ci->top = L->top; \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b api_checknelems}(L,  n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b hastocloseCfunc}(n)\~ ((n) < {\b LUA_MULTRET})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b codeNresults}(n)\~ (-(n) - 3)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v adjustresults\:lapi.h}
{\xe \v lapi.h\:adjustresults}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define adjustresults( L,  nres)\~     \{ if ((nres) <= {\b LUA_MULTRET} && L->ci->top < L->top) L->ci->top = L->top; \}}}
\par
{\bkmkstart AAAAAAAADX}
{\bkmkend AAAAAAAADX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.h \'B5\'DA 25 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v api_checknelems\:lapi.h}
{\xe \v lapi.h\:api_checknelems}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define api_checknelems( L,  n)}}
\par
{\bkmkstart AAAAAAAADY}
{\bkmkend AAAAAAAADY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                   api_check(L, (n) < (L->top - L->ci->func), \\\par
                  {\cf22 "not enough elements in the stack"})\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.h \'B5\'DA 30 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v api_incr_top\:lapi.h}
{\xe \v lapi.h\:api_incr_top}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define api_incr_top( L)}}
\par
{\bkmkstart AAAAAAAADZ}
{\bkmkend AAAAAAAADZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                 \{L->top++; api_check(L, L->top <= L->ci->top, \\\par
                {\cf22 "stack overflow"});\}\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.h \'B5\'DA 16 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v codeNresults\:lapi.h}
{\xe \v lapi.h\:codeNresults}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define codeNresults( n)\~ (-(n) - 3)}}
\par
{\bkmkstart AAAAAAAAEA}
{\bkmkend AAAAAAAAEA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.h \'B5\'DA 45 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v hastocloseCfunc\:lapi.h}
{\xe \v lapi.h\:hastocloseCfunc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define hastocloseCfunc( n)\~ ((n) < {\b LUA_MULTRET})}}
\par
{\bkmkstart AAAAAAAAEB}
{\bkmkend AAAAAAAAEB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.h \'B5\'DA 43 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/gitworkspace/lua/src/lauxlib.c \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v D:/gitworkspace/lua/src/lauxlib.c}
{\xe \v D:/gitworkspace/lua/src/lauxlib.c}
{\bkmkstart AAAAAAAAEC}
{\bkmkend AAAAAAAAEC}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "lprefix.h"}\par
{\f2 #include <errno.h>}\par
{\f2 #include <stdarg.h>}\par
{\f2 #include <stdio.h>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <string.h>}\par
{\f2 #include "lua.h"}\par
{\f2 #include "lauxlib.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b UBox}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LoadF}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LoadS}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lauxlib_c}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_LIB}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAX_SIZET}\~ ((size_t)(~(size_t)0))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LEVELS1}\~ 10	/* size of the first part of the stack */\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LEVELS2}\~ 11	/* size of the second part of the stack */\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b l_inspectstat}(stat,  what)\~ /* no op */\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b buffonstack}(B)\~ ((B)->b != (B)->init.b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b freelist}\~ 0\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'D0\'CD\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b UBox} {\b UBox}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b LoadF} {\b LoadF}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b LoadS} {\b LoadS}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b findfield} ({\b lua_State} *L, int objidx, int level)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b pushglobalfuncname} ({\b lua_State} *L, {\b lua_Debug} *ar)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b pushfuncname} ({\b lua_State} *L, {\b lua_Debug} *ar)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b lastlevel} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} void {\b luaL_traceback} ({\b lua_State} *L, {\b lua_State} *L1, const char *msg, int level)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} int {\b luaL_argerror} ({\b lua_State} *L, int arg, const char *extramsg)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b luaL_typeerror} ({\b lua_State} *L, int arg, const char *tname)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b tag_error} ({\b lua_State} *L, int arg, int tag)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} void {\b luaL_where} ({\b lua_State} *L, int level)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} int {\b luaL_error} ({\b lua_State} *L, const char *fmt,...)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} int {\b luaL_fileresult} ({\b lua_State} *L, int stat, const char *fname)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} int {\b luaL_execresult} ({\b lua_State} *L, int stat)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} int {\b luaL_newmetatable} ({\b lua_State} *L, const char *tname)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} void {\b luaL_setmetatable} ({\b lua_State} *L, const char *tname)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} void * {\b luaL_testudata} ({\b lua_State} *L, int ud, const char *tname)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} void * {\b luaL_checkudata} ({\b lua_State} *L, int ud, const char *tname)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} int {\b luaL_checkoption} ({\b lua_State} *L, int arg, const char *def, const char *const lst[])\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} void {\b luaL_checkstack} ({\b lua_State} *L, int space, const char *msg)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} void {\b luaL_checktype} ({\b lua_State} *L, int arg, int t)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} void {\b luaL_checkany} ({\b lua_State} *L, int arg)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} const char * {\b luaL_checklstring} ({\b lua_State} *L, int arg, size_t *len)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} const char * {\b luaL_optlstring} ({\b lua_State} *L, int arg, const char *def, size_t *len)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} {\b lua_Number} {\b luaL_checknumber} ({\b lua_State} *L, int arg)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} {\b lua_Number} {\b luaL_optnumber} ({\b lua_State} *L, int arg, {\b lua_Number} def)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b interror} ({\b lua_State} *L, int arg)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} {\b lua_Integer} {\b luaL_checkinteger} ({\b lua_State} *L, int arg)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} {\b lua_Integer} {\b luaL_optinteger} ({\b lua_State} *L, int arg, {\b lua_Integer} def)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void * {\b resizebox} ({\b lua_State} *L, int idx, size_t newsize)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b boxgc} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b newbox} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static size_t {\b newbuffsize} ({\b luaL_Buffer} *B, size_t sz)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static char * {\b prepbuffsize} ({\b luaL_Buffer} *B, size_t sz, int boxidx)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} char * {\b luaL_prepbuffsize} ({\b luaL_Buffer} *B, size_t sz)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} void {\b luaL_addlstring} ({\b luaL_Buffer} *B, const char *s, size_t l)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} void {\b luaL_addstring} ({\b luaL_Buffer} *B, const char *s)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} void {\b luaL_pushresult} ({\b luaL_Buffer} *B)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} void {\b luaL_pushresultsize} ({\b luaL_Buffer} *B, size_t sz)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} void {\b luaL_addvalue} ({\b luaL_Buffer} *B)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} void {\b luaL_buffinit} ({\b lua_State} *L, {\b luaL_Buffer} *B)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} char * {\b luaL_buffinitsize} ({\b lua_State} *L, {\b luaL_Buffer} *B, size_t sz)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} int {\b luaL_ref} ({\b lua_State} *L, int t)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} void {\b luaL_unref} ({\b lua_State} *L, int t, int ref)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const char * {\b getF} ({\b lua_State} *L, void *ud, size_t *size)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b errfile} ({\b lua_State} *L, const char *what, int fnameindex)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b skipBOM} ({\b LoadF} *lf)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b skipcomment} ({\b LoadF} *lf, int *cp)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} int {\b luaL_loadfilex} ({\b lua_State} *L, const char *filename, const char *mode)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const char * {\b getS} ({\b lua_State} *L, void *ud, size_t *size)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} int {\b luaL_loadbufferx} ({\b lua_State} *L, const char *buff, size_t size, const char *name, const char *mode)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} int {\b luaL_loadstring} ({\b lua_State} *L, const char *s)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} int {\b luaL_getmetafield} ({\b lua_State} *L, int obj, const char *event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} int {\b luaL_callmeta} ({\b lua_State} *L, int obj, const char *event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} {\b lua_Integer} {\b luaL_len} ({\b lua_State} *L, int idx)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} const char * {\b luaL_tolstring} ({\b lua_State} *L, int idx, size_t *len)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} void {\b luaL_setfuncs} ({\b lua_State} *L, const {\b luaL_Reg} *l, int nup)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} int {\b luaL_getsubtable} ({\b lua_State} *L, int idx, const char *fname)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} void {\b luaL_requiref} ({\b lua_State} *L, const char *modname, {\b lua_CFunction} openf, int glb)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} void {\b luaL_addgsub} ({\b luaL_Buffer} *b, const char *s, const char *p, const char *r)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} const char * {\b luaL_gsub} ({\b lua_State} *L, const char *s, const char *p, const char *r)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void * {\b l_alloc} (void *ud, void *ptr, size_t osize, size_t nsize)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b panic} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b warnf} (void *ud, const char *message, int tocont)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} {\b lua_State} * {\b luaL_newstate} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} void {\b luaL_checkversion_} ({\b lua_State} *L, {\b lua_Number} ver, size_t sz)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const {\b luaL_Reg} {\b boxmt} []\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v buffonstack\:lauxlib.c}
{\xe \v lauxlib.c\:buffonstack}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define buffonstack( B)\~ ((B)->b != (B)->init.b)}}
\par
{\bkmkstart AAAAAAAAED}
{\bkmkend AAAAAAAAED}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 513 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v freelist\:lauxlib.c}
{\xe \v lauxlib.c\:freelist}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define freelist\~ 0}}
\par
{\bkmkstart AAAAAAAAEE}
{\bkmkend AAAAAAAAEE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 641 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v l_inspectstat\:lauxlib.c}
{\xe \v lauxlib.c\:l_inspectstat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define l_inspectstat( stat,  what)\~ /* no op */}}
\par
{\bkmkstart AAAAAAAAEF}
{\bkmkend AAAAAAAAEF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 278 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lauxlib_c\:lauxlib.c}
{\xe \v lauxlib.c\:lauxlib_c}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lauxlib_c}}
\par
{\bkmkstart AAAAAAAAEG}
{\bkmkend AAAAAAAAEG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 7 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LEVELS1\:lauxlib.c}
{\xe \v lauxlib.c\:LEVELS1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LEVELS1\~ 10	/* size of the first part of the stack */}}
\par
{\bkmkstart AAAAAAAAEH}
{\bkmkend AAAAAAAAEH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 43 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LEVELS2\:lauxlib.c}
{\xe \v lauxlib.c\:LEVELS2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LEVELS2\~ 11	/* size of the second part of the stack */}}
\par
{\bkmkstart AAAAAAAAEI}
{\bkmkend AAAAAAAAEI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 44 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_LIB\:lauxlib.c}
{\xe \v lauxlib.c\:LUA_LIB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_LIB}}
\par
{\bkmkstart AAAAAAAAEJ}
{\bkmkend AAAAAAAAEJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 8 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v MAX_SIZET\:lauxlib.c}
{\xe \v lauxlib.c\:MAX_SIZET}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAX_SIZET\~ ((size_t)(~(size_t)0))}}
\par
{\bkmkstart AAAAAAAAEK}
{\bkmkend AAAAAAAAEK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 32 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'D0\'CD\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v LoadF\:lauxlib.c}
{\xe \v lauxlib.c\:LoadF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b LoadF} {\b LoadF}}}
\par
{\bkmkstart AAAAAAAAEL}
{\bkmkend AAAAAAAAEL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v LoadS\:lauxlib.c}
{\xe \v lauxlib.c\:LoadS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b LoadS} {\b LoadS}}}
\par
{\bkmkstart AAAAAAAAEM}
{\bkmkend AAAAAAAAEM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v UBox\:lauxlib.c}
{\xe \v lauxlib.c\:UBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b UBox} {\b UBox}}}
\par
{\bkmkstart AAAAAAAAEN}
{\bkmkend AAAAAAAAEN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v boxgc\:lauxlib.c}
{\xe \v lauxlib.c\:boxgc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int boxgc ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAEO}
{\bkmkend AAAAAAAAEO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 486 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v errfile\:lauxlib.c}
{\xe \v lauxlib.c\:errfile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int errfile ({\b lua_State} *  {\i L}, const char *  {\i what}, int  {\i fnameindex}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAEP}
{\bkmkend AAAAAAAAEP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 709 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v findfield\:lauxlib.c}
{\xe \v lauxlib.c\:findfield}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int findfield ({\b lua_State} *  {\i L}, int  {\i objidx}, int  {\i level}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAEQ}
{\bkmkend AAAAAAAAEQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 52 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v getF\:lauxlib.c}
{\xe \v lauxlib.c\:getF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static const char* getF ({\b lua_State} *  {\i L}, void *  {\i ud}, size_t *  {\i size}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAER}
{\bkmkend AAAAAAAAER}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 691 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v getS\:lauxlib.c}
{\xe \v lauxlib.c\:getS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static const char* getS ({\b lua_State} *  {\i L}, void *  {\i ud}, size_t *  {\i size}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAES}
{\bkmkend AAAAAAAAES}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 794 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v interror\:lauxlib.c}
{\xe \v lauxlib.c\:interror}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void interror ({\b lua_State} *  {\i L}, int  {\i arg}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAET}
{\bkmkend AAAAAAAAET}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 434 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v l_alloc\:lauxlib.c}
{\xe \v lauxlib.c\:l_alloc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void* l_alloc (void *  {\i ud}, void *  {\i ptr}, size_t  {\i osize}, size_t  {\i nsize}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAEU}
{\bkmkend AAAAAAAAEU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 986 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lastlevel\:lauxlib.c}
{\xe \v lauxlib.c\:lastlevel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int lastlevel ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAEV}
{\bkmkend AAAAAAAAEV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 116 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_addgsub\:lauxlib.c}
{\xe \v lauxlib.c\:luaL_addgsub}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} void luaL_addgsub ({\b luaL_Buffer} *  {\i b}, const char *  {\i s}, const char *  {\i p}, const char *  {\i r})}}
\par
{\bkmkstart AAAAAAAAEW}
{\bkmkend AAAAAAAAEW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 963 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_addlstring\:lauxlib.c}
{\xe \v lauxlib.c\:luaL_addlstring}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} void luaL_addlstring ({\b luaL_Buffer} *  {\i B}, const char *  {\i s}, size_t  {\i l})}}
\par
{\bkmkstart AAAAAAAAEX}
{\bkmkend AAAAAAAAEX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 568 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_addstring\:lauxlib.c}
{\xe \v lauxlib.c\:luaL_addstring}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} void luaL_addstring ({\b luaL_Buffer} *  {\i B}, const char *  {\i s})}}
\par
{\bkmkstart AAAAAAAAEY}
{\bkmkend AAAAAAAAEY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 577 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_addvalue\:lauxlib.c}
{\xe \v lauxlib.c\:luaL_addvalue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} void luaL_addvalue ({\b luaL_Buffer} *  {\i B})}}
\par
{\bkmkstart AAAAAAAAEZ}
{\bkmkend AAAAAAAAEZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 607 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_argerror\:lauxlib.c}
{\xe \v lauxlib.c\:luaL_argerror}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} int luaL_argerror ({\b lua_State} *  {\i L}, int  {\i arg}, const char *  {\i extramsg})}}
\par
{\bkmkstart AAAAAAAAFA}
{\bkmkend AAAAAAAAFA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 175 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_buffinit\:lauxlib.c}
{\xe \v lauxlib.c\:luaL_buffinit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} void luaL_buffinit ({\b lua_State} *  {\i L}, {\b luaL_Buffer} *  {\i B})}}
\par
{\bkmkstart AAAAAAAAFB}
{\bkmkend AAAAAAAAFB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 618 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_buffinitsize\:lauxlib.c}
{\xe \v lauxlib.c\:luaL_buffinitsize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} char* luaL_buffinitsize ({\b lua_State} *  {\i L}, {\b luaL_Buffer} *  {\i B}, size_t  {\i sz})}}
\par
{\bkmkstart AAAAAAAAFC}
{\bkmkend AAAAAAAAFC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 626 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_callmeta\:lauxlib.c}
{\xe \v lauxlib.c\:luaL_callmeta}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} int luaL_callmeta ({\b lua_State} *  {\i L}, int  {\i obj}, const char *  {\i event})}}
\par
{\bkmkstart AAAAAAAAFD}
{\bkmkend AAAAAAAAFD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 837 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_checkany\:lauxlib.c}
{\xe \v lauxlib.c\:luaL_checkany}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} void luaL_checkany ({\b lua_State} *  {\i L}, int  {\i arg})}}
\par
{\bkmkstart AAAAAAAAFE}
{\bkmkend AAAAAAAAFE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 396 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_checkinteger\:lauxlib.c}
{\xe \v lauxlib.c\:luaL_checkinteger}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} {\b lua_Integer} luaL_checkinteger ({\b lua_State} *  {\i L}, int  {\i arg})}}
\par
{\bkmkstart AAAAAAAAFF}
{\bkmkend AAAAAAAAFF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 442 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_checklstring\:lauxlib.c}
{\xe \v lauxlib.c\:luaL_checklstring}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} const char* luaL_checklstring ({\b lua_State} *  {\i L}, int  {\i arg}, size_t *  {\i len})}}
\par
{\bkmkstart AAAAAAAAFG}
{\bkmkend AAAAAAAAFG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 402 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_checknumber\:lauxlib.c}
{\xe \v lauxlib.c\:luaL_checknumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} {\b lua_Number} luaL_checknumber ({\b lua_State} *  {\i L}, int  {\i arg})}}
\par
{\bkmkstart AAAAAAAAFH}
{\bkmkend AAAAAAAAFH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 420 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_checkoption\:lauxlib.c}
{\xe \v lauxlib.c\:luaL_checkoption}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} int luaL_checkoption ({\b lua_State} *  {\i L}, int  {\i arg}, const char *  {\i def}, const char *const  {\i lst}[])}}
\par
{\bkmkstart AAAAAAAAFI}
{\bkmkend AAAAAAAAFI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 360 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_checkstack\:lauxlib.c}
{\xe \v lauxlib.c\:luaL_checkstack}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} void luaL_checkstack ({\b lua_State} *  {\i L}, int  {\i space}, const char *  {\i msg})}}
\par
{\bkmkstart AAAAAAAAFJ}
{\bkmkend AAAAAAAAFJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 380 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_checktype\:lauxlib.c}
{\xe \v lauxlib.c\:luaL_checktype}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} void luaL_checktype ({\b lua_State} *  {\i L}, int  {\i arg}, int  {\i t})}}
\par
{\bkmkstart AAAAAAAAFK}
{\bkmkend AAAAAAAAFK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 390 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_checkudata\:lauxlib.c}
{\xe \v lauxlib.c\:luaL_checkudata}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} void* luaL_checkudata ({\b lua_State} *  {\i L}, int  {\i ud}, const char *  {\i tname})}}
\par
{\bkmkstart AAAAAAAAFL}
{\bkmkend AAAAAAAAFL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 345 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_checkversion_\:lauxlib.c}
{\xe \v lauxlib.c\:luaL_checkversion_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} void luaL_checkversion_ ({\b lua_State} *  {\i L}, {\b lua_Number}  {\i ver}, size_t  {\i sz})}}
\par
{\bkmkstart AAAAAAAAFM}
{\bkmkend AAAAAAAAFM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 1049 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_error\:lauxlib.c}
{\xe \v lauxlib.c\:luaL_error}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} int luaL_error ({\b lua_State} *  {\i L}, const char *  {\i fmt},   {\i ...})}}
\par
{\bkmkstart AAAAAAAAFN}
{\bkmkend AAAAAAAAFN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 234 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_execresult\:lauxlib.c}
{\xe \v lauxlib.c\:luaL_execresult}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} int luaL_execresult ({\b lua_State} *  {\i L}, int  {\i stat})}}
\par
{\bkmkstart AAAAAAAAFO}
{\bkmkend AAAAAAAAFO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 285 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_fileresult\:lauxlib.c}
{\xe \v lauxlib.c\:luaL_fileresult}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} int luaL_fileresult ({\b lua_State} *  {\i L}, int  {\i stat}, const char *  {\i fname})}}
\par
{\bkmkstart AAAAAAAAFP}
{\bkmkend AAAAAAAAFP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 245 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_getmetafield\:lauxlib.c}
{\xe \v lauxlib.c\:luaL_getmetafield}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} int luaL_getmetafield ({\b lua_State} *  {\i L}, int  {\i obj}, const char *  {\i event})}}
\par
{\bkmkstart AAAAAAAAFQ}
{\bkmkend AAAAAAAAFQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 821 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_getsubtable\:lauxlib.c}
{\xe \v lauxlib.c\:luaL_getsubtable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} int luaL_getsubtable ({\b lua_State} *  {\i L}, int  {\i idx}, const char *  {\i fname})}}
\par
{\bkmkstart AAAAAAAAFR}
{\bkmkend AAAAAAAAFR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 923 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_gsub\:lauxlib.c}
{\xe \v lauxlib.c\:luaL_gsub}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} const char* luaL_gsub ({\b lua_State} *  {\i L}, const char *  {\i s}, const char *  {\i p}, const char *  {\i r})}}
\par
{\bkmkstart AAAAAAAAFS}
{\bkmkend AAAAAAAAFS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 976 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_len\:lauxlib.c}
{\xe \v lauxlib.c\:luaL_len}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} {\b lua_Integer} luaL_len ({\b lua_State} *  {\i L}, int  {\i idx})}}
\par
{\bkmkstart AAAAAAAAFT}
{\bkmkend AAAAAAAAFT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 847 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_loadbufferx\:lauxlib.c}
{\xe \v lauxlib.c\:luaL_loadbufferx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} int luaL_loadbufferx ({\b lua_State} *  {\i L}, const char *  {\i buff}, size_t  {\i size}, const char *  {\i name}, const char *  {\i mode})}}
\par
{\bkmkstart AAAAAAAAFU}
{\bkmkend AAAAAAAAFU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 804 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_loadfilex\:lauxlib.c}
{\xe \v lauxlib.c\:luaL_loadfilex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} int luaL_loadfilex ({\b lua_State} *  {\i L}, const char *  {\i filename}, const char *  {\i mode})}}
\par
{\bkmkstart AAAAAAAAFV}
{\bkmkend AAAAAAAAFV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 752 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_loadstring\:lauxlib.c}
{\xe \v lauxlib.c\:luaL_loadstring}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} int luaL_loadstring ({\b lua_State} *  {\i L}, const char *  {\i s})}}
\par
{\bkmkstart AAAAAAAAFW}
{\bkmkend AAAAAAAAFW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 813 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_newmetatable\:lauxlib.c}
{\xe \v lauxlib.c\:luaL_newmetatable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} int luaL_newmetatable ({\b lua_State} *  {\i L}, const char *  {\i tname})}}
\par
{\bkmkstart AAAAAAAAFX}
{\bkmkend AAAAAAAAFX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 311 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_newstate\:lauxlib.c}
{\xe \v lauxlib.c\:luaL_newstate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} {\b lua_State}* luaL_newstate (void )}}
\par
{\bkmkstart AAAAAAAAFY}
{\bkmkend AAAAAAAAFY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 1035 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_optinteger\:lauxlib.c}
{\xe \v lauxlib.c\:luaL_optinteger}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} {\b lua_Integer} luaL_optinteger ({\b lua_State} *  {\i L}, int  {\i arg}, {\b lua_Integer}  {\i def})}}
\par
{\bkmkstart AAAAAAAAFZ}
{\bkmkend AAAAAAAAFZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 452 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_optlstring\:lauxlib.c}
{\xe \v lauxlib.c\:luaL_optlstring}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} const char* luaL_optlstring ({\b lua_State} *  {\i L}, int  {\i arg}, const char *  {\i def}, size_t *  {\i len})}}
\par
{\bkmkstart AAAAAAAAGA}
{\bkmkend AAAAAAAAGA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 409 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_optnumber\:lauxlib.c}
{\xe \v lauxlib.c\:luaL_optnumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} {\b lua_Number} luaL_optnumber ({\b lua_State} *  {\i L}, int  {\i arg}, {\b lua_Number}  {\i def})}}
\par
{\bkmkstart AAAAAAAAGB}
{\bkmkend AAAAAAAAGB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 429 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_prepbuffsize\:lauxlib.c}
{\xe \v lauxlib.c\:luaL_prepbuffsize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} char* luaL_prepbuffsize ({\b luaL_Buffer} *  {\i B}, size_t  {\i sz})}}
\par
{\bkmkstart AAAAAAAAGC}
{\bkmkend AAAAAAAAGC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 563 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_pushresult\:lauxlib.c}
{\xe \v lauxlib.c\:luaL_pushresult}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} void luaL_pushresult ({\b luaL_Buffer} *  {\i B})}}
\par
{\bkmkstart AAAAAAAAGD}
{\bkmkend AAAAAAAAGD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 582 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_pushresultsize\:lauxlib.c}
{\xe \v lauxlib.c\:luaL_pushresultsize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} void luaL_pushresultsize ({\b luaL_Buffer} *  {\i B}, size_t  {\i sz})}}
\par
{\bkmkstart AAAAAAAAGE}
{\bkmkend AAAAAAAAGE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 592 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_ref\:lauxlib.c}
{\xe \v lauxlib.c\:luaL_ref}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} int luaL_ref ({\b lua_State} *  {\i L}, int  {\i t})}}
\par
{\bkmkstart AAAAAAAAGF}
{\bkmkend AAAAAAAAGF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 644 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_requiref\:lauxlib.c}
{\xe \v lauxlib.c\:luaL_requiref}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} void luaL_requiref ({\b lua_State} *  {\i L}, const char *  {\i modname}, {\b lua_CFunction}  {\i openf}, int  {\i glb})}}
\par
{\bkmkstart AAAAAAAAGG}
{\bkmkend AAAAAAAAGG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 943 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_setfuncs\:lauxlib.c}
{\xe \v lauxlib.c\:luaL_setfuncs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} void luaL_setfuncs ({\b lua_State} *  {\i L}, const {\b luaL_Reg} *  {\i l}, int  {\i nup})}}
\par
{\bkmkstart AAAAAAAAGH}
{\bkmkend AAAAAAAAGH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 902 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_setmetatable\:lauxlib.c}
{\xe \v lauxlib.c\:luaL_setmetatable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} void luaL_setmetatable ({\b lua_State} *  {\i L}, const char *  {\i tname})}}
\par
{\bkmkstart AAAAAAAAGI}
{\bkmkend AAAAAAAAGI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 324 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_testudata\:lauxlib.c}
{\xe \v lauxlib.c\:luaL_testudata}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} void* luaL_testudata ({\b lua_State} *  {\i L}, int  {\i ud}, const char *  {\i tname})}}
\par
{\bkmkstart AAAAAAAAGJ}
{\bkmkend AAAAAAAAGJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 330 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_tolstring\:lauxlib.c}
{\xe \v lauxlib.c\:luaL_tolstring}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} const char* luaL_tolstring ({\b lua_State} *  {\i L}, int  {\i idx}, size_t *  {\i len})}}
\par
{\bkmkstart AAAAAAAAGK}
{\bkmkend AAAAAAAAGK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 859 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_traceback\:lauxlib.c}
{\xe \v lauxlib.c\:luaL_traceback}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} void luaL_traceback ({\b lua_State} *  {\i L}, {\b lua_State} *  {\i L1}, const char *  {\i msg}, int  {\i level})}}
\par
{\bkmkstart AAAAAAAAGL}
{\bkmkend AAAAAAAAGL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 131 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_typeerror\:lauxlib.c}
{\xe \v lauxlib.c\:luaL_typeerror}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int luaL_typeerror ({\b lua_State} *  {\i L}, int  {\i arg}, const char *  {\i tname})}}
\par
{\bkmkstart AAAAAAAAGM}
{\bkmkend AAAAAAAAGM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 193 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_unref\:lauxlib.c}
{\xe \v lauxlib.c\:luaL_unref}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} void luaL_unref ({\b lua_State} *  {\i L}, int  {\i t}, int  {\i ref})}}
\par
{\bkmkstart AAAAAAAAGN}
{\bkmkend AAAAAAAAGN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 665 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_where\:lauxlib.c}
{\xe \v lauxlib.c\:luaL_where}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} void luaL_where ({\b lua_State} *  {\i L}, int  {\i level})}}
\par
{\bkmkstart AAAAAAAAGO}
{\bkmkend AAAAAAAAGO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 216 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v newbox\:lauxlib.c}
{\xe \v lauxlib.c\:newbox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void newbox ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAGP}
{\bkmkend AAAAAAAAGP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 499 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v newbuffsize\:lauxlib.c}
{\xe \v lauxlib.c\:newbuffsize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static size_t newbuffsize ({\b luaL_Buffer} *  {\i B}, size_t  {\i sz}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAGQ}
{\bkmkend AAAAAAAAGQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 520 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v panic\:lauxlib.c}
{\xe \v lauxlib.c\:panic}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int panic ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAGR}
{\bkmkend AAAAAAAAGR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 997 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v prepbuffsize\:lauxlib.c}
{\xe \v lauxlib.c\:prepbuffsize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static char* prepbuffsize ({\b luaL_Buffer} *  {\i B}, size_t  {\i sz}, int  {\i boxidx}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAGS}
{\bkmkend AAAAAAAAGS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 535 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v pushfuncname\:lauxlib.c}
{\xe \v lauxlib.c\:pushfuncname}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void pushfuncname ({\b lua_State} *  {\i L}, {\b lua_Debug} *  {\i ar}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAGT}
{\bkmkend AAAAAAAAGT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 100 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v pushglobalfuncname\:lauxlib.c}
{\xe \v lauxlib.c\:pushglobalfuncname}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int pushglobalfuncname ({\b lua_State} *  {\i L}, {\b lua_Debug} *  {\i ar}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAGU}
{\bkmkend AAAAAAAAGU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 79 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v resizebox\:lauxlib.c}
{\xe \v lauxlib.c\:resizebox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void* resizebox ({\b lua_State} *  {\i L}, int  {\i idx}, size_t  {\i newsize}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAGV}
{\bkmkend AAAAAAAAGV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 473 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v skipBOM\:lauxlib.c}
{\xe \v lauxlib.c\:skipBOM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int skipBOM ({\b LoadF} *  {\i lf}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAGW}
{\bkmkend AAAAAAAAGW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 718 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v skipcomment\:lauxlib.c}
{\xe \v lauxlib.c\:skipcomment}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int skipcomment ({\b LoadF} *  {\i lf}, int *  {\i cp}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAGX}
{\bkmkend AAAAAAAAGX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 739 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v tag_error\:lauxlib.c}
{\xe \v lauxlib.c\:tag_error}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void tag_error ({\b lua_State} *  {\i L}, int  {\i arg}, int  {\i tag}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAGY}
{\bkmkend AAAAAAAAGY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 207 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v warnf\:lauxlib.c}
{\xe \v lauxlib.c\:warnf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void warnf (void *  {\i ud}, const char *  {\i message}, int  {\i tocont}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAGZ}
{\bkmkend AAAAAAAAGZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 1012 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v boxmt\:lauxlib.c}
{\xe \v lauxlib.c\:boxmt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b luaL_Reg} boxmt[]{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAHA}
{\bkmkend AAAAAAAAHA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'B3\'F5\'CA\'BC\'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{  \par
  \{{\cf22 "__gc"}, boxgc\},\par
  \{{\cf22 "__close"}, boxgc\},\par
  \{NULL, NULL\}\par
\}\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 492 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/gitworkspace/lua/src/lauxlib.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v D:/gitworkspace/lua/src/lauxlib.h}
{\xe \v D:/gitworkspace/lua/src/lauxlib.h}
{\bkmkstart AAAAAAAAHB}
{\bkmkend AAAAAAAAHB}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stddef.h>}\par
{\f2 #include <stdio.h>}\par
{\f2 #include "lua.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b luaL_Reg}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b luaL_Buffer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b luaL_Stream}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_GNAME}\~ "_G"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_ERRFILE}\~ ({\b LUA_ERRERR}+1)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_LOADED_TABLE}\~ "_LOADED"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_PRELOAD_TABLE}\~ "_PRELOAD"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUAL_NUMSIZES}\~ (sizeof({\b lua_Integer})*16 + sizeof({\b lua_Number}))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luaL_checkversion}(L)\~ 	  {\b luaL_checkversion_}(L, {\b LUA_VERSION_NUM}, {\b LUAL_NUMSIZES})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_NOREF}\~ (-2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_REFNIL}\~ (-1)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luaL_loadfile}(L,  f)\~ {\b luaL_loadfilex}(L,f,NULL)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luaL_newlibtable}(L,  l)\~   {\b lua_createtable}(L, 0, sizeof(l)/sizeof((l)[0]) - 1)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luaL_newlib}(L,  l)\~   ({\b luaL_checkversion}(L), {\b luaL_newlibtable}(L,l), {\b luaL_setfuncs}(L,l,0))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luaL_argcheck}(L,  {\b cond},  arg,  extramsg)\~ 		((void)(({\b cond}) || {\b luaL_argerror}(L, (arg), (extramsg))))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luaL_argexpected}(L,  {\b cond},  arg,  tname)\~ 		((void)(({\b cond}) || {\b luaL_typeerror}(L, (arg), (tname))))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luaL_checkstring}(L,  n)\~ ({\b luaL_checklstring}(L, (n), NULL))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luaL_optstring}(L,  n,  d)\~ ({\b luaL_optlstring}(L, (n), (d), NULL))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luaL_typename}(L,  i)\~ {\b lua_typename}(L, {\b lua_type}(L,(i)))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luaL_dofile}(L,  fn)\~ 	({\b luaL_loadfile}(L, fn) || {\b lua_pcall}(L, 0, {\b LUA_MULTRET}, 0))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luaL_dostring}(L,  s)\~ 	({\b luaL_loadstring}(L, s) || {\b lua_pcall}(L, 0, {\b LUA_MULTRET}, 0))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luaL_getmetatable}(L,  n)\~ ({\b lua_getfield}(L, {\b LUA_REGISTRYINDEX}, (n)))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luaL_opt}(L,  f,  n,  d)\~ ({\b lua_isnoneornil}(L,(n)) ? (d) : f(L,(n)))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luaL_loadbuffer}(L,  s,  sz,  n)\~ {\b luaL_loadbufferx}(L,s,sz,n,NULL)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luaL_pushfail}(L)\~ {\b lua_pushnil}(L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luaL_bufflen}(bf)\~ ((bf)->n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luaL_buffaddr}(bf)\~ ((bf)->b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luaL_addchar}(B,  c)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luaL_addsize}(B,  s)\~ ((B)->n += (s))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luaL_buffsub}(B,  s)\~ ((B)->n -= (s))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luaL_prepbuffer}(B)\~ {\b luaL_prepbuffsize}(B, {\b LUAL_BUFFERSIZE})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_FILEHANDLE}\~ "FILE*"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lua_writestring}(s,  l)\~ fwrite((s), sizeof(char), (l), stdout)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lua_writeline}()\~ ({\b lua_writestring}("\\n", 1), fflush(stdout))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lua_writestringerror}(s,  p)\~         (fprintf(stderr, (s), (p)), fflush(stderr))\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'D0\'CD\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b luaL_Buffer} {\b luaL_Buffer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b luaL_Reg} {\b luaL_Reg}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b luaL_Stream} {\b luaL_Stream}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} void() {\b luaL_checkversion_} ({\b lua_State} *L, {\b lua_Number} ver, size_t sz)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} int() {\b luaL_getmetafield} ({\b lua_State} *L, int obj, const char *e)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} int() {\b luaL_callmeta} ({\b lua_State} *L, int obj, const char *e)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} const char *() {\b luaL_tolstring} ({\b lua_State} *L, int idx, size_t *len)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} int() {\b luaL_argerror} ({\b lua_State} *L, int arg, const char *extramsg)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} int() {\b luaL_typeerror} ({\b lua_State} *L, int arg, const char *tname)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} const char *() {\b luaL_checklstring} ({\b lua_State} *L, int arg, size_t *l)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} const char *() {\b luaL_optlstring} ({\b lua_State} *L, int arg, const char *def, size_t *l)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} {\b lua_Number}() {\b luaL_checknumber} ({\b lua_State} *L, int arg)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} {\b lua_Number}() {\b luaL_optnumber} ({\b lua_State} *L, int arg, {\b lua_Number} def)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} {\b lua_Integer}() {\b luaL_checkinteger} ({\b lua_State} *L, int arg)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} {\b lua_Integer}() {\b luaL_optinteger} ({\b lua_State} *L, int arg, {\b lua_Integer} def)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} void() {\b luaL_checkstack} ({\b lua_State} *L, int sz, const char *msg)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} void() {\b luaL_checktype} ({\b lua_State} *L, int arg, int t)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} void() {\b luaL_checkany} ({\b lua_State} *L, int arg)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} int() {\b luaL_newmetatable} ({\b lua_State} *L, const char *tname)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} void() {\b luaL_setmetatable} ({\b lua_State} *L, const char *tname)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} void *() {\b luaL_testudata} ({\b lua_State} *L, int ud, const char *tname)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} void *() {\b luaL_checkudata} ({\b lua_State} *L, int ud, const char *tname)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} void() {\b luaL_where} ({\b lua_State} *L, int lvl)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} int() {\b luaL_error} ({\b lua_State} *L, const char *fmt,...)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} int() {\b luaL_checkoption} ({\b lua_State} *L, int arg, const char *def, const char *const lst[])\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} int() {\b luaL_fileresult} ({\b lua_State} *L, int stat, const char *fname)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} int() {\b luaL_execresult} ({\b lua_State} *L, int stat)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} int() {\b luaL_ref} ({\b lua_State} *L, int t)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} void() {\b luaL_unref} ({\b lua_State} *L, int t, int ref)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} int() {\b luaL_loadfilex} ({\b lua_State} *L, const char *filename, const char *mode)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} int() {\b luaL_loadbufferx} ({\b lua_State} *L, const char *buff, size_t sz, const char *name, const char *mode)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} int() {\b luaL_loadstring} ({\b lua_State} *L, const char *s)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} {\b lua_State} *() {\b luaL_newstate} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} {\b lua_Integer}() {\b luaL_len} ({\b lua_State} *L, int idx)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} void {\b luaL_addgsub} ({\b luaL_Buffer} *b, const char *s, const char *p, const char *r)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} const char *() {\b luaL_gsub} ({\b lua_State} *L, const char *s, const char *p, const char *r)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} void() {\b luaL_setfuncs} ({\b lua_State} *L, const {\b luaL_Reg} *l, int nup)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} int() {\b luaL_getsubtable} ({\b lua_State} *L, int idx, const char *fname)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} void() {\b luaL_traceback} ({\b lua_State} *L, {\b lua_State} *L1, const char *msg, int level)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} void() {\b luaL_requiref} ({\b lua_State} *L, const char *modname, {\b lua_CFunction} openf, int glb)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} void() {\b luaL_buffinit} ({\b lua_State} *L, {\b luaL_Buffer} *B)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} char *() {\b luaL_prepbuffsize} ({\b luaL_Buffer} *B, size_t sz)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} void() {\b luaL_addlstring} ({\b luaL_Buffer} *B, const char *s, size_t l)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} void() {\b luaL_addstring} ({\b luaL_Buffer} *B, const char *s)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} void() {\b luaL_addvalue} ({\b luaL_Buffer} *B)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} void() {\b luaL_pushresult} ({\b luaL_Buffer} *B)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} void() {\b luaL_pushresultsize} ({\b luaL_Buffer} *B, size_t sz)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} char *() {\b luaL_buffinitsize} ({\b lua_State} *L, {\b luaL_Buffer} *B, size_t sz)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v LUA_ERRFILE\:lauxlib.h}
{\xe \v lauxlib.h\:LUA_ERRFILE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_ERRFILE\~ ({\b LUA_ERRERR}+1)}}
\par
{\bkmkstart AAAAAAAAHC}
{\bkmkend AAAAAAAAHC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.h \'B5\'DA 26 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_FILEHANDLE\:lauxlib.h}
{\xe \v lauxlib.h\:LUA_FILEHANDLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_FILEHANDLE\~ "FILE*"}}
\par
{\bkmkstart AAAAAAAAHD}
{\bkmkend AAAAAAAAHD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.h \'B5\'DA 217 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_GNAME\:lauxlib.h}
{\xe \v lauxlib.h\:LUA_GNAME}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_GNAME\~ "_G"}}
\par
{\bkmkstart AAAAAAAAHE}
{\bkmkend AAAAAAAAHE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.h \'B5\'DA 19 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_LOADED_TABLE\:lauxlib.h}
{\xe \v lauxlib.h\:LUA_LOADED_TABLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_LOADED_TABLE\~ "_LOADED"}}
\par
{\bkmkstart AAAAAAAAHF}
{\bkmkend AAAAAAAAHF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.h \'B5\'DA 30 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_NOREF\:lauxlib.h}
{\xe \v lauxlib.h\:LUA_NOREF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_NOREF\~ (-2)}}
\par
{\bkmkstart AAAAAAAAHG}
{\bkmkend AAAAAAAAHG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.h \'B5\'DA 85 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_PRELOAD_TABLE\:lauxlib.h}
{\xe \v lauxlib.h\:LUA_PRELOAD_TABLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_PRELOAD_TABLE\~ "_PRELOAD"}}
\par
{\bkmkstart AAAAAAAAHH}
{\bkmkend AAAAAAAAHH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.h \'B5\'DA 34 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_REFNIL\:lauxlib.h}
{\xe \v lauxlib.h\:LUA_REFNIL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_REFNIL\~ (-1)}}
\par
{\bkmkstart AAAAAAAAHI}
{\bkmkend AAAAAAAAHI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.h \'B5\'DA 86 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_writeline\:lauxlib.h}
{\xe \v lauxlib.h\:lua_writeline}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lua_writeline()\~ ({\b lua_writestring}("\\n", 1), fflush(stdout))}}
\par
{\bkmkstart AAAAAAAAHJ}
{\bkmkend AAAAAAAAHJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.h \'B5\'DA 240 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_writestring\:lauxlib.h}
{\xe \v lauxlib.h\:lua_writestring}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lua_writestring( s,  l)\~ fwrite((s), sizeof(char), (l), stdout)}}
\par
{\bkmkstart AAAAAAAAHK}
{\bkmkend AAAAAAAAHK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.h \'B5\'DA 235 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_writestringerror\:lauxlib.h}
{\xe \v lauxlib.h\:lua_writestringerror}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lua_writestringerror( s,  p)\~         (fprintf(stderr, (s), (p)), fflush(stderr))}}
\par
{\bkmkstart AAAAAAAAHL}
{\bkmkend AAAAAAAAHL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.h \'B5\'DA 245 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_addchar\:lauxlib.h}
{\xe \v lauxlib.h\:luaL_addchar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luaL_addchar( B,  c)}}
\par
{\bkmkstart AAAAAAAAHM}
{\bkmkend AAAAAAAAHM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   ((void)((B)->n < (B)->size || luaL_prepbuffsize((B), 1)), \\\par
   ((B)->b[(B)->n++] = (c)))\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.h \'B5\'DA 182 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_addsize\:lauxlib.h}
{\xe \v lauxlib.h\:luaL_addsize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luaL_addsize( B,  s)\~ ((B)->n += (s))}}
\par
{\bkmkstart AAAAAAAAHN}
{\bkmkend AAAAAAAAHN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.h \'B5\'DA 186 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_argcheck\:lauxlib.h}
{\xe \v lauxlib.h\:luaL_argcheck}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luaL_argcheck( L,  {\b cond},  arg,  extramsg)\~ 		((void)(({\b cond}) || {\b luaL_argerror}(L, (arg), (extramsg))))}}
\par
{\bkmkstart AAAAAAAAHO}
{\bkmkend AAAAAAAAHO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.h \'B5\'DA 132 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_argexpected\:lauxlib.h}
{\xe \v lauxlib.h\:luaL_argexpected}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luaL_argexpected( L,  {\b cond},  arg,  tname)\~ 		((void)(({\b cond}) || {\b luaL_typeerror}(L, (arg), (tname))))}}
\par
{\bkmkstart AAAAAAAAHP}
{\bkmkend AAAAAAAAHP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.h \'B5\'DA 135 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_buffaddr\:lauxlib.h}
{\xe \v lauxlib.h\:luaL_buffaddr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luaL_buffaddr( bf)\~ ((bf)->b)}}
\par
{\bkmkstart AAAAAAAAHQ}
{\bkmkend AAAAAAAAHQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.h \'B5\'DA 179 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_bufflen\:lauxlib.h}
{\xe \v lauxlib.h\:luaL_bufflen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luaL_bufflen( bf)\~ ((bf)->n)}}
\par
{\bkmkstart AAAAAAAAHR}
{\bkmkend AAAAAAAAHR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.h \'B5\'DA 178 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_buffsub\:lauxlib.h}
{\xe \v lauxlib.h\:luaL_buffsub}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luaL_buffsub( B,  s)\~ ((B)->n -= (s))}}
\par
{\bkmkstart AAAAAAAAHS}
{\bkmkend AAAAAAAAHS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.h \'B5\'DA 188 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_checkstring\:lauxlib.h}
{\xe \v lauxlib.h\:luaL_checkstring}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luaL_checkstring( L,  n)\~ ({\b luaL_checklstring}(L, (n), NULL))}}
\par
{\bkmkstart AAAAAAAAHT}
{\bkmkend AAAAAAAAHT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.h \'B5\'DA 138 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_checkversion\:lauxlib.h}
{\xe \v lauxlib.h\:luaL_checkversion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luaL_checkversion( L)\~ 	  {\b luaL_checkversion_}(L, {\b LUA_VERSION_NUM}, {\b LUAL_NUMSIZES})}}
\par
{\bkmkstart AAAAAAAAHU}
{\bkmkend AAAAAAAAHU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.h \'B5\'DA 46 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_dofile\:lauxlib.h}
{\xe \v lauxlib.h\:luaL_dofile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luaL_dofile( L,  fn)\~ 	({\b luaL_loadfile}(L, fn) || {\b lua_pcall}(L, 0, {\b LUA_MULTRET}, 0))}}
\par
{\bkmkstart AAAAAAAAHV}
{\bkmkend AAAAAAAAHV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.h \'B5\'DA 143 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_dostring\:lauxlib.h}
{\xe \v lauxlib.h\:luaL_dostring}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luaL_dostring( L,  s)\~ 	({\b luaL_loadstring}(L, s) || {\b lua_pcall}(L, 0, {\b LUA_MULTRET}, 0))}}
\par
{\bkmkstart AAAAAAAAHW}
{\bkmkend AAAAAAAAHW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.h \'B5\'DA 146 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_getmetatable\:lauxlib.h}
{\xe \v lauxlib.h\:luaL_getmetatable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luaL_getmetatable( L,  n)\~ ({\b lua_getfield}(L, {\b LUA_REGISTRYINDEX}, (n)))}}
\par
{\bkmkstart AAAAAAAAHX}
{\bkmkend AAAAAAAAHX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.h \'B5\'DA 149 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_loadbuffer\:lauxlib.h}
{\xe \v lauxlib.h\:luaL_loadbuffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luaL_loadbuffer( L,  s,  sz,  n)\~ {\b luaL_loadbufferx}(L,s,sz,n,NULL)}}
\par
{\bkmkstart AAAAAAAAHY}
{\bkmkend AAAAAAAAHY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.h \'B5\'DA 153 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_loadfile\:lauxlib.h}
{\xe \v lauxlib.h\:luaL_loadfile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luaL_loadfile( L,  f)\~ {\b luaL_loadfilex}(L,f,NULL)}}
\par
{\bkmkstart AAAAAAAAHZ}
{\bkmkend AAAAAAAAHZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.h \'B5\'DA 94 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_newlib\:lauxlib.h}
{\xe \v lauxlib.h\:luaL_newlib}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luaL_newlib( L,  l)\~   ({\b luaL_checkversion}(L), {\b luaL_newlibtable}(L,l), {\b luaL_setfuncs}(L,l,0))}}
\par
{\bkmkstart AAAAAAAAIA}
{\bkmkend AAAAAAAAIA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.h \'B5\'DA 129 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_newlibtable\:lauxlib.h}
{\xe \v lauxlib.h\:luaL_newlibtable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luaL_newlibtable( L,  l)\~   {\b lua_createtable}(L, 0, sizeof(l)/sizeof((l)[0]) - 1)}}
\par
{\bkmkstart AAAAAAAAIB}
{\bkmkend AAAAAAAAIB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.h \'B5\'DA 126 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUAL_NUMSIZES\:lauxlib.h}
{\xe \v lauxlib.h\:LUAL_NUMSIZES}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUAL_NUMSIZES\~ (sizeof({\b lua_Integer})*16 + sizeof({\b lua_Number}))}}
\par
{\bkmkstart AAAAAAAAIC}
{\bkmkend AAAAAAAAIC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.h \'B5\'DA 43 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_opt\:lauxlib.h}
{\xe \v lauxlib.h\:luaL_opt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luaL_opt( L,  f,  n,  d)\~ ({\b lua_isnoneornil}(L,(n)) ? (d) : f(L,(n)))}}
\par
{\bkmkstart AAAAAAAAID}
{\bkmkend AAAAAAAAID}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.h \'B5\'DA 151 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_optstring\:lauxlib.h}
{\xe \v lauxlib.h\:luaL_optstring}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luaL_optstring( L,  n,  d)\~ ({\b luaL_optlstring}(L, (n), (d), NULL))}}
\par
{\bkmkstart AAAAAAAAIE}
{\bkmkend AAAAAAAAIE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.h \'B5\'DA 139 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_prepbuffer\:lauxlib.h}
{\xe \v lauxlib.h\:luaL_prepbuffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luaL_prepbuffer( B)\~ {\b luaL_prepbuffsize}(B, {\b LUAL_BUFFERSIZE})}}
\par
{\bkmkstart AAAAAAAAIF}
{\bkmkend AAAAAAAAIF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.h \'B5\'DA 199 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_pushfail\:lauxlib.h}
{\xe \v lauxlib.h\:luaL_pushfail}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luaL_pushfail( L)\~ {\b lua_pushnil}(L)}}
\par
{\bkmkstart AAAAAAAAIG}
{\bkmkend AAAAAAAAIG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.h \'B5\'DA 157 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_typename\:lauxlib.h}
{\xe \v lauxlib.h\:luaL_typename}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luaL_typename( L,  i)\~ {\b lua_typename}(L, {\b lua_type}(L,(i)))}}
\par
{\bkmkstart AAAAAAAAIH}
{\bkmkend AAAAAAAAIH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.h \'B5\'DA 141 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'D0\'CD\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v luaL_Buffer\:lauxlib.h}
{\xe \v lauxlib.h\:luaL_Buffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b luaL_Buffer} {\b luaL_Buffer}}}
\par
{\bkmkstart AAAAAAAAII}
{\bkmkend AAAAAAAAII}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.h \'B5\'DA 1 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_Reg\:lauxlib.h}
{\xe \v lauxlib.h\:luaL_Reg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b luaL_Reg} {\b luaL_Reg}}}
\par
{\bkmkstart AAAAAAAAIJ}
{\bkmkend AAAAAAAAIJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v luaL_Stream\:lauxlib.h}
{\xe \v lauxlib.h\:luaL_Stream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b luaL_Stream} {\b luaL_Stream}}}
\par
{\bkmkstart AAAAAAAAIK}
{\bkmkend AAAAAAAAIK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v luaL_addgsub\:lauxlib.h}
{\xe \v lauxlib.h\:luaL_addgsub}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} void luaL_addgsub ({\b luaL_Buffer} *  {\i b}, const char *  {\i s}, const char *  {\i p}, const char *  {\i r})}}
\par
{\bkmkstart AAAAAAAAIL}
{\bkmkend AAAAAAAAIL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 963 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_addlstring\:lauxlib.h}
{\xe \v lauxlib.h\:luaL_addlstring}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} void() luaL_addlstring ({\b luaL_Buffer} *  {\i B}, const char *  {\i s}, size_t  {\i l})}}
\par
{\bkmkstart AAAAAAAAIM}
{\bkmkend AAAAAAAAIM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 568 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_addstring\:lauxlib.h}
{\xe \v lauxlib.h\:luaL_addstring}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} void() luaL_addstring ({\b luaL_Buffer} *  {\i B}, const char *  {\i s})}}
\par
{\bkmkstart AAAAAAAAIN}
{\bkmkend AAAAAAAAIN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 577 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_addvalue\:lauxlib.h}
{\xe \v lauxlib.h\:luaL_addvalue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} void() luaL_addvalue ({\b luaL_Buffer} *  {\i B})}}
\par
{\bkmkstart AAAAAAAAIO}
{\bkmkend AAAAAAAAIO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 607 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_argerror\:lauxlib.h}
{\xe \v lauxlib.h\:luaL_argerror}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} int() luaL_argerror ({\b lua_State} *  {\i L}, int  {\i arg}, const char *  {\i extramsg})}}
\par
{\bkmkstart AAAAAAAAIP}
{\bkmkend AAAAAAAAIP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 175 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_buffinit\:lauxlib.h}
{\xe \v lauxlib.h\:luaL_buffinit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} void() luaL_buffinit ({\b lua_State} *  {\i L}, {\b luaL_Buffer} *  {\i B})}}
\par
{\bkmkstart AAAAAAAAIQ}
{\bkmkend AAAAAAAAIQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 618 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_buffinitsize\:lauxlib.h}
{\xe \v lauxlib.h\:luaL_buffinitsize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} char*() luaL_buffinitsize ({\b lua_State} *  {\i L}, {\b luaL_Buffer} *  {\i B}, size_t  {\i sz})}}
\par
{\bkmkstart AAAAAAAAIR}
{\bkmkend AAAAAAAAIR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 626 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_callmeta\:lauxlib.h}
{\xe \v lauxlib.h\:luaL_callmeta}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} int() luaL_callmeta ({\b lua_State} *  {\i L}, int  {\i obj}, const char *  {\i e})}}
\par
{\bkmkstart AAAAAAAAIS}
{\bkmkend AAAAAAAAIS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 837 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_checkany\:lauxlib.h}
{\xe \v lauxlib.h\:luaL_checkany}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} void() luaL_checkany ({\b lua_State} *  {\i L}, int  {\i arg})}}
\par
{\bkmkstart AAAAAAAAIT}
{\bkmkend AAAAAAAAIT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 396 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_checkinteger\:lauxlib.h}
{\xe \v lauxlib.h\:luaL_checkinteger}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} {\b lua_Integer}() luaL_checkinteger ({\b lua_State} *  {\i L}, int  {\i arg})}}
\par
{\bkmkstart AAAAAAAAIU}
{\bkmkend AAAAAAAAIU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 442 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_checklstring\:lauxlib.h}
{\xe \v lauxlib.h\:luaL_checklstring}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} const char*() luaL_checklstring ({\b lua_State} *  {\i L}, int  {\i arg}, size_t *  {\i l})}}
\par
{\bkmkstart AAAAAAAAIV}
{\bkmkend AAAAAAAAIV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 402 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_checknumber\:lauxlib.h}
{\xe \v lauxlib.h\:luaL_checknumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} {\b lua_Number}() luaL_checknumber ({\b lua_State} *  {\i L}, int  {\i arg})}}
\par
{\bkmkstart AAAAAAAAIW}
{\bkmkend AAAAAAAAIW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 420 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_checkoption\:lauxlib.h}
{\xe \v lauxlib.h\:luaL_checkoption}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} int() luaL_checkoption ({\b lua_State} *  {\i L}, int  {\i arg}, const char *  {\i def}, const char *const  {\i lst}[])}}
\par
{\bkmkstart AAAAAAAAIX}
{\bkmkend AAAAAAAAIX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 360 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_checkstack\:lauxlib.h}
{\xe \v lauxlib.h\:luaL_checkstack}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} void() luaL_checkstack ({\b lua_State} *  {\i L}, int  {\i sz}, const char *  {\i msg})}}
\par
{\bkmkstart AAAAAAAAIY}
{\bkmkend AAAAAAAAIY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 380 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_checktype\:lauxlib.h}
{\xe \v lauxlib.h\:luaL_checktype}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} void() luaL_checktype ({\b lua_State} *  {\i L}, int  {\i arg}, int  {\i t})}}
\par
{\bkmkstart AAAAAAAAIZ}
{\bkmkend AAAAAAAAIZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 390 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_checkudata\:lauxlib.h}
{\xe \v lauxlib.h\:luaL_checkudata}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} void*() luaL_checkudata ({\b lua_State} *  {\i L}, int  {\i ud}, const char *  {\i tname})}}
\par
{\bkmkstart AAAAAAAAJA}
{\bkmkend AAAAAAAAJA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 345 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_checkversion_\:lauxlib.h}
{\xe \v lauxlib.h\:luaL_checkversion_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} void() luaL_checkversion_ ({\b lua_State} *  {\i L}, {\b lua_Number}  {\i ver}, size_t  {\i sz})}}
\par
{\bkmkstart AAAAAAAAJB}
{\bkmkend AAAAAAAAJB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 1049 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_error\:lauxlib.h}
{\xe \v lauxlib.h\:luaL_error}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} int() luaL_error ({\b lua_State} *  {\i L}, const char *  {\i fmt},   {\i ...})}}
\par
{\bkmkstart AAAAAAAAJC}
{\bkmkend AAAAAAAAJC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 234 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_execresult\:lauxlib.h}
{\xe \v lauxlib.h\:luaL_execresult}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} int() luaL_execresult ({\b lua_State} *  {\i L}, int  {\i stat})}}
\par
{\bkmkstart AAAAAAAAJD}
{\bkmkend AAAAAAAAJD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 285 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_fileresult\:lauxlib.h}
{\xe \v lauxlib.h\:luaL_fileresult}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} int() luaL_fileresult ({\b lua_State} *  {\i L}, int  {\i stat}, const char *  {\i fname})}}
\par
{\bkmkstart AAAAAAAAJE}
{\bkmkend AAAAAAAAJE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 245 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_getmetafield\:lauxlib.h}
{\xe \v lauxlib.h\:luaL_getmetafield}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} int() luaL_getmetafield ({\b lua_State} *  {\i L}, int  {\i obj}, const char *  {\i e})}}
\par
{\bkmkstart AAAAAAAAJF}
{\bkmkend AAAAAAAAJF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 821 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_getsubtable\:lauxlib.h}
{\xe \v lauxlib.h\:luaL_getsubtable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} int() luaL_getsubtable ({\b lua_State} *  {\i L}, int  {\i idx}, const char *  {\i fname})}}
\par
{\bkmkstart AAAAAAAAJG}
{\bkmkend AAAAAAAAJG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 923 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_gsub\:lauxlib.h}
{\xe \v lauxlib.h\:luaL_gsub}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} const char*() luaL_gsub ({\b lua_State} *  {\i L}, const char *  {\i s}, const char *  {\i p}, const char *  {\i r})}}
\par
{\bkmkstart AAAAAAAAJH}
{\bkmkend AAAAAAAAJH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 976 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_len\:lauxlib.h}
{\xe \v lauxlib.h\:luaL_len}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} {\b lua_Integer}() luaL_len ({\b lua_State} *  {\i L}, int  {\i idx})}}
\par
{\bkmkstart AAAAAAAAJI}
{\bkmkend AAAAAAAAJI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 847 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_loadbufferx\:lauxlib.h}
{\xe \v lauxlib.h\:luaL_loadbufferx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} int() luaL_loadbufferx ({\b lua_State} *  {\i L}, const char *  {\i buff}, size_t  {\i sz}, const char *  {\i name}, const char *  {\i mode})}}
\par
{\bkmkstart AAAAAAAAJJ}
{\bkmkend AAAAAAAAJJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 804 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_loadfilex\:lauxlib.h}
{\xe \v lauxlib.h\:luaL_loadfilex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} int() luaL_loadfilex ({\b lua_State} *  {\i L}, const char *  {\i filename}, const char *  {\i mode})}}
\par
{\bkmkstart AAAAAAAAJK}
{\bkmkend AAAAAAAAJK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 752 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_loadstring\:lauxlib.h}
{\xe \v lauxlib.h\:luaL_loadstring}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} int() luaL_loadstring ({\b lua_State} *  {\i L}, const char *  {\i s})}}
\par
{\bkmkstart AAAAAAAAJL}
{\bkmkend AAAAAAAAJL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 813 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_newmetatable\:lauxlib.h}
{\xe \v lauxlib.h\:luaL_newmetatable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} int() luaL_newmetatable ({\b lua_State} *  {\i L}, const char *  {\i tname})}}
\par
{\bkmkstart AAAAAAAAJM}
{\bkmkend AAAAAAAAJM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 311 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_newstate\:lauxlib.h}
{\xe \v lauxlib.h\:luaL_newstate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} {\b lua_State}*() luaL_newstate (void )}}
\par
{\bkmkstart AAAAAAAAJN}
{\bkmkend AAAAAAAAJN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 1035 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_optinteger\:lauxlib.h}
{\xe \v lauxlib.h\:luaL_optinteger}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} {\b lua_Integer}() luaL_optinteger ({\b lua_State} *  {\i L}, int  {\i arg}, {\b lua_Integer}  {\i def})}}
\par
{\bkmkstart AAAAAAAAJO}
{\bkmkend AAAAAAAAJO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 452 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_optlstring\:lauxlib.h}
{\xe \v lauxlib.h\:luaL_optlstring}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} const char*() luaL_optlstring ({\b lua_State} *  {\i L}, int  {\i arg}, const char *  {\i def}, size_t *  {\i l})}}
\par
{\bkmkstart AAAAAAAAJP}
{\bkmkend AAAAAAAAJP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 409 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_optnumber\:lauxlib.h}
{\xe \v lauxlib.h\:luaL_optnumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} {\b lua_Number}() luaL_optnumber ({\b lua_State} *  {\i L}, int  {\i arg}, {\b lua_Number}  {\i def})}}
\par
{\bkmkstart AAAAAAAAJQ}
{\bkmkend AAAAAAAAJQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 429 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_prepbuffsize\:lauxlib.h}
{\xe \v lauxlib.h\:luaL_prepbuffsize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} char*() luaL_prepbuffsize ({\b luaL_Buffer} *  {\i B}, size_t  {\i sz})}}
\par
{\bkmkstart AAAAAAAAJR}
{\bkmkend AAAAAAAAJR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 563 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_pushresult\:lauxlib.h}
{\xe \v lauxlib.h\:luaL_pushresult}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} void() luaL_pushresult ({\b luaL_Buffer} *  {\i B})}}
\par
{\bkmkstart AAAAAAAAJS}
{\bkmkend AAAAAAAAJS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 582 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_pushresultsize\:lauxlib.h}
{\xe \v lauxlib.h\:luaL_pushresultsize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} void() luaL_pushresultsize ({\b luaL_Buffer} *  {\i B}, size_t  {\i sz})}}
\par
{\bkmkstart AAAAAAAAJT}
{\bkmkend AAAAAAAAJT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 592 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_ref\:lauxlib.h}
{\xe \v lauxlib.h\:luaL_ref}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} int() luaL_ref ({\b lua_State} *  {\i L}, int  {\i t})}}
\par
{\bkmkstart AAAAAAAAJU}
{\bkmkend AAAAAAAAJU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 644 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_requiref\:lauxlib.h}
{\xe \v lauxlib.h\:luaL_requiref}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} void() luaL_requiref ({\b lua_State} *  {\i L}, const char *  {\i modname}, {\b lua_CFunction}  {\i openf}, int  {\i glb})}}
\par
{\bkmkstart AAAAAAAAJV}
{\bkmkend AAAAAAAAJV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 943 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_setfuncs\:lauxlib.h}
{\xe \v lauxlib.h\:luaL_setfuncs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} void() luaL_setfuncs ({\b lua_State} *  {\i L}, const {\b luaL_Reg} *  {\i l}, int  {\i nup})}}
\par
{\bkmkstart AAAAAAAAJW}
{\bkmkend AAAAAAAAJW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 902 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_setmetatable\:lauxlib.h}
{\xe \v lauxlib.h\:luaL_setmetatable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} void() luaL_setmetatable ({\b lua_State} *  {\i L}, const char *  {\i tname})}}
\par
{\bkmkstart AAAAAAAAJX}
{\bkmkend AAAAAAAAJX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 324 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_testudata\:lauxlib.h}
{\xe \v lauxlib.h\:luaL_testudata}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} void*() luaL_testudata ({\b lua_State} *  {\i L}, int  {\i ud}, const char *  {\i tname})}}
\par
{\bkmkstart AAAAAAAAJY}
{\bkmkend AAAAAAAAJY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 330 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_tolstring\:lauxlib.h}
{\xe \v lauxlib.h\:luaL_tolstring}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} const char*() luaL_tolstring ({\b lua_State} *  {\i L}, int  {\i idx}, size_t *  {\i len})}}
\par
{\bkmkstart AAAAAAAAJZ}
{\bkmkend AAAAAAAAJZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 859 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_traceback\:lauxlib.h}
{\xe \v lauxlib.h\:luaL_traceback}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} void() luaL_traceback ({\b lua_State} *  {\i L}, {\b lua_State} *  {\i L1}, const char *  {\i msg}, int  {\i level})}}
\par
{\bkmkstart AAAAAAAAKA}
{\bkmkend AAAAAAAAKA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 131 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_typeerror\:lauxlib.h}
{\xe \v lauxlib.h\:luaL_typeerror}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} int() luaL_typeerror ({\b lua_State} *  {\i L}, int  {\i arg}, const char *  {\i tname})}}
\par
{\bkmkstart AAAAAAAAKB}
{\bkmkend AAAAAAAAKB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 193 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_unref\:lauxlib.h}
{\xe \v lauxlib.h\:luaL_unref}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} void() luaL_unref ({\b lua_State} *  {\i L}, int  {\i t}, int  {\i ref})}}
\par
{\bkmkstart AAAAAAAAKC}
{\bkmkend AAAAAAAAKC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 665 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaL_where\:lauxlib.h}
{\xe \v lauxlib.h\:luaL_where}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} void() luaL_where ({\b lua_State} *  {\i L}, int  {\i lvl})}}
\par
{\bkmkstart AAAAAAAAKD}
{\bkmkend AAAAAAAAKD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lauxlib.c \'B5\'DA 216 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/gitworkspace/lua/src/lbaselib.c \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v D:/gitworkspace/lua/src/lbaselib.c}
{\xe \v D:/gitworkspace/lua/src/lbaselib.c}
{\bkmkstart AAAAAAAAKE}
{\bkmkend AAAAAAAAKE}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "lprefix.h"}\par
{\f2 #include <ctype.h>}\par
{\f2 #include <stdio.h>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <string.h>}\par
{\f2 #include "lua.h"}\par
{\f2 #include "lauxlib.h"}\par
{\f2 #include "lualib.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lbaselib_c}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_LIB}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SPACECHARS}\~ " \\f\\n\\r\\t\\v"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RESERVEDSLOT}\~ 5\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b luaB_print} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b luaB_warn} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const char * {\b b_str2int} (const char *s, int base, {\b lua_Integer} *pn)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b luaB_tonumber} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b luaB_error} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b luaB_getmetatable} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b luaB_setmetatable} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b luaB_rawequal} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b luaB_rawlen} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b luaB_rawget} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b luaB_rawset} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b pushmode} ({\b lua_State} *L, int oldmode)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b luaB_collectgarbage} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b luaB_type} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b luaB_next} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b luaB_pairs} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b ipairsaux} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b luaB_ipairs} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b load_aux} ({\b lua_State} *L, int status, int envidx)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b luaB_loadfile} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const char * {\b generic_reader} ({\b lua_State} *L, void *ud, size_t *size)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b luaB_load} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b dofilecont} ({\b lua_State} *L, int d1, {\b lua_KContext} d2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b luaB_dofile} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b luaB_assert} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b luaB_select} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b finishpcall} ({\b lua_State} *L, int status, {\b lua_KContext} extra)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b luaB_pcall} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b luaB_xpcall} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b luaB_tostring} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAMOD_API} int {\b luaopen_base} ({\b lua_State} *L)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const {\b luaL_Reg} {\b base_funcs} []\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v lbaselib_c\:lbaselib.c}
{\xe \v lbaselib.c\:lbaselib_c}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lbaselib_c}}
\par
{\bkmkstart AAAAAAAAKF}
{\bkmkend AAAAAAAAKF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lbaselib.c \'B5\'DA 7 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_LIB\:lbaselib.c}
{\xe \v lbaselib.c\:LUA_LIB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_LIB}}
\par
{\bkmkstart AAAAAAAAKG}
{\bkmkend AAAAAAAAKG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lbaselib.c \'B5\'DA 8 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v RESERVEDSLOT\:lbaselib.c}
{\xe \v lbaselib.c\:RESERVEDSLOT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RESERVEDSLOT\~ 5}}
\par
{\bkmkstart AAAAAAAAKH}
{\bkmkend AAAAAAAAKH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lbaselib.c \'B5\'DA 339 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v SPACECHARS\:lbaselib.c}
{\xe \v lbaselib.c\:SPACECHARS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SPACECHARS\~ " \\f\\n\\r\\t\\v"}}
\par
{\bkmkstart AAAAAAAAKI}
{\bkmkend AAAAAAAAKI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lbaselib.c \'B5\'DA 58 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v b_str2int\:lbaselib.c}
{\xe \v lbaselib.c\:b_str2int}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static const char* b_str2int (const char *  {\i s}, int  {\i base}, {\b lua_Integer} *  {\i pn}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAKJ}
{\bkmkend AAAAAAAAKJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lbaselib.c \'B5\'DA 60 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v dofilecont\:lbaselib.c}
{\xe \v lbaselib.c\:dofilecont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int dofilecont ({\b lua_State} *  {\i L}, int  {\i d1}, {\b lua_KContext}  {\i d2}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAKK}
{\bkmkend AAAAAAAAKK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lbaselib.c \'B5\'DA 387 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v finishpcall\:lbaselib.c}
{\xe \v lbaselib.c\:finishpcall}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int finishpcall ({\b lua_State} *  {\i L}, int  {\i status}, {\b lua_KContext}  {\i extra}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAKL}
{\bkmkend AAAAAAAAKL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lbaselib.c \'B5\'DA 439 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v generic_reader\:lbaselib.c}
{\xe \v lbaselib.c\:generic_reader}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static const char* generic_reader ({\b lua_State} *  {\i L}, void *  {\i ud}, size_t *  {\i size}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAKM}
{\bkmkend AAAAAAAAKM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lbaselib.c \'B5\'DA 348 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v ipairsaux\:lbaselib.c}
{\xe \v lbaselib.c\:ipairsaux}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int ipairsaux ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAKN}
{\bkmkend AAAAAAAAKN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lbaselib.c \'B5\'DA 281 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v load_aux\:lbaselib.c}
{\xe \v lbaselib.c\:load_aux}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int load_aux ({\b lua_State} *  {\i L}, int  {\i status}, int  {\i envidx}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAKO}
{\bkmkend AAAAAAAAKO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lbaselib.c \'B5\'DA 301 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaB_assert\:lbaselib.c}
{\xe \v lbaselib.c\:luaB_assert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int luaB_assert ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAKP}
{\bkmkend AAAAAAAAKP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lbaselib.c \'B5\'DA 403 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaB_collectgarbage\:lbaselib.c}
{\xe \v lbaselib.c\:luaB_collectgarbage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int luaB_collectgarbage ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAKQ}
{\bkmkend AAAAAAAAKQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lbaselib.c \'B5\'DA 190 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaB_dofile\:lbaselib.c}
{\xe \v lbaselib.c\:luaB_dofile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int luaB_dofile ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAKR}
{\bkmkend AAAAAAAAKR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lbaselib.c \'B5\'DA 393 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaB_error\:lbaselib.c}
{\xe \v lbaselib.c\:luaB_error}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int luaB_error ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAKS}
{\bkmkend AAAAAAAAKS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lbaselib.c \'B5\'DA 114 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaB_getmetatable\:lbaselib.c}
{\xe \v lbaselib.c\:luaB_getmetatable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int luaB_getmetatable ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAKT}
{\bkmkend AAAAAAAAKT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lbaselib.c \'B5\'DA 126 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaB_ipairs\:lbaselib.c}
{\xe \v lbaselib.c\:luaB_ipairs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int luaB_ipairs ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAKU}
{\bkmkend AAAAAAAAKU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lbaselib.c \'B5\'DA 292 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaB_load\:lbaselib.c}
{\xe \v lbaselib.c\:luaB_load}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int luaB_load ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAKV}
{\bkmkend AAAAAAAAKV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lbaselib.c \'B5\'DA 365 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaB_loadfile\:lbaselib.c}
{\xe \v lbaselib.c\:luaB_loadfile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int luaB_loadfile ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAKW}
{\bkmkend AAAAAAAAKW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lbaselib.c \'B5\'DA 318 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaB_next\:lbaselib.c}
{\xe \v lbaselib.c\:luaB_next}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int luaB_next ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAKX}
{\bkmkend AAAAAAAAKX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lbaselib.c \'B5\'DA 251 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaB_pairs\:lbaselib.c}
{\xe \v lbaselib.c\:luaB_pairs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int luaB_pairs ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAKY}
{\bkmkend AAAAAAAAKY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lbaselib.c \'B5\'DA 263 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaB_pcall\:lbaselib.c}
{\xe \v lbaselib.c\:luaB_pcall}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int luaB_pcall ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAKZ}
{\bkmkend AAAAAAAAKZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lbaselib.c \'B5\'DA 450 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaB_print\:lbaselib.c}
{\xe \v lbaselib.c\:luaB_print}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int luaB_print ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAALA}
{\bkmkend AAAAAAAALA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lbaselib.c \'B5\'DA 24 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaB_rawequal\:lbaselib.c}
{\xe \v lbaselib.c\:luaB_rawequal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int luaB_rawequal ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAALB}
{\bkmkend AAAAAAAALB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lbaselib.c \'B5\'DA 149 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaB_rawget\:lbaselib.c}
{\xe \v lbaselib.c\:luaB_rawget}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int luaB_rawget ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAALC}
{\bkmkend AAAAAAAALC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lbaselib.c \'B5\'DA 166 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaB_rawlen\:lbaselib.c}
{\xe \v lbaselib.c\:luaB_rawlen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int luaB_rawlen ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAALD}
{\bkmkend AAAAAAAALD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lbaselib.c \'B5\'DA 157 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaB_rawset\:lbaselib.c}
{\xe \v lbaselib.c\:luaB_rawset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int luaB_rawset ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAALE}
{\bkmkend AAAAAAAALE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lbaselib.c \'B5\'DA 174 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaB_select\:lbaselib.c}
{\xe \v lbaselib.c\:luaB_select}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int luaB_select ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAALF}
{\bkmkend AAAAAAAALF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lbaselib.c \'B5\'DA 416 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaB_setmetatable\:lbaselib.c}
{\xe \v lbaselib.c\:luaB_setmetatable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int luaB_setmetatable ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAALG}
{\bkmkend AAAAAAAALG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lbaselib.c \'B5\'DA 137 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaB_tonumber\:lbaselib.c}
{\xe \v lbaselib.c\:luaB_tonumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int luaB_tonumber ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAALH}
{\bkmkend AAAAAAAALH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lbaselib.c \'B5\'DA 81 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaB_tostring\:lbaselib.c}
{\xe \v lbaselib.c\:luaB_tostring}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int luaB_tostring ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAALI}
{\bkmkend AAAAAAAALI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lbaselib.c \'B5\'DA 477 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaB_type\:lbaselib.c}
{\xe \v lbaselib.c\:luaB_type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int luaB_type ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAALJ}
{\bkmkend AAAAAAAALJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lbaselib.c \'B5\'DA 243 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaB_warn\:lbaselib.c}
{\xe \v lbaselib.c\:luaB_warn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int luaB_warn ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAALK}
{\bkmkend AAAAAAAALK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lbaselib.c \'B5\'DA 45 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaB_xpcall\:lbaselib.c}
{\xe \v lbaselib.c\:luaB_xpcall}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int luaB_xpcall ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAALL}
{\bkmkend AAAAAAAALL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lbaselib.c \'B5\'DA 465 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaopen_base\:lbaselib.c}
{\xe \v lbaselib.c\:luaopen_base}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAMOD_API} int luaopen_base ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAAALM}
{\bkmkend AAAAAAAALM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lbaselib.c \'B5\'DA 515 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v pushmode\:lbaselib.c}
{\xe \v lbaselib.c\:pushmode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int pushmode ({\b lua_State} *  {\i L}, int  {\i oldmode}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAALN}
{\bkmkend AAAAAAAALN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lbaselib.c \'B5\'DA 184 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v base_funcs\:lbaselib.c}
{\xe \v lbaselib.c\:base_funcs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b luaL_Reg} base_funcs[]{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAALO}
{\bkmkend AAAAAAAALO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'B3\'F5\'CA\'BC\'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{\par
  \{{\cf22 "assert"}, luaB_assert\},\par
  \{{\cf22 "collectgarbage"}, luaB_collectgarbage\},\par
  \{{\cf22 "dofile"}, luaB_dofile\},\par
  \{{\cf22 "error"}, luaB_error\},\par
  \{{\cf22 "getmetatable"}, luaB_getmetatable\},\par
  \{{\cf22 "ipairs"}, luaB_ipairs\},\par
  \{{\cf22 "loadfile"}, luaB_loadfile\},\par
  \{{\cf22 "load"}, luaB_load\},\par
  \{{\cf22 "next"}, luaB_next\},\par
  \{{\cf22 "pairs"}, luaB_pairs\},\par
  \{{\cf22 "pcall"}, luaB_pcall\},\par
  \{{\cf22 "print"}, luaB_print\},\par
  \{{\cf22 "warn"}, luaB_warn\},\par
  \{{\cf22 "rawequal"}, luaB_rawequal\},\par
  \{{\cf22 "rawlen"}, luaB_rawlen\},\par
  \{{\cf22 "rawget"}, luaB_rawget\},\par
  \{{\cf22 "rawset"}, luaB_rawset\},\par
  \{{\cf22 "select"}, luaB_select\},\par
  \{{\cf22 "setmetatable"}, luaB_setmetatable\},\par
  \{{\cf22 "tonumber"}, luaB_tonumber\},\par
  \{{\cf22 "tostring"}, luaB_tostring\},\par
  \{{\cf22 "type"}, luaB_type\},\par
  \{{\cf22 "xpcall"}, luaB_xpcall\},\par
  \par
  \{LUA_GNAME, NULL\},\par
  \{{\cf22 "_VERSION"}, NULL\},\par
  \{NULL, NULL\}\par
\}\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE lbaselib.c \'B5\'DA 484 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/gitworkspace/lua/src/lcode.c \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v D:/gitworkspace/lua/src/lcode.c}
{\xe \v D:/gitworkspace/lua/src/lcode.c}
{\bkmkstart AAAAAAAALP}
{\bkmkend AAAAAAAALP}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "lprefix.h"}\par
{\f2 #include <limits.h>}\par
{\f2 #include <math.h>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include "lua.h"}\par
{\f2 #include "lcode.h"}\par
{\f2 #include "ldebug.h"}\par
{\f2 #include "ldo.h"}\par
{\f2 #include "lgc.h"}\par
{\f2 #include "llex.h"}\par
{\f2 #include "lmem.h"}\par
{\f2 #include "lobject.h"}\par
{\f2 #include "lopcodes.h"}\par
{\f2 #include "lparser.h"}\par
{\f2 #include "lstring.h"}\par
{\f2 #include "ltable.h"}\par
{\f2 #include "lvm.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lcode_c}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_CORE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAXREGS}\~ 255\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b hasjumps}(e)\~ ((e)->t != (e)->f)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAXIWTHABS}\~ 120\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LIMLINEDIFF}\~ 0x80\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b codesJ} ({\b FuncState} *fs, {\b OpCode} o, int sj, int k)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b l_noret} {\b luaK_semerror} ({\b LexState} *ls, const char *msg)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b tonumeral} (const {\b expdesc} *e, {\b TValue} *v)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b TValue} * {\b const2val} ({\b FuncState} *fs, const {\b expdesc} *e)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b luaK_exp2const} ({\b FuncState} *fs, const {\b expdesc} *e, {\b TValue} *v)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b Instruction} * {\b previousinstruction} ({\b FuncState} *fs)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaK_nil} ({\b FuncState} *fs, int from, int n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b getjump} ({\b FuncState} *fs, int pc)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b fixjump} ({\b FuncState} *fs, int pc, int dest)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaK_concat} ({\b FuncState} *fs, int *l1, int l2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b luaK_jump} ({\b FuncState} *fs)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaK_ret} ({\b FuncState} *fs, int first, int nret)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b condjump} ({\b FuncState} *fs, {\b OpCode} op, int A, int B, int C, int k)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b luaK_getlabel} ({\b FuncState} *fs)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b Instruction} * {\b getjumpcontrol} ({\b FuncState} *fs, int pc)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b patchtestreg} ({\b FuncState} *fs, int node, int reg)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b removevalues} ({\b FuncState} *fs, int list)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b patchlistaux} ({\b FuncState} *fs, int list, int vtarget, int reg, int dtarget)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaK_patchlist} ({\b FuncState} *fs, int list, int target)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaK_patchtohere} ({\b FuncState} *fs, int list)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b savelineinfo} ({\b FuncState} *fs, {\b Proto} *f, int line)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b removelastlineinfo} ({\b FuncState} *fs)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b removelastinstruction} ({\b FuncState} *fs)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b luaK_code} ({\b FuncState} *fs, {\b Instruction} i)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b luaK_codeABCk} ({\b FuncState} *fs, {\b OpCode} o, int a, int b, int c, int k)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b luaK_codeABx} ({\b FuncState} *fs, {\b OpCode} o, int a, unsigned int bc)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b luaK_codeAsBx} ({\b FuncState} *fs, {\b OpCode} o, int a, int bc)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b codeextraarg} ({\b FuncState} *fs, int a)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b luaK_codek} ({\b FuncState} *fs, int reg, int k)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaK_checkstack} ({\b FuncState} *fs, int n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaK_reserveregs} ({\b FuncState} *fs, int n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b freereg} ({\b FuncState} *fs, int reg)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b freeregs} ({\b FuncState} *fs, int r1, int r2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b freeexp} ({\b FuncState} *fs, {\b expdesc} *e)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b freeexps} ({\b FuncState} *fs, {\b expdesc} *e1, {\b expdesc} *e2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b addk} ({\b FuncState} *fs, {\b TValue} *key, {\b TValue} *v)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b stringK} ({\b FuncState} *fs, {\b TString} *s)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b luaK_intK} ({\b FuncState} *fs, {\b lua_Integer} n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b luaK_numberK} ({\b FuncState} *fs, {\b lua_Number} r)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b boolF} ({\b FuncState} *fs)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b boolT} ({\b FuncState} *fs)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b nilK} ({\b FuncState} *fs)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b fitsC} ({\b lua_Integer} i)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b fitsBx} ({\b lua_Integer} i)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaK_int} ({\b FuncState} *fs, int reg, {\b lua_Integer} i)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b luaK_float} ({\b FuncState} *fs, int reg, {\b lua_Number} f)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b const2exp} ({\b TValue} *v, {\b expdesc} *e)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaK_setreturns} ({\b FuncState} *fs, {\b expdesc} *e, int nresults)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b str2K} ({\b FuncState} *fs, {\b expdesc} *e)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaK_setoneret} ({\b FuncState} *fs, {\b expdesc} *e)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaK_dischargevars} ({\b FuncState} *fs, {\b expdesc} *e)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b discharge2reg} ({\b FuncState} *fs, {\b expdesc} *e, int reg)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b discharge2anyreg} ({\b FuncState} *fs, {\b expdesc} *e)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b code_loadbool} ({\b FuncState} *fs, int A, {\b OpCode} op)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b need_value} ({\b FuncState} *fs, int list)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b exp2reg} ({\b FuncState} *fs, {\b expdesc} *e, int reg)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaK_exp2nextreg} ({\b FuncState} *fs, {\b expdesc} *e)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b luaK_exp2anyreg} ({\b FuncState} *fs, {\b expdesc} *e)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaK_exp2anyregup} ({\b FuncState} *fs, {\b expdesc} *e)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaK_exp2val} ({\b FuncState} *fs, {\b expdesc} *e)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b luaK_exp2K} ({\b FuncState} *fs, {\b expdesc} *e)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b luaK_exp2RK} ({\b FuncState} *fs, {\b expdesc} *e)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b codeABRK} ({\b FuncState} *fs, {\b OpCode} o, int a, int b, {\b expdesc} *ec)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaK_storevar} ({\b FuncState} *fs, {\b expdesc} *var, {\b expdesc} *ex)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaK_self} ({\b FuncState} *fs, {\b expdesc} *e, {\b expdesc} *key)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b negatecondition} ({\b FuncState} *fs, {\b expdesc} *e)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b jumponcond} ({\b FuncState} *fs, {\b expdesc} *e, int {\b cond})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaK_goiftrue} ({\b FuncState} *fs, {\b expdesc} *e)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaK_goiffalse} ({\b FuncState} *fs, {\b expdesc} *e)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b codenot} ({\b FuncState} *fs, {\b expdesc} *e)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b isKstr} ({\b FuncState} *fs, {\b expdesc} *e)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b luaK_isKint} ({\b expdesc} *e)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b isCint} ({\b expdesc} *e)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b isSCint} ({\b expdesc} *e)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b isSCnumber} ({\b expdesc} *e, int *pi, int *isfloat)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaK_indexed} ({\b FuncState} *fs, {\b expdesc} *t, {\b expdesc} *k)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b validop} (int op, {\b TValue} *v1, {\b TValue} *v2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b constfolding} ({\b FuncState} *fs, int op, {\b expdesc} *e1, const {\b expdesc} *e2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b codeunexpval} ({\b FuncState} *fs, {\b OpCode} op, {\b expdesc} *e, int line)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b finishbinexpval} ({\b FuncState} *fs, {\b expdesc} *e1, {\b expdesc} *e2, {\b OpCode} op, int v2, int flip, int line, {\b OpCode} mmop, {\b TMS} event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b codebinexpval} ({\b FuncState} *fs, {\b OpCode} op, {\b expdesc} *e1, {\b expdesc} *e2, int line)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b codebini} ({\b FuncState} *fs, {\b OpCode} op, {\b expdesc} *e1, {\b expdesc} *e2, int flip, int line, {\b TMS} event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b finishbinexpneg} ({\b FuncState} *fs, {\b expdesc} *e1, {\b expdesc} *e2, {\b OpCode} op, int line, {\b TMS} event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b swapexps} ({\b expdesc} *e1, {\b expdesc} *e2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b codearith} ({\b FuncState} *fs, {\b BinOpr} opr, {\b expdesc} *e1, {\b expdesc} *e2, int flip, int line)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b codecommutative} ({\b FuncState} *fs, {\b BinOpr} op, {\b expdesc} *e1, {\b expdesc} *e2, int line)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b codebitwise} ({\b FuncState} *fs, {\b BinOpr} opr, {\b expdesc} *e1, {\b expdesc} *e2, int line)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b codeorder} ({\b FuncState} *fs, {\b OpCode} op, {\b expdesc} *e1, {\b expdesc} *e2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b codeeq} ({\b FuncState} *fs, {\b BinOpr} opr, {\b expdesc} *e1, {\b expdesc} *e2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaK_prefix} ({\b FuncState} *fs, {\b UnOpr} op, {\b expdesc} *e, int line)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaK_infix} ({\b FuncState} *fs, {\b BinOpr} op, {\b expdesc} *v)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b codeconcat} ({\b FuncState} *fs, {\b expdesc} *e1, {\b expdesc} *e2, int line)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaK_posfix} ({\b FuncState} *fs, {\b BinOpr} opr, {\b expdesc} *e1, {\b expdesc} *e2, int line)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaK_fixline} ({\b FuncState} *fs, int line)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaK_settablesize} ({\b FuncState} *fs, int pc, int ra, int asize, int hsize)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaK_setlist} ({\b FuncState} *fs, int base, int nelems, int tostore)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b finaltarget} ({\b Instruction} *code, int i)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaK_finish} ({\b FuncState} *fs)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v hasjumps\:lcode.c}
{\xe \v lcode.c\:hasjumps}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define hasjumps( e)\~ ((e)->t != (e)->f)}}
\par
{\bkmkstart AAAAAAAALQ}
{\bkmkend AAAAAAAALQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 37 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lcode_c\:lcode.c}
{\xe \v lcode.c\:lcode_c}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lcode_c}}
\par
{\bkmkstart AAAAAAAALR}
{\bkmkend AAAAAAAALR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 7 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LIMLINEDIFF\:lcode.c}
{\xe \v lcode.c\:LIMLINEDIFF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LIMLINEDIFF\~ 0x80}}
\par
{\bkmkstart AAAAAAAALS}
{\bkmkend AAAAAAAALS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 327 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_CORE\:lcode.c}
{\xe \v lcode.c\:LUA_CORE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_CORE}}
\par
{\bkmkstart AAAAAAAALT}
{\bkmkend AAAAAAAALT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 8 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v MAXIWTHABS\:lcode.c}
{\xe \v lcode.c\:MAXIWTHABS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAXIWTHABS\~ 120}}
\par
{\bkmkstart AAAAAAAALU}
{\bkmkend AAAAAAAALU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 322 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v MAXREGS\:lcode.c}
{\xe \v lcode.c\:MAXREGS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAXREGS\~ 255}}
\par
{\bkmkstart AAAAAAAALV}
{\bkmkend AAAAAAAALV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 34 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v addk\:lcode.c}
{\xe \v lcode.c\:addk}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int addk ({\b FuncState} *  {\i fs}, {\b TValue} *  {\i key}, {\b TValue} *  {\i v}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAALW}
{\bkmkend AAAAAAAALW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 549 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v boolF\:lcode.c}
{\xe \v lcode.c\:boolF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int boolF ({\b FuncState} *  {\i fs}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAALX}
{\bkmkend AAAAAAAALX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 612 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v boolT\:lcode.c}
{\xe \v lcode.c\:boolT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int boolT ({\b FuncState} *  {\i fs}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAALY}
{\bkmkend AAAAAAAALY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 622 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v code_loadbool\:lcode.c}
{\xe \v lcode.c\:code_loadbool}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int code_loadbool ({\b FuncState} *  {\i fs}, int  {\i A}, {\b OpCode}  {\i op}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAALZ}
{\bkmkend AAAAAAAALZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 874 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v codeABRK\:lcode.c}
{\xe \v lcode.c\:codeABRK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void codeABRK ({\b FuncState} *  {\i fs}, {\b OpCode}  {\i o}, int  {\i a}, int  {\i b}, {\b expdesc} *  {\i ec}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAMA}
{\bkmkend AAAAAAAAMA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 1021 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v codearith\:lcode.c}
{\xe \v lcode.c\:codearith}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void codearith ({\b FuncState} *  {\i fs}, {\b BinOpr}  {\i opr}, {\b expdesc} *  {\i e1}, {\b expdesc} *  {\i e2}, int  {\i flip}, int  {\i line}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAMB}
{\bkmkend AAAAAAAAMB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 1426 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v codebinexpval\:lcode.c}
{\xe \v lcode.c\:codebinexpval}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void codebinexpval ({\b FuncState} *  {\i fs}, {\b OpCode}  {\i op}, {\b expdesc} *  {\i e1}, {\b expdesc} *  {\i e2}, int  {\i line}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAMC}
{\bkmkend AAAAAAAAMC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 1374 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v codebini\:lcode.c}
{\xe \v lcode.c\:codebini}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void codebini ({\b FuncState} *  {\i fs}, {\b OpCode}  {\i op}, {\b expdesc} *  {\i e1}, {\b expdesc} *  {\i e2}, int  {\i flip}, int  {\i line}, {\b TMS}  {\i event}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAMD}
{\bkmkend AAAAAAAAMD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 1386 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v codebitwise\:lcode.c}
{\xe \v lcode.c\:codebitwise}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void codebitwise ({\b FuncState} *  {\i fs}, {\b BinOpr}  {\i opr}, {\b expdesc} *  {\i e1}, {\b expdesc} *  {\i e2}, int  {\i line}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAME}
{\bkmkend AAAAAAAAME}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 1466 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v codecommutative\:lcode.c}
{\xe \v lcode.c\:codecommutative}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void codecommutative ({\b FuncState} *  {\i fs}, {\b BinOpr}  {\i op}, {\b expdesc} *  {\i e1}, {\b expdesc} *  {\i e2}, int  {\i line}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAMF}
{\bkmkend AAAAAAAAMF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 1448 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v codeconcat\:lcode.c}
{\xe \v lcode.c\:codeconcat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void codeconcat ({\b FuncState} *  {\i fs}, {\b expdesc} *  {\i e1}, {\b expdesc} *  {\i e2}, int  {\i line}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAMG}
{\bkmkend AAAAAAAAMG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 1622 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v codeeq\:lcode.c}
{\xe \v lcode.c\:codeeq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void codeeq ({\b FuncState} *  {\i fs}, {\b BinOpr}  {\i opr}, {\b expdesc} *  {\i e1}, {\b expdesc} *  {\i e2}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAMH}
{\bkmkend AAAAAAAAMH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 1522 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v codeextraarg\:lcode.c}
{\xe \v lcode.c\:codeextraarg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int codeextraarg ({\b FuncState} *  {\i fs}, int  {\i a}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAMI}
{\bkmkend AAAAAAAAMI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 448 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v codenot\:lcode.c}
{\xe \v lcode.c\:codenot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void codenot ({\b FuncState} *  {\i fs}, {\b expdesc} *  {\i e}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAMJ}
{\bkmkend AAAAAAAAMJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 1169 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v codeorder\:lcode.c}
{\xe \v lcode.c\:codeorder}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void codeorder ({\b FuncState} *  {\i fs}, {\b OpCode}  {\i op}, {\b expdesc} *  {\i e1}, {\b expdesc} *  {\i e2}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAMK}
{\bkmkend AAAAAAAAMK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 1492 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v codesJ\:lcode.c}
{\xe \v lcode.c\:codesJ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int codesJ ({\b FuncState} *  {\i fs}, {\b OpCode}  {\i o}, int  {\i sj}, int  {\i k}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAML}
{\bkmkend AAAAAAAAML}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 437 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v codeunexpval\:lcode.c}
{\xe \v lcode.c\:codeunexpval}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void codeunexpval ({\b FuncState} *  {\i fs}, {\b OpCode}  {\i op}, {\b expdesc} *  {\i e}, int  {\i line}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAMM}
{\bkmkend AAAAAAAAMM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 1341 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v condjump\:lcode.c}
{\xe \v lcode.c\:condjump}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int condjump ({\b FuncState} *  {\i fs}, {\b OpCode}  {\i op}, int  {\i A}, int  {\i B}, int  {\i C}, int  {\i k}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAMN}
{\bkmkend AAAAAAAAMN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 221 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v const2exp\:lcode.c}
{\xe \v lcode.c\:const2exp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void const2exp ({\b TValue} *  {\i v}, {\b expdesc} *  {\i e}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAMO}
{\bkmkend AAAAAAAAMO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 679 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v const2val\:lcode.c}
{\xe \v lcode.c\:const2val}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b TValue}* const2val ({\b FuncState} *  {\i fs}, const {\b expdesc} *  {\i e}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAMP}
{\bkmkend AAAAAAAAMP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 73 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v constfolding\:lcode.c}
{\xe \v lcode.c\:constfolding}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int constfolding ({\b FuncState} *  {\i fs}, int  {\i op}, {\b expdesc} *  {\i e1}, const {\b expdesc} *  {\i e2}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAMQ}
{\bkmkend AAAAAAAAMQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 1315 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v discharge2anyreg\:lcode.c}
{\xe \v lcode.c\:discharge2anyreg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void discharge2anyreg ({\b FuncState} *  {\i fs}, {\b expdesc} *  {\i e}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAMR}
{\bkmkend AAAAAAAAMR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 866 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v discharge2reg\:lcode.c}
{\xe \v lcode.c\:discharge2reg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void discharge2reg ({\b FuncState} *  {\i fs}, {\b expdesc} *  {\i e}, int  {\i reg}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAMS}
{\bkmkend AAAAAAAAMS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 812 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v exp2reg\:lcode.c}
{\xe \v lcode.c\:exp2reg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void exp2reg ({\b FuncState} *  {\i fs}, {\b expdesc} *  {\i e}, int  {\i reg}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAMT}
{\bkmkend AAAAAAAAMT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 900 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v finaltarget\:lcode.c}
{\xe \v lcode.c\:finaltarget}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int finaltarget ({\b Instruction} *  {\i code}, int  {\i i}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAMU}
{\bkmkend AAAAAAAAMU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 1769 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v finishbinexpneg\:lcode.c}
{\xe \v lcode.c\:finishbinexpneg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int finishbinexpneg ({\b FuncState} *  {\i fs}, {\b expdesc} *  {\i e1}, {\b expdesc} *  {\i e2}, {\b OpCode}  {\i op}, int  {\i line}, {\b TMS}  {\i event}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAMV}
{\bkmkend AAAAAAAAMV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 1398 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v finishbinexpval\:lcode.c}
{\xe \v lcode.c\:finishbinexpval}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void finishbinexpval ({\b FuncState} *  {\i fs}, {\b expdesc} *  {\i e1}, {\b expdesc} *  {\i e2}, {\b OpCode}  {\i op}, int  {\i v2}, int  {\i flip}, int  {\i line}, {\b OpCode}  {\i mmop}, {\b TMS}  {\i event}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAMW}
{\bkmkend AAAAAAAAMW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 1356 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v fitsBx\:lcode.c}
{\xe \v lcode.c\:fitsBx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int fitsBx ({\b lua_Integer}  {\i i}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAMX}
{\bkmkend AAAAAAAAMX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 654 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v fitsC\:lcode.c}
{\xe \v lcode.c\:fitsC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int fitsC ({\b lua_Integer}  {\i i}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAMY}
{\bkmkend AAAAAAAAMY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 646 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v fixjump\:lcode.c}
{\xe \v lcode.c\:fixjump}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void fixjump ({\b FuncState} *  {\i fs}, int  {\i pc}, int  {\i dest}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAMZ}
{\bkmkend AAAAAAAAMZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 166 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v freeexp\:lcode.c}
{\xe \v lcode.c\:freeexp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void freeexp ({\b FuncState} *  {\i fs}, {\b expdesc} *  {\i e}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAANA}
{\bkmkend AAAAAAAANA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 525 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v freeexps\:lcode.c}
{\xe \v lcode.c\:freeexps}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void freeexps ({\b FuncState} *  {\i fs}, {\b expdesc} *  {\i e1}, {\b expdesc} *  {\i e2}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAANB}
{\bkmkend AAAAAAAANB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 535 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v freereg\:lcode.c}
{\xe \v lcode.c\:freereg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void freereg ({\b FuncState} *  {\i fs}, int  {\i reg}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAANC}
{\bkmkend AAAAAAAANC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 499 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v freeregs\:lcode.c}
{\xe \v lcode.c\:freeregs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void freeregs ({\b FuncState} *  {\i fs}, int  {\i r1}, int  {\i r2}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAND}
{\bkmkend AAAAAAAAND}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 510 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v getjump\:lcode.c}
{\xe \v lcode.c\:getjump}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int getjump ({\b FuncState} *  {\i fs}, int  {\i pc}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAANE}
{\bkmkend AAAAAAAANE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 153 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v getjumpcontrol\:lcode.c}
{\xe \v lcode.c\:getjumpcontrol}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b Instruction}* getjumpcontrol ({\b FuncState} *  {\i fs}, int  {\i pc}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAANF}
{\bkmkend AAAAAAAANF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 242 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v isCint\:lcode.c}
{\xe \v lcode.c\:isCint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int isCint ({\b expdesc} *  {\i e}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAANG}
{\bkmkend AAAAAAAANG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 1220 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v isKstr\:lcode.c}
{\xe \v lcode.c\:isKstr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int isKstr ({\b FuncState} *  {\i fs}, {\b expdesc} *  {\i e}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAANH}
{\bkmkend AAAAAAAANH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 1203 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v isSCint\:lcode.c}
{\xe \v lcode.c\:isSCint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int isSCint ({\b expdesc} *  {\i e}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAANI}
{\bkmkend AAAAAAAANI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 1229 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v isSCnumber\:lcode.c}
{\xe \v lcode.c\:isSCnumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int isSCnumber ({\b expdesc} *  {\i e}, int *  {\i pi}, int *  {\i isfloat}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAANJ}
{\bkmkend AAAAAAAANJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 1238 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v jumponcond\:lcode.c}
{\xe \v lcode.c\:jumponcond}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int jumponcond ({\b FuncState} *  {\i fs}, {\b expdesc} *  {\i e}, int  {\i cond}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAANK}
{\bkmkend AAAAAAAANK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 1098 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_checkstack\:lcode.c}
{\xe \v lcode.c\:luaK_checkstack}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaK_checkstack ({\b FuncState} *  {\i fs}, int  {\i n})}}
\par
{\bkmkstart AAAAAAAANL}
{\bkmkend AAAAAAAANL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 474 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_code\:lcode.c}
{\xe \v lcode.c\:luaK_code}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int luaK_code ({\b FuncState} *  {\i fs}, {\b Instruction}  {\i i})}}
\par
{\bkmkstart AAAAAAAANM}
{\bkmkend AAAAAAAANM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 390 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_codeABCk\:lcode.c}
{\xe \v lcode.c\:luaK_codeABCk}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int luaK_codeABCk ({\b FuncState} *  {\i fs}, {\b OpCode}  {\i o}, int  {\i a}, int  {\i b}, int  {\i c}, int  {\i k})}}
\par
{\bkmkstart AAAAAAAANN}
{\bkmkend AAAAAAAANN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 405 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_codeABx\:lcode.c}
{\xe \v lcode.c\:luaK_codeABx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int luaK_codeABx ({\b FuncState} *  {\i fs}, {\b OpCode}  {\i o}, int  {\i a}, unsigned int  {\i bc})}}
\par
{\bkmkstart AAAAAAAANO}
{\bkmkend AAAAAAAANO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 416 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_codeAsBx\:lcode.c}
{\xe \v lcode.c\:luaK_codeAsBx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int luaK_codeAsBx ({\b FuncState} *  {\i fs}, {\b OpCode}  {\i o}, int  {\i a}, int  {\i bc})}}
\par
{\bkmkstart AAAAAAAANP}
{\bkmkend AAAAAAAANP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 426 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_codek\:lcode.c}
{\xe \v lcode.c\:luaK_codek}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int luaK_codek ({\b FuncState} *  {\i fs}, int  {\i reg}, int  {\i k}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAANQ}
{\bkmkend AAAAAAAANQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 459 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_concat\:lcode.c}
{\xe \v lcode.c\:luaK_concat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaK_concat ({\b FuncState} *  {\i fs}, int *  {\i l1}, int  {\i l2})}}
\par
{\bkmkstart AAAAAAAANR}
{\bkmkend AAAAAAAANR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 180 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_dischargevars\:lcode.c}
{\xe \v lcode.c\:luaK_dischargevars}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaK_dischargevars ({\b FuncState} *  {\i fs}, {\b expdesc} *  {\i e})}}
\par
{\bkmkstart AAAAAAAANS}
{\bkmkend AAAAAAAANS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 759 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_exp2anyreg\:lcode.c}
{\xe \v lcode.c\:luaK_exp2anyreg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int luaK_exp2anyreg ({\b FuncState} *  {\i fs}, {\b expdesc} *  {\i e})}}
\par
{\bkmkstart AAAAAAAANT}
{\bkmkend AAAAAAAANT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 940 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_exp2anyregup\:lcode.c}
{\xe \v lcode.c\:luaK_exp2anyregup}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaK_exp2anyregup ({\b FuncState} *  {\i fs}, {\b expdesc} *  {\i e})}}
\par
{\bkmkstart AAAAAAAANU}
{\bkmkend AAAAAAAANU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 959 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_exp2const\:lcode.c}
{\xe \v lcode.c\:luaK_exp2const}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int luaK_exp2const ({\b FuncState} *  {\i fs}, const {\b expdesc} *  {\i e}, {\b TValue} *  {\i v})}}
\par
{\bkmkstart AAAAAAAANV}
{\bkmkend AAAAAAAANV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 83 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_exp2K\:lcode.c}
{\xe \v lcode.c\:luaK_exp2K}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int luaK_exp2K ({\b FuncState} *  {\i fs}, {\b expdesc} *  {\i e}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAANW}
{\bkmkend AAAAAAAANW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 981 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_exp2nextreg\:lcode.c}
{\xe \v lcode.c\:luaK_exp2nextreg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaK_exp2nextreg ({\b FuncState} *  {\i fs}, {\b expdesc} *  {\i e})}}
\par
{\bkmkstart AAAAAAAANX}
{\bkmkend AAAAAAAANX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 928 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_exp2RK\:lcode.c}
{\xe \v lcode.c\:luaK_exp2RK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int luaK_exp2RK ({\b FuncState} *  {\i fs}, {\b expdesc} *  {\i e})}}
\par
{\bkmkstart AAAAAAAANY}
{\bkmkend AAAAAAAANY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 1011 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_exp2val\:lcode.c}
{\xe \v lcode.c\:luaK_exp2val}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaK_exp2val ({\b FuncState} *  {\i fs}, {\b expdesc} *  {\i e})}}
\par
{\bkmkstart AAAAAAAANZ}
{\bkmkend AAAAAAAANZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 969 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_finish\:lcode.c}
{\xe \v lcode.c\:luaK_finish}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaK_finish ({\b FuncState} *  {\i fs})}}
\par
{\bkmkstart AAAAAAAAOA}
{\bkmkend AAAAAAAAOA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 1786 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_fixline\:lcode.c}
{\xe \v lcode.c\:luaK_fixline}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaK_fixline ({\b FuncState} *  {\i fs}, int  {\i line})}}
\par
{\bkmkstart AAAAAAAAOB}
{\bkmkend AAAAAAAAOB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 1726 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_float\:lcode.c}
{\xe \v lcode.c\:luaK_float}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void luaK_float ({\b FuncState} *  {\i fs}, int  {\i reg}, {\b lua_Number}  {\i f}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAOC}
{\bkmkend AAAAAAAAOC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 667 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_getlabel\:lcode.c}
{\xe \v lcode.c\:luaK_getlabel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int luaK_getlabel ({\b FuncState} *  {\i fs})}}
\par
{\bkmkstart AAAAAAAAOD}
{\bkmkend AAAAAAAAOD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 231 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_goiffalse\:lcode.c}
{\xe \v lcode.c\:luaK_goiffalse}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaK_goiffalse ({\b FuncState} *  {\i fs}, {\b expdesc} *  {\i e})}}
\par
{\bkmkstart AAAAAAAAOE}
{\bkmkend AAAAAAAAOE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 1143 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_goiftrue\:lcode.c}
{\xe \v lcode.c\:luaK_goiftrue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaK_goiftrue ({\b FuncState} *  {\i fs}, {\b expdesc} *  {\i e})}}
\par
{\bkmkstart AAAAAAAAOF}
{\bkmkend AAAAAAAAOF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 1116 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_indexed\:lcode.c}
{\xe \v lcode.c\:luaK_indexed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaK_indexed ({\b FuncState} *  {\i fs}, {\b expdesc} *  {\i t}, {\b expdesc} *  {\i k})}}
\par
{\bkmkstart AAAAAAAAOG}
{\bkmkend AAAAAAAAOG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 1261 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_infix\:lcode.c}
{\xe \v lcode.c\:luaK_infix}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaK_infix ({\b FuncState} *  {\i fs}, {\b BinOpr}  {\i op}, {\b expdesc} *  {\i v})}}
\par
{\bkmkstart AAAAAAAAOH}
{\bkmkend AAAAAAAAOH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 1574 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_int\:lcode.c}
{\xe \v lcode.c\:luaK_int}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaK_int ({\b FuncState} *  {\i fs}, int  {\i reg}, {\b lua_Integer}  {\i i})}}
\par
{\bkmkstart AAAAAAAAOI}
{\bkmkend AAAAAAAAOI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 659 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_intK\:lcode.c}
{\xe \v lcode.c\:luaK_intK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int luaK_intK ({\b FuncState} *  {\i fs}, {\b lua_Integer}  {\i n}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAOJ}
{\bkmkend AAAAAAAAOJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 592 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_isKint\:lcode.c}
{\xe \v lcode.c\:luaK_isKint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int luaK_isKint ({\b expdesc} *  {\i e})}}
\par
{\bkmkstart AAAAAAAAOK}
{\bkmkend AAAAAAAAOK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 1211 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_jump\:lcode.c}
{\xe \v lcode.c\:luaK_jump}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int luaK_jump ({\b FuncState} *  {\i fs})}}
\par
{\bkmkstart AAAAAAAAOL}
{\bkmkend AAAAAAAAOL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 198 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_nil\:lcode.c}
{\xe \v lcode.c\:luaK_nil}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaK_nil ({\b FuncState} *  {\i fs}, int  {\i from}, int  {\i n})}}
\par
{\bkmkstart AAAAAAAAOM}
{\bkmkend AAAAAAAAOM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 130 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_numberK\:lcode.c}
{\xe \v lcode.c\:luaK_numberK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int luaK_numberK ({\b FuncState} *  {\i fs}, {\b lua_Number}  {\i r}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAON}
{\bkmkend AAAAAAAAON}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 602 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_patchlist\:lcode.c}
{\xe \v lcode.c\:luaK_patchlist}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaK_patchlist ({\b FuncState} *  {\i fs}, int  {\i list}, int  {\i target})}}
\par
{\bkmkstart AAAAAAAAOO}
{\bkmkend AAAAAAAAOO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 305 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_patchtohere\:lcode.c}
{\xe \v lcode.c\:luaK_patchtohere}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaK_patchtohere ({\b FuncState} *  {\i fs}, int  {\i list})}}
\par
{\bkmkstart AAAAAAAAOP}
{\bkmkend AAAAAAAAOP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 311 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_posfix\:lcode.c}
{\xe \v lcode.c\:luaK_posfix}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaK_posfix ({\b FuncState} *  {\i fs}, {\b BinOpr}  {\i opr}, {\b expdesc} *  {\i e1}, {\b expdesc} *  {\i e2}, int  {\i line})}}
\par
{\bkmkstart AAAAAAAAOQ}
{\bkmkend AAAAAAAAOQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 1642 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_prefix\:lcode.c}
{\xe \v lcode.c\:luaK_prefix}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaK_prefix ({\b FuncState} *  {\i fs}, {\b UnOpr}  {\i op}, {\b expdesc} *  {\i e}, int  {\i line})}}
\par
{\bkmkstart AAAAAAAAOR}
{\bkmkend AAAAAAAAOR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 1553 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_reserveregs\:lcode.c}
{\xe \v lcode.c\:luaK_reserveregs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaK_reserveregs ({\b FuncState} *  {\i fs}, int  {\i n})}}
\par
{\bkmkstart AAAAAAAAOS}
{\bkmkend AAAAAAAAOS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 488 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_ret\:lcode.c}
{\xe \v lcode.c\:luaK_ret}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaK_ret ({\b FuncState} *  {\i fs}, int  {\i first}, int  {\i nret})}}
\par
{\bkmkstart AAAAAAAAOT}
{\bkmkend AAAAAAAAOT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 206 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_self\:lcode.c}
{\xe \v lcode.c\:luaK_self}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaK_self ({\b FuncState} *  {\i fs}, {\b expdesc} *  {\i e}, {\b expdesc} *  {\i key})}}
\par
{\bkmkstart AAAAAAAAOU}
{\bkmkend AAAAAAAAOU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 1068 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_semerror\:lcode.c}
{\xe \v lcode.c\:luaK_semerror}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b l_noret} luaK_semerror ({\b LexState} *  {\i ls}, const char *  {\i msg})}}
\par
{\bkmkstart AAAAAAAAOV}
{\bkmkend AAAAAAAAOV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 45 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_setlist\:lcode.c}
{\xe \v lcode.c\:luaK_setlist}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaK_setlist ({\b FuncState} *  {\i fs}, int  {\i base}, int  {\i nelems}, int  {\i tostore})}}
\par
{\bkmkstart AAAAAAAAOW}
{\bkmkend AAAAAAAAOW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 1750 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_setoneret\:lcode.c}
{\xe \v lcode.c\:luaK_setoneret}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaK_setoneret ({\b FuncState} *  {\i fs}, {\b expdesc} *  {\i e})}}
\par
{\bkmkstart AAAAAAAAOX}
{\bkmkend AAAAAAAAOX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 741 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_setreturns\:lcode.c}
{\xe \v lcode.c\:luaK_setreturns}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaK_setreturns ({\b FuncState} *  {\i fs}, {\b expdesc} *  {\i e}, int  {\i nresults})}}
\par
{\bkmkstart AAAAAAAAOY}
{\bkmkend AAAAAAAAOY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 708 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_settablesize\:lcode.c}
{\xe \v lcode.c\:luaK_settablesize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaK_settablesize ({\b FuncState} *  {\i fs}, int  {\i pc}, int  {\i ra}, int  {\i asize}, int  {\i hsize})}}
\par
{\bkmkstart AAAAAAAAOZ}
{\bkmkend AAAAAAAAOZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 1732 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_storevar\:lcode.c}
{\xe \v lcode.c\:luaK_storevar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaK_storevar ({\b FuncState} *  {\i fs}, {\b expdesc} *  {\i var}, {\b expdesc} *  {\i ex})}}
\par
{\bkmkstart AAAAAAAAPA}
{\bkmkend AAAAAAAAPA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 1031 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v need_value\:lcode.c}
{\xe \v lcode.c\:need_value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int need_value ({\b FuncState} *  {\i fs}, int  {\i list}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAPB}
{\bkmkend AAAAAAAAPB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 884 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v negatecondition\:lcode.c}
{\xe \v lcode.c\:negatecondition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void negatecondition ({\b FuncState} *  {\i fs}, {\b expdesc} *  {\i e}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAPC}
{\bkmkend AAAAAAAAPC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 1084 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v nilK\:lcode.c}
{\xe \v lcode.c\:nilK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int nilK ({\b FuncState} *  {\i fs}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAPD}
{\bkmkend AAAAAAAAPD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 632 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v patchlistaux\:lcode.c}
{\xe \v lcode.c\:patchlistaux}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void patchlistaux ({\b FuncState} *  {\i fs}, int  {\i list}, int  {\i vtarget}, int  {\i reg}, int  {\i dtarget}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAPE}
{\bkmkend AAAAAAAAPE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 287 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v patchtestreg\:lcode.c}
{\xe \v lcode.c\:patchtestreg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int patchtestreg ({\b FuncState} *  {\i fs}, int  {\i node}, int  {\i reg}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAPF}
{\bkmkend AAAAAAAAPF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 258 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v previousinstruction\:lcode.c}
{\xe \v lcode.c\:previousinstruction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b Instruction}* previousinstruction ({\b FuncState} *  {\i fs}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAPG}
{\bkmkend AAAAAAAAPG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 115 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v removelastinstruction\:lcode.c}
{\xe \v lcode.c\:removelastinstruction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void removelastinstruction ({\b FuncState} *  {\i fs}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAPH}
{\bkmkend AAAAAAAAPH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 380 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v removelastlineinfo\:lcode.c}
{\xe \v lcode.c\:removelastlineinfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void removelastlineinfo ({\b FuncState} *  {\i fs}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAPI}
{\bkmkend AAAAAAAAPI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 361 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v removevalues\:lcode.c}
{\xe \v lcode.c\:removevalues}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void removevalues ({\b FuncState} *  {\i fs}, int  {\i list}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAPJ}
{\bkmkend AAAAAAAAPJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 276 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v savelineinfo\:lcode.c}
{\xe \v lcode.c\:savelineinfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void savelineinfo ({\b FuncState} *  {\i fs}, {\b Proto} *  {\i f}, int  {\i line}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAPK}
{\bkmkend AAAAAAAAPK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 337 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v str2K\:lcode.c}
{\xe \v lcode.c\:str2K}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void str2K ({\b FuncState} *  {\i fs}, {\b expdesc} *  {\i e}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAPL}
{\bkmkend AAAAAAAAPL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 724 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v stringK\:lcode.c}
{\xe \v lcode.c\:stringK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int stringK ({\b FuncState} *  {\i fs}, {\b TString} *  {\i s}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAPM}
{\bkmkend AAAAAAAAPM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 579 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v swapexps\:lcode.c}
{\xe \v lcode.c\:swapexps}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void swapexps ({\b expdesc} *  {\i e1}, {\b expdesc} *  {\i e2}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAPN}
{\bkmkend AAAAAAAAPN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 1417 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v tonumeral\:lcode.c}
{\xe \v lcode.c\:tonumeral}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int tonumeral (const {\b expdesc} *  {\i e}, {\b TValue} *  {\i v}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAPO}
{\bkmkend AAAAAAAAPO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 55 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v validop\:lcode.c}
{\xe \v lcode.c\:validop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int validop (int  {\i op}, {\b TValue} *  {\i v1}, {\b TValue} *  {\i v2}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAPP}
{\bkmkend AAAAAAAAPP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 1297 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/gitworkspace/lua/src/lcode.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v D:/gitworkspace/lua/src/lcode.h}
{\xe \v D:/gitworkspace/lua/src/lcode.h}
{\bkmkstart AAAAAAAAPQ}
{\bkmkend AAAAAAAAPQ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "llex.h"}\par
{\f2 #include "lobject.h"}\par
{\f2 #include "lopcodes.h"}\par
{\f2 #include "lparser.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b NO_JUMP}\~ (-1)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b foldbinop}(op)\~ ((op) <= {\b OPR_SHR})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luaK_codeABC}(fs,  o,  a,  b,  c)\~ {\b luaK_codeABCk}(fs,o,a,b,c,0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b getinstruction}(fs,  e)\~ ((fs)->f->code[(e)->u.info])\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luaK_setmultret}(fs,  e)\~ {\b luaK_setreturns}(fs, e, {\b LUA_MULTRET})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luaK_jumpto}(fs,  t)\~ {\b luaK_patchlist}(fs, {\b luaK_jump}(fs), t)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'D0\'CD\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef enum {\b BinOpr} {\b BinOpr}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef enum {\b UnOpr} {\b UnOpr}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'B6\'BE\'D9\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b BinOpr} \{ {\b OPR_ADD}, 
{\b OPR_SUB}, 
{\b OPR_MUL}, 
{\b OPR_MOD}, 
{\b OPR_POW}, 
{\b OPR_DIV}, 
{\b OPR_IDIV}, 
{\b OPR_BAND}, 
{\b OPR_BOR}, 
{\b OPR_BXOR}, 
{\b OPR_SHL}, 
{\b OPR_SHR}, 
{\b OPR_CONCAT}, 
{\b OPR_EQ}, 
{\b OPR_LT}, 
{\b OPR_LE}, 
{\b OPR_NE}, 
{\b OPR_GT}, 
{\b OPR_GE}, 
{\b OPR_AND}, 
{\b OPR_OR}, 
{\b OPR_NOBINOPR}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b UnOpr} \{ {\b OPR_MINUS}, 
{\b OPR_BNOT}, 
{\b OPR_NOT}, 
{\b OPR_LEN}, 
{\b OPR_NOUNOPR}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} int {\b luaK_code} ({\b FuncState} *fs, {\b Instruction} i)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} int {\b luaK_codeABx} ({\b FuncState} *fs, {\b OpCode} o, int A, unsigned int Bx)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} int {\b luaK_codeAsBx} ({\b FuncState} *fs, {\b OpCode} o, int A, int Bx)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} int {\b luaK_codeABCk} ({\b FuncState} *fs, {\b OpCode} o, int A, int B, int C, int k)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} int {\b luaK_isKint} ({\b expdesc} *e)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} int {\b luaK_exp2const} ({\b FuncState} *fs, const {\b expdesc} *e, {\b TValue} *v)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaK_fixline} ({\b FuncState} *fs, int line)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaK_nil} ({\b FuncState} *fs, int from, int n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaK_reserveregs} ({\b FuncState} *fs, int n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaK_checkstack} ({\b FuncState} *fs, int n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaK_int} ({\b FuncState} *fs, int reg, {\b lua_Integer} n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaK_dischargevars} ({\b FuncState} *fs, {\b expdesc} *e)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} int {\b luaK_exp2anyreg} ({\b FuncState} *fs, {\b expdesc} *e)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaK_exp2anyregup} ({\b FuncState} *fs, {\b expdesc} *e)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaK_exp2nextreg} ({\b FuncState} *fs, {\b expdesc} *e)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaK_exp2val} ({\b FuncState} *fs, {\b expdesc} *e)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} int {\b luaK_exp2RK} ({\b FuncState} *fs, {\b expdesc} *e)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaK_self} ({\b FuncState} *fs, {\b expdesc} *e, {\b expdesc} *key)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaK_indexed} ({\b FuncState} *fs, {\b expdesc} *t, {\b expdesc} *k)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaK_goiftrue} ({\b FuncState} *fs, {\b expdesc} *e)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaK_goiffalse} ({\b FuncState} *fs, {\b expdesc} *e)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaK_storevar} ({\b FuncState} *fs, {\b expdesc} *var, {\b expdesc} *e)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaK_setreturns} ({\b FuncState} *fs, {\b expdesc} *e, int nresults)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaK_setoneret} ({\b FuncState} *fs, {\b expdesc} *e)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} int {\b luaK_jump} ({\b FuncState} *fs)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaK_ret} ({\b FuncState} *fs, int first, int nret)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaK_patchlist} ({\b FuncState} *fs, int list, int target)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaK_patchtohere} ({\b FuncState} *fs, int list)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaK_concat} ({\b FuncState} *fs, int *l1, int l2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} int {\b luaK_getlabel} ({\b FuncState} *fs)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaK_prefix} ({\b FuncState} *fs, {\b UnOpr} op, {\b expdesc} *v, int line)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaK_infix} ({\b FuncState} *fs, {\b BinOpr} op, {\b expdesc} *v)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaK_posfix} ({\b FuncState} *fs, {\b BinOpr} op, {\b expdesc} *v1, {\b expdesc} *v2, int line)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaK_settablesize} ({\b FuncState} *fs, int pc, int ra, int asize, int hsize)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaK_setlist} ({\b FuncState} *fs, int base, int nelems, int tostore)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaK_finish} ({\b FuncState} *fs)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} {\b l_noret} {\b luaK_semerror} ({\b LexState} *ls, const char *msg)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v foldbinop\:lcode.h}
{\xe \v lcode.h\:foldbinop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define foldbinop( op)\~ ((op) <= {\b OPR_SHR})}}
\par
{\bkmkstart AAAAAAAAPR}
{\bkmkend AAAAAAAAPR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.h \'B5\'DA 45 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v getinstruction\:lcode.h}
{\xe \v lcode.h\:getinstruction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define getinstruction( fs,  e)\~ ((fs)->f->code[(e)->u.info])}}
\par
{\bkmkstart AAAAAAAAPS}
{\bkmkend AAAAAAAAPS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.h \'B5\'DA 55 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_codeABC\:lcode.h}
{\xe \v lcode.h\:luaK_codeABC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luaK_codeABC( fs,  o,  a,  b,  c)\~ {\b luaK_codeABCk}(fs,o,a,b,c,0)}}
\par
{\bkmkstart AAAAAAAAPT}
{\bkmkend AAAAAAAAPT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.h \'B5\'DA 48 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_jumpto\:lcode.h}
{\xe \v lcode.h\:luaK_jumpto}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luaK_jumpto( fs,  t)\~ {\b luaK_patchlist}(fs, {\b luaK_jump}(fs), t)}}
\par
{\bkmkstart AAAAAAAAPU}
{\bkmkend AAAAAAAAPU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.h \'B5\'DA 60 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_setmultret\:lcode.h}
{\xe \v lcode.h\:luaK_setmultret}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luaK_setmultret( fs,  e)\~ {\b luaK_setreturns}(fs, e, {\b LUA_MULTRET})}}
\par
{\bkmkstart AAAAAAAAPV}
{\bkmkend AAAAAAAAPV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.h \'B5\'DA 58 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v NO_JUMP\:lcode.h}
{\xe \v lcode.h\:NO_JUMP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define NO_JUMP\~ (-1)}}
\par
{\bkmkstart AAAAAAAAPW}
{\bkmkend AAAAAAAAPW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.h \'B5\'DA 20 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'D0\'CD\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v BinOpr\:lcode.h}
{\xe \v lcode.h\:BinOpr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef enum {\b BinOpr} {\b BinOpr}}}
\par
{\bkmkstart AAAAAAAAPX}
{\bkmkend AAAAAAAAPX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v UnOpr\:lcode.h}
{\xe \v lcode.h\:UnOpr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef enum {\b UnOpr} {\b UnOpr}}}
\par
{\bkmkstart AAAAAAAAPY}
{\bkmkend AAAAAAAAPY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'B6\'BE\'D9\'C0\'E0\'D0\'CD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v BinOpr\:lcode.h}
{\xe \v lcode.h\:BinOpr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b BinOpr}}}
\par
{\bkmkstart AAAAAAAAPZ}
{\bkmkend AAAAAAAAPZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C3\'B6\'BE\'D9\'D6\'B5:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v OPR_ADD\:lcode.h}
{\xe \v lcode.h\:OPR_ADD}
{\qr OPR_ADD{\bkmkstart AAAAAAAAQA}
{\bkmkend AAAAAAAAQA}
\cell }{\cell }{\row }
{\xe \v OPR_SUB\:lcode.h}
{\xe \v lcode.h\:OPR_SUB}
{\qr OPR_SUB{\bkmkstart AAAAAAAAQB}
{\bkmkend AAAAAAAAQB}
\cell }{\cell }{\row }
{\xe \v OPR_MUL\:lcode.h}
{\xe \v lcode.h\:OPR_MUL}
{\qr OPR_MUL{\bkmkstart AAAAAAAAQC}
{\bkmkend AAAAAAAAQC}
\cell }{\cell }{\row }
{\xe \v OPR_MOD\:lcode.h}
{\xe \v lcode.h\:OPR_MOD}
{\qr OPR_MOD{\bkmkstart AAAAAAAAQD}
{\bkmkend AAAAAAAAQD}
\cell }{\cell }{\row }
{\xe \v OPR_POW\:lcode.h}
{\xe \v lcode.h\:OPR_POW}
{\qr OPR_POW{\bkmkstart AAAAAAAAQE}
{\bkmkend AAAAAAAAQE}
\cell }{\cell }{\row }
{\xe \v OPR_DIV\:lcode.h}
{\xe \v lcode.h\:OPR_DIV}
{\qr OPR_DIV{\bkmkstart AAAAAAAAQF}
{\bkmkend AAAAAAAAQF}
\cell }{\cell }{\row }
{\xe \v OPR_IDIV\:lcode.h}
{\xe \v lcode.h\:OPR_IDIV}
{\qr OPR_IDIV{\bkmkstart AAAAAAAAQG}
{\bkmkend AAAAAAAAQG}
\cell }{\cell }{\row }
{\xe \v OPR_BAND\:lcode.h}
{\xe \v lcode.h\:OPR_BAND}
{\qr OPR_BAND{\bkmkstart AAAAAAAAQH}
{\bkmkend AAAAAAAAQH}
\cell }{\cell }{\row }
{\xe \v OPR_BOR\:lcode.h}
{\xe \v lcode.h\:OPR_BOR}
{\qr OPR_BOR{\bkmkstart AAAAAAAAQI}
{\bkmkend AAAAAAAAQI}
\cell }{\cell }{\row }
{\xe \v OPR_BXOR\:lcode.h}
{\xe \v lcode.h\:OPR_BXOR}
{\qr OPR_BXOR{\bkmkstart AAAAAAAAQJ}
{\bkmkend AAAAAAAAQJ}
\cell }{\cell }{\row }
{\xe \v OPR_SHL\:lcode.h}
{\xe \v lcode.h\:OPR_SHL}
{\qr OPR_SHL{\bkmkstart AAAAAAAAQK}
{\bkmkend AAAAAAAAQK}
\cell }{\cell }{\row }
{\xe \v OPR_SHR\:lcode.h}
{\xe \v lcode.h\:OPR_SHR}
{\qr OPR_SHR{\bkmkstart AAAAAAAAQL}
{\bkmkend AAAAAAAAQL}
\cell }{\cell }{\row }
{\xe \v OPR_CONCAT\:lcode.h}
{\xe \v lcode.h\:OPR_CONCAT}
{\qr OPR_CONCAT{\bkmkstart AAAAAAAAQM}
{\bkmkend AAAAAAAAQM}
\cell }{\cell }{\row }
{\xe \v OPR_EQ\:lcode.h}
{\xe \v lcode.h\:OPR_EQ}
{\qr OPR_EQ{\bkmkstart AAAAAAAAQN}
{\bkmkend AAAAAAAAQN}
\cell }{\cell }{\row }
{\xe \v OPR_LT\:lcode.h}
{\xe \v lcode.h\:OPR_LT}
{\qr OPR_LT{\bkmkstart AAAAAAAAQO}
{\bkmkend AAAAAAAAQO}
\cell }{\cell }{\row }
{\xe \v OPR_LE\:lcode.h}
{\xe \v lcode.h\:OPR_LE}
{\qr OPR_LE{\bkmkstart AAAAAAAAQP}
{\bkmkend AAAAAAAAQP}
\cell }{\cell }{\row }
{\xe \v OPR_NE\:lcode.h}
{\xe \v lcode.h\:OPR_NE}
{\qr OPR_NE{\bkmkstart AAAAAAAAQQ}
{\bkmkend AAAAAAAAQQ}
\cell }{\cell }{\row }
{\xe \v OPR_GT\:lcode.h}
{\xe \v lcode.h\:OPR_GT}
{\qr OPR_GT{\bkmkstart AAAAAAAAQR}
{\bkmkend AAAAAAAAQR}
\cell }{\cell }{\row }
{\xe \v OPR_GE\:lcode.h}
{\xe \v lcode.h\:OPR_GE}
{\qr OPR_GE{\bkmkstart AAAAAAAAQS}
{\bkmkend AAAAAAAAQS}
\cell }{\cell }{\row }
{\xe \v OPR_AND\:lcode.h}
{\xe \v lcode.h\:OPR_AND}
{\qr OPR_AND{\bkmkstart AAAAAAAAQT}
{\bkmkend AAAAAAAAQT}
\cell }{\cell }{\row }
{\xe \v OPR_OR\:lcode.h}
{\xe \v lcode.h\:OPR_OR}
{\qr OPR_OR{\bkmkstart AAAAAAAAQU}
{\bkmkend AAAAAAAAQU}
\cell }{\cell }{\row }
{\xe \v OPR_NOBINOPR\:lcode.h}
{\xe \v lcode.h\:OPR_NOBINOPR}
{\qr OPR_NOBINOPR{\bkmkstart AAAAAAAAQV}
{\bkmkend AAAAAAAAQV}
\cell }{\cell }{\row }
}
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.h \'B5\'DA 26 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v UnOpr\:lcode.h}
{\xe \v lcode.h\:UnOpr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b UnOpr}}}
\par
{\bkmkstart AAAAAAAAQW}
{\bkmkend AAAAAAAAQW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C3\'B6\'BE\'D9\'D6\'B5:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v OPR_MINUS\:lcode.h}
{\xe \v lcode.h\:OPR_MINUS}
{\qr OPR_MINUS{\bkmkstart AAAAAAAAQX}
{\bkmkend AAAAAAAAQX}
\cell }{\cell }{\row }
{\xe \v OPR_BNOT\:lcode.h}
{\xe \v lcode.h\:OPR_BNOT}
{\qr OPR_BNOT{\bkmkstart AAAAAAAAQY}
{\bkmkend AAAAAAAAQY}
\cell }{\cell }{\row }
{\xe \v OPR_NOT\:lcode.h}
{\xe \v lcode.h\:OPR_NOT}
{\qr OPR_NOT{\bkmkstart AAAAAAAAQZ}
{\bkmkend AAAAAAAAQZ}
\cell }{\cell }{\row }
{\xe \v OPR_LEN\:lcode.h}
{\xe \v lcode.h\:OPR_LEN}
{\qr OPR_LEN{\bkmkstart AAAAAAAARA}
{\bkmkend AAAAAAAARA}
\cell }{\cell }{\row }
{\xe \v OPR_NOUNOPR\:lcode.h}
{\xe \v lcode.h\:OPR_NOUNOPR}
{\qr OPR_NOUNOPR{\bkmkstart AAAAAAAARB}
{\bkmkend AAAAAAAARB}
\cell }{\cell }{\row }
}
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.h \'B5\'DA 51 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v luaK_checkstack\:lcode.h}
{\xe \v lcode.h\:luaK_checkstack}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaK_checkstack ({\b FuncState} *  {\i fs}, int  {\i n})}}
\par
{\bkmkstart AAAAAAAARC}
{\bkmkend AAAAAAAARC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 474 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_code\:lcode.h}
{\xe \v lcode.h\:luaK_code}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} int luaK_code ({\b FuncState} *  {\i fs}, {\b Instruction}  {\i i})}}
\par
{\bkmkstart AAAAAAAARD}
{\bkmkend AAAAAAAARD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 390 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_codeABCk\:lcode.h}
{\xe \v lcode.h\:luaK_codeABCk}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} int luaK_codeABCk ({\b FuncState} *  {\i fs}, {\b OpCode}  {\i o}, int  {\i A}, int  {\i B}, int  {\i C}, int  {\i k})}}
\par
{\bkmkstart AAAAAAAARE}
{\bkmkend AAAAAAAARE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 405 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_codeABx\:lcode.h}
{\xe \v lcode.h\:luaK_codeABx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} int luaK_codeABx ({\b FuncState} *  {\i fs}, {\b OpCode}  {\i o}, int  {\i A}, unsigned int  {\i Bx})}}
\par
{\bkmkstart AAAAAAAARF}
{\bkmkend AAAAAAAARF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 416 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_codeAsBx\:lcode.h}
{\xe \v lcode.h\:luaK_codeAsBx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} int luaK_codeAsBx ({\b FuncState} *  {\i fs}, {\b OpCode}  {\i o}, int  {\i A}, int  {\i Bx})}}
\par
{\bkmkstart AAAAAAAARG}
{\bkmkend AAAAAAAARG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 426 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_concat\:lcode.h}
{\xe \v lcode.h\:luaK_concat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaK_concat ({\b FuncState} *  {\i fs}, int *  {\i l1}, int  {\i l2})}}
\par
{\bkmkstart AAAAAAAARH}
{\bkmkend AAAAAAAARH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 180 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_dischargevars\:lcode.h}
{\xe \v lcode.h\:luaK_dischargevars}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaK_dischargevars ({\b FuncState} *  {\i fs}, {\b expdesc} *  {\i e})}}
\par
{\bkmkstart AAAAAAAARI}
{\bkmkend AAAAAAAARI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 759 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_exp2anyreg\:lcode.h}
{\xe \v lcode.h\:luaK_exp2anyreg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} int luaK_exp2anyreg ({\b FuncState} *  {\i fs}, {\b expdesc} *  {\i e})}}
\par
{\bkmkstart AAAAAAAARJ}
{\bkmkend AAAAAAAARJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 940 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_exp2anyregup\:lcode.h}
{\xe \v lcode.h\:luaK_exp2anyregup}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaK_exp2anyregup ({\b FuncState} *  {\i fs}, {\b expdesc} *  {\i e})}}
\par
{\bkmkstart AAAAAAAARK}
{\bkmkend AAAAAAAARK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 959 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_exp2const\:lcode.h}
{\xe \v lcode.h\:luaK_exp2const}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} int luaK_exp2const ({\b FuncState} *  {\i fs}, const {\b expdesc} *  {\i e}, {\b TValue} *  {\i v})}}
\par
{\bkmkstart AAAAAAAARL}
{\bkmkend AAAAAAAARL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 83 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_exp2nextreg\:lcode.h}
{\xe \v lcode.h\:luaK_exp2nextreg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaK_exp2nextreg ({\b FuncState} *  {\i fs}, {\b expdesc} *  {\i e})}}
\par
{\bkmkstart AAAAAAAARM}
{\bkmkend AAAAAAAARM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 928 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_exp2RK\:lcode.h}
{\xe \v lcode.h\:luaK_exp2RK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} int luaK_exp2RK ({\b FuncState} *  {\i fs}, {\b expdesc} *  {\i e})}}
\par
{\bkmkstart AAAAAAAARN}
{\bkmkend AAAAAAAARN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 1011 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_exp2val\:lcode.h}
{\xe \v lcode.h\:luaK_exp2val}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaK_exp2val ({\b FuncState} *  {\i fs}, {\b expdesc} *  {\i e})}}
\par
{\bkmkstart AAAAAAAARO}
{\bkmkend AAAAAAAARO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 969 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_finish\:lcode.h}
{\xe \v lcode.h\:luaK_finish}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaK_finish ({\b FuncState} *  {\i fs})}}
\par
{\bkmkstart AAAAAAAARP}
{\bkmkend AAAAAAAARP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 1786 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_fixline\:lcode.h}
{\xe \v lcode.h\:luaK_fixline}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaK_fixline ({\b FuncState} *  {\i fs}, int  {\i line})}}
\par
{\bkmkstart AAAAAAAARQ}
{\bkmkend AAAAAAAARQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 1726 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_getlabel\:lcode.h}
{\xe \v lcode.h\:luaK_getlabel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} int luaK_getlabel ({\b FuncState} *  {\i fs})}}
\par
{\bkmkstart AAAAAAAARR}
{\bkmkend AAAAAAAARR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 231 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_goiffalse\:lcode.h}
{\xe \v lcode.h\:luaK_goiffalse}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaK_goiffalse ({\b FuncState} *  {\i fs}, {\b expdesc} *  {\i e})}}
\par
{\bkmkstart AAAAAAAARS}
{\bkmkend AAAAAAAARS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 1143 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_goiftrue\:lcode.h}
{\xe \v lcode.h\:luaK_goiftrue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaK_goiftrue ({\b FuncState} *  {\i fs}, {\b expdesc} *  {\i e})}}
\par
{\bkmkstart AAAAAAAART}
{\bkmkend AAAAAAAART}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 1116 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_indexed\:lcode.h}
{\xe \v lcode.h\:luaK_indexed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaK_indexed ({\b FuncState} *  {\i fs}, {\b expdesc} *  {\i t}, {\b expdesc} *  {\i k})}}
\par
{\bkmkstart AAAAAAAARU}
{\bkmkend AAAAAAAARU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 1261 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_infix\:lcode.h}
{\xe \v lcode.h\:luaK_infix}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaK_infix ({\b FuncState} *  {\i fs}, {\b BinOpr}  {\i op}, {\b expdesc} *  {\i v})}}
\par
{\bkmkstart AAAAAAAARV}
{\bkmkend AAAAAAAARV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 1574 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_int\:lcode.h}
{\xe \v lcode.h\:luaK_int}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaK_int ({\b FuncState} *  {\i fs}, int  {\i reg}, {\b lua_Integer}  {\i n})}}
\par
{\bkmkstart AAAAAAAARW}
{\bkmkend AAAAAAAARW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 659 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_isKint\:lcode.h}
{\xe \v lcode.h\:luaK_isKint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} int luaK_isKint ({\b expdesc} *  {\i e})}}
\par
{\bkmkstart AAAAAAAARX}
{\bkmkend AAAAAAAARX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 1211 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_jump\:lcode.h}
{\xe \v lcode.h\:luaK_jump}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} int luaK_jump ({\b FuncState} *  {\i fs})}}
\par
{\bkmkstart AAAAAAAARY}
{\bkmkend AAAAAAAARY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 198 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_nil\:lcode.h}
{\xe \v lcode.h\:luaK_nil}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaK_nil ({\b FuncState} *  {\i fs}, int  {\i from}, int  {\i n})}}
\par
{\bkmkstart AAAAAAAARZ}
{\bkmkend AAAAAAAARZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 130 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_patchlist\:lcode.h}
{\xe \v lcode.h\:luaK_patchlist}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaK_patchlist ({\b FuncState} *  {\i fs}, int  {\i list}, int  {\i target})}}
\par
{\bkmkstart AAAAAAAASA}
{\bkmkend AAAAAAAASA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 305 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_patchtohere\:lcode.h}
{\xe \v lcode.h\:luaK_patchtohere}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaK_patchtohere ({\b FuncState} *  {\i fs}, int  {\i list})}}
\par
{\bkmkstart AAAAAAAASB}
{\bkmkend AAAAAAAASB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 311 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_posfix\:lcode.h}
{\xe \v lcode.h\:luaK_posfix}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaK_posfix ({\b FuncState} *  {\i fs}, {\b BinOpr}  {\i op}, {\b expdesc} *  {\i v1}, {\b expdesc} *  {\i v2}, int  {\i line})}}
\par
{\bkmkstart AAAAAAAASC}
{\bkmkend AAAAAAAASC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 1642 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_prefix\:lcode.h}
{\xe \v lcode.h\:luaK_prefix}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaK_prefix ({\b FuncState} *  {\i fs}, {\b UnOpr}  {\i op}, {\b expdesc} *  {\i v}, int  {\i line})}}
\par
{\bkmkstart AAAAAAAASD}
{\bkmkend AAAAAAAASD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 1553 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_reserveregs\:lcode.h}
{\xe \v lcode.h\:luaK_reserveregs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaK_reserveregs ({\b FuncState} *  {\i fs}, int  {\i n})}}
\par
{\bkmkstart AAAAAAAASE}
{\bkmkend AAAAAAAASE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 488 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_ret\:lcode.h}
{\xe \v lcode.h\:luaK_ret}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaK_ret ({\b FuncState} *  {\i fs}, int  {\i first}, int  {\i nret})}}
\par
{\bkmkstart AAAAAAAASF}
{\bkmkend AAAAAAAASF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 206 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_self\:lcode.h}
{\xe \v lcode.h\:luaK_self}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaK_self ({\b FuncState} *  {\i fs}, {\b expdesc} *  {\i e}, {\b expdesc} *  {\i key})}}
\par
{\bkmkstart AAAAAAAASG}
{\bkmkend AAAAAAAASG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 1068 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_semerror\:lcode.h}
{\xe \v lcode.h\:luaK_semerror}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} {\b l_noret} luaK_semerror ({\b LexState} *  {\i ls}, const char *  {\i msg})}}
\par
{\bkmkstart AAAAAAAASH}
{\bkmkend AAAAAAAASH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 45 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_setlist\:lcode.h}
{\xe \v lcode.h\:luaK_setlist}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaK_setlist ({\b FuncState} *  {\i fs}, int  {\i base}, int  {\i nelems}, int  {\i tostore})}}
\par
{\bkmkstart AAAAAAAASI}
{\bkmkend AAAAAAAASI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 1750 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_setoneret\:lcode.h}
{\xe \v lcode.h\:luaK_setoneret}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaK_setoneret ({\b FuncState} *  {\i fs}, {\b expdesc} *  {\i e})}}
\par
{\bkmkstart AAAAAAAASJ}
{\bkmkend AAAAAAAASJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 741 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_setreturns\:lcode.h}
{\xe \v lcode.h\:luaK_setreturns}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaK_setreturns ({\b FuncState} *  {\i fs}, {\b expdesc} *  {\i e}, int  {\i nresults})}}
\par
{\bkmkstart AAAAAAAASK}
{\bkmkend AAAAAAAASK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 708 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_settablesize\:lcode.h}
{\xe \v lcode.h\:luaK_settablesize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaK_settablesize ({\b FuncState} *  {\i fs}, int  {\i pc}, int  {\i ra}, int  {\i asize}, int  {\i hsize})}}
\par
{\bkmkstart AAAAAAAASL}
{\bkmkend AAAAAAAASL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 1732 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaK_storevar\:lcode.h}
{\xe \v lcode.h\:luaK_storevar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaK_storevar ({\b FuncState} *  {\i fs}, {\b expdesc} *  {\i var}, {\b expdesc} *  {\i e})}}
\par
{\bkmkstart AAAAAAAASM}
{\bkmkend AAAAAAAASM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcode.c \'B5\'DA 1031 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/gitworkspace/lua/src/lcorolib.c \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v D:/gitworkspace/lua/src/lcorolib.c}
{\xe \v D:/gitworkspace/lua/src/lcorolib.c}
{\bkmkstart AAAAAAAASN}
{\bkmkend AAAAAAAASN}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "lprefix.h"}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include "lua.h"}\par
{\f2 #include "lauxlib.h"}\par
{\f2 #include "lualib.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lcorolib_c}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_LIB}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b COS_RUN}\~ 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b COS_DEAD}\~ 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b COS_YIELD}\~ 2\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b COS_NORM}\~ 3\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b lua_State} * {\b getco} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b auxresume} ({\b lua_State} *L, {\b lua_State} *co, int narg)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b luaB_coresume} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b luaB_auxwrap} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b luaB_cocreate} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b luaB_cowrap} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b luaB_yield} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b auxstatus} ({\b lua_State} *L, {\b lua_State} *co)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b luaB_costatus} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b luaB_yieldable} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b luaB_corunning} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b luaB_close} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAMOD_API} int {\b luaopen_coroutine} ({\b lua_State} *L)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const char *const {\b statname} []\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const {\b luaL_Reg} {\b co_funcs} []\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v COS_DEAD\:lcorolib.c}
{\xe \v lcorolib.c\:COS_DEAD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define COS_DEAD\~ 1}}
\par
{\bkmkstart AAAAAAAASO}
{\bkmkend AAAAAAAASO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcorolib.c \'B5\'DA 114 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v COS_NORM\:lcorolib.c}
{\xe \v lcorolib.c\:COS_NORM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define COS_NORM\~ 3}}
\par
{\bkmkstart AAAAAAAASP}
{\bkmkend AAAAAAAASP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcorolib.c \'B5\'DA 116 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v COS_RUN\:lcorolib.c}
{\xe \v lcorolib.c\:COS_RUN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define COS_RUN\~ 0}}
\par
{\bkmkstart AAAAAAAASQ}
{\bkmkend AAAAAAAASQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcorolib.c \'B5\'DA 113 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v COS_YIELD\:lcorolib.c}
{\xe \v lcorolib.c\:COS_YIELD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define COS_YIELD\~ 2}}
\par
{\bkmkstart AAAAAAAASR}
{\bkmkend AAAAAAAASR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcorolib.c \'B5\'DA 115 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lcorolib_c\:lcorolib.c}
{\xe \v lcorolib.c\:lcorolib_c}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lcorolib_c}}
\par
{\bkmkstart AAAAAAAASS}
{\bkmkend AAAAAAAASS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcorolib.c \'B5\'DA 7 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_LIB\:lcorolib.c}
{\xe \v lcorolib.c\:LUA_LIB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_LIB}}
\par
{\bkmkstart AAAAAAAAST}
{\bkmkend AAAAAAAAST}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcorolib.c \'B5\'DA 8 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v auxresume\:lcorolib.c}
{\xe \v lcorolib.c\:auxresume}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int auxresume ({\b lua_State} *  {\i L}, {\b lua_State} *  {\i co}, int  {\i narg}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAASU}
{\bkmkend AAAAAAAASU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcorolib.c \'B5\'DA 32 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v auxstatus\:lcorolib.c}
{\xe \v lcorolib.c\:auxstatus}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int auxstatus ({\b lua_State} *  {\i L}, {\b lua_State} *  {\i co}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAASV}
{\bkmkend AAAAAAAASV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcorolib.c \'B5\'DA 123 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v getco\:lcorolib.c}
{\xe \v lcorolib.c\:getco}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b lua_State}* getco ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAASW}
{\bkmkend AAAAAAAASW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcorolib.c \'B5\'DA 21 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaB_auxwrap\:lcorolib.c}
{\xe \v lcorolib.c\:luaB_auxwrap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int luaB_auxwrap ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAASX}
{\bkmkend AAAAAAAASX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcorolib.c \'B5\'DA 73 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaB_close\:lcorolib.c}
{\xe \v lcorolib.c\:luaB_close}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int luaB_close ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAASY}
{\bkmkend AAAAAAAASY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcorolib.c \'B5\'DA 166 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaB_cocreate\:lcorolib.c}
{\xe \v lcorolib.c\:luaB_cocreate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int luaB_cocreate ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAASZ}
{\bkmkend AAAAAAAASZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcorolib.c \'B5\'DA 91 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaB_coresume\:lcorolib.c}
{\xe \v lcorolib.c\:luaB_coresume}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int luaB_coresume ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAATA}
{\bkmkend AAAAAAAATA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcorolib.c \'B5\'DA 56 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaB_corunning\:lcorolib.c}
{\xe \v lcorolib.c\:luaB_corunning}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int luaB_corunning ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAATB}
{\bkmkend AAAAAAAATB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcorolib.c \'B5\'DA 159 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaB_costatus\:lcorolib.c}
{\xe \v lcorolib.c\:luaB_costatus}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int luaB_costatus ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAATC}
{\bkmkend AAAAAAAATC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcorolib.c \'B5\'DA 145 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaB_cowrap\:lcorolib.c}
{\xe \v lcorolib.c\:luaB_cowrap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int luaB_cowrap ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAATD}
{\bkmkend AAAAAAAATD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcorolib.c \'B5\'DA 101 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaB_yield\:lcorolib.c}
{\xe \v lcorolib.c\:luaB_yield}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int luaB_yield ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAATE}
{\bkmkend AAAAAAAATE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcorolib.c \'B5\'DA 108 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaB_yieldable\:lcorolib.c}
{\xe \v lcorolib.c\:luaB_yieldable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int luaB_yieldable ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAATF}
{\bkmkend AAAAAAAATF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcorolib.c \'B5\'DA 152 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaopen_coroutine\:lcorolib.c}
{\xe \v lcorolib.c\:luaopen_coroutine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAMOD_API} int luaopen_coroutine ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAAATG}
{\bkmkend AAAAAAAATG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcorolib.c \'B5\'DA 202 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v co_funcs\:lcorolib.c}
{\xe \v lcorolib.c\:co_funcs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b luaL_Reg} co_funcs[]{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAATH}
{\bkmkend AAAAAAAATH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'B3\'F5\'CA\'BC\'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{\par
  \{{\cf22 "create"}, luaB_cocreate\},\par
  \{{\cf22 "resume"}, luaB_coresume\},\par
  \{{\cf22 "running"}, luaB_corunning\},\par
  \{{\cf22 "status"}, luaB_costatus\},\par
  \{{\cf22 "wrap"}, luaB_cowrap\},\par
  \{{\cf22 "yield"}, luaB_yield\},\par
  \{{\cf22 "isyieldable"}, luaB_yieldable\},\par
  \{{\cf22 "close"}, luaB_close\},\par
  \{NULL, NULL\}\par
\}\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE lcorolib.c \'B5\'DA 188 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v statname\:lcorolib.c}
{\xe \v lcorolib.c\:statname}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* const statname[]{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAATI}
{\bkmkend AAAAAAAATI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'B3\'F5\'CA\'BC\'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid =\par
  \{{\cf22 "running"}, {\cf22 "dead"}, {\cf22 "suspended"}, {\cf22 "normal"}\}\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE lcorolib.c \'B5\'DA 119 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/gitworkspace/lua/src/lctype.c \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v D:/gitworkspace/lua/src/lctype.c}
{\xe \v D:/gitworkspace/lua/src/lctype.c}
{\bkmkstart AAAAAAAATJ}
{\bkmkend AAAAAAAATJ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "lprefix.h"}\par
{\f2 #include "lctype.h"}\par
{\f2 #include <limits.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lctype_c}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_CORE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b NONA}\~ 0x00	/* default */\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_DDEF} const {\b lu_byte} {\b luai_ctype_} [UCHAR_MAX+2]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v lctype_c\:lctype.c}
{\xe \v lctype.c\:lctype_c}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lctype_c}}
\par
{\bkmkstart AAAAAAAATK}
{\bkmkend AAAAAAAATK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lctype.c \'B5\'DA 7 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_CORE\:lctype.c}
{\xe \v lctype.c\:LUA_CORE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_CORE}}
\par
{\bkmkstart AAAAAAAATL}
{\bkmkend AAAAAAAATL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lctype.c \'B5\'DA 8 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v NONA\:lctype.c}
{\xe \v lctype.c\:NONA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define NONA\~ 0x00	/* default */}}
\par
{\bkmkstart AAAAAAAATM}
{\bkmkend AAAAAAAATM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lctype.c \'B5\'DA 24 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v luai_ctype_\:lctype.c}
{\xe \v lctype.c\:luai_ctype_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_DDEF} const {\b lu_byte} luai_ctype_[UCHAR_MAX+2]}}
\par
{\bkmkstart AAAAAAAATN}
{\bkmkend AAAAAAAATN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lctype.c \'B5\'DA 28 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/gitworkspace/lua/src/lctype.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v D:/gitworkspace/lua/src/lctype.h}
{\xe \v D:/gitworkspace/lua/src/lctype.h}
{\bkmkstart AAAAAAAATO}
{\bkmkend AAAAAAAATO}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "lua.h"}\par
{\f2 #include <limits.h>}\par
{\f2 #include "llimits.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_USE_CTYPE}\~ 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ALPHABIT}\~ 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DIGITBIT}\~ 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PRINTBIT}\~ 2\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SPACEBIT}\~ 3\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b XDIGITBIT}\~ 4\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MASK}(B)\~ (1 << (B))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b testprop}(c,  p)\~ ({\b luai_ctype_}[(c)+1] & (p))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lislalpha}(c)\~ {\b testprop}(c, {\b MASK}({\b ALPHABIT}))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lislalnum}(c)\~ {\b testprop}(c, ({\b MASK}({\b ALPHABIT}) | {\b MASK}({\b DIGITBIT})))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lisdigit}(c)\~ {\b testprop}(c, {\b MASK}({\b DIGITBIT}))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lisspace}(c)\~ {\b testprop}(c, {\b MASK}({\b SPACEBIT}))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lisprint}(c)\~ {\b testprop}(c, {\b MASK}({\b PRINTBIT}))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lisxdigit}(c)\~ {\b testprop}(c, {\b MASK}({\b XDIGITBIT}))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ltolower}(c)\~ ((c) | ('A' ^ 'a'))\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v ALPHABIT\:lctype.h}
{\xe \v lctype.h\:ALPHABIT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ALPHABIT\~ 0}}
\par
{\bkmkstart AAAAAAAATP}
{\bkmkend AAAAAAAATP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lctype.h \'B5\'DA 39 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v DIGITBIT\:lctype.h}
{\xe \v lctype.h\:DIGITBIT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DIGITBIT\~ 1}}
\par
{\bkmkstart AAAAAAAATQ}
{\bkmkend AAAAAAAATQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lctype.h \'B5\'DA 40 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lisdigit\:lctype.h}
{\xe \v lctype.h\:lisdigit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lisdigit( c)\~ {\b testprop}(c, {\b MASK}({\b DIGITBIT}))}}
\par
{\bkmkstart AAAAAAAATR}
{\bkmkend AAAAAAAATR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lctype.h \'B5\'DA 59 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lislalnum\:lctype.h}
{\xe \v lctype.h\:lislalnum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lislalnum( c)\~ {\b testprop}(c, ({\b MASK}({\b ALPHABIT}) | {\b MASK}({\b DIGITBIT})))}}
\par
{\bkmkstart AAAAAAAATS}
{\bkmkend AAAAAAAATS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lctype.h \'B5\'DA 58 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lislalpha\:lctype.h}
{\xe \v lctype.h\:lislalpha}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lislalpha( c)\~ {\b testprop}(c, {\b MASK}({\b ALPHABIT}))}}
\par
{\bkmkstart AAAAAAAATT}
{\bkmkend AAAAAAAATT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lctype.h \'B5\'DA 57 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lisprint\:lctype.h}
{\xe \v lctype.h\:lisprint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lisprint( c)\~ {\b testprop}(c, {\b MASK}({\b PRINTBIT}))}}
\par
{\bkmkstart AAAAAAAATU}
{\bkmkend AAAAAAAATU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lctype.h \'B5\'DA 61 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lisspace\:lctype.h}
{\xe \v lctype.h\:lisspace}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lisspace( c)\~ {\b testprop}(c, {\b MASK}({\b SPACEBIT}))}}
\par
{\bkmkstart AAAAAAAATV}
{\bkmkend AAAAAAAATV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lctype.h \'B5\'DA 60 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lisxdigit\:lctype.h}
{\xe \v lctype.h\:lisxdigit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lisxdigit( c)\~ {\b testprop}(c, {\b MASK}({\b XDIGITBIT}))}}
\par
{\bkmkstart AAAAAAAATW}
{\bkmkend AAAAAAAATW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lctype.h \'B5\'DA 62 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v ltolower\:lctype.h}
{\xe \v lctype.h\:ltolower}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ltolower( c)\~ ((c) | ('A' ^ 'a'))}}
\par
{\bkmkstart AAAAAAAATX}
{\bkmkend AAAAAAAATX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lctype.h \'B5\'DA 67 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_USE_CTYPE\:lctype.h}
{\xe \v lctype.h\:LUA_USE_CTYPE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_USE_CTYPE\~ 0}}
\par
{\bkmkstart AAAAAAAATY}
{\bkmkend AAAAAAAATY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lctype.h \'B5\'DA 23 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v MASK\:lctype.h}
{\xe \v lctype.h\:MASK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MASK( B)\~ (1 << (B))}}
\par
{\bkmkstart AAAAAAAATZ}
{\bkmkend AAAAAAAATZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lctype.h \'B5\'DA 46 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v PRINTBIT\:lctype.h}
{\xe \v lctype.h\:PRINTBIT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PRINTBIT\~ 2}}
\par
{\bkmkstart AAAAAAAAUA}
{\bkmkend AAAAAAAAUA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lctype.h \'B5\'DA 41 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v SPACEBIT\:lctype.h}
{\xe \v lctype.h\:SPACEBIT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SPACEBIT\~ 3}}
\par
{\bkmkstart AAAAAAAAUB}
{\bkmkend AAAAAAAAUB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lctype.h \'B5\'DA 42 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v testprop\:lctype.h}
{\xe \v lctype.h\:testprop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define testprop( c,  p)\~ ({\b luai_ctype_}[(c)+1] & (p))}}
\par
{\bkmkstart AAAAAAAAUC}
{\bkmkend AAAAAAAAUC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lctype.h \'B5\'DA 52 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v XDIGITBIT\:lctype.h}
{\xe \v lctype.h\:XDIGITBIT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define XDIGITBIT\~ 4}}
\par
{\bkmkstart AAAAAAAAUD}
{\bkmkend AAAAAAAAUD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lctype.h \'B5\'DA 43 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/gitworkspace/lua/src/ldblib.c \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v D:/gitworkspace/lua/src/ldblib.c}
{\xe \v D:/gitworkspace/lua/src/ldblib.c}
{\bkmkstart AAAAAAAAUE}
{\bkmkend AAAAAAAAUE}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "lprefix.h"}\par
{\f2 #include <stdio.h>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <string.h>}\par
{\f2 #include "lua.h"}\par
{\f2 #include "lauxlib.h"}\par
{\f2 #include "lualib.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ldblib_c}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_LIB}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b checkstack} ({\b lua_State} *L, {\b lua_State} *L1, int n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b db_getregistry} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b db_getmetatable} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b db_setmetatable} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b db_getuservalue} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b db_setuservalue} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b lua_State} * {\b getthread} ({\b lua_State} *L, int *arg)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b settabss} ({\b lua_State} *L, const char *k, const char *v)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b settabsi} ({\b lua_State} *L, const char *k, int v)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b settabsb} ({\b lua_State} *L, const char *k, int v)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b treatstackoption} ({\b lua_State} *L, {\b lua_State} *L1, const char *fname)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b db_getinfo} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b db_getlocal} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b db_setlocal} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b auxupvalue} ({\b lua_State} *L, int get)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b db_getupvalue} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b db_setupvalue} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b checkupval} ({\b lua_State} *L, int argf, int argnup)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b db_upvalueid} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b db_upvaluejoin} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b hookf} ({\b lua_State} *L, {\b lua_Debug} *ar)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b makemask} (const char *smask, int count)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static char * {\b unmakemask} (int mask, char *smask)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b db_sethook} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b db_gethook} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b db_debug} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b db_traceback} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b db_setcstacklimit} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAMOD_API} int {\b luaopen_debug} ({\b lua_State} *L)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const char *const {\b HOOKKEY} = "_HOOKKEY"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const {\b luaL_Reg} {\b dblib} []\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v ldblib_c\:ldblib.c}
{\xe \v ldblib.c\:ldblib_c}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ldblib_c}}
\par
{\bkmkstart AAAAAAAAUF}
{\bkmkend AAAAAAAAUF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldblib.c \'B5\'DA 7 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_LIB\:ldblib.c}
{\xe \v ldblib.c\:LUA_LIB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_LIB}}
\par
{\bkmkstart AAAAAAAAUG}
{\bkmkend AAAAAAAAUG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldblib.c \'B5\'DA 8 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v auxupvalue\:ldblib.c}
{\xe \v ldblib.c\:auxupvalue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int auxupvalue ({\b lua_State} *  {\i L}, int  {\i get}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAUH}
{\bkmkend AAAAAAAAUH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldblib.c \'B5\'DA 257 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v checkstack\:ldblib.c}
{\xe \v ldblib.c\:checkstack}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void checkstack ({\b lua_State} *  {\i L}, {\b lua_State} *  {\i L1}, int  {\i n}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAUI}
{\bkmkend AAAAAAAAUI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldblib.c \'B5\'DA 35 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v checkupval\:ldblib.c}
{\xe \v ldblib.c\:checkupval}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int checkupval ({\b lua_State} *  {\i L}, int  {\i argf}, int  {\i argnup}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAUJ}
{\bkmkend AAAAAAAAUJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldblib.c \'B5\'DA 284 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v db_debug\:ldblib.c}
{\xe \v ldblib.c\:db_debug}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int db_debug ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAUK}
{\bkmkend AAAAAAAAUK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldblib.c \'B5\'DA 411 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v db_gethook\:ldblib.c}
{\xe \v ldblib.c\:db_gethook}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int db_gethook ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAUL}
{\bkmkend AAAAAAAAUL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldblib.c \'B5\'DA 386 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v db_getinfo\:ldblib.c}
{\xe \v ldblib.c\:db_getinfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int db_getinfo ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAUM}
{\bkmkend AAAAAAAAUM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldblib.c \'B5\'DA 149 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v db_getlocal\:ldblib.c}
{\xe \v ldblib.c\:db_getlocal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int db_getlocal ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAUN}
{\bkmkend AAAAAAAAUN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldblib.c \'B5\'DA 202 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v db_getmetatable\:ldblib.c}
{\xe \v ldblib.c\:db_getmetatable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int db_getmetatable ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAUO}
{\bkmkend AAAAAAAAUO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldblib.c \'B5\'DA 47 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v db_getregistry\:ldblib.c}
{\xe \v ldblib.c\:db_getregistry}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int db_getregistry ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAUP}
{\bkmkend AAAAAAAAUP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldblib.c \'B5\'DA 41 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v db_getupvalue\:ldblib.c}
{\xe \v ldblib.c\:db_getupvalue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int db_getupvalue ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAUQ}
{\bkmkend AAAAAAAAUQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldblib.c \'B5\'DA 269 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v db_getuservalue\:ldblib.c}
{\xe \v ldblib.c\:db_getuservalue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int db_getuservalue ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAUR}
{\bkmkend AAAAAAAAUR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldblib.c \'B5\'DA 65 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v db_setcstacklimit\:ldblib.c}
{\xe \v ldblib.c\:db_setcstacklimit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int db_setcstacklimit ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAUS}
{\bkmkend AAAAAAAAUS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldblib.c \'B5\'DA 440 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v db_sethook\:ldblib.c}
{\xe \v ldblib.c\:db_sethook}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int db_sethook ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAUT}
{\bkmkend AAAAAAAAUT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
hooktable.__mode = "k"\par
}{
\'D4\'DA\'CE\'C4\'BC\'FE ldblib.c \'B5\'DA 356 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v db_setlocal\:ldblib.c}
{\xe \v ldblib.c\:db_setlocal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int db_setlocal ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAUU}
{\bkmkend AAAAAAAAUU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldblib.c \'B5\'DA 233 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v db_setmetatable\:ldblib.c}
{\xe \v ldblib.c\:db_setmetatable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int db_setmetatable ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAUV}
{\bkmkend AAAAAAAAUV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldblib.c \'B5\'DA 56 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v db_setupvalue\:ldblib.c}
{\xe \v ldblib.c\:db_setupvalue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int db_setupvalue ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAUW}
{\bkmkend AAAAAAAAUW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldblib.c \'B5\'DA 274 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v db_setuservalue\:ldblib.c}
{\xe \v ldblib.c\:db_setuservalue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int db_setuservalue ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAUX}
{\bkmkend AAAAAAAAUX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldblib.c \'B5\'DA 77 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v db_traceback\:ldblib.c}
{\xe \v ldblib.c\:db_traceback}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int db_traceback ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAUY}
{\bkmkend AAAAAAAAUY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldblib.c \'B5\'DA 426 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v db_upvalueid\:ldblib.c}
{\xe \v ldblib.c\:db_upvalueid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int db_upvalueid ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAUZ}
{\bkmkend AAAAAAAAUZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldblib.c \'B5\'DA 293 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v db_upvaluejoin\:ldblib.c}
{\xe \v ldblib.c\:db_upvaluejoin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int db_upvaluejoin ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAVA}
{\bkmkend AAAAAAAAVA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldblib.c \'B5\'DA 300 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v getthread\:ldblib.c}
{\xe \v ldblib.c\:getthread}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b lua_State}* getthread ({\b lua_State} *  {\i L}, int *  {\i arg}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAVB}
{\bkmkend AAAAAAAAVB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldblib.c \'B5\'DA 94 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v hookf\:ldblib.c}
{\xe \v ldblib.c\:hookf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void hookf ({\b lua_State} *  {\i L}, {\b lua_Debug} *  {\i ar}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAVC}
{\bkmkend AAAAAAAAVC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldblib.c \'B5\'DA 314 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaopen_debug\:ldblib.c}
{\xe \v ldblib.c\:luaopen_debug}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAMOD_API} int luaopen_debug ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAAAVD}
{\bkmkend AAAAAAAAVD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldblib.c \'B5\'DA 473 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v makemask\:ldblib.c}
{\xe \v ldblib.c\:makemask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int makemask (const char *  {\i smask}, int  {\i count}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAVE}
{\bkmkend AAAAAAAAVE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldblib.c \'B5\'DA 333 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v settabsb\:ldblib.c}
{\xe \v ldblib.c\:settabsb}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void settabsb ({\b lua_State} *  {\i L}, const char *  {\i k}, int  {\i v}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAVF}
{\bkmkend AAAAAAAAVF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldblib.c \'B5\'DA 121 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v settabsi\:ldblib.c}
{\xe \v ldblib.c\:settabsi}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void settabsi ({\b lua_State} *  {\i L}, const char *  {\i k}, int  {\i v}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAVG}
{\bkmkend AAAAAAAAVG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldblib.c \'B5\'DA 116 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v settabss\:ldblib.c}
{\xe \v ldblib.c\:settabss}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void settabss ({\b lua_State} *  {\i L}, const char *  {\i k}, const char *  {\i v}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAVH}
{\bkmkend AAAAAAAAVH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldblib.c \'B5\'DA 111 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v treatstackoption\:ldblib.c}
{\xe \v ldblib.c\:treatstackoption}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void treatstackoption ({\b lua_State} *  {\i L}, {\b lua_State} *  {\i L1}, const char *  {\i fname}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAVI}
{\bkmkend AAAAAAAAVI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldblib.c \'B5\'DA 134 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v unmakemask\:ldblib.c}
{\xe \v ldblib.c\:unmakemask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static char* unmakemask (int  {\i mask}, char *  {\i smask}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAVJ}
{\bkmkend AAAAAAAAVJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldblib.c \'B5\'DA 346 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v dblib\:ldblib.c}
{\xe \v ldblib.c\:dblib}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b luaL_Reg} dblib[]{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAVK}
{\bkmkend AAAAAAAAVK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'B3\'F5\'CA\'BC\'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{\par
  \{{\cf22 "debug"}, db_debug\},\par
  \{{\cf22 "getuservalue"}, db_getuservalue\},\par
  \{{\cf22 "gethook"}, db_gethook\},\par
  \{{\cf22 "getinfo"}, db_getinfo\},\par
  \{{\cf22 "getlocal"}, db_getlocal\},\par
  \{{\cf22 "getregistry"}, db_getregistry\},\par
  \{{\cf22 "getmetatable"}, db_getmetatable\},\par
  \{{\cf22 "getupvalue"}, db_getupvalue\},\par
  \{{\cf22 "upvaluejoin"}, db_upvaluejoin\},\par
  \{{\cf22 "upvalueid"}, db_upvalueid\},\par
  \{{\cf22 "setuservalue"}, db_setuservalue\},\par
  \{{\cf22 "sethook"}, db_sethook\},\par
  \{{\cf22 "setlocal"}, db_setlocal\},\par
  \{{\cf22 "setmetatable"}, db_setmetatable\},\par
  \{{\cf22 "setupvalue"}, db_setupvalue\},\par
  \{{\cf22 "traceback"}, db_traceback\},\par
  \{{\cf22 "setcstacklimit"}, db_setcstacklimit\},\par
  \{NULL, NULL\}\par
\}\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE ldblib.c \'B5\'DA 451 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v HOOKKEY\:ldblib.c}
{\xe \v ldblib.c\:HOOKKEY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* const HOOKKEY = "_HOOKKEY"{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAVL}
{\bkmkend AAAAAAAAVL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldblib.c \'B5\'DA 27 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/gitworkspace/lua/src/ldebug.c \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v D:/gitworkspace/lua/src/ldebug.c}
{\xe \v D:/gitworkspace/lua/src/ldebug.c}
{\bkmkstart AAAAAAAAVM}
{\bkmkend AAAAAAAAVM}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "lprefix.h"}\par
{\f2 #include <stdarg.h>}\par
{\f2 #include <stddef.h>}\par
{\f2 #include <string.h>}\par
{\f2 #include "lua.h"}\par
{\f2 #include "lapi.h"}\par
{\f2 #include "lcode.h"}\par
{\f2 #include "ldebug.h"}\par
{\f2 #include "ldo.h"}\par
{\f2 #include "lfunc.h"}\par
{\f2 #include "lobject.h"}\par
{\f2 #include "lopcodes.h"}\par
{\f2 #include "lstate.h"}\par
{\f2 #include "lstring.h"}\par
{\f2 #include "ltable.h"}\par
{\f2 #include "ltm.h"}\par
{\f2 #include "lvm.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ldebug_c}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_CORE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b noLuaClosure}(f)\~ ((f) == NULL || (f)->c.tt == {\b LUA_VCCL})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ci_func}(ci)\~ ({\b clLvalue}({\b s2v}((ci)->func)))\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const char * {\b funcnamefromcode} ({\b lua_State} *L, {\b CallInfo} *ci, const char **name)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b currentpc} ({\b CallInfo} *ci)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b getbaseline} (const {\b Proto} *f, int pc, int *basepc)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b luaG_getfuncline} (const {\b Proto} *f, int pc)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b getcurrentline} ({\b CallInfo} *ci)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b settraps} ({\b CallInfo} *ci)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} void {\b lua_sethook} ({\b lua_State} *L, {\b lua_Hook} func, int mask, int count)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} {\b lua_Hook} {\b lua_gethook} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int {\b lua_gethookmask} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int {\b lua_gethookcount} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int {\b lua_getstack} ({\b lua_State} *L, int level, {\b lua_Debug} *ar)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const char * {\b upvalname} (const {\b Proto} *p, int uv)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const char * {\b findvararg} ({\b CallInfo} *ci, int n, {\b StkId} *pos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b luaG_findlocal} ({\b lua_State} *L, {\b CallInfo} *ci, int n, {\b StkId} *pos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} const char * {\b lua_getlocal} ({\b lua_State} *L, const {\b lua_Debug} *ar, int n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} const char * {\b lua_setlocal} ({\b lua_State} *L, const {\b lua_Debug} *ar, int n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b funcinfo} ({\b lua_Debug} *ar, {\b Closure} *cl)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b nextline} (const {\b Proto} *p, int currentline, int pc)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b collectvalidlines} ({\b lua_State} *L, {\b Closure} *f)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const char * {\b getfuncname} ({\b lua_State} *L, {\b CallInfo} *ci, const char **name)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b auxgetinfo} ({\b lua_State} *L, const char *what, {\b lua_Debug} *ar, {\b Closure} *f, {\b CallInfo} *ci)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int {\b lua_getinfo} ({\b lua_State} *L, const char *what, {\b lua_Debug} *ar)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const char * {\b getobjname} (const {\b Proto} *p, int lastpc, int reg, const char **name)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b kname} (const {\b Proto} *p, int c, const char **name)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b rname} (const {\b Proto} *p, int pc, int c, const char **name)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b rkname} (const {\b Proto} *p, int pc, {\b Instruction} i, const char **name)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b filterpc} (int pc, int jmptarget)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b findsetreg} (const {\b Proto} *p, int lastpc, int reg)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const char * {\b gxf} (const {\b Proto} *p, int pc, {\b Instruction} i, int isup)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b isinstack} ({\b CallInfo} *ci, const {\b TValue} *o)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const char * {\b getupvalname} ({\b CallInfo} *ci, const {\b TValue} *o, const char **name)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const char * {\b varinfo} ({\b lua_State} *L, const {\b TValue} *o)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b l_noret} {\b luaG_typeerror} ({\b lua_State} *L, const {\b TValue} *o, const char *op)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b l_noret} {\b luaG_forerror} ({\b lua_State} *L, const {\b TValue} *o, const char *what)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b l_noret} {\b luaG_concaterror} ({\b lua_State} *L, const {\b TValue} *p1, const {\b TValue} *p2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b l_noret} {\b luaG_opinterror} ({\b lua_State} *L, const {\b TValue} *p1, const {\b TValue} *p2, const char *msg)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b l_noret} {\b luaG_tointerror} ({\b lua_State} *L, const {\b TValue} *p1, const {\b TValue} *p2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b l_noret} {\b luaG_ordererror} ({\b lua_State} *L, const {\b TValue} *p1, const {\b TValue} *p2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b luaG_addinfo} ({\b lua_State} *L, const char *msg, {\b TString} *src, int line)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b l_noret} {\b luaG_errormsg} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b l_noret} {\b luaG_runerror} ({\b lua_State} *L, const char *fmt,...)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b changedline} (const {\b Proto} *p, int oldpc, int newpc)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b luaG_traceexec} ({\b lua_State} *L, const {\b Instruction} *pc)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v ci_func\:ldebug.c}
{\xe \v ldebug.c\:ci_func}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ci_func( ci)\~ ({\b clLvalue}({\b s2v}((ci)->func)))}}
\par
{\bkmkstart AAAAAAAAVN}
{\bkmkend AAAAAAAAVN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldebug.c \'B5\'DA 38 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v ldebug_c\:ldebug.c}
{\xe \v ldebug.c\:ldebug_c}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ldebug_c}}
\par
{\bkmkstart AAAAAAAAVO}
{\bkmkend AAAAAAAAVO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldebug.c \'B5\'DA 7 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_CORE\:ldebug.c}
{\xe \v ldebug.c\:LUA_CORE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_CORE}}
\par
{\bkmkstart AAAAAAAAVP}
{\bkmkend AAAAAAAAVP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldebug.c \'B5\'DA 8 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v noLuaClosure\:ldebug.c}
{\xe \v ldebug.c\:noLuaClosure}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define noLuaClosure( f)\~ ((f) == NULL || (f)->c.tt == {\b LUA_VCCL})}}
\par
{\bkmkstart AAAAAAAAVQ}
{\bkmkend AAAAAAAAVQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldebug.c \'B5\'DA 34 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v auxgetinfo\:ldebug.c}
{\xe \v ldebug.c\:auxgetinfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int auxgetinfo ({\b lua_State} *  {\i L}, const char *  {\i what}, {\b lua_Debug} *  {\i ar}, {\b Closure} *  {\i f}, {\b CallInfo} *  {\i ci}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAVR}
{\bkmkend AAAAAAAAVR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldebug.c \'B5\'DA 334 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v changedline\:ldebug.c}
{\xe \v ldebug.c\:changedline}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int changedline (const {\b Proto} *  {\i p}, int  {\i oldpc}, int  {\i newpc}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAVS}
{\bkmkend AAAAAAAAVS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldebug.c \'B5\'DA 789 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v collectvalidlines\:ldebug.c}
{\xe \v ldebug.c\:collectvalidlines}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void collectvalidlines ({\b lua_State} *  {\i L}, {\b Closure} *  {\i f}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAVT}
{\bkmkend AAAAAAAAVT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldebug.c \'B5\'DA 298 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v currentpc\:ldebug.c}
{\xe \v ldebug.c\:currentpc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int currentpc ({\b CallInfo} *  {\i ci}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAVU}
{\bkmkend AAAAAAAAVU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldebug.c \'B5\'DA 45 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v filterpc\:ldebug.c}
{\xe \v ldebug.c\:filterpc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int filterpc (int  {\i pc}, int  {\i jmptarget}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAVV}
{\bkmkend AAAAAAAAVV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldebug.c \'B5\'DA 462 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v findsetreg\:ldebug.c}
{\xe \v ldebug.c\:findsetreg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int findsetreg (const {\b Proto} *  {\i p}, int  {\i lastpc}, int  {\i reg}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAVW}
{\bkmkend AAAAAAAAVW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldebug.c \'B5\'DA 472 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v findvararg\:ldebug.c}
{\xe \v ldebug.c\:findvararg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static const char* findvararg ({\b CallInfo} *  {\i ci}, int  {\i n}, {\b StkId} *  {\i pos}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAVX}
{\bkmkend AAAAAAAAVX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldebug.c \'B5\'DA 192 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v funcinfo\:ldebug.c}
{\xe \v ldebug.c\:funcinfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void funcinfo ({\b lua_Debug} *  {\i ar}, {\b Closure} *  {\i cl}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAVY}
{\bkmkend AAAAAAAAVY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldebug.c \'B5\'DA 264 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v funcnamefromcode\:ldebug.c}
{\xe \v ldebug.c\:funcnamefromcode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static const char * funcnamefromcode ({\b lua_State} *  {\i L}, {\b CallInfo} *  {\i ci}, const char **  {\i name}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAVZ}
{\bkmkend AAAAAAAAVZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldebug.c \'B5\'DA 601 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v getbaseline\:ldebug.c}
{\xe \v ldebug.c\:getbaseline}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int getbaseline (const {\b Proto} *  {\i f}, int  {\i pc}, int *  {\i basepc}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAWA}
{\bkmkend AAAAAAAAWA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldebug.c \'B5\'DA 58 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v getcurrentline\:ldebug.c}
{\xe \v ldebug.c\:getcurrentline}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int getcurrentline ({\b CallInfo} *  {\i ci}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAWB}
{\bkmkend AAAAAAAAWB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldebug.c \'B5\'DA 104 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v getfuncname\:ldebug.c}
{\xe \v ldebug.c\:getfuncname}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static const char* getfuncname ({\b lua_State} *  {\i L}, {\b CallInfo} *  {\i ci}, const char **  {\i name}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAWC}
{\bkmkend AAAAAAAAWC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldebug.c \'B5\'DA 320 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v getobjname\:ldebug.c}
{\xe \v ldebug.c\:getobjname}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static const char * getobjname (const {\b Proto} *  {\i p}, int  {\i lastpc}, int  {\i reg}, const char **  {\i name}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAWD}
{\bkmkend AAAAAAAAWD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldebug.c \'B5\'DA 533 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v getupvalname\:ldebug.c}
{\xe \v ldebug.c\:getupvalname}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static const char* getupvalname ({\b CallInfo} *  {\i ci}, const {\b TValue} *  {\i o}, const char **  {\i name}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAWE}
{\bkmkend AAAAAAAAWE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldebug.c \'B5\'DA 670 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v gxf\:ldebug.c}
{\xe \v ldebug.c\:gxf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static const char* gxf (const {\b Proto} *  {\i p}, int  {\i pc}, {\b Instruction}  {\i i}, int  {\i isup}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAWF}
{\bkmkend AAAAAAAAWF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldebug.c \'B5\'DA 522 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v isinstack\:ldebug.c}
{\xe \v ldebug.c\:isinstack}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int isinstack ({\b CallInfo} *  {\i ci}, const {\b TValue} *  {\i o}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAWG}
{\bkmkend AAAAAAAAWG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldebug.c \'B5\'DA 658 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v kname\:ldebug.c}
{\xe \v ldebug.c\:kname}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void kname (const {\b Proto} *  {\i p}, int  {\i c}, const char **  {\i name}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAWH}
{\bkmkend AAAAAAAAWH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldebug.c \'B5\'DA 434 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_gethook\:ldebug.c}
{\xe \v ldebug.c\:lua_gethook}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} {\b lua_Hook} lua_gethook ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAAAWI}
{\bkmkend AAAAAAAAWI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldebug.c \'B5\'DA 153 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_gethookcount\:ldebug.c}
{\xe \v ldebug.c\:lua_gethookcount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int lua_gethookcount ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAAAWJ}
{\bkmkend AAAAAAAAWJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldebug.c \'B5\'DA 163 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_gethookmask\:ldebug.c}
{\xe \v ldebug.c\:lua_gethookmask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int lua_gethookmask ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAAAWK}
{\bkmkend AAAAAAAAWK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldebug.c \'B5\'DA 158 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_getinfo\:ldebug.c}
{\xe \v ldebug.c\:lua_getinfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int lua_getinfo ({\b lua_State} *  {\i L}, const char *  {\i what}, {\b lua_Debug} *  {\i ar})}}
\par
{\bkmkstart AAAAAAAAWL}
{\bkmkend AAAAAAAAWL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldebug.c \'B5\'DA 390 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_getlocal\:ldebug.c}
{\xe \v ldebug.c\:lua_getlocal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} const char* lua_getlocal ({\b lua_State} *  {\i L}, const {\b lua_Debug} *  {\i ar}, int  {\i n})}}
\par
{\bkmkstart AAAAAAAAWM}
{\bkmkend AAAAAAAAWM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldebug.c \'B5\'DA 228 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_getstack\:ldebug.c}
{\xe \v ldebug.c\:lua_getstack}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int lua_getstack ({\b lua_State} *  {\i L}, int  {\i level}, {\b lua_Debug} *  {\i ar})}}
\par
{\bkmkstart AAAAAAAAWN}
{\bkmkend AAAAAAAAWN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldebug.c \'B5\'DA 168 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_sethook\:ldebug.c}
{\xe \v ldebug.c\:lua_sethook}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} void lua_sethook ({\b lua_State} *  {\i L}, {\b lua_Hook}  {\i func}, int  {\i mask}, int  {\i count})}}
\par
{\bkmkstart AAAAAAAAWO}
{\bkmkend AAAAAAAAWO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldebug.c \'B5\'DA 137 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_setlocal\:ldebug.c}
{\xe \v ldebug.c\:lua_setlocal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} const char* lua_setlocal ({\b lua_State} *  {\i L}, const {\b lua_Debug} *  {\i ar}, int  {\i n})}}
\par
{\bkmkstart AAAAAAAAWP}
{\bkmkend AAAAAAAAWP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldebug.c \'B5\'DA 250 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaG_addinfo\:ldebug.c}
{\xe \v ldebug.c\:luaG_addinfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* luaG_addinfo ({\b lua_State} *  {\i L}, const char *  {\i msg}, {\b TString} *  {\i src}, int  {\i line})}}
\par
{\bkmkstart AAAAAAAAWQ}
{\bkmkend AAAAAAAAWQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldebug.c \'B5\'DA 746 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaG_concaterror\:ldebug.c}
{\xe \v ldebug.c\:luaG_concaterror}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b l_noret} luaG_concaterror ({\b lua_State} *  {\i L}, const {\b TValue} *  {\i p1}, const {\b TValue} *  {\i p2})}}
\par
{\bkmkstart AAAAAAAAWR}
{\bkmkend AAAAAAAAWR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldebug.c \'B5\'DA 710 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaG_errormsg\:ldebug.c}
{\xe \v ldebug.c\:luaG_errormsg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b l_noret} luaG_errormsg ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAAAWS}
{\bkmkend AAAAAAAAWS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldebug.c \'B5\'DA 758 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaG_findlocal\:ldebug.c}
{\xe \v ldebug.c\:luaG_findlocal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* luaG_findlocal ({\b lua_State} *  {\i L}, {\b CallInfo} *  {\i ci}, int  {\i n}, {\b StkId} *  {\i pos})}}
\par
{\bkmkstart AAAAAAAAWT}
{\bkmkend AAAAAAAAWT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldebug.c \'B5\'DA 204 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaG_forerror\:ldebug.c}
{\xe \v ldebug.c\:luaG_forerror}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b l_noret} luaG_forerror ({\b lua_State} *  {\i L}, const {\b TValue} *  {\i o}, const char *  {\i what})}}
\par
{\bkmkstart AAAAAAAAWU}
{\bkmkend AAAAAAAAWU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldebug.c \'B5\'DA 704 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaG_getfuncline\:ldebug.c}
{\xe \v ldebug.c\:luaG_getfuncline}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int luaG_getfuncline (const {\b Proto} *  {\i f}, int  {\i pc})}}
\par
{\bkmkstart AAAAAAAAWV}
{\bkmkend AAAAAAAAWV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldebug.c \'B5\'DA 89 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaG_opinterror\:ldebug.c}
{\xe \v ldebug.c\:luaG_opinterror}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b l_noret} luaG_opinterror ({\b lua_State} *  {\i L}, const {\b TValue} *  {\i p1}, const {\b TValue} *  {\i p2}, const char *  {\i msg})}}
\par
{\bkmkstart AAAAAAAAWW}
{\bkmkend AAAAAAAAWW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldebug.c \'B5\'DA 716 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaG_ordererror\:ldebug.c}
{\xe \v ldebug.c\:luaG_ordererror}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b l_noret} luaG_ordererror ({\b lua_State} *  {\i L}, const {\b TValue} *  {\i p1}, const {\b TValue} *  {\i p2})}}
\par
{\bkmkstart AAAAAAAAWX}
{\bkmkend AAAAAAAAWX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldebug.c \'B5\'DA 735 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaG_runerror\:ldebug.c}
{\xe \v ldebug.c\:luaG_runerror}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b l_noret} luaG_runerror ({\b lua_State} *  {\i L}, const char *  {\i fmt},   {\i ...})}}
\par
{\bkmkstart AAAAAAAAWY}
{\bkmkend AAAAAAAAWY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldebug.c \'B5\'DA 771 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaG_tointerror\:ldebug.c}
{\xe \v ldebug.c\:luaG_tointerror}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b l_noret} luaG_tointerror ({\b lua_State} *  {\i L}, const {\b TValue} *  {\i p1}, const {\b TValue} *  {\i p2})}}
\par
{\bkmkstart AAAAAAAAWZ}
{\bkmkend AAAAAAAAWZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldebug.c \'B5\'DA 727 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaG_traceexec\:ldebug.c}
{\xe \v ldebug.c\:luaG_traceexec}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int luaG_traceexec ({\b lua_State} *  {\i L}, const {\b Instruction} *  {\i pc})}}
\par
{\bkmkstart AAAAAAAAXA}
{\bkmkend AAAAAAAAXA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldebug.c \'B5\'DA 798 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaG_typeerror\:ldebug.c}
{\xe \v ldebug.c\:luaG_typeerror}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b l_noret} luaG_typeerror ({\b lua_State} *  {\i L}, const {\b TValue} *  {\i o}, const char *  {\i op})}}
\par
{\bkmkstart AAAAAAAAXB}
{\bkmkend AAAAAAAAXB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldebug.c \'B5\'DA 698 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v nextline\:ldebug.c}
{\xe \v ldebug.c\:nextline}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int nextline (const {\b Proto} *  {\i p}, int  {\i currentline}, int  {\i pc}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAXC}
{\bkmkend AAAAAAAAXC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldebug.c \'B5\'DA 290 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v rkname\:ldebug.c}
{\xe \v ldebug.c\:rkname}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void rkname (const {\b Proto} *  {\i p}, int  {\i pc}, {\b Instruction}  {\i i}, const char **  {\i name}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAXD}
{\bkmkend AAAAAAAAXD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldebug.c \'B5\'DA 453 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v rname\:ldebug.c}
{\xe \v ldebug.c\:rname}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void rname (const {\b Proto} *  {\i p}, int  {\i pc}, int  {\i c}, const char **  {\i name}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAXE}
{\bkmkend AAAAAAAAXE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldebug.c \'B5\'DA 443 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v settraps\:ldebug.c}
{\xe \v ldebug.c\:settraps}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void settraps ({\b CallInfo} *  {\i ci}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAXF}
{\bkmkend AAAAAAAAXF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldebug.c \'B5\'DA 120 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v upvalname\:ldebug.c}
{\xe \v ldebug.c\:upvalname}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static const char* upvalname (const {\b Proto} *  {\i p}, int  {\i uv}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAXG}
{\bkmkend AAAAAAAAXG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldebug.c \'B5\'DA 185 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v varinfo\:ldebug.c}
{\xe \v ldebug.c\:varinfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static const char* varinfo ({\b lua_State} *  {\i L}, const {\b TValue} *  {\i o}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAXH}
{\bkmkend AAAAAAAAXH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldebug.c \'B5\'DA 684 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/gitworkspace/lua/src/ldebug.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v D:/gitworkspace/lua/src/ldebug.h}
{\xe \v D:/gitworkspace/lua/src/ldebug.h}
{\bkmkstart AAAAAAAAXI}
{\bkmkend AAAAAAAAXI}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "lstate.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b pcRel}(pc,  p)\~ ({\b cast_int}((pc) - (p)->code) - 1)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b resethookcount}(L)\~ (L->hookcount = L->basehookcount)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ABSLINEINFO}\~ (-0x80)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} int {\b luaG_getfuncline} (const {\b Proto} *f, int pc)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} const char * {\b luaG_findlocal} ({\b lua_State} *L, {\b CallInfo} *ci, int n, {\b StkId} *pos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} {\b l_noret} {\b luaG_typeerror} ({\b lua_State} *L, const {\b TValue} *o, const char *opname)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} {\b l_noret} {\b luaG_forerror} ({\b lua_State} *L, const {\b TValue} *o, const char *what)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} {\b l_noret} {\b luaG_concaterror} ({\b lua_State} *L, const {\b TValue} *p1, const {\b TValue} *p2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} {\b l_noret} {\b luaG_opinterror} ({\b lua_State} *L, const {\b TValue} *p1, const {\b TValue} *p2, const char *msg)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} {\b l_noret} {\b luaG_tointerror} ({\b lua_State} *L, const {\b TValue} *p1, const {\b TValue} *p2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} {\b l_noret} {\b luaG_ordererror} ({\b lua_State} *L, const {\b TValue} *p1, const {\b TValue} *p2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} {\b l_noret} {\b luaG_runerror} ({\b lua_State} *L, const char *fmt,...)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} const char * {\b luaG_addinfo} ({\b lua_State} *L, const char *msg, {\b TString} *src, int line)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} {\b l_noret} {\b luaG_errormsg} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} int {\b luaG_traceexec} ({\b lua_State} *L, const {\b Instruction} *pc)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v ABSLINEINFO\:ldebug.h}
{\xe \v ldebug.h\:ABSLINEINFO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ABSLINEINFO\~ (-0x80)}}
\par
{\bkmkstart AAAAAAAAXJ}
{\bkmkend AAAAAAAAXJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldebug.h \'B5\'DA 22 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v pcRel\:ldebug.h}
{\xe \v ldebug.h\:pcRel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define pcRel( pc,  p)\~ ({\b cast_int}((pc) - (p)->code) - 1)}}
\par
{\bkmkstart AAAAAAAAXK}
{\bkmkend AAAAAAAAXK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldebug.h \'B5\'DA 14 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v resethookcount\:ldebug.h}
{\xe \v ldebug.h\:resethookcount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define resethookcount( L)\~ (L->hookcount = L->basehookcount)}}
\par
{\bkmkstart AAAAAAAAXL}
{\bkmkend AAAAAAAAXL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldebug.h \'B5\'DA 16 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v luaG_addinfo\:ldebug.h}
{\xe \v ldebug.h\:luaG_addinfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} const char* luaG_addinfo ({\b lua_State} *  {\i L}, const char *  {\i msg}, {\b TString} *  {\i src}, int  {\i line})}}
\par
{\bkmkstart AAAAAAAAXM}
{\bkmkend AAAAAAAAXM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldebug.c \'B5\'DA 746 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaG_concaterror\:ldebug.h}
{\xe \v ldebug.h\:luaG_concaterror}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} {\b l_noret} luaG_concaterror ({\b lua_State} *  {\i L}, const {\b TValue} *  {\i p1}, const {\b TValue} *  {\i p2})}}
\par
{\bkmkstart AAAAAAAAXN}
{\bkmkend AAAAAAAAXN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldebug.c \'B5\'DA 710 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaG_errormsg\:ldebug.h}
{\xe \v ldebug.h\:luaG_errormsg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} {\b l_noret} luaG_errormsg ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAAAXO}
{\bkmkend AAAAAAAAXO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldebug.c \'B5\'DA 758 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaG_findlocal\:ldebug.h}
{\xe \v ldebug.h\:luaG_findlocal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} const char* luaG_findlocal ({\b lua_State} *  {\i L}, {\b CallInfo} *  {\i ci}, int  {\i n}, {\b StkId} *  {\i pos})}}
\par
{\bkmkstart AAAAAAAAXP}
{\bkmkend AAAAAAAAXP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldebug.c \'B5\'DA 204 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaG_forerror\:ldebug.h}
{\xe \v ldebug.h\:luaG_forerror}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} {\b l_noret} luaG_forerror ({\b lua_State} *  {\i L}, const {\b TValue} *  {\i o}, const char *  {\i what})}}
\par
{\bkmkstart AAAAAAAAXQ}
{\bkmkend AAAAAAAAXQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldebug.c \'B5\'DA 704 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaG_getfuncline\:ldebug.h}
{\xe \v ldebug.h\:luaG_getfuncline}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} int luaG_getfuncline (const {\b Proto} *  {\i f}, int  {\i pc})}}
\par
{\bkmkstart AAAAAAAAXR}
{\bkmkend AAAAAAAAXR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldebug.c \'B5\'DA 89 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaG_opinterror\:ldebug.h}
{\xe \v ldebug.h\:luaG_opinterror}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} {\b l_noret} luaG_opinterror ({\b lua_State} *  {\i L}, const {\b TValue} *  {\i p1}, const {\b TValue} *  {\i p2}, const char *  {\i msg})}}
\par
{\bkmkstart AAAAAAAAXS}
{\bkmkend AAAAAAAAXS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldebug.c \'B5\'DA 716 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaG_ordererror\:ldebug.h}
{\xe \v ldebug.h\:luaG_ordererror}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} {\b l_noret} luaG_ordererror ({\b lua_State} *  {\i L}, const {\b TValue} *  {\i p1}, const {\b TValue} *  {\i p2})}}
\par
{\bkmkstart AAAAAAAAXT}
{\bkmkend AAAAAAAAXT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldebug.c \'B5\'DA 735 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaG_runerror\:ldebug.h}
{\xe \v ldebug.h\:luaG_runerror}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} {\b l_noret} luaG_runerror ({\b lua_State} *  {\i L}, const char *  {\i fmt},   {\i ...})}}
\par
{\bkmkstart AAAAAAAAXU}
{\bkmkend AAAAAAAAXU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldebug.c \'B5\'DA 771 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaG_tointerror\:ldebug.h}
{\xe \v ldebug.h\:luaG_tointerror}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} {\b l_noret} luaG_tointerror ({\b lua_State} *  {\i L}, const {\b TValue} *  {\i p1}, const {\b TValue} *  {\i p2})}}
\par
{\bkmkstart AAAAAAAAXV}
{\bkmkend AAAAAAAAXV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldebug.c \'B5\'DA 727 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaG_traceexec\:ldebug.h}
{\xe \v ldebug.h\:luaG_traceexec}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} int luaG_traceexec ({\b lua_State} *  {\i L}, const {\b Instruction} *  {\i pc})}}
\par
{\bkmkstart AAAAAAAAXW}
{\bkmkend AAAAAAAAXW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldebug.c \'B5\'DA 798 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaG_typeerror\:ldebug.h}
{\xe \v ldebug.h\:luaG_typeerror}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} {\b l_noret} luaG_typeerror ({\b lua_State} *  {\i L}, const {\b TValue} *  {\i o}, const char *  {\i opname})}}
\par
{\bkmkstart AAAAAAAAXX}
{\bkmkend AAAAAAAAXX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldebug.c \'B5\'DA 698 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/gitworkspace/lua/src/ldo.c \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v D:/gitworkspace/lua/src/ldo.c}
{\xe \v D:/gitworkspace/lua/src/ldo.c}
{\bkmkstart AAAAAAAAXY}
{\bkmkend AAAAAAAAXY}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "lprefix.h"}\par
{\f2 #include <setjmp.h>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <string.h>}\par
{\f2 #include "lua.h"}\par
{\f2 #include "lapi.h"}\par
{\f2 #include "ldebug.h"}\par
{\f2 #include "ldo.h"}\par
{\f2 #include "lfunc.h"}\par
{\f2 #include "lgc.h"}\par
{\f2 #include "lmem.h"}\par
{\f2 #include "lobject.h"}\par
{\f2 #include "lopcodes.h"}\par
{\f2 #include "lparser.h"}\par
{\f2 #include "lstate.h"}\par
{\f2 #include "lstring.h"}\par
{\f2 #include "ltable.h"}\par
{\f2 #include "ltm.h"}\par
{\f2 #include "lundump.h"}\par
{\f2 #include "lvm.h"}\par
{\f2 #include "lzio.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b lua_longjmp}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b SParser}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ldo_c}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_CORE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b errorstatus}(s)\~ ((s) > {\b LUA_YIELD})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUAI_THROW}(L,  c)\~ longjmp((c)->b, 1)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUAI_TRY}(L,  c,  a)\~ if (setjmp((c)->b) == 0) \{ a \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luai_jmpbuf}\~ jmp_buf\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERRORSTACKSIZE}\~ ({\b LUAI_MAXSTACK} + 200)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b next_ci}(L)\~ (L->ci->{\b next} ? L->ci->{\b next} : {\b luaE_extendCI}(L))\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaD_seterrorobj} ({\b lua_State} *L, int errcode, {\b StkId} oldtop)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b l_noret} {\b luaD_throw} ({\b lua_State} *L, int errcode)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b luaD_rawrunprotected} ({\b lua_State} *L, {\b Pfunc} f, void *ud)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b correctstack} ({\b lua_State} *L, {\b StkId} oldstack, {\b StkId} newstack)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b luaD_reallocstack} ({\b lua_State} *L, int newsize, int raiseerror)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b luaD_growstack} ({\b lua_State} *L, int n, int raiseerror)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b stackinuse} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaD_shrinkstack} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaD_inctop} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaD_hook} ({\b lua_State} *L, int event, int line, int ftransfer, int ntransfer)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaD_hookcall} ({\b lua_State} *L, {\b CallInfo} *ci)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b StkId} {\b rethook} ({\b lua_State} *L, {\b CallInfo} *ci, {\b StkId} firstres, int nres)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaD_tryfuncTM} ({\b lua_State} *L, {\b StkId} func)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b moveresults} ({\b lua_State} *L, {\b StkId} res, int nres, int wanted)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaD_poscall} ({\b lua_State} *L, {\b CallInfo} *ci, int nres)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaD_pretailcall} ({\b lua_State} *L, {\b CallInfo} *ci, {\b StkId} func, int narg1)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaD_call} ({\b lua_State} *L, {\b StkId} func, int nresults)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaD_callnoyield} ({\b lua_State} *L, {\b StkId} func, int nResults)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b finishCcall} ({\b lua_State} *L, int status)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b unroll} ({\b lua_State} *L, void *ud)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b CallInfo} * {\b findpcall} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b recover} ({\b lua_State} *L, int status)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b resume_error} ({\b lua_State} *L, const char *msg, int narg)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b resume} ({\b lua_State} *L, void *ud)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int {\b lua_resume} ({\b lua_State} *L, {\b lua_State} *from, int nargs, int *nresults)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int {\b lua_isyieldable} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int {\b lua_yieldk} ({\b lua_State} *L, int nresults, {\b lua_KContext} ctx, {\b lua_KFunction} k)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b luaD_pcall} ({\b lua_State} *L, {\b Pfunc} func, void *u, ptrdiff_t old_top, ptrdiff_t ef)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b checkmode} ({\b lua_State} *L, const char *mode, const char *x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b f_parser} ({\b lua_State} *L, void *ud)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b luaD_protectedparser} ({\b lua_State} *L, {\b ZIO} *z, const char *name, const char *mode)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v ERRORSTACKSIZE\:ldo.c}
{\xe \v ldo.c\:ERRORSTACKSIZE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERRORSTACKSIZE\~ ({\b LUAI_MAXSTACK} + 200)}}
\par
{\bkmkstart AAAAAAAAXZ}
{\bkmkend AAAAAAAAXZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldo.c \'B5\'DA 182 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v errorstatus\:ldo.c}
{\xe \v ldo.c\:errorstatus}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define errorstatus( s)\~ ((s) > {\b LUA_YIELD})}}
\par
{\bkmkstart AAAAAAAAYA}
{\bkmkend AAAAAAAAYA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldo.c \'B5\'DA 38 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v ldo_c\:ldo.c}
{\xe \v ldo.c\:ldo_c}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ldo_c}}
\par
{\bkmkstart AAAAAAAAYB}
{\bkmkend AAAAAAAAYB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldo.c \'B5\'DA 7 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_CORE\:ldo.c}
{\xe \v ldo.c\:LUA_CORE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_CORE}}
\par
{\bkmkstart AAAAAAAAYC}
{\bkmkend AAAAAAAAYC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldo.c \'B5\'DA 8 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luai_jmpbuf\:ldo.c}
{\xe \v ldo.c\:luai_jmpbuf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luai_jmpbuf\~ jmp_buf}}
\par
{\bkmkstart AAAAAAAAYD}
{\bkmkend AAAAAAAAYD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldo.c \'B5\'DA 75 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUAI_THROW\:ldo.c}
{\xe \v ldo.c\:LUAI_THROW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUAI_THROW( L,  c)\~ longjmp((c)->b, 1)}}
\par
{\bkmkstart AAAAAAAAYE}
{\bkmkend AAAAAAAAYE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldo.c \'B5\'DA 73 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUAI_TRY\:ldo.c}
{\xe \v ldo.c\:LUAI_TRY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUAI_TRY( L,  c,  a)\~ if (setjmp((c)->b) == 0) \{ a \}}}
\par
{\bkmkstart AAAAAAAAYF}
{\bkmkend AAAAAAAAYF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldo.c \'B5\'DA 74 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v next_ci\:ldo.c}
{\xe \v ldo.c\:next_ci}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define next_ci( L)\~ (L->ci->{\b next} ? L->ci->{\b next} : {\b luaE_extendCI}(L))}}
\par
{\bkmkstart AAAAAAAAYG}
{\bkmkend AAAAAAAAYG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldo.c \'B5\'DA 425 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v checkmode\:ldo.c}
{\xe \v ldo.c\:checkmode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void checkmode ({\b lua_State} *  {\i L}, const char *  {\i mode}, const char *  {\i x}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAYH}
{\bkmkend AAAAAAAAYH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldo.c \'B5\'DA 777 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v correctstack\:ldo.c}
{\xe \v ldo.c\:correctstack}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void correctstack ({\b lua_State} *  {\i L}, {\b StkId}  {\i oldstack}, {\b StkId}  {\i newstack}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAYI}
{\bkmkend AAAAAAAAYI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldo.c \'B5\'DA 164 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v f_parser\:ldo.c}
{\xe \v ldo.c\:f_parser}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void f_parser ({\b lua_State} *  {\i L}, void *  {\i ud}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAYJ}
{\bkmkend AAAAAAAAYJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldo.c \'B5\'DA 786 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v findpcall\:ldo.c}
{\xe \v ldo.c\:findpcall}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b CallInfo}* findpcall ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAYK}
{\bkmkend AAAAAAAAYK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldo.c \'B5\'DA 584 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v finishCcall\:ldo.c}
{\xe \v ldo.c\:finishCcall}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void finishCcall ({\b lua_State} *  {\i L}, int  {\i status}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAYL}
{\bkmkend AAAAAAAAYL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldo.c \'B5\'DA 535 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_isyieldable\:ldo.c}
{\xe \v ldo.c\:lua_isyieldable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int lua_isyieldable ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAAAYM}
{\bkmkend AAAAAAAAYM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldo.c \'B5\'DA 702 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_resume\:ldo.c}
{\xe \v ldo.c\:lua_resume}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int lua_resume ({\b lua_State} *  {\i L}, {\b lua_State} *  {\i from}, int  {\i nargs}, int *  {\i nresults})}}
\par
{\bkmkstart AAAAAAAAYN}
{\bkmkend AAAAAAAAYN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldo.c \'B5\'DA 662 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_yieldk\:ldo.c}
{\xe \v ldo.c\:lua_yieldk}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int lua_yieldk ({\b lua_State} *  {\i L}, int  {\i nresults}, {\b lua_KContext}  {\i ctx}, {\b lua_KFunction}  {\i k})}}
\par
{\bkmkstart AAAAAAAAYO}
{\bkmkend AAAAAAAAYO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldo.c \'B5\'DA 707 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaD_call\:ldo.c}
{\xe \v ldo.c\:luaD_call}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaD_call ({\b lua_State} *  {\i L}, {\b StkId}  {\i func}, int  {\i nresults})}}
\par
{\bkmkstart AAAAAAAAYP}
{\bkmkend AAAAAAAAYP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldo.c \'B5\'DA 458 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaD_callnoyield\:ldo.c}
{\xe \v ldo.c\:luaD_callnoyield}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaD_callnoyield ({\b lua_State} *  {\i L}, {\b StkId}  {\i func}, int  {\i nResults})}}
\par
{\bkmkstart AAAAAAAAYQ}
{\bkmkend AAAAAAAAYQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldo.c \'B5\'DA 522 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaD_growstack\:ldo.c}
{\xe \v ldo.c\:luaD_growstack}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int luaD_growstack ({\b lua_State} *  {\i L}, int  {\i n}, int  {\i raiseerror})}}
\par
{\bkmkstart AAAAAAAAYR}
{\bkmkend AAAAAAAAYR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldo.c \'B5\'DA 209 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaD_hook\:ldo.c}
{\xe \v ldo.c\:luaD_hook}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaD_hook ({\b lua_State} *  {\i L}, int  {\i event}, int  {\i line}, int  {\i ftransfer}, int  {\i ntransfer})}}
\par
{\bkmkstart AAAAAAAAYS}
{\bkmkend AAAAAAAAYS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldo.c \'B5\'DA 275 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaD_hookcall\:ldo.c}
{\xe \v ldo.c\:luaD_hookcall}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaD_hookcall ({\b lua_State} *  {\i L}, {\b CallInfo} *  {\i ci})}}
\par
{\bkmkstart AAAAAAAAYT}
{\bkmkend AAAAAAAAYT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldo.c \'B5\'DA 314 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaD_inctop\:ldo.c}
{\xe \v ldo.c\:luaD_inctop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaD_inctop ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAAAYU}
{\bkmkend AAAAAAAAYU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldo.c \'B5\'DA 262 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaD_pcall\:ldo.c}
{\xe \v ldo.c\:luaD_pcall}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int luaD_pcall ({\b lua_State} *  {\i L}, {\b Pfunc}  {\i func}, void *  {\i u}, ptrdiff_t  {\i old_top}, ptrdiff_t  {\i ef})}}
\par
{\bkmkstart AAAAAAAAYV}
{\bkmkend AAAAAAAAYV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldo.c \'B5\'DA 742 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaD_poscall\:ldo.c}
{\xe \v ldo.c\:luaD_poscall}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaD_poscall ({\b lua_State} *  {\i L}, {\b CallInfo} *  {\i ci}, int  {\i nres})}}
\par
{\bkmkstart AAAAAAAAYW}
{\bkmkend AAAAAAAAYW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldo.c \'B5\'DA 415 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaD_pretailcall\:ldo.c}
{\xe \v ldo.c\:luaD_pretailcall}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaD_pretailcall ({\b lua_State} *  {\i L}, {\b CallInfo} *  {\i ci}, {\b StkId}  {\i func}, int  {\i narg1})}}
\par
{\bkmkstart AAAAAAAAYX}
{\bkmkend AAAAAAAAYX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldo.c \'B5\'DA 433 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaD_protectedparser\:ldo.c}
{\xe \v ldo.c\:luaD_protectedparser}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int luaD_protectedparser ({\b lua_State} *  {\i L}, {\b ZIO} *  {\i z}, const char *  {\i name}, const char *  {\i mode})}}
\par
{\bkmkstart AAAAAAAAYY}
{\bkmkend AAAAAAAAYY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldo.c \'B5\'DA 803 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaD_rawrunprotected\:ldo.c}
{\xe \v ldo.c\:luaD_rawrunprotected}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int luaD_rawrunprotected ({\b lua_State} *  {\i L}, {\b Pfunc}  {\i f}, void *  {\i ud})}}
\par
{\bkmkstart AAAAAAAAYZ}
{\bkmkend AAAAAAAAYZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldo.c \'B5\'DA 141 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaD_reallocstack\:ldo.c}
{\xe \v ldo.c\:luaD_reallocstack}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int luaD_reallocstack ({\b lua_State} *  {\i L}, int  {\i newsize}, int  {\i raiseerror})}}
\par
{\bkmkstart AAAAAAAAZA}
{\bkmkend AAAAAAAAZA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldo.c \'B5\'DA 185 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaD_seterrorobj\:ldo.c}
{\xe \v ldo.c\:luaD_seterrorobj}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaD_seterrorobj ({\b lua_State} *  {\i L}, int  {\i errcode}, {\b StkId}  {\i oldtop})}}
\par
{\bkmkstart AAAAAAAAZB}
{\bkmkend AAAAAAAAZB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldo.c \'B5\'DA 91 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaD_shrinkstack\:ldo.c}
{\xe \v ldo.c\:luaD_shrinkstack}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaD_shrinkstack ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAAAZC}
{\bkmkend AAAAAAAAZC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldo.c \'B5\'DA 246 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaD_throw\:ldo.c}
{\xe \v ldo.c\:luaD_throw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b l_noret} luaD_throw ({\b lua_State} *  {\i L}, int  {\i errcode})}}
\par
{\bkmkstart AAAAAAAAZD}
{\bkmkend AAAAAAAAZD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldo.c \'B5\'DA 114 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaD_tryfuncTM\:ldo.c}
{\xe \v ldo.c\:luaD_tryfuncTM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaD_tryfuncTM ({\b lua_State} *  {\i L}, {\b StkId}  {\i func})}}
\par
{\bkmkstart AAAAAAAAZE}
{\bkmkend AAAAAAAAZE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldo.c \'B5\'DA 355 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v moveresults\:ldo.c}
{\xe \v ldo.c\:moveresults}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void moveresults ({\b lua_State} *  {\i L}, {\b StkId}  {\i res}, int  {\i nres}, int  {\i wanted}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAZF}
{\bkmkend AAAAAAAAZF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldo.c \'B5\'DA 373 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v recover\:ldo.c}
{\xe \v ldo.c\:recover}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int recover ({\b lua_State} *  {\i L}, int  {\i status}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAZG}
{\bkmkend AAAAAAAAZG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldo.c \'B5\'DA 599 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v resume\:ldo.c}
{\xe \v ldo.c\:resume}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void resume ({\b lua_State} *  {\i L}, void *  {\i ud}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAZH}
{\bkmkend AAAAAAAAZH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldo.c \'B5\'DA 637 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v resume_error\:ldo.c}
{\xe \v ldo.c\:resume_error}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int resume_error ({\b lua_State} *  {\i L}, const char *  {\i msg}, int  {\i narg}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAZI}
{\bkmkend AAAAAAAAZI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldo.c \'B5\'DA 621 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v rethook\:ldo.c}
{\xe \v ldo.c\:rethook}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b StkId} rethook ({\b lua_State} *  {\i L}, {\b CallInfo} *  {\i ci}, {\b StkId}  {\i firstres}, int  {\i nres}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAZJ}
{\bkmkend AAAAAAAAZJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldo.c \'B5\'DA 327 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v stackinuse\:ldo.c}
{\xe \v ldo.c\:stackinuse}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int stackinuse ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAZK}
{\bkmkend AAAAAAAAZK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldo.c \'B5\'DA 235 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v unroll\:ldo.c}
{\xe \v ldo.c\:unroll}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void unroll ({\b lua_State} *  {\i L}, void *  {\i ud}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAZL}
{\bkmkend AAAAAAAAZL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldo.c \'B5\'DA 565 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/gitworkspace/lua/src/ldo.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v D:/gitworkspace/lua/src/ldo.h}
{\xe \v D:/gitworkspace/lua/src/ldo.h}
{\bkmkstart AAAAAAAAZM}
{\bkmkend AAAAAAAAZM}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "lobject.h"}\par
{\f2 #include "lstate.h"}\par
{\f2 #include "lzio.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luaD_checkstackaux}(L,  n,  pre,  pos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luaD_checkstack}(L,  n)\~ {\b luaD_checkstackaux}(L,n,(void)0,(void)0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b savestack}(L,  p)\~ ((char *)(p) - (char *)L->stack)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b restorestack}(L,  n)\~ (({\b StkId})((char *)L->stack + (n)))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b checkstackp}(L,  n,  p)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b checkstackGC}(L,  fsize)\~ 	{\b luaD_checkstackaux}(L, (fsize), (void)0, {\b luaC_checkGC}(L))\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'D0\'CD\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef void(* {\b Pfunc}) ({\b lua_State} *L, void *ud)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaD_seterrorobj} ({\b lua_State} *L, int errcode, {\b StkId} oldtop)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} int {\b luaD_protectedparser} ({\b lua_State} *L, {\b ZIO} *z, const char *name, const char *mode)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaD_hook} ({\b lua_State} *L, int event, int line, int fTransfer, int nTransfer)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaD_hookcall} ({\b lua_State} *L, {\b CallInfo} *ci)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaD_pretailcall} ({\b lua_State} *L, {\b CallInfo} *ci, {\b StkId} func, int n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaD_call} ({\b lua_State} *L, {\b StkId} func, int nResults)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaD_callnoyield} ({\b lua_State} *L, {\b StkId} func, int nResults)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaD_tryfuncTM} ({\b lua_State} *L, {\b StkId} func)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} int {\b luaD_pcall} ({\b lua_State} *L, {\b Pfunc} func, void *u, ptrdiff_t oldtop, ptrdiff_t ef)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaD_poscall} ({\b lua_State} *L, {\b CallInfo} *ci, int nres)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} int {\b luaD_reallocstack} ({\b lua_State} *L, int newsize, int raiseerror)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} int {\b luaD_growstack} ({\b lua_State} *L, int n, int raiseerror)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaD_shrinkstack} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaD_inctop} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} {\b l_noret} {\b luaD_throw} ({\b lua_State} *L, int errcode)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} int {\b luaD_rawrunprotected} ({\b lua_State} *L, {\b Pfunc} f, void *ud)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v checkstackGC\:ldo.h}
{\xe \v ldo.h\:checkstackGC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define checkstackGC( L,  fsize)\~ 	{\b luaD_checkstackaux}(L, (fsize), (void)0, {\b luaC_checkGC}(L))}}
\par
{\bkmkstart AAAAAAAAZN}
{\bkmkend AAAAAAAAZN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldo.h \'B5\'DA 46 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v checkstackp\:ldo.h}
{\xe \v ldo.h\:checkstackp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define checkstackp( L,  n,  p)}}
\par
{\bkmkstart AAAAAAAAZO}
{\bkmkend AAAAAAAAZO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   luaD_checkstackaux(L, n, \\\par
    ptrdiff_t t__ = savestack(L, p);  {\cf20 /* save 'p' */} \\\par
    luaC_checkGC(L),  {\cf20 /* stack grow uses memory */} \\\par
    p = restorestack(L, t__))  {\cf20 /* 'pos' part: restore 'p' */}\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE ldo.h \'B5\'DA 38 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaD_checkstack\:ldo.h}
{\xe \v ldo.h\:luaD_checkstack}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luaD_checkstack( L,  n)\~ {\b luaD_checkstackaux}(L,n,(void)0,(void)0)}}
\par
{\bkmkstart AAAAAAAAZP}
{\bkmkend AAAAAAAAZP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldo.h \'B5\'DA 29 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaD_checkstackaux\:ldo.h}
{\xe \v ldo.h\:luaD_checkstackaux}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luaD_checkstackaux( L,  n,  pre,  pos)}}
\par
{\bkmkstart AAAAAAAAZQ}
{\bkmkend AAAAAAAAZQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     {\cf19 if} (L->stack_last - L->top <= (n)) \\\par
      \{ pre; luaD_growstack(L, n, 1); pos; \} \\\par
        else \{ condmovestack(L,pre,pos); \}\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE ldo.h \'B5\'DA 23 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v restorestack\:ldo.h}
{\xe \v ldo.h\:restorestack}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define restorestack( L,  n)\~ (({\b StkId})((char *)L->stack + (n)))}}
\par
{\bkmkstart AAAAAAAAZR}
{\bkmkend AAAAAAAAZR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldo.h \'B5\'DA 34 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v savestack\:ldo.h}
{\xe \v ldo.h\:savestack}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define savestack( L,  p)\~ ((char *)(p) - (char *)L->stack)}}
\par
{\bkmkstart AAAAAAAAZS}
{\bkmkend AAAAAAAAZS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldo.h \'B5\'DA 33 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'D0\'CD\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v Pfunc\:ldo.h}
{\xe \v ldo.h\:Pfunc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef void(* Pfunc) ({\b lua_State} *L, void *ud)}}
\par
{\bkmkstart AAAAAAAAZT}
{\bkmkend AAAAAAAAZT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldo.h \'B5\'DA 51 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v luaD_call\:ldo.h}
{\xe \v ldo.h\:luaD_call}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaD_call ({\b lua_State} *  {\i L}, {\b StkId}  {\i func}, int  {\i nResults})}}
\par
{\bkmkstart AAAAAAAAZU}
{\bkmkend AAAAAAAAZU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldo.c \'B5\'DA 458 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaD_callnoyield\:ldo.h}
{\xe \v ldo.h\:luaD_callnoyield}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaD_callnoyield ({\b lua_State} *  {\i L}, {\b StkId}  {\i func}, int  {\i nResults})}}
\par
{\bkmkstart AAAAAAAAZV}
{\bkmkend AAAAAAAAZV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldo.c \'B5\'DA 522 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaD_growstack\:ldo.h}
{\xe \v ldo.h\:luaD_growstack}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} int luaD_growstack ({\b lua_State} *  {\i L}, int  {\i n}, int  {\i raiseerror})}}
\par
{\bkmkstart AAAAAAAAZW}
{\bkmkend AAAAAAAAZW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldo.c \'B5\'DA 209 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaD_hook\:ldo.h}
{\xe \v ldo.h\:luaD_hook}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaD_hook ({\b lua_State} *  {\i L}, int  {\i event}, int  {\i line}, int  {\i fTransfer}, int  {\i nTransfer})}}
\par
{\bkmkstart AAAAAAAAZX}
{\bkmkend AAAAAAAAZX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldo.c \'B5\'DA 275 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaD_hookcall\:ldo.h}
{\xe \v ldo.h\:luaD_hookcall}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaD_hookcall ({\b lua_State} *  {\i L}, {\b CallInfo} *  {\i ci})}}
\par
{\bkmkstart AAAAAAAAZY}
{\bkmkend AAAAAAAAZY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldo.c \'B5\'DA 314 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaD_inctop\:ldo.h}
{\xe \v ldo.h\:luaD_inctop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaD_inctop ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAAAZZ}
{\bkmkend AAAAAAAAZZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldo.c \'B5\'DA 262 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaD_pcall\:ldo.h}
{\xe \v ldo.h\:luaD_pcall}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} int luaD_pcall ({\b lua_State} *  {\i L}, {\b Pfunc}  {\i func}, void *  {\i u}, ptrdiff_t  {\i oldtop}, ptrdiff_t  {\i ef})}}
\par
{\bkmkstart AAAAAAABAA}
{\bkmkend AAAAAAABAA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldo.c \'B5\'DA 742 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaD_poscall\:ldo.h}
{\xe \v ldo.h\:luaD_poscall}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaD_poscall ({\b lua_State} *  {\i L}, {\b CallInfo} *  {\i ci}, int  {\i nres})}}
\par
{\bkmkstart AAAAAAABAB}
{\bkmkend AAAAAAABAB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldo.c \'B5\'DA 415 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaD_pretailcall\:ldo.h}
{\xe \v ldo.h\:luaD_pretailcall}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaD_pretailcall ({\b lua_State} *  {\i L}, {\b CallInfo} *  {\i ci}, {\b StkId}  {\i func}, int  {\i n})}}
\par
{\bkmkstart AAAAAAABAC}
{\bkmkend AAAAAAABAC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldo.c \'B5\'DA 433 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaD_protectedparser\:ldo.h}
{\xe \v ldo.h\:luaD_protectedparser}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} int luaD_protectedparser ({\b lua_State} *  {\i L}, {\b ZIO} *  {\i z}, const char *  {\i name}, const char *  {\i mode})}}
\par
{\bkmkstart AAAAAAABAD}
{\bkmkend AAAAAAABAD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldo.c \'B5\'DA 803 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaD_rawrunprotected\:ldo.h}
{\xe \v ldo.h\:luaD_rawrunprotected}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} int luaD_rawrunprotected ({\b lua_State} *  {\i L}, {\b Pfunc}  {\i f}, void *  {\i ud})}}
\par
{\bkmkstart AAAAAAABAE}
{\bkmkend AAAAAAABAE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldo.c \'B5\'DA 141 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaD_reallocstack\:ldo.h}
{\xe \v ldo.h\:luaD_reallocstack}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} int luaD_reallocstack ({\b lua_State} *  {\i L}, int  {\i newsize}, int  {\i raiseerror})}}
\par
{\bkmkstart AAAAAAABAF}
{\bkmkend AAAAAAABAF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldo.c \'B5\'DA 185 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaD_seterrorobj\:ldo.h}
{\xe \v ldo.h\:luaD_seterrorobj}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaD_seterrorobj ({\b lua_State} *  {\i L}, int  {\i errcode}, {\b StkId}  {\i oldtop})}}
\par
{\bkmkstart AAAAAAABAG}
{\bkmkend AAAAAAABAG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldo.c \'B5\'DA 91 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaD_shrinkstack\:ldo.h}
{\xe \v ldo.h\:luaD_shrinkstack}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaD_shrinkstack ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAABAH}
{\bkmkend AAAAAAABAH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldo.c \'B5\'DA 246 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaD_throw\:ldo.h}
{\xe \v ldo.h\:luaD_throw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} {\b l_noret} luaD_throw ({\b lua_State} *  {\i L}, int  {\i errcode})}}
\par
{\bkmkstart AAAAAAABAI}
{\bkmkend AAAAAAABAI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldo.c \'B5\'DA 114 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaD_tryfuncTM\:ldo.h}
{\xe \v ldo.h\:luaD_tryfuncTM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaD_tryfuncTM ({\b lua_State} *  {\i L}, {\b StkId}  {\i func})}}
\par
{\bkmkstart AAAAAAABAJ}
{\bkmkend AAAAAAABAJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldo.c \'B5\'DA 355 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/gitworkspace/lua/src/ldump.c \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v D:/gitworkspace/lua/src/ldump.c}
{\xe \v D:/gitworkspace/lua/src/ldump.c}
{\bkmkstart AAAAAAABAK}
{\bkmkend AAAAAAABAK}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "lprefix.h"}\par
{\f2 #include <stddef.h>}\par
{\f2 #include "lua.h"}\par
{\f2 #include "lobject.h"}\par
{\f2 #include "lstate.h"}\par
{\f2 #include "lundump.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b DumpState}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ldump_c}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_CORE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b dumpVector}(D,  v,  n)\~ {\b dumpBlock}(D,v,(n)*sizeof((v)[0]))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b dumpLiteral}(D,  s)\~ {\b dumpBlock}(D,s,sizeof(s) - sizeof(char))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b dumpVar}(D,  x)\~ {\b dumpVector}(D,&x,1)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DIBS}\~ ((sizeof(size_t) * 8 / 7) + 1)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dumpBlock} ({\b DumpState} *D, const void *b, size_t size)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dumpByte} ({\b DumpState} *D, int y)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dumpSize} ({\b DumpState} *D, size_t x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dumpInt} ({\b DumpState} *D, int x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dumpNumber} ({\b DumpState} *D, {\b lua_Number} x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dumpInteger} ({\b DumpState} *D, {\b lua_Integer} x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dumpString} ({\b DumpState} *D, const {\b TString} *s)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dumpCode} ({\b DumpState} *D, const {\b Proto} *f)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dumpFunction} ({\b DumpState} *D, const {\b Proto} *f, {\b TString} *psource)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dumpConstants} ({\b DumpState} *D, const {\b Proto} *f)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dumpProtos} ({\b DumpState} *D, const {\b Proto} *f)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dumpUpvalues} ({\b DumpState} *D, const {\b Proto} *f)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dumpDebug} ({\b DumpState} *D, const {\b Proto} *f)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dumpHeader} ({\b DumpState} *D)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b luaU_dump} ({\b lua_State} *L, const {\b Proto} *f, {\b lua_Writer} w, void *data, int strip)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v DIBS\:ldump.c}
{\xe \v ldump.c\:DIBS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DIBS\~ ((sizeof(size_t) * 8 / 7) + 1)}}
\par
{\bkmkstart AAAAAAABAL}
{\bkmkend AAAAAAABAL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldump.c \'B5\'DA 59 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v dumpLiteral\:ldump.c}
{\xe \v ldump.c\:dumpLiteral}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define dumpLiteral( D,  s)\~ {\b dumpBlock}(D,s,sizeof(s) - sizeof(char))}}
\par
{\bkmkstart AAAAAAABAM}
{\bkmkend AAAAAAABAM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldump.c \'B5\'DA 37 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v dumpVar\:ldump.c}
{\xe \v ldump.c\:dumpVar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define dumpVar( D,  x)\~ {\b dumpVector}(D,&x,1)}}
\par
{\bkmkstart AAAAAAABAN}
{\bkmkend AAAAAAABAN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldump.c \'B5\'DA 49 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v dumpVector\:ldump.c}
{\xe \v ldump.c\:dumpVector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define dumpVector( D,  v,  n)\~ {\b dumpBlock}(D,v,(n)*sizeof((v)[0]))}}
\par
{\bkmkstart AAAAAAABAO}
{\bkmkend AAAAAAABAO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldump.c \'B5\'DA 35 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v ldump_c\:ldump.c}
{\xe \v ldump.c\:ldump_c}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ldump_c}}
\par
{\bkmkstart AAAAAAABAP}
{\bkmkend AAAAAAABAP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldump.c \'B5\'DA 7 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_CORE\:ldump.c}
{\xe \v ldump.c\:LUA_CORE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_CORE}}
\par
{\bkmkstart AAAAAAABAQ}
{\bkmkend AAAAAAABAQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldump.c \'B5\'DA 8 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v dumpBlock\:ldump.c}
{\xe \v ldump.c\:dumpBlock}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dumpBlock ({\b DumpState} *  {\i D}, const void *  {\i b}, size_t  {\i size}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABAR}
{\bkmkend AAAAAAABAR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldump.c \'B5\'DA 40 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v dumpByte\:ldump.c}
{\xe \v ldump.c\:dumpByte}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dumpByte ({\b DumpState} *  {\i D}, int  {\i y}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABAS}
{\bkmkend AAAAAAABAS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldump.c \'B5\'DA 52 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v dumpCode\:ldump.c}
{\xe \v ldump.c\:dumpCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dumpCode ({\b DumpState} *  {\i D}, const {\b Proto} *  {\i f}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABAT}
{\bkmkend AAAAAAABAT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldump.c \'B5\'DA 100 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v dumpConstants\:ldump.c}
{\xe \v ldump.c\:dumpConstants}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dumpConstants ({\b DumpState} *  {\i D}, const {\b Proto} *  {\i f}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABAU}
{\bkmkend AAAAAAABAU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldump.c \'B5\'DA 108 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v dumpDebug\:ldump.c}
{\xe \v ldump.c\:dumpDebug}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dumpDebug ({\b DumpState} *  {\i D}, const {\b Proto} *  {\i f}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABAV}
{\bkmkend AAAAAAABAV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldump.c \'B5\'DA 154 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v dumpFunction\:ldump.c}
{\xe \v ldump.c\:dumpFunction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dumpFunction ({\b DumpState} *  {\i D}, const {\b Proto} *  {\i f}, {\b TString} *  {\i psource}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABAW}
{\bkmkend AAAAAAABAW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldump.c \'B5\'DA 179 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v dumpHeader\:ldump.c}
{\xe \v ldump.c\:dumpHeader}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dumpHeader ({\b DumpState} *  {\i D}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABAX}
{\bkmkend AAAAAAABAX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldump.c \'B5\'DA 197 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v dumpInt\:ldump.c}
{\xe \v ldump.c\:dumpInt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dumpInt ({\b DumpState} *  {\i D}, int  {\i x}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABAY}
{\bkmkend AAAAAAABAY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldump.c \'B5\'DA 73 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v dumpInteger\:ldump.c}
{\xe \v ldump.c\:dumpInteger}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dumpInteger ({\b DumpState} *  {\i D}, {\b lua_Integer}  {\i x}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABAZ}
{\bkmkend AAAAAAABAZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldump.c \'B5\'DA 83 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v dumpNumber\:ldump.c}
{\xe \v ldump.c\:dumpNumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dumpNumber ({\b DumpState} *  {\i D}, {\b lua_Number}  {\i x}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABBA}
{\bkmkend AAAAAAABBA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldump.c \'B5\'DA 78 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v dumpProtos\:ldump.c}
{\xe \v ldump.c\:dumpProtos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dumpProtos ({\b DumpState} *  {\i D}, const {\b Proto} *  {\i f}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABBB}
{\bkmkend AAAAAAABBB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldump.c \'B5\'DA 134 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v dumpSize\:ldump.c}
{\xe \v ldump.c\:dumpSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dumpSize ({\b DumpState} *  {\i D}, size_t  {\i x}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABBC}
{\bkmkend AAAAAAABBC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldump.c \'B5\'DA 61 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v dumpString\:ldump.c}
{\xe \v ldump.c\:dumpString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dumpString ({\b DumpState} *  {\i D}, const {\b TString} *  {\i s}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABBD}
{\bkmkend AAAAAAABBD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldump.c \'B5\'DA 88 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v dumpUpvalues\:ldump.c}
{\xe \v ldump.c\:dumpUpvalues}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dumpUpvalues ({\b DumpState} *  {\i D}, const {\b Proto} *  {\i f}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABBE}
{\bkmkend AAAAAAABBE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldump.c \'B5\'DA 143 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaU_dump\:ldump.c}
{\xe \v ldump.c\:luaU_dump}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int luaU_dump ({\b lua_State} *  {\i L}, const {\b Proto} *  {\i f}, {\b lua_Writer}  {\i w}, void *  {\i data}, int  {\i strip})}}
\par
{\bkmkstart AAAAAAABBF}
{\bkmkend AAAAAAABBF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldump.c \'B5\'DA 213 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/gitworkspace/lua/src/lfunc.c \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v D:/gitworkspace/lua/src/lfunc.c}
{\xe \v D:/gitworkspace/lua/src/lfunc.c}
{\bkmkstart AAAAAAABBG}
{\bkmkend AAAAAAABBG}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "lprefix.h"}\par
{\f2 #include <stddef.h>}\par
{\f2 #include "lua.h"}\par
{\f2 #include "ldebug.h"}\par
{\f2 #include "ldo.h"}\par
{\f2 #include "lfunc.h"}\par
{\f2 #include "lgc.h"}\par
{\f2 #include "lmem.h"}\par
{\f2 #include "lobject.h"}\par
{\f2 #include "lstate.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lfunc_c}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_CORE}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CClosure} * {\b luaF_newCclosure} ({\b lua_State} *L, int nupvals)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LClosure} * {\b luaF_newLclosure} ({\b lua_State} *L, int nupvals)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaF_initupvals} ({\b lua_State} *L, {\b LClosure} *cl)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b UpVal} * {\b newupval} ({\b lua_State} *L, int tbc, {\b StkId} level, {\b UpVal} **prev)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b UpVal} * {\b luaF_findupval} ({\b lua_State} *L, {\b StkId} level)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b callclose} ({\b lua_State} *L, void *ud)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b prepclosingmethod} ({\b lua_State} *L, {\b TValue} *obj, {\b TValue} *err)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b varerror} ({\b lua_State} *L, {\b StkId} level, const char *msg)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b callclosemth} ({\b lua_State} *L, {\b StkId} level, int status)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b trynewtbcupval} ({\b lua_State} *L, void *ud)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaF_newtbcupval} ({\b lua_State} *L, {\b StkId} level)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaF_unlinkupval} ({\b UpVal} *uv)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b luaF_close} ({\b lua_State} *L, {\b StkId} level, int status)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Proto} * {\b luaF_newproto} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaF_freeproto} ({\b lua_State} *L, {\b Proto} *f)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b luaF_getlocalname} (const {\b Proto} *f, int local_number, int pc)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v lfunc_c\:lfunc.c}
{\xe \v lfunc.c\:lfunc_c}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lfunc_c}}
\par
{\bkmkstart AAAAAAABBH}
{\bkmkend AAAAAAABBH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lfunc.c \'B5\'DA 7 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_CORE\:lfunc.c}
{\xe \v lfunc.c\:LUA_CORE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_CORE}}
\par
{\bkmkstart AAAAAAABBI}
{\bkmkend AAAAAAABBI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lfunc.c \'B5\'DA 8 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v callclose\:lfunc.c}
{\xe \v lfunc.c\:callclose}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void callclose ({\b lua_State} *  {\i L}, void *  {\i ud}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABBJ}
{\bkmkend AAAAAAABBJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lfunc.c \'B5\'DA 103 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v callclosemth\:lfunc.c}
{\xe \v lfunc.c\:callclosemth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int callclosemth ({\b lua_State} *  {\i L}, {\b StkId}  {\i level}, int  {\i status}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABBK}
{\bkmkend AAAAAAABBK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lfunc.c \'B5\'DA 150 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaF_close\:lfunc.c}
{\xe \v lfunc.c\:luaF_close}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int luaF_close ({\b lua_State} *  {\i L}, {\b StkId}  {\i level}, int  {\i status})}}
\par
{\bkmkstart AAAAAAABBL}
{\bkmkend AAAAAAABBL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lfunc.c \'B5\'DA 223 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaF_findupval\:lfunc.c}
{\xe \v lfunc.c\:luaF_findupval}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b UpVal}* luaF_findupval ({\b lua_State} *  {\i L}, {\b StkId}  {\i level})}}
\par
{\bkmkstart AAAAAAABBM}
{\bkmkend AAAAAAABBM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lfunc.c \'B5\'DA 88 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaF_freeproto\:lfunc.c}
{\xe \v lfunc.c\:luaF_freeproto}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaF_freeproto ({\b lua_State} *  {\i L}, {\b Proto} *  {\i f})}}
\par
{\bkmkstart AAAAAAABBN}
{\bkmkend AAAAAAABBN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lfunc.c \'B5\'DA 272 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaF_getlocalname\:lfunc.c}
{\xe \v lfunc.c\:luaF_getlocalname}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* luaF_getlocalname (const {\b Proto} *  {\i f}, int  {\i local_number}, int  {\i pc})}}
\par
{\bkmkstart AAAAAAABBO}
{\bkmkend AAAAAAABBO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lfunc.c \'B5\'DA 288 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaF_initupvals\:lfunc.c}
{\xe \v lfunc.c\:luaF_initupvals}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaF_initupvals ({\b lua_State} *  {\i L}, {\b LClosure} *  {\i cl})}}
\par
{\bkmkstart AAAAAAABBP}
{\bkmkend AAAAAAABBP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lfunc.c \'B5\'DA 48 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaF_newCclosure\:lfunc.c}
{\xe \v lfunc.c\:luaF_newCclosure}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CClosure}* luaF_newCclosure ({\b lua_State} *  {\i L}, int  {\i nupvals})}}
\par
{\bkmkstart AAAAAAABBQ}
{\bkmkend AAAAAAABBQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lfunc.c \'B5\'DA 27 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaF_newLclosure\:lfunc.c}
{\xe \v lfunc.c\:luaF_newLclosure}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LClosure}* luaF_newLclosure ({\b lua_State} *  {\i L}, int  {\i nupvals})}}
\par
{\bkmkstart AAAAAAABBR}
{\bkmkend AAAAAAABBR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lfunc.c \'B5\'DA 35 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaF_newproto\:lfunc.c}
{\xe \v lfunc.c\:luaF_newproto}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Proto}* luaF_newproto ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAABBS}
{\bkmkend AAAAAAABBS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lfunc.c \'B5\'DA 245 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaF_newtbcupval\:lfunc.c}
{\xe \v lfunc.c\:luaF_newtbcupval}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaF_newtbcupval ({\b lua_State} *  {\i L}, {\b StkId}  {\i level})}}
\par
{\bkmkstart AAAAAAABBT}
{\bkmkend AAAAAAABBT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lfunc.c \'B5\'DA 194 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaF_unlinkupval\:lfunc.c}
{\xe \v lfunc.c\:luaF_unlinkupval}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaF_unlinkupval ({\b UpVal} *  {\i uv})}}
\par
{\bkmkstart AAAAAAABBU}
{\bkmkend AAAAAAABBU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lfunc.c \'B5\'DA 215 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v newupval\:lfunc.c}
{\xe \v lfunc.c\:newupval}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b UpVal}* newupval ({\b lua_State} *  {\i L}, int  {\i tbc}, {\b StkId}  {\i level}, {\b UpVal} **  {\i prev}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABBV}
{\bkmkend AAAAAAABBV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lfunc.c \'B5\'DA 65 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v prepclosingmethod\:lfunc.c}
{\xe \v lfunc.c\:prepclosingmethod}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int prepclosingmethod ({\b lua_State} *  {\i L}, {\b TValue} *  {\i obj}, {\b TValue} *  {\i err}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABBW}
{\bkmkend AAAAAAABBW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lfunc.c \'B5\'DA 113 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v trynewtbcupval\:lfunc.c}
{\xe \v lfunc.c\:trynewtbcupval}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void trynewtbcupval ({\b lua_State} *  {\i L}, void *  {\i ud}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABBX}
{\bkmkend AAAAAAABBX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lfunc.c \'B5\'DA 184 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v varerror\:lfunc.c}
{\xe \v lfunc.c\:varerror}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void varerror ({\b lua_State} *  {\i L}, {\b StkId}  {\i level}, const char *  {\i msg}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABBY}
{\bkmkend AAAAAAABBY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lfunc.c \'B5\'DA 130 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/gitworkspace/lua/src/lfunc.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v D:/gitworkspace/lua/src/lfunc.h}
{\xe \v D:/gitworkspace/lua/src/lfunc.h}
{\bkmkstart AAAAAAABBZ}
{\bkmkend AAAAAAABBZ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "lobject.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b sizeCclosure}(n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b sizeLclosure}(n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b isintwups}(L)\~ (L->twups != L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAXUPVAL}\~ 255\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b upisopen}(up)\~ ((up)->v != &(up)->u.value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b uplevel}(up)\~ {\b check_exp}({\b upisopen}(up), {\b cast}({\b StkId}, (up)->v))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAXMISS}\~ 10\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b NOCLOSINGMETH}\~ (-1)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CLOSEPROTECT}\~ (-2)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} {\b Proto} * {\b luaF_newproto} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} {\b CClosure} * {\b luaF_newCclosure} ({\b lua_State} *L, int nupvals)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} {\b LClosure} * {\b luaF_newLclosure} ({\b lua_State} *L, int nupvals)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaF_initupvals} ({\b lua_State} *L, {\b LClosure} *cl)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} {\b UpVal} * {\b luaF_findupval} ({\b lua_State} *L, {\b StkId} level)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaF_newtbcupval} ({\b lua_State} *L, {\b StkId} level)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} int {\b luaF_close} ({\b lua_State} *L, {\b StkId} level, int status)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaF_unlinkupval} ({\b UpVal} *uv)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaF_freeproto} ({\b lua_State} *L, {\b Proto} *f)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} const char * {\b luaF_getlocalname} (const {\b Proto} *func, int local_number, int pc)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v CLOSEPROTECT\:lfunc.h}
{\xe \v lfunc.h\:CLOSEPROTECT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CLOSEPROTECT\~ (-2)}}
\par
{\bkmkstart AAAAAAABCA}
{\bkmkend AAAAAAABCA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lfunc.h \'B5\'DA 53 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v isintwups\:lfunc.h}
{\xe \v lfunc.h\:isintwups}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define isintwups( L)\~ (L->twups != L)}}
\par
{\bkmkstart AAAAAAABCB}
{\bkmkend AAAAAAABCB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lfunc.h \'B5\'DA 22 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v MAXMISS\:lfunc.h}
{\xe \v lfunc.h\:MAXMISS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAXMISS\~ 10}}
\par
{\bkmkstart AAAAAAABCC}
{\bkmkend AAAAAAABCC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lfunc.h \'B5\'DA 42 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v MAXUPVAL\:lfunc.h}
{\xe \v lfunc.h\:MAXUPVAL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAXUPVAL\~ 255}}
\par
{\bkmkstart AAAAAAABCD}
{\bkmkend AAAAAAABCD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lfunc.h \'B5\'DA 29 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v NOCLOSINGMETH\:lfunc.h}
{\xe \v lfunc.h\:NOCLOSINGMETH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define NOCLOSINGMETH\~ (-1)}}
\par
{\bkmkstart AAAAAAABCE}
{\bkmkend AAAAAAABCE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lfunc.h \'B5\'DA 50 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v sizeCclosure\:lfunc.h}
{\xe \v lfunc.h\:sizeCclosure}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define sizeCclosure( n)}}
\par
{\bkmkstart AAAAAAABCF}
{\bkmkend AAAAAAABCF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                          (cast_int(offsetof(CClosure, upvalue)) + \\\par
                         cast_int({\cf17 sizeof}(TValue)) * (n))\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE lfunc.h \'B5\'DA 14 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v sizeLclosure\:lfunc.h}
{\xe \v lfunc.h\:sizeLclosure}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define sizeLclosure( n)}}
\par
{\bkmkstart AAAAAAABCG}
{\bkmkend AAAAAAABCG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                          (cast_int(offsetof(LClosure, upvals)) + \\\par
                         cast_int({\cf17 sizeof}(TValue *)) * (n))\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE lfunc.h \'B5\'DA 17 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v upisopen\:lfunc.h}
{\xe \v lfunc.h\:upisopen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define upisopen( up)\~ ((up)->v != &(up)->u.value)}}
\par
{\bkmkstart AAAAAAABCH}
{\bkmkend AAAAAAABCH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lfunc.h \'B5\'DA 32 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v uplevel\:lfunc.h}
{\xe \v lfunc.h\:uplevel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define uplevel( up)\~ {\b check_exp}({\b upisopen}(up), {\b cast}({\b StkId}, (up)->v))}}
\par
{\bkmkstart AAAAAAABCI}
{\bkmkend AAAAAAABCI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lfunc.h \'B5\'DA 35 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v luaF_close\:lfunc.h}
{\xe \v lfunc.h\:luaF_close}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} int luaF_close ({\b lua_State} *  {\i L}, {\b StkId}  {\i level}, int  {\i status})}}
\par
{\bkmkstart AAAAAAABCJ}
{\bkmkend AAAAAAABCJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lfunc.c \'B5\'DA 223 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaF_findupval\:lfunc.h}
{\xe \v lfunc.h\:luaF_findupval}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} {\b UpVal}* luaF_findupval ({\b lua_State} *  {\i L}, {\b StkId}  {\i level})}}
\par
{\bkmkstart AAAAAAABCK}
{\bkmkend AAAAAAABCK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lfunc.c \'B5\'DA 88 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaF_freeproto\:lfunc.h}
{\xe \v lfunc.h\:luaF_freeproto}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaF_freeproto ({\b lua_State} *  {\i L}, {\b Proto} *  {\i f})}}
\par
{\bkmkstart AAAAAAABCL}
{\bkmkend AAAAAAABCL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lfunc.c \'B5\'DA 272 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaF_getlocalname\:lfunc.h}
{\xe \v lfunc.h\:luaF_getlocalname}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} const char* luaF_getlocalname (const {\b Proto} *  {\i func}, int  {\i local_number}, int  {\i pc})}}
\par
{\bkmkstart AAAAAAABCM}
{\bkmkend AAAAAAABCM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lfunc.c \'B5\'DA 288 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaF_initupvals\:lfunc.h}
{\xe \v lfunc.h\:luaF_initupvals}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaF_initupvals ({\b lua_State} *  {\i L}, {\b LClosure} *  {\i cl})}}
\par
{\bkmkstart AAAAAAABCN}
{\bkmkend AAAAAAABCN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lfunc.c \'B5\'DA 48 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaF_newCclosure\:lfunc.h}
{\xe \v lfunc.h\:luaF_newCclosure}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} {\b CClosure}* luaF_newCclosure ({\b lua_State} *  {\i L}, int  {\i nupvals})}}
\par
{\bkmkstart AAAAAAABCO}
{\bkmkend AAAAAAABCO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lfunc.c \'B5\'DA 27 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaF_newLclosure\:lfunc.h}
{\xe \v lfunc.h\:luaF_newLclosure}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} {\b LClosure}* luaF_newLclosure ({\b lua_State} *  {\i L}, int  {\i nupvals})}}
\par
{\bkmkstart AAAAAAABCP}
{\bkmkend AAAAAAABCP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lfunc.c \'B5\'DA 35 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaF_newproto\:lfunc.h}
{\xe \v lfunc.h\:luaF_newproto}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} {\b Proto}* luaF_newproto ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAABCQ}
{\bkmkend AAAAAAABCQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lfunc.c \'B5\'DA 245 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaF_newtbcupval\:lfunc.h}
{\xe \v lfunc.h\:luaF_newtbcupval}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaF_newtbcupval ({\b lua_State} *  {\i L}, {\b StkId}  {\i level})}}
\par
{\bkmkstart AAAAAAABCR}
{\bkmkend AAAAAAABCR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lfunc.c \'B5\'DA 194 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaF_unlinkupval\:lfunc.h}
{\xe \v lfunc.h\:luaF_unlinkupval}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaF_unlinkupval ({\b UpVal} *  {\i uv})}}
\par
{\bkmkstart AAAAAAABCS}
{\bkmkend AAAAAAABCS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lfunc.c \'B5\'DA 215 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/gitworkspace/lua/src/lgc.c \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v D:/gitworkspace/lua/src/lgc.c}
{\xe \v D:/gitworkspace/lua/src/lgc.c}
{\bkmkstart AAAAAAABCT}
{\bkmkend AAAAAAABCT}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "lprefix.h"}\par
{\f2 #include <stdio.h>}\par
{\f2 #include <string.h>}\par
{\f2 #include "lua.h"}\par
{\f2 #include "ldebug.h"}\par
{\f2 #include "ldo.h"}\par
{\f2 #include "lfunc.h"}\par
{\f2 #include "lgc.h"}\par
{\f2 #include "lmem.h"}\par
{\f2 #include "lobject.h"}\par
{\f2 #include "lstate.h"}\par
{\f2 #include "lstring.h"}\par
{\f2 #include "ltable.h"}\par
{\f2 #include "ltm.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lgc_c}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_CORE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GCSWEEPMAX}\~ 100\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GCFINMAX}\~ 10\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GCFINALIZECOST}\~ 50\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b WORK2MEM}\~ sizeof({\b TValue})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PAUSEADJ}\~ 100\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b maskcolors}\~ (~({\b bitmask}({\b BLACKBIT}) | {\b WHITEBITS} | {\b AGEBITS}))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b makewhite}(g,  x)\~  (x->marked = {\b cast_byte}((x->marked & {\b maskcolors}) | {\b luaC_white}(g)))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b white2gray}(x)\~ {\b resetbits}(x->marked, {\b WHITEBITS})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b black2gray}(x)\~ {\b resetbit}(x->marked, {\b BLACKBIT})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b valiswhite}(x)\~ ({\b iscollectable}(x) && {\b iswhite}({\b gcvalue}(x)))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b keyiswhite}(n)\~ ({\b keyiscollectable}(n) && {\b iswhite}({\b gckey}(n)))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b checkconsistency}(obj)\~   {\b lua_longassert}(!{\b iscollectable}(obj) || {\b righttt}(obj))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b gcvalueN}(o)\~ ({\b iscollectable}(o) ? {\b gcvalue}(o) : NULL)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b markvalue}(g,  o)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b markkey}(g,  n)\~ \{ if {\b keyiswhite}(n) {\b reallymarkobject}(g,{\b gckey}(n)); \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b markobject}(g,  t)\~ \{ if ({\b iswhite}(t)) {\b reallymarkobject}(g, {\b obj2gco}(t)); \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b markobjectN}(g,  t)\~ \{ if (t) {\b markobject}(g,t); \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b gnodelast}(h)\~ {\b gnode}(h, {\b cast_sizet}({\b sizenode}(h)))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b linkgclist}(o,  p)\~ ((o)->gclist = (p), (p) = {\b obj2gco}(o))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b linkobjgclist}(o,  p)\~ (*{\b getgclist}(o) = (p), (p) = {\b obj2gco}(o))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b maskgencolors}\~ (~({\b bitmask}({\b BLACKBIT}) | {\b WHITEBITS}))\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b reallymarkobject} ({\b global_State} *g, {\b GCObject} *o)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b lu_mem} {\b atomic} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b entersweep} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b GCObject} ** {\b getgclist} ({\b GCObject} *o)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b clearkey} ({\b Node} *n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b iscleared} ({\b global_State} *g, const {\b GCObject} *o)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaC_barrier_} ({\b lua_State} *L, {\b GCObject} *o, {\b GCObject} *v)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaC_barrierback_} ({\b lua_State} *L, {\b GCObject} *o)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaC_fix} ({\b lua_State} *L, {\b GCObject} *o)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GCObject} * {\b luaC_newobj} ({\b lua_State} *L, int tt, size_t sz)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b markmt} ({\b global_State} *g)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b lu_mem} {\b markbeingfnz} ({\b global_State} *g)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b remarkupvals} ({\b global_State} *g)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b restartcollection} ({\b global_State} *g)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b traverseweakvalue} ({\b global_State} *g, {\b Table} *h)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b traverseephemeron} ({\b global_State} *g, {\b Table} *h, int inv)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b traversestrongtable} ({\b global_State} *g, {\b Table} *h)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b lu_mem} {\b traversetable} ({\b global_State} *g, {\b Table} *h)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b traverseudata} ({\b global_State} *g, {\b Udata} *u)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b traverseproto} ({\b global_State} *g, {\b Proto} *f)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b traverseCclosure} ({\b global_State} *g, {\b CClosure} *cl)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b traverseLclosure} ({\b global_State} *g, {\b LClosure} *cl)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b traversethread} ({\b global_State} *g, {\b lua_State} *th)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b lu_mem} {\b propagatemark} ({\b global_State} *g)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b lu_mem} {\b propagateall} ({\b global_State} *g)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b convergeephemerons} ({\b global_State} *g)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b clearbykeys} ({\b global_State} *g, {\b GCObject} *l)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b clearbyvalues} ({\b global_State} *g, {\b GCObject} *l, {\b GCObject} *f)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b freeupval} ({\b lua_State} *L, {\b UpVal} *uv)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b freeobj} ({\b lua_State} *L, {\b GCObject} *o)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b GCObject} ** {\b sweeplist} ({\b lua_State} *L, {\b GCObject} **p, int countin, int *countout)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b GCObject} ** {\b sweeptolive} ({\b lua_State} *L, {\b GCObject} **p)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b checkSizes} ({\b lua_State} *L, {\b global_State} *g)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b GCObject} * {\b udata2finalize} ({\b global_State} *g)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b dothecall} ({\b lua_State} *L, void *ud)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b GCTM} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b runafewfinalizers} ({\b lua_State} *L, int n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b callallpendingfinalizers} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b GCObject} ** {\b findlast} ({\b GCObject} **p)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b separatetobefnz} ({\b global_State} *g, int all)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaC_checkfinalizer} ({\b lua_State} *L, {\b GCObject} *o, {\b Table} *mt)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b setpause} ({\b global_State} *g)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b sweep2old} ({\b lua_State} *L, {\b GCObject} **p)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b GCObject} ** {\b sweepgen} ({\b lua_State} *L, {\b global_State} *g, {\b GCObject} **p, {\b GCObject} *limit)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b whitelist} ({\b global_State} *g, {\b GCObject} *p)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b GCObject} ** {\b correctgraylist} ({\b GCObject} **p)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b correctgraylists} ({\b global_State} *g)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b markold} ({\b global_State} *g, {\b GCObject} *from, {\b GCObject} *to)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b finishgencycle} ({\b lua_State} *L, {\b global_State} *g)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b youngcollection} ({\b lua_State} *L, {\b global_State} *g)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b atomic2gen} ({\b lua_State} *L, {\b global_State} *g)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b lu_mem} {\b entergen} ({\b lua_State} *L, {\b global_State} *g)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b enterinc} ({\b global_State} *g)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaC_changemode} ({\b lua_State} *L, int newmode)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b lu_mem} {\b fullgen} ({\b lua_State} *L, {\b global_State} *g)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b setminordebt} ({\b global_State} *g)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b stepgenfull} ({\b lua_State} *L, {\b global_State} *g)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b genstep} ({\b lua_State} *L, {\b global_State} *g)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b deletelist} ({\b lua_State} *L, {\b GCObject} *p, {\b GCObject} *limit)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaC_freeallobjects} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b sweepstep} ({\b lua_State} *L, {\b global_State} *g, int nextstate, {\b GCObject} **nextlist)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b lu_mem} {\b singlestep} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaC_runtilstate} ({\b lua_State} *L, int statesmask)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b incstep} ({\b lua_State} *L, {\b global_State} *g)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaC_step} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b fullinc} ({\b lua_State} *L, {\b global_State} *g)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaC_fullgc} ({\b lua_State} *L, int isemergency)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v black2gray\:lgc.c}
{\xe \v lgc.c\:black2gray}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define black2gray( x)\~ {\b resetbit}(x->marked, {\b BLACKBIT})}}
\par
{\bkmkstart AAAAAAABCU}
{\bkmkend AAAAAAABCU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 72 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v checkconsistency\:lgc.c}
{\xe \v lgc.c\:checkconsistency}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define checkconsistency( obj)\~   {\b lua_longassert}(!{\b iscollectable}(obj) || {\b righttt}(obj))}}
\par
{\bkmkstart AAAAAAABCV}
{\bkmkend AAAAAAABCV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 80 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v GCFINALIZECOST\:lgc.c}
{\xe \v lgc.c\:GCFINALIZECOST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GCFINALIZECOST\~ 50}}
\par
{\bkmkstart AAAAAAABCW}
{\bkmkend AAAAAAABCW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 46 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v GCFINMAX\:lgc.c}
{\xe \v lgc.c\:GCFINMAX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GCFINMAX\~ 10}}
\par
{\bkmkstart AAAAAAABCX}
{\bkmkend AAAAAAABCX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 40 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v GCSWEEPMAX\:lgc.c}
{\xe \v lgc.c\:GCSWEEPMAX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GCSWEEPMAX\~ 100}}
\par
{\bkmkstart AAAAAAABCY}
{\bkmkend AAAAAAABCY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 35 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v gcvalueN\:lgc.c}
{\xe \v lgc.c\:gcvalueN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define gcvalueN( o)\~ ({\b iscollectable}(o) ? {\b gcvalue}(o) : NULL)}}
\par
{\bkmkstart AAAAAAABCZ}
{\bkmkend AAAAAAABCZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 86 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v gnodelast\:lgc.c}
{\xe \v lgc.c\:gnodelast}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define gnodelast( h)\~ {\b gnode}(h, {\b cast_sizet}({\b sizenode}(h)))}}
\par
{\bkmkstart AAAAAAABDA}
{\bkmkend AAAAAAABDA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 117 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v keyiswhite\:lgc.c}
{\xe \v lgc.c\:keyiswhite}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define keyiswhite( n)\~ ({\b keyiscollectable}(n) && {\b iswhite}({\b gckey}(n)))}}
\par
{\bkmkstart AAAAAAABDB}
{\bkmkend AAAAAAABDB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 77 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lgc_c\:lgc.c}
{\xe \v lgc.c\:lgc_c}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lgc_c}}
\par
{\bkmkstart AAAAAAABDC}
{\bkmkend AAAAAAABDC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 7 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v linkgclist\:lgc.c}
{\xe \v lgc.c\:linkgclist}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define linkgclist( o,  p)\~ ((o)->gclist = (p), (p) = {\b obj2gco}(o))}}
\par
{\bkmkstart AAAAAAABDD}
{\bkmkend AAAAAAABDD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 140 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v linkobjgclist\:lgc.c}
{\xe \v lgc.c\:linkobjgclist}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define linkobjgclist( o,  p)\~ (*{\b getgclist}(o) = (p), (p) = {\b obj2gco}(o))}}
\par
{\bkmkstart AAAAAAABDE}
{\bkmkend AAAAAAABDE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 146 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_CORE\:lgc.c}
{\xe \v lgc.c\:LUA_CORE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_CORE}}
\par
{\bkmkstart AAAAAAABDF}
{\bkmkend AAAAAAABDF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 8 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v makewhite\:lgc.c}
{\xe \v lgc.c\:makewhite}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define makewhite( g,  x)\~  (x->marked = {\b cast_byte}((x->marked & {\b maskcolors}) | {\b luaC_white}(g)))}}
\par
{\bkmkstart AAAAAAABDG}
{\bkmkend AAAAAAABDG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 68 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v markkey\:lgc.c}
{\xe \v lgc.c\:markkey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define markkey( g,  n)\~ \{ if {\b keyiswhite}(n) {\b reallymarkobject}(g,{\b gckey}(n)); \}}}
\par
{\bkmkstart AAAAAAABDH}
{\bkmkend AAAAAAABDH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 92 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v markobject\:lgc.c}
{\xe \v lgc.c\:markobject}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define markobject( g,  t)\~ \{ if ({\b iswhite}(t)) {\b reallymarkobject}(g, {\b obj2gco}(t)); \}}}
\par
{\bkmkstart AAAAAAABDI}
{\bkmkend AAAAAAABDI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 94 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v markobjectN\:lgc.c}
{\xe \v lgc.c\:markobjectN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define markobjectN( g,  t)\~ \{ if (t) {\b markobject}(g,t); \}}}
\par
{\bkmkstart AAAAAAABDJ}
{\bkmkend AAAAAAABDJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 100 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v markvalue\:lgc.c}
{\xe \v lgc.c\:markvalue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define markvalue( g,  o)}}
\par
{\bkmkstart AAAAAAABDK}
{\bkmkend AAAAAAABDK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   \{ checkconsistency(o); \\\par
  if (valiswhite(o)) reallymarkobject(g,gcvalue(o)); \}\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 89 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v maskcolors\:lgc.c}
{\xe \v lgc.c\:maskcolors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define maskcolors\~ (~({\b bitmask}({\b BLACKBIT}) | {\b WHITEBITS} | {\b AGEBITS}))}}
\par
{\bkmkstart AAAAAAABDL}
{\bkmkend AAAAAAABDL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 64 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v maskgencolors\:lgc.c}
{\xe \v lgc.c\:maskgencolors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define maskgencolors\~ (~({\b bitmask}({\b BLACKBIT}) | {\b WHITEBITS}))}}
\par
{\bkmkstart AAAAAAABDM}
{\bkmkend AAAAAAABDM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 969 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v PAUSEADJ\:lgc.c}
{\xe \v lgc.c\:PAUSEADJ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PAUSEADJ\~ 100}}
\par
{\bkmkstart AAAAAAABDN}
{\bkmkend AAAAAAABDN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 60 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v valiswhite\:lgc.c}
{\xe \v lgc.c\:valiswhite}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define valiswhite( x)\~ ({\b iscollectable}(x) && {\b iswhite}({\b gcvalue}(x)))}}
\par
{\bkmkstart AAAAAAABDO}
{\bkmkend AAAAAAABDO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 75 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v white2gray\:lgc.c}
{\xe \v lgc.c\:white2gray}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define white2gray( x)\~ {\b resetbits}(x->marked, {\b WHITEBITS})}}
\par
{\bkmkstart AAAAAAABDP}
{\bkmkend AAAAAAABDP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 71 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v WORK2MEM\:lgc.c}
{\xe \v lgc.c\:WORK2MEM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define WORK2MEM\~ sizeof({\b TValue})}}
\par
{\bkmkstart AAAAAAABDQ}
{\bkmkend AAAAAAABDQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 53 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v atomic\:lgc.c}
{\xe \v lgc.c\:atomic}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b lu_mem} atomic ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABDR}
{\bkmkend AAAAAAABDR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 1416 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v atomic2gen\:lgc.c}
{\xe \v lgc.c\:atomic2gen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void atomic2gen ({\b lua_State} *  {\i L}, {\b global_State} *  {\i g}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABDS}
{\bkmkend AAAAAAABDS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 1169 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v callallpendingfinalizers\:lgc.c}
{\xe \v lgc.c\:callallpendingfinalizers}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void callallpendingfinalizers ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABDT}
{\bkmkend AAAAAAABDT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 879 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v checkSizes\:lgc.c}
{\xe \v lgc.c\:checkSizes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void checkSizes ({\b lua_State} *  {\i L}, {\b global_State} *  {\i g}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABDU}
{\bkmkend AAAAAAABDU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 802 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v clearbykeys\:lgc.c}
{\xe \v lgc.c\:clearbykeys}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void clearbykeys ({\b global_State} *  {\i g}, {\b GCObject} *  {\i l}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABDV}
{\bkmkend AAAAAAABDV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 664 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v clearbyvalues\:lgc.c}
{\xe \v lgc.c\:clearbyvalues}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void clearbyvalues ({\b global_State} *  {\i g}, {\b GCObject} *  {\i l}, {\b GCObject} *  {\i f}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABDW}
{\bkmkend AAAAAAABDW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 683 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v clearkey\:lgc.c}
{\xe \v lgc.c\:clearkey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void clearkey ({\b Node} *  {\i n}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABDX}
{\bkmkend AAAAAAABDX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 159 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v convergeephemerons\:lgc.c}
{\xe \v lgc.c\:convergeephemerons}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void convergeephemerons ({\b global_State} *  {\i g}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABDY}
{\bkmkend AAAAAAABDY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 632 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v correctgraylist\:lgc.c}
{\xe \v lgc.c\:correctgraylist}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b GCObject}** correctgraylist ({\b GCObject} **  {\i p}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABDZ}
{\bkmkend AAAAAAABDZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 1048 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v correctgraylists\:lgc.c}
{\xe \v lgc.c\:correctgraylists}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void correctgraylists ({\b global_State} *  {\i g}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABEA}
{\bkmkend AAAAAAABEA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 1091 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v deletelist\:lgc.c}
{\xe \v lgc.c\:deletelist}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void deletelist ({\b lua_State} *  {\i L}, {\b GCObject} *  {\i p}, {\b GCObject} *  {\i limit}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABEB}
{\bkmkend AAAAAAABEB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 1390 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v dothecall\:lgc.c}
{\xe \v lgc.c\:dothecall}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void dothecall ({\b lua_State} *  {\i L}, void *  {\i ud}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABEC}
{\bkmkend AAAAAAABEC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 830 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v entergen\:lgc.c}
{\xe \v lgc.c\:entergen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b lu_mem} entergen ({\b lua_State} *  {\i L}, {\b global_State} *  {\i g}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABED}
{\bkmkend AAAAAAABED}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 1193 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v enterinc\:lgc.c}
{\xe \v lgc.c\:enterinc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void enterinc ({\b global_State} *  {\i g}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABEE}
{\bkmkend AAAAAAABEE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 1208 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v entersweep\:lgc.c}
{\xe \v lgc.c\:entersweep}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void entersweep ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABEF}
{\bkmkend AAAAAAABEF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 1378 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v findlast\:lgc.c}
{\xe \v lgc.c\:findlast}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b GCObject}** findlast ({\b GCObject} **  {\i p}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABEG}
{\bkmkend AAAAAAABEG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 889 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v finishgencycle\:lgc.c}
{\xe \v lgc.c\:finishgencycle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void finishgencycle ({\b lua_State} *  {\i L}, {\b global_State} *  {\i g}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABEH}
{\bkmkend AAAAAAABEH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 1124 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v freeobj\:lgc.c}
{\xe \v lgc.c\:freeobj}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void freeobj ({\b lua_State} *  {\i L}, {\b GCObject} *  {\i o}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABEI}
{\bkmkend AAAAAAABEI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 711 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v freeupval\:lgc.c}
{\xe \v lgc.c\:freeupval}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void freeupval ({\b lua_State} *  {\i L}, {\b UpVal} *  {\i uv}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABEJ}
{\bkmkend AAAAAAABEJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 704 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v fullgen\:lgc.c}
{\xe \v lgc.c\:fullgen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b lu_mem} fullgen ({\b lua_State} *  {\i L}, {\b global_State} *  {\i g}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABEK}
{\bkmkend AAAAAAABEK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 1238 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v fullinc\:lgc.c}
{\xe \v lgc.c\:fullinc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void fullinc ({\b lua_State} *  {\i L}, {\b global_State} *  {\i g}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABEL}
{\bkmkend AAAAAAABEL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 1585 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v GCTM\:lgc.c}
{\xe \v lgc.c\:GCTM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void GCTM ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABEM}
{\bkmkend AAAAAAABEM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 836 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v genstep\:lgc.c}
{\xe \v lgc.c\:genstep}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void genstep ({\b lua_State} *  {\i L}, {\b global_State} *  {\i g}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABEN}
{\bkmkend AAAAAAABEN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 1314 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v getgclist\:lgc.c}
{\xe \v lgc.c\:getgclist}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b GCObject}** getgclist ({\b GCObject} *  {\i o}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABEO}
{\bkmkend AAAAAAABEO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 120 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v incstep\:lgc.c}
{\xe \v lgc.c\:incstep}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void incstep ({\b lua_State} *  {\i L}, {\b global_State} *  {\i g}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABEP}
{\bkmkend AAAAAAABEP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 1545 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v iscleared\:lgc.c}
{\xe \v lgc.c\:iscleared}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int iscleared ({\b global_State} *  {\i g}, const {\b GCObject} *  {\i o}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABEQ}
{\bkmkend AAAAAAABEQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 173 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaC_barrier_\:lgc.c}
{\xe \v lgc.c\:luaC_barrier_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaC_barrier_ ({\b lua_State} *  {\i L}, {\b GCObject} *  {\i o}, {\b GCObject} *  {\i v})}}
\par
{\bkmkstart AAAAAAABER}
{\bkmkend AAAAAAABER}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 193 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaC_barrierback_\:lgc.c}
{\xe \v lgc.c\:luaC_barrierback_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaC_barrierback_ ({\b lua_State} *  {\i L}, {\b GCObject} *  {\i o})}}
\par
{\bkmkstart AAAAAAABES}
{\bkmkend AAAAAAABES}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 214 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaC_changemode\:lgc.c}
{\xe \v lgc.c\:luaC_changemode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaC_changemode ({\b lua_State} *  {\i L}, int  {\i newmode})}}
\par
{\bkmkstart AAAAAAABET}
{\bkmkend AAAAAAABET}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 1223 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaC_checkfinalizer\:lgc.c}
{\xe \v lgc.c\:luaC_checkfinalizer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaC_checkfinalizer ({\b lua_State} *  {\i L}, {\b GCObject} *  {\i o}, {\b Table} *  {\i mt})}}
\par
{\bkmkstart AAAAAAABEU}
{\bkmkend AAAAAAABEU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 927 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaC_fix\:lgc.c}
{\xe \v lgc.c\:luaC_fix}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaC_fix ({\b lua_State} *  {\i L}, {\b GCObject} *  {\i o})}}
\par
{\bkmkstart AAAAAAABEV}
{\bkmkend AAAAAAABEV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 225 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaC_freeallobjects\:lgc.c}
{\xe \v lgc.c\:luaC_freeallobjects}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaC_freeallobjects ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAABEW}
{\bkmkend AAAAAAABEW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 1403 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaC_fullgc\:lgc.c}
{\xe \v lgc.c\:luaC_fullgc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaC_fullgc ({\b lua_State} *  {\i L}, int  {\i isemergency})}}
\par
{\bkmkstart AAAAAAABEX}
{\bkmkend AAAAAAABEX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 1603 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaC_newobj\:lgc.c}
{\xe \v lgc.c\:luaC_newobj}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GCObject}* luaC_newobj ({\b lua_State} *  {\i L}, int  {\i tt}, size_t  {\i sz})}}
\par
{\bkmkstart AAAAAAABEY}
{\bkmkend AAAAAAABEY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 240 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaC_runtilstate\:lgc.c}
{\xe \v lgc.c\:luaC_runtilstate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaC_runtilstate ({\b lua_State} *  {\i L}, int  {\i statesmask})}}
\par
{\bkmkstart AAAAAAABEZ}
{\bkmkend AAAAAAABEZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 1531 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaC_step\:lgc.c}
{\xe \v lgc.c\:luaC_step}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaC_step ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAABFA}
{\bkmkend AAAAAAABFA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 1566 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v markbeingfnz\:lgc.c}
{\xe \v lgc.c\:markbeingfnz}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b lu_mem} markbeingfnz ({\b global_State} *  {\i g}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABFB}
{\bkmkend AAAAAAABFB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 315 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v markmt\:lgc.c}
{\xe \v lgc.c\:markmt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void markmt ({\b global_State} *  {\i g}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABFC}
{\bkmkend AAAAAAABFC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 305 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v markold\:lgc.c}
{\xe \v lgc.c\:markold}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void markold ({\b global_State} *  {\i g}, {\b GCObject} *  {\i from}, {\b GCObject} *  {\i to}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABFD}
{\bkmkend AAAAAAABFD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 1107 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v propagateall\:lgc.c}
{\xe \v lgc.c\:propagateall}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b lu_mem} propagateall ({\b global_State} *  {\i g}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABFE}
{\bkmkend AAAAAAABFE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 617 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v propagatemark\:lgc.c}
{\xe \v lgc.c\:propagatemark}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b lu_mem} propagatemark ({\b global_State} *  {\i g}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABFF}
{\bkmkend AAAAAAABFF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 596 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v reallymarkobject\:lgc.c}
{\xe \v lgc.c\:reallymarkobject}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void reallymarkobject ({\b global_State} *  {\i g}, {\b GCObject} *  {\i o}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABFG}
{\bkmkend AAAAAAABFG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 268 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v remarkupvals\:lgc.c}
{\xe \v lgc.c\:remarkupvals}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int remarkupvals ({\b global_State} *  {\i g}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABFH}
{\bkmkend AAAAAAABFH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 332 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v restartcollection\:lgc.c}
{\xe \v lgc.c\:restartcollection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void restartcollection ({\b global_State} *  {\i g}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABFI}
{\bkmkend AAAAAAABFI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 359 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v runafewfinalizers\:lgc.c}
{\xe \v lgc.c\:runafewfinalizers}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int runafewfinalizers ({\b lua_State} *  {\i L}, int  {\i n}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABFJ}
{\bkmkend AAAAAAABFJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 867 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v separatetobefnz\:lgc.c}
{\xe \v lgc.c\:separatetobefnz}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void separatetobefnz ({\b global_State} *  {\i g}, int  {\i all}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABFK}
{\bkmkend AAAAAAABFK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 903 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v setminordebt\:lgc.c}
{\xe \v lgc.c\:setminordebt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void setminordebt ({\b global_State} *  {\i g}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABFL}
{\bkmkend AAAAAAABFL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 1248 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v setpause\:lgc.c}
{\xe \v lgc.c\:setpause}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void setpause ({\b global_State} *  {\i g}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABFM}
{\bkmkend AAAAAAABFM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 1357 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v singlestep\:lgc.c}
{\xe \v lgc.c\:singlestep}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b lu_mem} singlestep ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABFN}
{\bkmkend AAAAAAABFN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 1476 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v stepgenfull\:lgc.c}
{\xe \v lgc.c\:stepgenfull}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void stepgenfull ({\b lua_State} *  {\i L}, {\b global_State} *  {\i g}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABFO}
{\bkmkend AAAAAAABFO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 1274 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v sweep2old\:lgc.c}
{\xe \v lgc.c\:sweep2old}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void sweep2old ({\b lua_State} *  {\i L}, {\b GCObject} **  {\i p}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABFP}
{\bkmkend AAAAAAABFP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 976 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v sweepgen\:lgc.c}
{\xe \v lgc.c\:sweepgen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b GCObject}** sweepgen ({\b lua_State} *  {\i L}, {\b global_State} *  {\i g}, {\b GCObject} **  {\i p}, {\b GCObject} *  {\i limit}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABFQ}
{\bkmkend AAAAAAABFQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 999 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v sweeplist\:lgc.c}
{\xe \v lgc.c\:sweeplist}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b GCObject}** sweeplist ({\b lua_State} *  {\i L}, {\b GCObject} **  {\i p}, int  {\i countin}, int *  {\i countout}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABFR}
{\bkmkend AAAAAAABFR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 755 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v sweepstep\:lgc.c}
{\xe \v lgc.c\:sweepstep}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int sweepstep ({\b lua_State} *  {\i L}, {\b global_State} *  {\i g}, int  {\i nextstate}, {\b GCObject} **  {\i nextlist}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABFS}
{\bkmkend AAAAAAABFS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 1459 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v sweeptolive\:lgc.c}
{\xe \v lgc.c\:sweeptolive}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b GCObject}** sweeptolive ({\b lua_State} *  {\i L}, {\b GCObject} **  {\i p}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABFT}
{\bkmkend AAAAAAABFT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 782 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v traverseCclosure\:lgc.c}
{\xe \v lgc.c\:traverseCclosure}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int traverseCclosure ({\b global_State} *  {\i g}, {\b CClosure} *  {\i cl}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABFU}
{\bkmkend AAAAAAABFU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 538 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v traverseephemeron\:lgc.c}
{\xe \v lgc.c\:traverseephemeron}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int traverseephemeron ({\b global_State} *  {\i g}, {\b Table} *  {\i h}, int  {\i inv}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABFV}
{\bkmkend AAAAAAABFV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 416 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v traverseLclosure\:lgc.c}
{\xe \v lgc.c\:traverseLclosure}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int traverseLclosure ({\b global_State} *  {\i g}, {\b LClosure} *  {\i cl}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABFW}
{\bkmkend AAAAAAABFW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 549 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v traverseproto\:lgc.c}
{\xe \v lgc.c\:traverseproto}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int traverseproto ({\b global_State} *  {\i g}, {\b Proto} *  {\i f}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABFX}
{\bkmkend AAAAAAABFX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 523 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v traversestrongtable\:lgc.c}
{\xe \v lgc.c\:traversestrongtable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void traversestrongtable ({\b global_State} *  {\i g}, {\b Table} *  {\i h}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABFY}
{\bkmkend AAAAAAABFY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 461 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v traversetable\:lgc.c}
{\xe \v lgc.c\:traversetable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b lu_mem} traversetable ({\b global_State} *  {\i g}, {\b Table} *  {\i h}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABFZ}
{\bkmkend AAAAAAABFZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 483 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v traversethread\:lgc.c}
{\xe \v lgc.c\:traversethread}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int traversethread ({\b global_State} *  {\i g}, {\b lua_State} *  {\i th}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABGA}
{\bkmkend AAAAAAABGA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 565 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v traverseudata\:lgc.c}
{\xe \v lgc.c\:traverseudata}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int traverseudata ({\b global_State} *  {\i g}, {\b Udata} *  {\i u}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABGB}
{\bkmkend AAAAAAABGB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 505 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v traverseweakvalue\:lgc.c}
{\xe \v lgc.c\:traverseweakvalue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void traverseweakvalue ({\b global_State} *  {\i g}, {\b Table} *  {\i h}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABGC}
{\bkmkend AAAAAAABGC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 383 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v udata2finalize\:lgc.c}
{\xe \v lgc.c\:udata2finalize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b GCObject}* udata2finalize ({\b global_State} *  {\i g}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABGD}
{\bkmkend AAAAAAABGD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 817 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v whitelist\:lgc.c}
{\xe \v lgc.c\:whitelist}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void whitelist ({\b global_State} *  {\i g}, {\b GCObject} *  {\i p}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABGE}
{\bkmkend AAAAAAABGE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 1033 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v youngcollection\:lgc.c}
{\xe \v lgc.c\:youngcollection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void youngcollection ({\b lua_State} *  {\i L}, {\b global_State} *  {\i g}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABGF}
{\bkmkend AAAAAAABGF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 1140 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/gitworkspace/lua/src/lgc.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v D:/gitworkspace/lua/src/lgc.h}
{\xe \v D:/gitworkspace/lua/src/lgc.h}
{\bkmkstart AAAAAAABGG}
{\bkmkend AAAAAAABGG}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "lobject.h"}\par
{\f2 #include "lstate.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GCSpropagate}\~ 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GCSenteratomic}\~ 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GCSatomic}\~ 2\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GCSswpallgc}\~ 3\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GCSswpfinobj}\~ 4\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GCSswptobefnz}\~ 5\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GCSswpend}\~ 6\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GCScallfin}\~ 7\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GCSpause}\~ 8\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b issweepphase}(g)\~ 	({\b GCSswpallgc} <= (g)->gcstate && (g)->gcstate <= {\b GCSswpend})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b keepinvariant}(g)\~ ((g)->gcstate <= {\b GCSatomic})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b resetbits}(x,  m)\~ ((x) &= {\b cast_byte}(~(m)))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b setbits}(x,  m)\~ ((x) |= (m))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b testbits}(x,  m)\~ ((x) & (m))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b bitmask}(b)\~ (1<<(b))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b bit2mask}(b1,  b2)\~ ({\b bitmask}(b1) | {\b bitmask}(b2))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b l_setbit}(x,  b)\~ {\b setbits}(x, {\b bitmask}(b))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b resetbit}(x,  b)\~ {\b resetbits}(x, {\b bitmask}(b))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b testbit}(x,  b)\~ {\b testbits}(x, {\b bitmask}(b))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b WHITE0BIT}\~ 3  /* object is white (type 0) */\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b WHITE1BIT}\~ 4  /* object is white (type 1) */\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BLACKBIT}\~ 5  /* object is black */\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FINALIZEDBIT}\~ 6  /* object has been marked for finalization */\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b WHITEBITS}\~ {\b bit2mask}({\b WHITE0BIT}, {\b WHITE1BIT})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b iswhite}(x)\~ {\b testbits}((x)->marked, {\b WHITEBITS})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b isblack}(x)\~ {\b testbit}((x)->marked, {\b BLACKBIT})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b isgray}(x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b tofinalize}(x)\~ {\b testbit}((x)->marked, {\b FINALIZEDBIT})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b otherwhite}(g)\~ ((g)->currentwhite ^ {\b WHITEBITS})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b isdeadm}(ow,  m)\~ ((m) & (ow))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b isdead}(g,  v)\~ {\b isdeadm}({\b otherwhite}(g), (v)->marked)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b changewhite}(x)\~ ((x)->marked ^= {\b WHITEBITS})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b gray2black}(x)\~ {\b l_setbit}((x)->marked, {\b BLACKBIT})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luaC_white}(g)\~ {\b cast_byte}((g)->currentwhite & {\b WHITEBITS})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b G_NEW}\~ 0	/* created in current cycle */\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b G_SURVIVAL}\~ 1	/* created in previous cycle */\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b G_OLD0}\~ 2	/* marked old by frw. barrier in this cycle */\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b G_OLD1}\~ 3	/* first full cycle as old */\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b G_OLD}\~ 4	/* really old object (not to be visited) */\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b G_TOUCHED1}\~ 5	/* old object touched this cycle */\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b G_TOUCHED2}\~ 6	/* old object touched in previous cycle */\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b AGEBITS}\~ 7  /* all age bits (111) */\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b getage}(o)\~ ((o)->marked & {\b AGEBITS})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b setage}(o,  a)\~ ((o)->marked = {\b cast_byte}(((o)->marked & (~{\b AGEBITS})) | a))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b isold}(o)\~ ({\b getage}(o) > {\b G_SURVIVAL})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b changeage}(o,  f,  t)\~ 	{\b check_exp}({\b getage}(o) == (f), (o)->marked ^= ((f)^(t)))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUAI_GENMAJORMUL}\~ 100\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUAI_GENMINORMUL}\~ 20\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUAI_GCPAUSE}\~ 200\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b getgcparam}(p)\~ ((p) * 4)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b setgcparam}(p,  v)\~ ((p) = (v) / 4)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUAI_GCMUL}\~ 100\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUAI_GCSTEPSIZE}\~ 13      /* 8 {\b KB} */\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b isdecGCmodegen}(g)\~ (g->gckind == {\b KGC_GEN} || g->lastatomic != 0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luaC_condGC}(L,  pre,  pos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luaC_checkGC}(L)\~ {\b luaC_condGC}(L,(void)0,(void)0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luaC_barrier}(L,  p,  v)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luaC_barrierback}(L,  p,  v)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luaC_objbarrier}(L,  p,  o)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaC_fix} ({\b lua_State} *L, {\b GCObject} *o)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaC_freeallobjects} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaC_step} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaC_runtilstate} ({\b lua_State} *L, int statesmask)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaC_fullgc} ({\b lua_State} *L, int isemergency)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} {\b GCObject} * {\b luaC_newobj} ({\b lua_State} *L, int tt, size_t sz)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaC_barrier_} ({\b lua_State} *L, {\b GCObject} *o, {\b GCObject} *v)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaC_barrierback_} ({\b lua_State} *L, {\b GCObject} *o)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaC_checkfinalizer} ({\b lua_State} *L, {\b GCObject} *o, {\b Table} *mt)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaC_changemode} ({\b lua_State} *L, int newmode)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v AGEBITS\:lgc.h}
{\xe \v lgc.h\:AGEBITS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define AGEBITS\~ 7  /* all age bits (111) */}}
\par
{\bkmkstart AAAAAAABGH}
{\bkmkend AAAAAAABGH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.h \'B5\'DA 111 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v bit2mask\:lgc.h}
{\xe \v lgc.h\:bit2mask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define bit2mask( b1,  b2)\~ ({\b bitmask}(b1) | {\b bitmask}(b2))}}
\par
{\bkmkstart AAAAAAABGI}
{\bkmkend AAAAAAABGI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.h \'B5\'DA 64 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v bitmask\:lgc.h}
{\xe \v lgc.h\:bitmask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define bitmask( b)\~ (1<<(b))}}
\par
{\bkmkstart AAAAAAABGJ}
{\bkmkend AAAAAAABGJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.h \'B5\'DA 63 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v BLACKBIT\:lgc.h}
{\xe \v lgc.h\:BLACKBIT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BLACKBIT\~ 5  /* object is black */}}
\par
{\bkmkstart AAAAAAABGK}
{\bkmkend AAAAAAABGK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.h \'B5\'DA 77 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v changeage\:lgc.h}
{\xe \v lgc.h\:changeage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define changeage( o,  f,  t)\~ 	{\b check_exp}({\b getage}(o) == (f), (o)->marked ^= ((f)^(t)))}}
\par
{\bkmkstart AAAAAAABGL}
{\bkmkend AAAAAAABGL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.h \'B5\'DA 117 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v changewhite\:lgc.h}
{\xe \v lgc.h\:changewhite}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define changewhite( x)\~ ((x)->marked ^= {\b WHITEBITS})}}
\par
{\bkmkstart AAAAAAABGM}
{\bkmkend AAAAAAABGM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.h \'B5\'DA 96 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v FINALIZEDBIT\:lgc.h}
{\xe \v lgc.h\:FINALIZEDBIT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FINALIZEDBIT\~ 6  /* object has been marked for finalization */}}
\par
{\bkmkstart AAAAAAABGN}
{\bkmkend AAAAAAABGN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.h \'B5\'DA 78 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v G_NEW\:lgc.h}
{\xe \v lgc.h\:G_NEW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define G_NEW\~ 0	/* created in current cycle */}}
\par
{\bkmkstart AAAAAAABGO}
{\bkmkend AAAAAAABGO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.h \'B5\'DA 103 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v G_OLD\:lgc.h}
{\xe \v lgc.h\:G_OLD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define G_OLD\~ 4	/* really old object (not to be visited) */}}
\par
{\bkmkstart AAAAAAABGP}
{\bkmkend AAAAAAABGP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.h \'B5\'DA 107 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v G_OLD0\:lgc.h}
{\xe \v lgc.h\:G_OLD0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define G_OLD0\~ 2	/* marked old by frw. barrier in this cycle */}}
\par
{\bkmkstart AAAAAAABGQ}
{\bkmkend AAAAAAABGQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.h \'B5\'DA 105 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v G_OLD1\:lgc.h}
{\xe \v lgc.h\:G_OLD1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define G_OLD1\~ 3	/* first full cycle as old */}}
\par
{\bkmkstart AAAAAAABGR}
{\bkmkend AAAAAAABGR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.h \'B5\'DA 106 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v G_SURVIVAL\:lgc.h}
{\xe \v lgc.h\:G_SURVIVAL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define G_SURVIVAL\~ 1	/* created in previous cycle */}}
\par
{\bkmkstart AAAAAAABGS}
{\bkmkend AAAAAAABGS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.h \'B5\'DA 104 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v G_TOUCHED1\:lgc.h}
{\xe \v lgc.h\:G_TOUCHED1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define G_TOUCHED1\~ 5	/* old object touched this cycle */}}
\par
{\bkmkstart AAAAAAABGT}
{\bkmkend AAAAAAABGT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.h \'B5\'DA 108 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v G_TOUCHED2\:lgc.h}
{\xe \v lgc.h\:G_TOUCHED2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define G_TOUCHED2\~ 6	/* old object touched in previous cycle */}}
\par
{\bkmkstart AAAAAAABGU}
{\bkmkend AAAAAAABGU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.h \'B5\'DA 109 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v GCSatomic\:lgc.h}
{\xe \v lgc.h\:GCSatomic}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GCSatomic\~ 2}}
\par
{\bkmkstart AAAAAAABGV}
{\bkmkend AAAAAAABGV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.h \'B5\'DA 33 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v GCScallfin\:lgc.h}
{\xe \v lgc.h\:GCScallfin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GCScallfin\~ 7}}
\par
{\bkmkstart AAAAAAABGW}
{\bkmkend AAAAAAABGW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.h \'B5\'DA 38 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v GCSenteratomic\:lgc.h}
{\xe \v lgc.h\:GCSenteratomic}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GCSenteratomic\~ 1}}
\par
{\bkmkstart AAAAAAABGX}
{\bkmkend AAAAAAABGX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.h \'B5\'DA 32 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v GCSpause\:lgc.h}
{\xe \v lgc.h\:GCSpause}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GCSpause\~ 8}}
\par
{\bkmkstart AAAAAAABGY}
{\bkmkend AAAAAAABGY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.h \'B5\'DA 39 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v GCSpropagate\:lgc.h}
{\xe \v lgc.h\:GCSpropagate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GCSpropagate\~ 0}}
\par
{\bkmkstart AAAAAAABGZ}
{\bkmkend AAAAAAABGZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.h \'B5\'DA 31 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v GCSswpallgc\:lgc.h}
{\xe \v lgc.h\:GCSswpallgc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GCSswpallgc\~ 3}}
\par
{\bkmkstart AAAAAAABHA}
{\bkmkend AAAAAAABHA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.h \'B5\'DA 34 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v GCSswpend\:lgc.h}
{\xe \v lgc.h\:GCSswpend}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GCSswpend\~ 6}}
\par
{\bkmkstart AAAAAAABHB}
{\bkmkend AAAAAAABHB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.h \'B5\'DA 37 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v GCSswpfinobj\:lgc.h}
{\xe \v lgc.h\:GCSswpfinobj}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GCSswpfinobj\~ 4}}
\par
{\bkmkstart AAAAAAABHC}
{\bkmkend AAAAAAABHC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.h \'B5\'DA 35 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v GCSswptobefnz\:lgc.h}
{\xe \v lgc.h\:GCSswptobefnz}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GCSswptobefnz\~ 5}}
\par
{\bkmkstart AAAAAAABHD}
{\bkmkend AAAAAAABHD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.h \'B5\'DA 36 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v getage\:lgc.h}
{\xe \v lgc.h\:getage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define getage( o)\~ ((o)->marked & {\b AGEBITS})}}
\par
{\bkmkstart AAAAAAABHE}
{\bkmkend AAAAAAABHE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.h \'B5\'DA 113 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v getgcparam\:lgc.h}
{\xe \v lgc.h\:getgcparam}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define getgcparam( p)\~ ((p) * 4)}}
\par
{\bkmkstart AAAAAAABHF}
{\bkmkend AAAAAAABHF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.h \'B5\'DA 132 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v gray2black\:lgc.h}
{\xe \v lgc.h\:gray2black}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define gray2black( x)\~ {\b l_setbit}((x)->marked, {\b BLACKBIT})}}
\par
{\bkmkstart AAAAAAABHG}
{\bkmkend AAAAAAABHG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.h \'B5\'DA 97 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v isblack\:lgc.h}
{\xe \v lgc.h\:isblack}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define isblack( x)\~ {\b testbit}((x)->marked, {\b BLACKBIT})}}
\par
{\bkmkstart AAAAAAABHH}
{\bkmkend AAAAAAABHH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.h \'B5\'DA 86 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v isdead\:lgc.h}
{\xe \v lgc.h\:isdead}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define isdead( g,  v)\~ {\b isdeadm}({\b otherwhite}(g), (v)->marked)}}
\par
{\bkmkstart AAAAAAABHI}
{\bkmkend AAAAAAABHI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.h \'B5\'DA 94 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v isdeadm\:lgc.h}
{\xe \v lgc.h\:isdeadm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define isdeadm( ow,  m)\~ ((m) & (ow))}}
\par
{\bkmkstart AAAAAAABHJ}
{\bkmkend AAAAAAABHJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.h \'B5\'DA 93 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v isdecGCmodegen\:lgc.h}
{\xe \v lgc.h\:isdecGCmodegen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define isdecGCmodegen( g)\~ (g->gckind == {\b KGC_GEN} || g->lastatomic != 0)}}
\par
{\bkmkstart AAAAAAABHK}
{\bkmkend AAAAAAABHK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.h \'B5\'DA 146 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v isgray\:lgc.h}
{\xe \v lgc.h\:isgray}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define isgray( x)}}
\par
{\bkmkstart AAAAAAABHL}
{\bkmkend AAAAAAABHL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     {\cf20 /* neither white nor black */}  \\\par
    (!testbits((x)->marked, WHITEBITS | bitmask(BLACKBIT)))\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.h \'B5\'DA 87 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v isold\:lgc.h}
{\xe \v lgc.h\:isold}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define isold( o)\~ ({\b getage}(o) > {\b G_SURVIVAL})}}
\par
{\bkmkstart AAAAAAABHM}
{\bkmkend AAAAAAABHM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.h \'B5\'DA 115 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v issweepphase\:lgc.h}
{\xe \v lgc.h\:issweepphase}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define issweepphase( g)\~ 	({\b GCSswpallgc} <= (g)->gcstate && (g)->gcstate <= {\b GCSswpend})}}
\par
{\bkmkstart AAAAAAABHN}
{\bkmkend AAAAAAABHN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.h \'B5\'DA 42 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v iswhite\:lgc.h}
{\xe \v lgc.h\:iswhite}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define iswhite( x)\~ {\b testbits}((x)->marked, {\b WHITEBITS})}}
\par
{\bkmkstart AAAAAAABHO}
{\bkmkend AAAAAAABHO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.h \'B5\'DA 85 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v keepinvariant\:lgc.h}
{\xe \v lgc.h\:keepinvariant}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define keepinvariant( g)\~ ((g)->gcstate <= {\b GCSatomic})}}
\par
{\bkmkstart AAAAAAABHP}
{\bkmkend AAAAAAABHP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.h \'B5\'DA 54 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v l_setbit\:lgc.h}
{\xe \v lgc.h\:l_setbit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define l_setbit( x,  b)\~ {\b setbits}(x, {\b bitmask}(b))}}
\par
{\bkmkstart AAAAAAABHQ}
{\bkmkend AAAAAAABHQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.h \'B5\'DA 65 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaC_barrier\:lgc.h}
{\xe \v lgc.h\:luaC_barrier}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luaC_barrier( L,  p,  v)}}
\par
{\bkmkstart AAAAAAABHR}
{\bkmkend AAAAAAABHR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     (  \\\par
    (iscollectable(v) && isblack(p) && iswhite(gcvalue(v))) ?  \\\par
    luaC_barrier_(L,obj2gco(p),gcvalue(v)) : cast_void(0))\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.h \'B5\'DA 162 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaC_barrierback\:lgc.h}
{\xe \v lgc.h\:luaC_barrierback}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luaC_barrierback( L,  p,  v)}}
\par
{\bkmkstart AAAAAAABHS}
{\bkmkend AAAAAAABHS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     (  \\\par
    (iscollectable(v) && isblack(p) && iswhite(gcvalue(v))) ? \\\par
    luaC_barrierback_(L,p) : cast_void(0))\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.h \'B5\'DA 166 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaC_checkGC\:lgc.h}
{\xe \v lgc.h\:luaC_checkGC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luaC_checkGC( L)\~ {\b luaC_condGC}(L,(void)0,(void)0)}}
\par
{\bkmkstart AAAAAAABHT}
{\bkmkend AAAAAAABHT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.h \'B5\'DA 159 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaC_condGC\:lgc.h}
{\xe \v lgc.h\:luaC_condGC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luaC_condGC( L,  pre,  pos)}}
\par
{\bkmkstart AAAAAAABHU}
{\bkmkend AAAAAAABHU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     \{ {\cf19 if} (G(L)->GCdebt > 0) \{ pre; luaC_step(L); pos;\}; \\\par
      condchangemem(L,pre,pos); \}\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.h \'B5\'DA 154 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaC_objbarrier\:lgc.h}
{\xe \v lgc.h\:luaC_objbarrier}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luaC_objbarrier( L,  p,  o)}}
\par
{\bkmkstart AAAAAAABHV}
{\bkmkend AAAAAAABHV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     (  \\\par
    (isblack(p) && iswhite(o)) ? \\\par
    luaC_barrier_(L,obj2gco(p),obj2gco(o)) : cast_void(0))\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.h \'B5\'DA 170 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaC_white\:lgc.h}
{\xe \v lgc.h\:luaC_white}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luaC_white( g)\~ {\b cast_byte}((g)->currentwhite & {\b WHITEBITS})}}
\par
{\bkmkstart AAAAAAABHW}
{\bkmkend AAAAAAABHW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.h \'B5\'DA 99 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUAI_GCMUL\:lgc.h}
{\xe \v lgc.h\:LUAI_GCMUL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUAI_GCMUL\~ 100}}
\par
{\bkmkstart AAAAAAABHX}
{\bkmkend AAAAAAABHX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.h \'B5\'DA 135 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUAI_GCPAUSE\:lgc.h}
{\xe \v lgc.h\:LUAI_GCPAUSE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUAI_GCPAUSE\~ 200}}
\par
{\bkmkstart AAAAAAABHY}
{\bkmkend AAAAAAABHY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.h \'B5\'DA 126 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUAI_GCSTEPSIZE\:lgc.h}
{\xe \v lgc.h\:LUAI_GCSTEPSIZE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUAI_GCSTEPSIZE\~ 13      /* 8 {\b KB} */}}
\par
{\bkmkstart AAAAAAABHZ}
{\bkmkend AAAAAAABHZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.h \'B5\'DA 138 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUAI_GENMAJORMUL\:lgc.h}
{\xe \v lgc.h\:LUAI_GENMAJORMUL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUAI_GENMAJORMUL\~ 100}}
\par
{\bkmkstart AAAAAAABIA}
{\bkmkend AAAAAAABIA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.h \'B5\'DA 122 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUAI_GENMINORMUL\:lgc.h}
{\xe \v lgc.h\:LUAI_GENMINORMUL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUAI_GENMINORMUL\~ 20}}
\par
{\bkmkstart AAAAAAABIB}
{\bkmkend AAAAAAABIB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.h \'B5\'DA 123 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v otherwhite\:lgc.h}
{\xe \v lgc.h\:otherwhite}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define otherwhite( g)\~ ((g)->currentwhite ^ {\b WHITEBITS})}}
\par
{\bkmkstart AAAAAAABIC}
{\bkmkend AAAAAAABIC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.h \'B5\'DA 92 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v resetbit\:lgc.h}
{\xe \v lgc.h\:resetbit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define resetbit( x,  b)\~ {\b resetbits}(x, {\b bitmask}(b))}}
\par
{\bkmkstart AAAAAAABID}
{\bkmkend AAAAAAABID}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.h \'B5\'DA 66 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v resetbits\:lgc.h}
{\xe \v lgc.h\:resetbits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define resetbits( x,  m)\~ ((x) &= {\b cast_byte}(~(m)))}}
\par
{\bkmkstart AAAAAAABIE}
{\bkmkend AAAAAAABIE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.h \'B5\'DA 60 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v setage\:lgc.h}
{\xe \v lgc.h\:setage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define setage( o,  a)\~ ((o)->marked = {\b cast_byte}(((o)->marked & (~{\b AGEBITS})) | a))}}
\par
{\bkmkstart AAAAAAABIF}
{\bkmkend AAAAAAABIF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.h \'B5\'DA 114 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v setbits\:lgc.h}
{\xe \v lgc.h\:setbits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define setbits( x,  m)\~ ((x) |= (m))}}
\par
{\bkmkstart AAAAAAABIG}
{\bkmkend AAAAAAABIG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.h \'B5\'DA 61 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v setgcparam\:lgc.h}
{\xe \v lgc.h\:setgcparam}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define setgcparam( p,  v)\~ ((p) = (v) / 4)}}
\par
{\bkmkstart AAAAAAABIH}
{\bkmkend AAAAAAABIH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.h \'B5\'DA 133 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v testbit\:lgc.h}
{\xe \v lgc.h\:testbit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define testbit( x,  b)\~ {\b testbits}(x, {\b bitmask}(b))}}
\par
{\bkmkstart AAAAAAABII}
{\bkmkend AAAAAAABII}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.h \'B5\'DA 67 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v testbits\:lgc.h}
{\xe \v lgc.h\:testbits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define testbits( x,  m)\~ ((x) & (m))}}
\par
{\bkmkstart AAAAAAABIJ}
{\bkmkend AAAAAAABIJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.h \'B5\'DA 62 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v tofinalize\:lgc.h}
{\xe \v lgc.h\:tofinalize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define tofinalize( x)\~ {\b testbit}((x)->marked, {\b FINALIZEDBIT})}}
\par
{\bkmkstart AAAAAAABIK}
{\bkmkend AAAAAAABIK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.h \'B5\'DA 90 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v WHITE0BIT\:lgc.h}
{\xe \v lgc.h\:WHITE0BIT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define WHITE0BIT\~ 3  /* object is white (type 0) */}}
\par
{\bkmkstart AAAAAAABIL}
{\bkmkend AAAAAAABIL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.h \'B5\'DA 75 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v WHITE1BIT\:lgc.h}
{\xe \v lgc.h\:WHITE1BIT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define WHITE1BIT\~ 4  /* object is white (type 1) */}}
\par
{\bkmkstart AAAAAAABIM}
{\bkmkend AAAAAAABIM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.h \'B5\'DA 76 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v WHITEBITS\:lgc.h}
{\xe \v lgc.h\:WHITEBITS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define WHITEBITS\~ {\b bit2mask}({\b WHITE0BIT}, {\b WHITE1BIT})}}
\par
{\bkmkstart AAAAAAABIN}
{\bkmkend AAAAAAABIN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.h \'B5\'DA 82 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v luaC_barrier_\:lgc.h}
{\xe \v lgc.h\:luaC_barrier_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaC_barrier_ ({\b lua_State} *  {\i L}, {\b GCObject} *  {\i o}, {\b GCObject} *  {\i v})}}
\par
{\bkmkstart AAAAAAABIO}
{\bkmkend AAAAAAABIO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 193 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaC_barrierback_\:lgc.h}
{\xe \v lgc.h\:luaC_barrierback_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaC_barrierback_ ({\b lua_State} *  {\i L}, {\b GCObject} *  {\i o})}}
\par
{\bkmkstart AAAAAAABIP}
{\bkmkend AAAAAAABIP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 214 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaC_changemode\:lgc.h}
{\xe \v lgc.h\:luaC_changemode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaC_changemode ({\b lua_State} *  {\i L}, int  {\i newmode})}}
\par
{\bkmkstart AAAAAAABIQ}
{\bkmkend AAAAAAABIQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 1223 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaC_checkfinalizer\:lgc.h}
{\xe \v lgc.h\:luaC_checkfinalizer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaC_checkfinalizer ({\b lua_State} *  {\i L}, {\b GCObject} *  {\i o}, {\b Table} *  {\i mt})}}
\par
{\bkmkstart AAAAAAABIR}
{\bkmkend AAAAAAABIR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 927 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaC_fix\:lgc.h}
{\xe \v lgc.h\:luaC_fix}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaC_fix ({\b lua_State} *  {\i L}, {\b GCObject} *  {\i o})}}
\par
{\bkmkstart AAAAAAABIS}
{\bkmkend AAAAAAABIS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 225 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaC_freeallobjects\:lgc.h}
{\xe \v lgc.h\:luaC_freeallobjects}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaC_freeallobjects ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAABIT}
{\bkmkend AAAAAAABIT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 1403 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaC_fullgc\:lgc.h}
{\xe \v lgc.h\:luaC_fullgc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaC_fullgc ({\b lua_State} *  {\i L}, int  {\i isemergency})}}
\par
{\bkmkstart AAAAAAABIU}
{\bkmkend AAAAAAABIU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 1603 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaC_newobj\:lgc.h}
{\xe \v lgc.h\:luaC_newobj}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} {\b GCObject}* luaC_newobj ({\b lua_State} *  {\i L}, int  {\i tt}, size_t  {\i sz})}}
\par
{\bkmkstart AAAAAAABIV}
{\bkmkend AAAAAAABIV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 240 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaC_runtilstate\:lgc.h}
{\xe \v lgc.h\:luaC_runtilstate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaC_runtilstate ({\b lua_State} *  {\i L}, int  {\i statesmask})}}
\par
{\bkmkstart AAAAAAABIW}
{\bkmkend AAAAAAABIW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 1531 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaC_step\:lgc.h}
{\xe \v lgc.h\:luaC_step}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaC_step ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAABIX}
{\bkmkend AAAAAAABIX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lgc.c \'B5\'DA 1566 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/gitworkspace/lua/src/linit.c \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v D:/gitworkspace/lua/src/linit.c}
{\xe \v D:/gitworkspace/lua/src/linit.c}
{\bkmkstart AAAAAAABIY}
{\bkmkend AAAAAAABIY}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "lprefix.h"}\par
{\f2 #include <stddef.h>}\par
{\f2 #include "lua.h"}\par
{\f2 #include "lualib.h"}\par
{\f2 #include "lauxlib.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b linit_c}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_LIB}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} void {\b luaL_openlibs} ({\b lua_State} *L)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const {\b luaL_Reg} {\b loadedlibs} []\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v linit_c\:linit.c}
{\xe \v linit.c\:linit_c}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define linit_c}}
\par
{\bkmkstart AAAAAAABIZ}
{\bkmkend AAAAAAABIZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE linit.c \'B5\'DA 8 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_LIB\:linit.c}
{\xe \v linit.c\:LUA_LIB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_LIB}}
\par
{\bkmkstart AAAAAAABJA}
{\bkmkend AAAAAAABJA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE linit.c \'B5\'DA 9 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v luaL_openlibs\:linit.c}
{\xe \v linit.c\:luaL_openlibs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} void luaL_openlibs ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAABJB}
{\bkmkend AAAAAAABJB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE linit.c \'B5\'DA 57 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v loadedlibs\:linit.c}
{\xe \v linit.c\:loadedlibs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b luaL_Reg} loadedlibs[]{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABJC}
{\bkmkend AAAAAAABJC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'B3\'F5\'CA\'BC\'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{\par
  \{LUA_GNAME, luaopen_base\},\par
  \{LUA_LOADLIBNAME, luaopen_package\},\par
  \{LUA_COLIBNAME, luaopen_coroutine\},\par
  \{LUA_TABLIBNAME, luaopen_table\},\par
  \{LUA_IOLIBNAME, luaopen_io\},\par
  \{LUA_OSLIBNAME, luaopen_os\},\par
  \{LUA_STRLIBNAME, luaopen_string\},\par
  \{LUA_MATHLIBNAME, luaopen_math\},\par
  \{LUA_UTF8LIBNAME, luaopen_utf8\},\par
  \{LUA_DBLIBNAME, luaopen_debug\},\par
  \{NULL, NULL\}\par
\}\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE linit.c \'B5\'DA 42 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/gitworkspace/lua/src/liolib.c \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v D:/gitworkspace/lua/src/liolib.c}
{\xe \v D:/gitworkspace/lua/src/liolib.c}
{\bkmkstart AAAAAAABJD}
{\bkmkend AAAAAAABJD}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "lprefix.h"}\par
{\f2 #include <ctype.h>}\par
{\f2 #include <errno.h>}\par
{\f2 #include <locale.h>}\par
{\f2 #include <stdio.h>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <string.h>}\par
{\f2 #include "lua.h"}\par
{\f2 #include "lauxlib.h"}\par
{\f2 #include "lualib.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b RN}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b liolib_c}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_LIB}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b L_MODEEXT}\~ "b"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b l_popen}(L,  c,  m)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b l_pclose}(L,  file)\~ ((void)L, (void)file, -1)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b l_getc}(f)\~ getc(f)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b l_lockfile}(f)\~ ((void)0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b l_unlockfile}(f)\~ ((void)0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b l_fseek}(f,  o,  w)\~ fseek(f,o,w)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b l_ftell}(f)\~ ftell(f)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b l_seeknum}\~ long\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b IO_PREFIX}\~ "_IO_"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b IOPREF_LEN}\~ (sizeof({\b IO_PREFIX})/sizeof(char) - 1)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b IO_INPUT}\~ ({\b IO_PREFIX} "input")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b IO_OUTPUT}\~ ({\b IO_PREFIX} "output")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b tolstream}(L)\~ (({\b LStream} *){\b luaL_checkudata}(L, 1, {\b LUA_FILEHANDLE}))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b isclosed}(p)\~ ((p)->closef == NULL)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAXARGLINE}\~ 250\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b L_MAXLENNUM}\~ 200\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'D0\'CD\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef {\b luaL_Stream} {\b LStream}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b l_checkmode} (const char *mode)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b io_type} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b f_tostring} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static FILE * {\b tofile} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b LStream} * {\b newprefile} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b aux_close} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b f_close} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b io_close} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b f_gc} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b io_fclose} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b LStream} * {\b newfile} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b opencheck} ({\b lua_State} *L, const char *fname, const char *mode)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b io_open} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b io_pclose} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b io_popen} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b io_tmpfile} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static FILE * {\b getiofile} ({\b lua_State} *L, const char *findex)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b g_iofile} ({\b lua_State} *L, const char *f, const char *mode)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b io_input} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b io_output} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b io_readline} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b aux_lines} ({\b lua_State} *L, int toclose)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b f_lines} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b io_lines} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b nextc} ({\b RN} *rn)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b test2} ({\b RN} *rn, const char *set)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b readdigits} ({\b RN} *rn, int hex)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b read_number} ({\b lua_State} *L, FILE *f)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b test_eof} ({\b lua_State} *L, FILE *f)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b read_line} ({\b lua_State} *L, FILE *f, int chop)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b read_all} ({\b lua_State} *L, FILE *f)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b read_chars} ({\b lua_State} *L, FILE *f, size_t n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b g_read} ({\b lua_State} *L, FILE *f, int first)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b io_read} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b f_read} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b g_write} ({\b lua_State} *L, FILE *f, int arg)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b io_write} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b f_write} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b f_seek} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b f_setvbuf} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b io_flush} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b f_flush} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b createmeta} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b io_noclose} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b createstdfile} ({\b lua_State} *L, FILE *f, const char *k, const char *fname)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAMOD_API} int {\b luaopen_io} ({\b lua_State} *L)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const {\b luaL_Reg} {\b iolib} []\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const {\b luaL_Reg} {\b meth} []\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const {\b luaL_Reg} {\b metameth} []\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v IO_INPUT\:liolib.c}
{\xe \v liolib.c\:IO_INPUT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define IO_INPUT\~ ({\b IO_PREFIX} "input")}}
\par
{\bkmkstart AAAAAAABJE}
{\bkmkend AAAAAAABJE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE liolib.c \'B5\'DA 139 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v IO_OUTPUT\:liolib.c}
{\xe \v liolib.c\:IO_OUTPUT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define IO_OUTPUT\~ ({\b IO_PREFIX} "output")}}
\par
{\bkmkstart AAAAAAABJF}
{\bkmkend AAAAAAABJF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE liolib.c \'B5\'DA 140 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v IO_PREFIX\:liolib.c}
{\xe \v liolib.c\:IO_PREFIX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define IO_PREFIX\~ "_IO_"}}
\par
{\bkmkstart AAAAAAABJG}
{\bkmkend AAAAAAABJG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE liolib.c \'B5\'DA 137 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v IOPREF_LEN\:liolib.c}
{\xe \v liolib.c\:IOPREF_LEN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define IOPREF_LEN\~ (sizeof({\b IO_PREFIX})/sizeof(char) - 1)}}
\par
{\bkmkstart AAAAAAABJH}
{\bkmkend AAAAAAABJH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE liolib.c \'B5\'DA 138 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v isclosed\:liolib.c}
{\xe \v liolib.c\:isclosed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define isclosed( p)\~ ((p)->closef == NULL)}}
\par
{\bkmkstart AAAAAAABJI}
{\bkmkend AAAAAAABJI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE liolib.c \'B5\'DA 148 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v l_fseek\:liolib.c}
{\xe \v liolib.c\:l_fseek}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define l_fseek( f,  o,  w)\~ fseek(f,o,w)}}
\par
{\bkmkstart AAAAAAABJJ}
{\bkmkend AAAAAAABJJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE liolib.c \'B5\'DA 125 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v l_ftell\:liolib.c}
{\xe \v liolib.c\:l_ftell}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define l_ftell( f)\~ ftell(f)}}
\par
{\bkmkstart AAAAAAABJK}
{\bkmkend AAAAAAABJK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE liolib.c \'B5\'DA 126 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v l_getc\:liolib.c}
{\xe \v liolib.c\:l_getc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define l_getc( f)\~ getc(f)}}
\par
{\bkmkstart AAAAAAABJL}
{\bkmkend AAAAAAABJL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE liolib.c \'B5\'DA 90 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v l_lockfile\:liolib.c}
{\xe \v liolib.c\:l_lockfile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define l_lockfile( f)\~ ((void)0)}}
\par
{\bkmkstart AAAAAAABJM}
{\bkmkend AAAAAAABJM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE liolib.c \'B5\'DA 91 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v L_MAXLENNUM\:liolib.c}
{\xe \v liolib.c\:L_MAXLENNUM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define L_MAXLENNUM\~ 200}}
\par
{\bkmkstart AAAAAAABJN}
{\bkmkend AAAAAAABJN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE liolib.c \'B5\'DA 409 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v L_MODEEXT\:liolib.c}
{\xe \v liolib.c\:L_MODEEXT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define L_MODEEXT\~ "b"}}
\par
{\bkmkstart AAAAAAABJO}
{\bkmkend AAAAAAABJO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE liolib.c \'B5\'DA 36 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v l_pclose\:liolib.c}
{\xe \v liolib.c\:l_pclose}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define l_pclose( L,  file)\~ ((void)L, (void)file, -1)}}
\par
{\bkmkstart AAAAAAABJP}
{\bkmkend AAAAAAABJP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE liolib.c \'B5\'DA 74 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v l_popen\:liolib.c}
{\xe \v liolib.c\:l_popen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define l_popen( L,  c,  m)}}
\par
{\bkmkstart AAAAAAABJQ}
{\bkmkend AAAAAAABJQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid       ((void)c, ({\cf18 void})m, \\\par
      luaL_error(L, {\cf22 "'popen' not supported"}), \\\par
      (FILE*)0)\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE liolib.c \'B5\'DA 70 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v l_seeknum\:liolib.c}
{\xe \v liolib.c\:l_seeknum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define l_seeknum\~ long}}
\par
{\bkmkstart AAAAAAABJR}
{\bkmkend AAAAAAABJR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE liolib.c \'B5\'DA 127 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v l_unlockfile\:liolib.c}
{\xe \v liolib.c\:l_unlockfile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define l_unlockfile( f)\~ ((void)0)}}
\par
{\bkmkstart AAAAAAABJS}
{\bkmkend AAAAAAABJS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE liolib.c \'B5\'DA 92 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v liolib_c\:liolib.c}
{\xe \v liolib.c\:liolib_c}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define liolib_c}}
\par
{\bkmkstart AAAAAAABJT}
{\bkmkend AAAAAAABJT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE liolib.c \'B5\'DA 7 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_LIB\:liolib.c}
{\xe \v liolib.c\:LUA_LIB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_LIB}}
\par
{\bkmkstart AAAAAAABJU}
{\bkmkend AAAAAAABJU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE liolib.c \'B5\'DA 8 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v MAXARGLINE\:liolib.c}
{\xe \v liolib.c\:MAXARGLINE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAXARGLINE\~ 250}}
\par
{\bkmkstart AAAAAAABJV}
{\bkmkend AAAAAAABJV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE liolib.c \'B5\'DA 339 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v tolstream\:liolib.c}
{\xe \v liolib.c\:tolstream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define tolstream( L)\~ (({\b LStream} *){\b luaL_checkudata}(L, 1, {\b LUA_FILEHANDLE}))}}
\par
{\bkmkstart AAAAAAABJW}
{\bkmkend AAAAAAABJW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE liolib.c \'B5\'DA 146 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'D0\'CD\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v LStream\:liolib.c}
{\xe \v liolib.c\:LStream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef {\b luaL_Stream} {\b LStream}}}
\par
{\bkmkstart AAAAAAABJX}
{\bkmkend AAAAAAABJX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE liolib.c \'B5\'DA 143 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v aux_close\:liolib.c}
{\xe \v liolib.c\:aux_close}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int aux_close ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABJY}
{\bkmkend AAAAAAABJY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE liolib.c \'B5\'DA 202 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v aux_lines\:liolib.c}
{\xe \v liolib.c\:aux_lines}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void aux_lines ({\b lua_State} *  {\i L}, int  {\i toclose}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABJZ}
{\bkmkend AAAAAAABJZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE liolib.c \'B5\'DA 350 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v createmeta\:liolib.c}
{\xe \v liolib.c\:createmeta}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void createmeta ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABKA}
{\bkmkend AAAAAAABKA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE liolib.c \'B5\'DA 770 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v createstdfile\:liolib.c}
{\xe \v liolib.c\:createstdfile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void createstdfile ({\b lua_State} *  {\i L}, FILE *  {\i f}, const char *  {\i k}, const char *  {\i fname}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABKB}
{\bkmkend AAAAAAABKB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE liolib.c \'B5\'DA 792 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v f_close\:liolib.c}
{\xe \v liolib.c\:f_close}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int f_close ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABKC}
{\bkmkend AAAAAAABKC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE liolib.c \'B5\'DA 210 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v f_flush\:liolib.c}
{\xe \v liolib.c\:f_flush}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int f_flush ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABKD}
{\bkmkend AAAAAAABKD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE liolib.c \'B5\'DA 719 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v f_gc\:liolib.c}
{\xe \v liolib.c\:f_gc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int f_gc ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABKE}
{\bkmkend AAAAAAABKE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE liolib.c \'B5\'DA 223 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v f_lines\:liolib.c}
{\xe \v liolib.c\:f_lines}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int f_lines ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABKF}
{\bkmkend AAAAAAABKF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE liolib.c \'B5\'DA 361 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v f_read\:liolib.c}
{\xe \v liolib.c\:f_read}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int f_read ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABKG}
{\bkmkend AAAAAAABKG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE liolib.c \'B5\'DA 608 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v f_seek\:liolib.c}
{\xe \v liolib.c\:f_seek}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int f_seek ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABKH}
{\bkmkend AAAAAAABKH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE liolib.c \'B5\'DA 683 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v f_setvbuf\:liolib.c}
{\xe \v liolib.c\:f_setvbuf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int f_setvbuf ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABKI}
{\bkmkend AAAAAAABKI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE liolib.c \'B5\'DA 702 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v f_tostring\:liolib.c}
{\xe \v liolib.c\:f_tostring}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int f_tostring ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABKJ}
{\bkmkend AAAAAAABKJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE liolib.c \'B5\'DA 165 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v f_write\:liolib.c}
{\xe \v liolib.c\:f_write}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int f_write ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABKK}
{\bkmkend AAAAAAABKK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE liolib.c \'B5\'DA 676 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v g_iofile\:liolib.c}
{\xe \v liolib.c\:g_iofile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int g_iofile ({\b lua_State} *  {\i L}, const char *  {\i f}, const char *  {\i mode}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABKL}
{\bkmkend AAAAAAABKL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE liolib.c \'B5\'DA 305 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v g_read\:liolib.c}
{\xe \v liolib.c\:g_read}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int g_read ({\b lua_State} *  {\i L}, FILE *  {\i f}, int  {\i first}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABKM}
{\bkmkend AAAAAAABKM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE liolib.c \'B5\'DA 553 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v g_write\:liolib.c}
{\xe \v liolib.c\:g_write}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int g_write ({\b lua_State} *  {\i L}, FILE *  {\i f}, int  {\i arg}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABKN}
{\bkmkend AAAAAAABKN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE liolib.c \'B5\'DA 647 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v getiofile\:liolib.c}
{\xe \v liolib.c\:getiofile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static FILE* getiofile ({\b lua_State} *  {\i L}, const char *  {\i findex}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABKO}
{\bkmkend AAAAAAABKO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE liolib.c \'B5\'DA 295 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v io_close\:liolib.c}
{\xe \v liolib.c\:io_close}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int io_close ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABKP}
{\bkmkend AAAAAAABKP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE liolib.c \'B5\'DA 216 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v io_fclose\:liolib.c}
{\xe \v liolib.c\:io_fclose}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int io_fclose ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABKQ}
{\bkmkend AAAAAAABKQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE liolib.c \'B5\'DA 234 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v io_flush\:liolib.c}
{\xe \v liolib.c\:io_flush}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int io_flush ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABKR}
{\bkmkend AAAAAAABKR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE liolib.c \'B5\'DA 714 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v io_input\:liolib.c}
{\xe \v liolib.c\:io_input}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int io_input ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABKS}
{\bkmkend AAAAAAABKS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE liolib.c \'B5\'DA 322 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v io_lines\:liolib.c}
{\xe \v liolib.c\:io_lines}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int io_lines ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABKT}
{\bkmkend AAAAAAABKT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE liolib.c \'B5\'DA 373 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v io_noclose\:liolib.c}
{\xe \v liolib.c\:io_noclose}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int io_noclose ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABKU}
{\bkmkend AAAAAAABKU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE liolib.c \'B5\'DA 783 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v io_open\:liolib.c}
{\xe \v liolib.c\:io_open}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int io_open ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABKV}
{\bkmkend AAAAAAABKV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE liolib.c \'B5\'DA 257 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v io_output\:liolib.c}
{\xe \v liolib.c\:io_output}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int io_output ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABKW}
{\bkmkend AAAAAAABKW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE liolib.c \'B5\'DA 327 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v io_pclose\:liolib.c}
{\xe \v liolib.c\:io_pclose}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int io_pclose ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABKX}
{\bkmkend AAAAAAABKX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE liolib.c \'B5\'DA 271 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v io_popen\:liolib.c}
{\xe \v liolib.c\:io_popen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int io_popen ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABKY}
{\bkmkend AAAAAAABKY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE liolib.c \'B5\'DA 278 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v io_read\:liolib.c}
{\xe \v liolib.c\:io_read}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int io_read ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABKZ}
{\bkmkend AAAAAAABKZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE liolib.c \'B5\'DA 603 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v io_readline\:liolib.c}
{\xe \v liolib.c\:io_readline}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int io_readline ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABLA}
{\bkmkend AAAAAAABLA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE liolib.c \'B5\'DA 616 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v io_tmpfile\:liolib.c}
{\xe \v liolib.c\:io_tmpfile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int io_tmpfile ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABLB}
{\bkmkend AAAAAAABLB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE liolib.c \'B5\'DA 288 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v io_type\:liolib.c}
{\xe \v liolib.c\:io_type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int io_type ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABLC}
{\bkmkend AAAAAAABLC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE liolib.c \'B5\'DA 151 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v io_write\:liolib.c}
{\xe \v liolib.c\:io_write}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int io_write ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABLD}
{\bkmkend AAAAAAABLD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE liolib.c \'B5\'DA 671 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v l_checkmode\:liolib.c}
{\xe \v liolib.c\:l_checkmode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int l_checkmode (const char *  {\i mode}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABLE}
{\bkmkend AAAAAAABLE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE liolib.c \'B5\'DA 40 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaopen_io\:liolib.c}
{\xe \v liolib.c\:luaopen_io}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAMOD_API} int luaopen_io ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAABLF}
{\bkmkend AAAAAAABLF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE liolib.c \'B5\'DA 805 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v newfile\:liolib.c}
{\xe \v liolib.c\:newfile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b LStream}* newfile ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABLG}
{\bkmkend AAAAAAABLG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE liolib.c \'B5\'DA 241 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v newprefile\:liolib.c}
{\xe \v liolib.c\:newprefile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b LStream}* newprefile ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABLH}
{\bkmkend AAAAAAABLH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE liolib.c \'B5\'DA 189 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v nextc\:liolib.c}
{\xe \v liolib.c\:nextc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int nextc ({\b RN} *  {\i rn}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABLI}
{\bkmkend AAAAAAABLI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE liolib.c \'B5\'DA 425 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v opencheck\:liolib.c}
{\xe \v liolib.c\:opencheck}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void opencheck ({\b lua_State} *  {\i L}, const char *  {\i fname}, const char *  {\i mode}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABLJ}
{\bkmkend AAAAAAABLJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE liolib.c \'B5\'DA 249 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v read_all\:liolib.c}
{\xe \v liolib.c\:read_all}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void read_all ({\b lua_State} *  {\i L}, FILE *  {\i f}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABLK}
{\bkmkend AAAAAAABLK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE liolib.c \'B5\'DA 527 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v read_chars\:liolib.c}
{\xe \v liolib.c\:read_chars}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int read_chars ({\b lua_State} *  {\i L}, FILE *  {\i f}, size_t  {\i n}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABLL}
{\bkmkend AAAAAAABLL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE liolib.c \'B5\'DA 540 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v read_line\:liolib.c}
{\xe \v liolib.c\:read_line}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int read_line ({\b lua_State} *  {\i L}, FILE *  {\i f}, int  {\i chop}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABLM}
{\bkmkend AAAAAAABLM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE liolib.c \'B5\'DA 506 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v read_number\:liolib.c}
{\xe \v liolib.c\:read_number}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int read_number ({\b lua_State} *  {\i L}, FILE *  {\i f}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABLN}
{\bkmkend AAAAAAABLN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE liolib.c \'B5\'DA 464 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v readdigits\:liolib.c}
{\xe \v liolib.c\:readdigits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int readdigits ({\b RN} *  {\i rn}, int  {\i hex}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABLO}
{\bkmkend AAAAAAABLO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE liolib.c \'B5\'DA 451 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v test2\:liolib.c}
{\xe \v liolib.c\:test2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int test2 ({\b RN} *  {\i rn}, const char *  {\i set}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABLP}
{\bkmkend AAAAAAABLP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE liolib.c \'B5\'DA 441 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v test_eof\:liolib.c}
{\xe \v liolib.c\:test_eof}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int test_eof ({\b lua_State} *  {\i L}, FILE *  {\i f}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABLQ}
{\bkmkend AAAAAAABLQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE liolib.c \'B5\'DA 498 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v tofile\:liolib.c}
{\xe \v liolib.c\:tofile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static FILE* tofile ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABLR}
{\bkmkend AAAAAAABLR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE liolib.c \'B5\'DA 175 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v iolib\:liolib.c}
{\xe \v liolib.c\:iolib}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b luaL_Reg} iolib[]{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABLS}
{\bkmkend AAAAAAABLS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'B3\'F5\'CA\'BC\'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{\par
  \{{\cf22 "close"}, io_close\},\par
  \{{\cf22 "flush"}, io_flush\},\par
  \{{\cf22 "input"}, io_input\},\par
  \{{\cf22 "lines"}, io_lines\},\par
  \{{\cf22 "open"}, io_open\},\par
  \{{\cf22 "output"}, io_output\},\par
  \{{\cf22 "popen"}, io_popen\},\par
  \{{\cf22 "read"}, io_read\},\par
  \{{\cf22 "tmpfile"}, io_tmpfile\},\par
  \{{\cf22 "type"}, io_type\},\par
  \{{\cf22 "write"}, io_write\},\par
  \{NULL, NULL\}\par
\}\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE liolib.c \'B5\'DA 727 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v metameth\:liolib.c}
{\xe \v liolib.c\:metameth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b luaL_Reg} metameth[]{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABLT}
{\bkmkend AAAAAAABLT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'B3\'F5\'CA\'BC\'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{\par
  \{{\cf22 "__index"}, NULL\},  \par
  \{{\cf22 "__gc"}, f_gc\},\par
  \{{\cf22 "__close"}, f_gc\},\par
  \{{\cf22 "__tostring"}, f_tostring\},\par
  \{NULL, NULL\}\par
\}\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE liolib.c \'B5\'DA 761 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v meth\:liolib.c}
{\xe \v liolib.c\:meth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b luaL_Reg} meth[]{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABLU}
{\bkmkend AAAAAAABLU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'B3\'F5\'CA\'BC\'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{\par
  \{{\cf22 "read"}, f_read\},\par
  \{{\cf22 "write"}, f_write\},\par
  \{{\cf22 "lines"}, f_lines\},\par
  \{{\cf22 "flush"}, f_flush\},\par
  \{{\cf22 "seek"}, f_seek\},\par
  \{{\cf22 "close"}, f_close\},\par
  \{{\cf22 "setvbuf"}, f_setvbuf\},\par
  \{NULL, NULL\}\par
\}\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE liolib.c \'B5\'DA 746 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/gitworkspace/lua/src/ljumptab.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v D:/gitworkspace/lua/src/ljumptab.h}
{\xe \v D:/gitworkspace/lua/src/ljumptab.h}
{\bkmkstart AAAAAAABLV}
{\bkmkend AAAAAAABLV}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b vmdispatch}(x)\~ goto *{\b disptab}[x];\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b vmcase}(l)\~ L_##l:\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b vmbreak}\~ {\b vmfetch}(); {\b vmdispatch}({\b GET_OPCODE}(i));\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const void *const {\b disptab} [{\b NUM_OPCODES}]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v vmbreak\:ljumptab.h}
{\xe \v ljumptab.h\:vmbreak}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define vmbreak\~ {\b vmfetch}(); {\b vmdispatch}({\b GET_OPCODE}(i));}}
\par
{\bkmkstart AAAAAAABLW}
{\bkmkend AAAAAAABLW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ljumptab.h \'B5\'DA 16 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v vmcase\:ljumptab.h}
{\xe \v ljumptab.h\:vmcase}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define vmcase( l)\~ L_##l:}}
\par
{\bkmkstart AAAAAAABLX}
{\bkmkend AAAAAAABLX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ljumptab.h \'B5\'DA 14 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v vmdispatch\:ljumptab.h}
{\xe \v ljumptab.h\:vmdispatch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define vmdispatch( x)\~ goto *{\b disptab}[x];}}
\par
{\bkmkstart AAAAAAABLY}
{\bkmkend AAAAAAABLY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ljumptab.h \'B5\'DA 12 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v disptab\:ljumptab.h}
{\xe \v ljumptab.h\:disptab}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const void* const disptab[{\b NUM_OPCODES}]{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABLZ}
{\bkmkend AAAAAAABLZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ljumptab.h \'B5\'DA 19 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/gitworkspace/lua/src/llex.c \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v D:/gitworkspace/lua/src/llex.c}
{\xe \v D:/gitworkspace/lua/src/llex.c}
{\bkmkstart AAAAAAABMA}
{\bkmkend AAAAAAABMA}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "lprefix.h"}\par
{\f2 #include <locale.h>}\par
{\f2 #include <string.h>}\par
{\f2 #include "lua.h"}\par
{\f2 #include "lctype.h"}\par
{\f2 #include "ldebug.h"}\par
{\f2 #include "ldo.h"}\par
{\f2 #include "lgc.h"}\par
{\f2 #include "llex.h"}\par
{\f2 #include "lobject.h"}\par
{\f2 #include "lparser.h"}\par
{\f2 #include "lstate.h"}\par
{\f2 #include "lstring.h"}\par
{\f2 #include "ltable.h"}\par
{\f2 #include "lzio.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b llex_c}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_CORE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b next}(ls)\~ (ls->current = {\b zgetc}(ls->z))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b currIsNewline}(ls)\~ (ls->current == '\\n' || ls->current == '\\r')\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b save_and_next}(ls)\~ ({\b save}(ls, ls->current), {\b next}(ls))\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b l_noret} {\b lexerror} ({\b LexState} *ls, const char *msg, int token)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b save} ({\b LexState} *ls, int c)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaX_init} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b luaX_token2str} ({\b LexState} *ls, int token)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const char * {\b txtToken} ({\b LexState} *ls, int token)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b l_noret} {\b luaX_syntaxerror} ({\b LexState} *ls, const char *msg)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TString} * {\b luaX_newstring} ({\b LexState} *ls, const char *str, size_t l)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b inclinenumber} ({\b LexState} *ls)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaX_setinput} ({\b lua_State} *L, {\b LexState} *ls, {\b ZIO} *z, {\b TString} *source, int firstchar)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b check_next1} ({\b LexState} *ls, int c)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b check_next2} ({\b LexState} *ls, const char *set)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b read_numeral} ({\b LexState} *ls, {\b SemInfo} *seminfo)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static size_t {\b skip_sep} ({\b LexState} *ls)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b read_long_string} ({\b LexState} *ls, {\b SemInfo} *seminfo, size_t sep)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b esccheck} ({\b LexState} *ls, int c, const char *msg)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b gethexa} ({\b LexState} *ls)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b readhexaesc} ({\b LexState} *ls)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static unsigned long {\b readutf8esc} ({\b LexState} *ls)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b utf8esc} ({\b LexState} *ls)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b readdecesc} ({\b LexState} *ls)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b read_string} ({\b LexState} *ls, int del, {\b SemInfo} *seminfo)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b llex} ({\b LexState} *ls, {\b SemInfo} *seminfo)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaX_next} ({\b LexState} *ls)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b luaX_lookahead} ({\b LexState} *ls)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const char *const {\b luaX_tokens} []\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v currIsNewline\:llex.c}
{\xe \v llex.c\:currIsNewline}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define currIsNewline( ls)\~ (ls->current == '\\n' || ls->current == '\\r')}}
\par
{\bkmkstart AAAAAAABMB}
{\bkmkend AAAAAAABMB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llex.c \'B5\'DA 36 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v llex_c\:llex.c}
{\xe \v llex.c\:llex_c}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define llex_c}}
\par
{\bkmkstart AAAAAAABMC}
{\bkmkend AAAAAAABMC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llex.c \'B5\'DA 7 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_CORE\:llex.c}
{\xe \v llex.c\:LUA_CORE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_CORE}}
\par
{\bkmkstart AAAAAAABMD}
{\bkmkend AAAAAAABMD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llex.c \'B5\'DA 8 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v next\:llex.c}
{\xe \v llex.c\:next}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define next( ls)\~ (ls->current = {\b zgetc}(ls->z))}}
\par
{\bkmkstart AAAAAAABME}
{\bkmkend AAAAAAABME}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llex.c \'B5\'DA 32 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v save_and_next\:llex.c}
{\xe \v llex.c\:save_and_next}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define save_and_next( ls)\~ ({\b save}(ls, ls->current), {\b next}(ls))}}
\par
{\bkmkstart AAAAAAABMF}
{\bkmkend AAAAAAABMF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llex.c \'B5\'DA 51 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v check_next1\:llex.c}
{\xe \v llex.c\:check_next1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int check_next1 ({\b LexState} *  {\i ls}, int  {\i c}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABMG}
{\bkmkend AAAAAAABMG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llex.c \'B5\'DA 189 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v check_next2\:llex.c}
{\xe \v llex.c\:check_next2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int check_next2 ({\b LexState} *  {\i ls}, const char *  {\i set}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABMH}
{\bkmkend AAAAAAABMH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llex.c \'B5\'DA 202 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v esccheck\:llex.c}
{\xe \v llex.c\:esccheck}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void esccheck ({\b LexState} *  {\i ls}, int  {\i c}, const char *  {\i msg}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABMI}
{\bkmkend AAAAAAABMI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llex.c \'B5\'DA 316 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v gethexa\:llex.c}
{\xe \v llex.c\:gethexa}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int gethexa ({\b LexState} *  {\i ls}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABMJ}
{\bkmkend AAAAAAABMJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llex.c \'B5\'DA 325 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v inclinenumber\:llex.c}
{\xe \v llex.c\:inclinenumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void inclinenumber ({\b LexState} *  {\i ls}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABMK}
{\bkmkend AAAAAAABMK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llex.c \'B5\'DA 154 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lexerror\:llex.c}
{\xe \v llex.c\:lexerror}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b l_noret} lexerror ({\b LexState} *  {\i ls}, const char *  {\i msg}, int  {\i token}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABML}
{\bkmkend AAAAAAABML}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llex.c \'B5\'DA 112 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v llex\:llex.c}
{\xe \v llex.c\:llex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int llex ({\b LexState} *  {\i ls}, {\b SemInfo} *  {\i seminfo}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABMM}
{\bkmkend AAAAAAABMM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llex.c \'B5\'DA 442 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaX_init\:llex.c}
{\xe \v llex.c\:luaX_init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaX_init ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAABMN}
{\bkmkend AAAAAAABMN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llex.c \'B5\'DA 70 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaX_lookahead\:llex.c}
{\xe \v llex.c\:luaX_lookahead}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int luaX_lookahead ({\b LexState} *  {\i ls})}}
\par
{\bkmkstart AAAAAAABMO}
{\bkmkend AAAAAAABMO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llex.c \'B5\'DA 573 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaX_newstring\:llex.c}
{\xe \v llex.c\:luaX_newstring}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TString}* luaX_newstring ({\b LexState} *  {\i ls}, const char *  {\i str}, size_t  {\i l})}}
\par
{\bkmkstart AAAAAAABMP}
{\bkmkend AAAAAAABMP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llex.c \'B5\'DA 130 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaX_next\:llex.c}
{\xe \v llex.c\:luaX_next}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaX_next ({\b LexState} *  {\i ls})}}
\par
{\bkmkstart AAAAAAABMQ}
{\bkmkend AAAAAAABMQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llex.c \'B5\'DA 562 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaX_setinput\:llex.c}
{\xe \v llex.c\:luaX_setinput}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaX_setinput ({\b lua_State} *  {\i L}, {\b LexState} *  {\i ls}, {\b ZIO} *  {\i z}, {\b TString} *  {\i source}, int  {\i firstchar})}}
\par
{\bkmkstart AAAAAAABMR}
{\bkmkend AAAAAAABMR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llex.c \'B5\'DA 165 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaX_syntaxerror\:llex.c}
{\xe \v llex.c\:luaX_syntaxerror}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b l_noret} luaX_syntaxerror ({\b LexState} *  {\i ls}, const char *  {\i msg})}}
\par
{\bkmkstart AAAAAAABMS}
{\bkmkend AAAAAAABMS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llex.c \'B5\'DA 120 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaX_token2str\:llex.c}
{\xe \v llex.c\:luaX_token2str}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* luaX_token2str ({\b LexState} *  {\i ls}, int  {\i token})}}
\par
{\bkmkstart AAAAAAABMT}
{\bkmkend AAAAAAABMT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llex.c \'B5\'DA 82 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v read_long_string\:llex.c}
{\xe \v llex.c\:read_long_string}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void read_long_string ({\b LexState} *  {\i ls}, {\b SemInfo} *  {\i seminfo}, size_t  {\i sep}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABMU}
{\bkmkend AAAAAAABMU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llex.c \'B5\'DA 277 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v read_numeral\:llex.c}
{\xe \v llex.c\:read_numeral}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int read_numeral ({\b LexState} *  {\i ls}, {\b SemInfo} *  {\i seminfo}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABMV}
{\bkmkend AAAAAAABMV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llex.c \'B5\'DA 225 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v read_string\:llex.c}
{\xe \v llex.c\:read_string}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void read_string ({\b LexState} *  {\i ls}, int  {\i del}, {\b SemInfo} *  {\i seminfo}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABMW}
{\bkmkend AAAAAAABMW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llex.c \'B5\'DA 379 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v readdecesc\:llex.c}
{\xe \v llex.c\:readdecesc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int readdecesc ({\b LexState} *  {\i ls}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABMX}
{\bkmkend AAAAAAABMX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llex.c \'B5\'DA 366 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v readhexaesc\:llex.c}
{\xe \v llex.c\:readhexaesc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int readhexaesc ({\b LexState} *  {\i ls}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABMY}
{\bkmkend AAAAAAABMY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llex.c \'B5\'DA 332 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v readutf8esc\:llex.c}
{\xe \v llex.c\:readutf8esc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static unsigned long readutf8esc ({\b LexState} *  {\i ls}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABMZ}
{\bkmkend AAAAAAABMZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llex.c \'B5\'DA 340 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v save\:llex.c}
{\xe \v llex.c\:save}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void save ({\b LexState} *  {\i ls}, int  {\i c}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABNA}
{\bkmkend AAAAAAABNA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llex.c \'B5\'DA 57 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v skip_sep\:llex.c}
{\xe \v llex.c\:skip_sep}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static size_t skip_sep ({\b LexState} *  {\i ls}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABNB}
{\bkmkend AAAAAAABNB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llex.c \'B5\'DA 262 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v txtToken\:llex.c}
{\xe \v llex.c\:txtToken}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static const char* txtToken ({\b LexState} *  {\i ls}, int  {\i token}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABNC}
{\bkmkend AAAAAAABNC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llex.c \'B5\'DA 100 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v utf8esc\:llex.c}
{\xe \v llex.c\:utf8esc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void utf8esc ({\b LexState} *  {\i ls}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABND}
{\bkmkend AAAAAAABND}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llex.c \'B5\'DA 358 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v luaX_tokens\:llex.c}
{\xe \v llex.c\:luaX_tokens}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* const luaX_tokens[]{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABNE}
{\bkmkend AAAAAAABNE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'B3\'F5\'CA\'BC\'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{\par
    {\cf22 "and"}, {\cf22 "break"}, {\cf22 "do"}, {\cf22 "else"}, {\cf22 "elseif"},\par
    {\cf22 "end"}, {\cf22 "false"}, {\cf22 "for"}, {\cf22 "function"}, {\cf22 "goto"}, {\cf22 "if"},\par
    {\cf22 "in"}, {\cf22 "local"}, {\cf22 "nil"}, {\cf22 "not"}, {\cf22 "or"}, {\cf22 "repeat"},\par
    {\cf22 "return"}, {\cf22 "then"}, {\cf22 "true"}, {\cf22 "until"}, {\cf22 "while"},\par
    {\cf22 "//"}, {\cf22 ".."}, {\cf22 "..."}, {\cf22 "=="}, {\cf22 ">="}, {\cf22 "<="}, {\cf22 "~="},\par
    {\cf22 "<<"}, {\cf22 ">>"}, {\cf22 "::"}, {\cf22 "<eof>"},\par
    {\cf22 "<number>"}, {\cf22 "<integer>"}, {\cf22 "<name>"}, {\cf22 "<string>"}\par
\}\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE llex.c \'B5\'DA 40 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/gitworkspace/lua/src/llex.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v D:/gitworkspace/lua/src/llex.h}
{\xe \v D:/gitworkspace/lua/src/llex.h}
{\bkmkstart AAAAAAABNF}
{\bkmkend AAAAAAABNF}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "lobject.h"}\par
{\f2 #include "lzio.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union {\b SemInfo}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Token}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LexState}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FIRST_RESERVED}\~ 257\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_ENV}\~ "_ENV"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b NUM_RESERVED}\~ ({\b cast_int}({\b TK_WHILE}-{\b FIRST_RESERVED} + 1))\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'D0\'CD\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b Token} {\b Token}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b LexState} {\b LexState}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'B6\'BE\'D9\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b RESERVED} \{ {\b TK_AND} = FIRST_RESERVED, 
{\b TK_BREAK}, 
{\b TK_DO}, 
{\b TK_ELSE}, 
{\b TK_ELSEIF}, 
{\b TK_END}, 
{\b TK_FALSE}, 
{\b TK_FOR}, 
{\b TK_FUNCTION}, 
{\b TK_GOTO}, 
{\b TK_IF}, 
{\b TK_IN}, 
{\b TK_LOCAL}, 
{\b TK_NIL}, 
{\b TK_NOT}, 
{\b TK_OR}, 
{\b TK_REPEAT}, 
{\b TK_RETURN}, 
{\b TK_THEN}, 
{\b TK_TRUE}, 
{\b TK_UNTIL}, 
{\b TK_WHILE}, 
{\b TK_IDIV}, 
{\b TK_CONCAT}, 
{\b TK_DOTS}, 
{\b TK_EQ}, 
{\b TK_GE}, 
{\b TK_LE}, 
{\b TK_NE}, 
{\b TK_SHL}, 
{\b TK_SHR}, 
{\b TK_DBCOLON}, 
{\b TK_EOS}, 
{\b TK_FLT}, 
{\b TK_INT}, 
{\b TK_NAME}, 
{\b TK_STRING}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaX_init} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaX_setinput} ({\b lua_State} *L, {\b LexState} *ls, {\b ZIO} *z, {\b TString} *source, int firstchar)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} {\b TString} * {\b luaX_newstring} ({\b LexState} *ls, const char *str, size_t l)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaX_next} ({\b LexState} *ls)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} int {\b luaX_lookahead} ({\b LexState} *ls)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} {\b l_noret} {\b luaX_syntaxerror} ({\b LexState} *ls, const char *s)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} const char * {\b luaX_token2str} ({\b LexState} *ls, int token)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v FIRST_RESERVED\:llex.h}
{\xe \v llex.h\:FIRST_RESERVED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FIRST_RESERVED\~ 257}}
\par
{\bkmkstart AAAAAAABNG}
{\bkmkend AAAAAAABNG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llex.h \'B5\'DA 14 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_ENV\:llex.h}
{\xe \v llex.h\:LUA_ENV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_ENV\~ "_ENV"}}
\par
{\bkmkstart AAAAAAABNH}
{\bkmkend AAAAAAABNH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llex.h \'B5\'DA 18 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v NUM_RESERVED\:llex.h}
{\xe \v llex.h\:NUM_RESERVED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define NUM_RESERVED\~ ({\b cast_int}({\b TK_WHILE}-{\b FIRST_RESERVED} + 1))}}
\par
{\bkmkstart AAAAAAABNI}
{\bkmkend AAAAAAABNI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llex.h \'B5\'DA 40 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'D0\'CD\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v LexState\:llex.h}
{\xe \v llex.h\:LexState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b LexState} {\b LexState}}}
\par
{\bkmkstart AAAAAAABNJ}
{\bkmkend AAAAAAABNJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Token\:llex.h}
{\xe \v llex.h\:Token}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b Token} {\b Token}}}
\par
{\bkmkstart AAAAAAABNK}
{\bkmkend AAAAAAABNK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'B6\'BE\'D9\'C0\'E0\'D0\'CD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v RESERVED\:llex.h}
{\xe \v llex.h\:RESERVED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b RESERVED}}}
\par
{\bkmkstart AAAAAAABNL}
{\bkmkend AAAAAAABNL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C3\'B6\'BE\'D9\'D6\'B5:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v TK_AND\:llex.h}
{\xe \v llex.h\:TK_AND}
{\qr TK_AND{\bkmkstart AAAAAAABNM}
{\bkmkend AAAAAAABNM}
\cell }{\cell }{\row }
{\xe \v TK_BREAK\:llex.h}
{\xe \v llex.h\:TK_BREAK}
{\qr TK_BREAK{\bkmkstart AAAAAAABNN}
{\bkmkend AAAAAAABNN}
\cell }{\cell }{\row }
{\xe \v TK_DO\:llex.h}
{\xe \v llex.h\:TK_DO}
{\qr TK_DO{\bkmkstart AAAAAAABNO}
{\bkmkend AAAAAAABNO}
\cell }{\cell }{\row }
{\xe \v TK_ELSE\:llex.h}
{\xe \v llex.h\:TK_ELSE}
{\qr TK_ELSE{\bkmkstart AAAAAAABNP}
{\bkmkend AAAAAAABNP}
\cell }{\cell }{\row }
{\xe \v TK_ELSEIF\:llex.h}
{\xe \v llex.h\:TK_ELSEIF}
{\qr TK_ELSEIF{\bkmkstart AAAAAAABNQ}
{\bkmkend AAAAAAABNQ}
\cell }{\cell }{\row }
{\xe \v TK_END\:llex.h}
{\xe \v llex.h\:TK_END}
{\qr TK_END{\bkmkstart AAAAAAABNR}
{\bkmkend AAAAAAABNR}
\cell }{\cell }{\row }
{\xe \v TK_FALSE\:llex.h}
{\xe \v llex.h\:TK_FALSE}
{\qr TK_FALSE{\bkmkstart AAAAAAABNS}
{\bkmkend AAAAAAABNS}
\cell }{\cell }{\row }
{\xe \v TK_FOR\:llex.h}
{\xe \v llex.h\:TK_FOR}
{\qr TK_FOR{\bkmkstart AAAAAAABNT}
{\bkmkend AAAAAAABNT}
\cell }{\cell }{\row }
{\xe \v TK_FUNCTION\:llex.h}
{\xe \v llex.h\:TK_FUNCTION}
{\qr TK_FUNCTION{\bkmkstart AAAAAAABNU}
{\bkmkend AAAAAAABNU}
\cell }{\cell }{\row }
{\xe \v TK_GOTO\:llex.h}
{\xe \v llex.h\:TK_GOTO}
{\qr TK_GOTO{\bkmkstart AAAAAAABNV}
{\bkmkend AAAAAAABNV}
\cell }{\cell }{\row }
{\xe \v TK_IF\:llex.h}
{\xe \v llex.h\:TK_IF}
{\qr TK_IF{\bkmkstart AAAAAAABNW}
{\bkmkend AAAAAAABNW}
\cell }{\cell }{\row }
{\xe \v TK_IN\:llex.h}
{\xe \v llex.h\:TK_IN}
{\qr TK_IN{\bkmkstart AAAAAAABNX}
{\bkmkend AAAAAAABNX}
\cell }{\cell }{\row }
{\xe \v TK_LOCAL\:llex.h}
{\xe \v llex.h\:TK_LOCAL}
{\qr TK_LOCAL{\bkmkstart AAAAAAABNY}
{\bkmkend AAAAAAABNY}
\cell }{\cell }{\row }
{\xe \v TK_NIL\:llex.h}
{\xe \v llex.h\:TK_NIL}
{\qr TK_NIL{\bkmkstart AAAAAAABNZ}
{\bkmkend AAAAAAABNZ}
\cell }{\cell }{\row }
{\xe \v TK_NOT\:llex.h}
{\xe \v llex.h\:TK_NOT}
{\qr TK_NOT{\bkmkstart AAAAAAABOA}
{\bkmkend AAAAAAABOA}
\cell }{\cell }{\row }
{\xe \v TK_OR\:llex.h}
{\xe \v llex.h\:TK_OR}
{\qr TK_OR{\bkmkstart AAAAAAABOB}
{\bkmkend AAAAAAABOB}
\cell }{\cell }{\row }
{\xe \v TK_REPEAT\:llex.h}
{\xe \v llex.h\:TK_REPEAT}
{\qr TK_REPEAT{\bkmkstart AAAAAAABOC}
{\bkmkend AAAAAAABOC}
\cell }{\cell }{\row }
{\xe \v TK_RETURN\:llex.h}
{\xe \v llex.h\:TK_RETURN}
{\qr TK_RETURN{\bkmkstart AAAAAAABOD}
{\bkmkend AAAAAAABOD}
\cell }{\cell }{\row }
{\xe \v TK_THEN\:llex.h}
{\xe \v llex.h\:TK_THEN}
{\qr TK_THEN{\bkmkstart AAAAAAABOE}
{\bkmkend AAAAAAABOE}
\cell }{\cell }{\row }
{\xe \v TK_TRUE\:llex.h}
{\xe \v llex.h\:TK_TRUE}
{\qr TK_TRUE{\bkmkstart AAAAAAABOF}
{\bkmkend AAAAAAABOF}
\cell }{\cell }{\row }
{\xe \v TK_UNTIL\:llex.h}
{\xe \v llex.h\:TK_UNTIL}
{\qr TK_UNTIL{\bkmkstart AAAAAAABOG}
{\bkmkend AAAAAAABOG}
\cell }{\cell }{\row }
{\xe \v TK_WHILE\:llex.h}
{\xe \v llex.h\:TK_WHILE}
{\qr TK_WHILE{\bkmkstart AAAAAAABOH}
{\bkmkend AAAAAAABOH}
\cell }{\cell }{\row }
{\xe \v TK_IDIV\:llex.h}
{\xe \v llex.h\:TK_IDIV}
{\qr TK_IDIV{\bkmkstart AAAAAAABOI}
{\bkmkend AAAAAAABOI}
\cell }{\cell }{\row }
{\xe \v TK_CONCAT\:llex.h}
{\xe \v llex.h\:TK_CONCAT}
{\qr TK_CONCAT{\bkmkstart AAAAAAABOJ}
{\bkmkend AAAAAAABOJ}
\cell }{\cell }{\row }
{\xe \v TK_DOTS\:llex.h}
{\xe \v llex.h\:TK_DOTS}
{\qr TK_DOTS{\bkmkstart AAAAAAABOK}
{\bkmkend AAAAAAABOK}
\cell }{\cell }{\row }
{\xe \v TK_EQ\:llex.h}
{\xe \v llex.h\:TK_EQ}
{\qr TK_EQ{\bkmkstart AAAAAAABOL}
{\bkmkend AAAAAAABOL}
\cell }{\cell }{\row }
{\xe \v TK_GE\:llex.h}
{\xe \v llex.h\:TK_GE}
{\qr TK_GE{\bkmkstart AAAAAAABOM}
{\bkmkend AAAAAAABOM}
\cell }{\cell }{\row }
{\xe \v TK_LE\:llex.h}
{\xe \v llex.h\:TK_LE}
{\qr TK_LE{\bkmkstart AAAAAAABON}
{\bkmkend AAAAAAABON}
\cell }{\cell }{\row }
{\xe \v TK_NE\:llex.h}
{\xe \v llex.h\:TK_NE}
{\qr TK_NE{\bkmkstart AAAAAAABOO}
{\bkmkend AAAAAAABOO}
\cell }{\cell }{\row }
{\xe \v TK_SHL\:llex.h}
{\xe \v llex.h\:TK_SHL}
{\qr TK_SHL{\bkmkstart AAAAAAABOP}
{\bkmkend AAAAAAABOP}
\cell }{\cell }{\row }
{\xe \v TK_SHR\:llex.h}
{\xe \v llex.h\:TK_SHR}
{\qr TK_SHR{\bkmkstart AAAAAAABOQ}
{\bkmkend AAAAAAABOQ}
\cell }{\cell }{\row }
{\xe \v TK_DBCOLON\:llex.h}
{\xe \v llex.h\:TK_DBCOLON}
{\qr TK_DBCOLON{\bkmkstart AAAAAAABOR}
{\bkmkend AAAAAAABOR}
\cell }{\cell }{\row }
{\xe \v TK_EOS\:llex.h}
{\xe \v llex.h\:TK_EOS}
{\qr TK_EOS{\bkmkstart AAAAAAABOS}
{\bkmkend AAAAAAABOS}
\cell }{\cell }{\row }
{\xe \v TK_FLT\:llex.h}
{\xe \v llex.h\:TK_FLT}
{\qr TK_FLT{\bkmkstart AAAAAAABOT}
{\bkmkend AAAAAAABOT}
\cell }{\cell }{\row }
{\xe \v TK_INT\:llex.h}
{\xe \v llex.h\:TK_INT}
{\qr TK_INT{\bkmkstart AAAAAAABOU}
{\bkmkend AAAAAAABOU}
\cell }{\cell }{\row }
{\xe \v TK_NAME\:llex.h}
{\xe \v llex.h\:TK_NAME}
{\qr TK_NAME{\bkmkstart AAAAAAABOV}
{\bkmkend AAAAAAABOV}
\cell }{\cell }{\row }
{\xe \v TK_STRING\:llex.h}
{\xe \v llex.h\:TK_STRING}
{\qr TK_STRING{\bkmkstart AAAAAAABOW}
{\bkmkend AAAAAAABOW}
\cell }{\cell }{\row }
}
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llex.h \'B5\'DA 26 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v luaX_init\:llex.h}
{\xe \v llex.h\:luaX_init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaX_init ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAABOX}
{\bkmkend AAAAAAABOX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llex.c \'B5\'DA 70 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaX_lookahead\:llex.h}
{\xe \v llex.h\:luaX_lookahead}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} int luaX_lookahead ({\b LexState} *  {\i ls})}}
\par
{\bkmkstart AAAAAAABOY}
{\bkmkend AAAAAAABOY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llex.c \'B5\'DA 573 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaX_newstring\:llex.h}
{\xe \v llex.h\:luaX_newstring}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} {\b TString}* luaX_newstring ({\b LexState} *  {\i ls}, const char *  {\i str}, size_t  {\i l})}}
\par
{\bkmkstart AAAAAAABOZ}
{\bkmkend AAAAAAABOZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llex.c \'B5\'DA 130 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaX_next\:llex.h}
{\xe \v llex.h\:luaX_next}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaX_next ({\b LexState} *  {\i ls})}}
\par
{\bkmkstart AAAAAAABPA}
{\bkmkend AAAAAAABPA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llex.c \'B5\'DA 562 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaX_setinput\:llex.h}
{\xe \v llex.h\:luaX_setinput}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaX_setinput ({\b lua_State} *  {\i L}, {\b LexState} *  {\i ls}, {\b ZIO} *  {\i z}, {\b TString} *  {\i source}, int  {\i firstchar})}}
\par
{\bkmkstart AAAAAAABPB}
{\bkmkend AAAAAAABPB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llex.c \'B5\'DA 165 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaX_syntaxerror\:llex.h}
{\xe \v llex.h\:luaX_syntaxerror}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} {\b l_noret} luaX_syntaxerror ({\b LexState} *  {\i ls}, const char *  {\i s})}}
\par
{\bkmkstart AAAAAAABPC}
{\bkmkend AAAAAAABPC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llex.c \'B5\'DA 120 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaX_token2str\:llex.h}
{\xe \v llex.h\:luaX_token2str}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} const char* luaX_token2str ({\b LexState} *  {\i ls}, int  {\i token})}}
\par
{\bkmkstart AAAAAAABPD}
{\bkmkend AAAAAAABPD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llex.c \'B5\'DA 82 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/gitworkspace/lua/src/llimits.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v D:/gitworkspace/lua/src/llimits.h}
{\xe \v D:/gitworkspace/lua/src/llimits.h}
{\bkmkstart AAAAAAABPE}
{\bkmkend AAAAAAABPE}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <limits.h>}\par
{\f2 #include <stddef.h>}\par
{\f2 #include "lua.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAX_SIZET}\~ ((size_t)(~(size_t)0))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAX_SIZE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAX_LUMEM}\~ (({\b lu_mem})(~({\b lu_mem})0))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAX_LMEM}\~ (({\b l_mem})({\b MAX_LUMEM} >> 1))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAX_INT}\~ INT_MAX  /* maximum value of an int */\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b log2maxs}(t)\~ (sizeof(t) * 8 - 2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ispow2}(x)\~ (((x) & ((x) - 1)) == 0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LL}(x)\~ (sizeof(x)/sizeof(char) - 1)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b point2uint}(p)\~ ((unsigned int)((size_t)(p) & UINT_MAX))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lua_assert}(c)\~ ((void)0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b check_exp}(c,  e)\~ (e)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lua_longassert}(c)\~ ((void)0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luai_apicheck}(l,  e)\~ ((void)l, {\b lua_assert}(e))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b api_check}(l,  e,  msg)\~ {\b luai_apicheck}(l,(e) && msg)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b UNUSED}(x)\~ ((void)(x))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b cast}(t,  exp)\~ ((t)(exp))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b cast_void}(i)\~ {\b cast}(void, (i))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b cast_voidp}(i)\~ {\b cast}(void *, (i))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b cast_num}(i)\~ {\b cast}({\b lua_Number}, (i))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b cast_int}(i)\~ {\b cast}(int, (i))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b cast_uint}(i)\~ {\b cast}(unsigned int, (i))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b cast_byte}(i)\~ {\b cast}({\b lu_byte}, (i))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b cast_uchar}(i)\~ {\b cast}(unsigned char, (i))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b cast_char}(i)\~ {\b cast}(char, (i))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b cast_charp}(i)\~ {\b cast}(char *, (i))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b cast_sizet}(i)\~ {\b cast}(size_t, (i))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b l_castS2U}(i)\~ (({\b lua_Unsigned})(i))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b l_castU2S}(i)\~ (({\b lua_Integer})(i))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b likely}(x)\~ (x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b unlikely}(x)\~ (x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b l_noret}\~ void\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUAI_MAXSHORTLEN}\~ 40\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MINSTRTABSIZE}\~ 128\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b STRCACHE_N}\~ 53\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b STRCACHE_M}\~ 2\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_MINBUFFER}\~ 32\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lua_lock}(L)\~ ((void) 0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lua_unlock}(L)\~ ((void) 0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luai_threadyield}(L)\~ \{{\b lua_unlock}(L); {\b lua_lock}(L);\}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luai_userstateopen}(L)\~ ((void)L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luai_userstateclose}(L)\~ ((void)L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luai_userstatethread}(L,  L1)\~ ((void)L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luai_userstatefree}(L,  L1)\~ ((void)L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luai_userstateresume}(L,  n)\~ ((void)L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luai_userstateyield}(L,  n)\~ ((void)L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luai_numidiv}(L,  a,  b)\~ ((void)L, {\b l_floor}({\b luai_numdiv}(L,a,b)))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luai_numdiv}(L,  a,  b)\~ ((a)/(b))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luai_nummod}(L,  a,  b,  m)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luai_numpow}(L,  a,  b)\~ ((void)L, {\b l_mathop}(pow)(a,b))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luai_numadd}(L,  a,  b)\~ ((a)+(b))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luai_numsub}(L,  a,  b)\~ ((a)-(b))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luai_nummul}(L,  a,  b)\~ ((a)*(b))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luai_numunm}(L,  a)\~ (-(a))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luai_numeq}(a,  b)\~ ((a)==(b))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luai_numlt}(a,  b)\~ ((a)<(b))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luai_numle}(a,  b)\~ ((a)<=(b))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luai_numgt}(a,  b)\~ ((a)>(b))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luai_numge}(a,  b)\~ ((a)>=(b))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luai_numisnan}(a)\~ (!{\b luai_numeq}((a), (a)))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b condmovestack}(L,  pre,  pos)\~ ((void)0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b condchangemem}(L,  pre,  pos)\~ ((void)0)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'D0\'CD\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef unsigned long {\b lu_mem}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef long {\b l_mem}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef unsigned char {\b lu_byte}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef signed char {\b ls_byte}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef {\b LUAI_UACNUMBER} {\b l_uacNumber}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef {\b LUAI_UACINT} {\b l_uacInt}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef unsigned long {\b l_uint32}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef {\b l_uint32} {\b Instruction}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v api_check\:llimits.h}
{\xe \v llimits.h\:api_check}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define api_check( l,  e,  msg)\~ {\b luai_apicheck}(l,(e) && msg)}}
\par
{\bkmkstart AAAAAAABPF}
{\bkmkend AAAAAAABPF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llimits.h \'B5\'DA 105 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v cast\:llimits.h}
{\xe \v llimits.h\:cast}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define cast( t,  exp)\~ ((t)(exp))}}
\par
{\bkmkstart AAAAAAABPG}
{\bkmkend AAAAAAABPG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llimits.h \'B5\'DA 115 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v cast_byte\:llimits.h}
{\xe \v llimits.h\:cast_byte}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define cast_byte( i)\~ {\b cast}({\b lu_byte}, (i))}}
\par
{\bkmkstart AAAAAAABPH}
{\bkmkend AAAAAAABPH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llimits.h \'B5\'DA 122 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v cast_char\:llimits.h}
{\xe \v llimits.h\:cast_char}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define cast_char( i)\~ {\b cast}(char, (i))}}
\par
{\bkmkstart AAAAAAABPI}
{\bkmkend AAAAAAABPI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llimits.h \'B5\'DA 124 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v cast_charp\:llimits.h}
{\xe \v llimits.h\:cast_charp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define cast_charp( i)\~ {\b cast}(char *, (i))}}
\par
{\bkmkstart AAAAAAABPJ}
{\bkmkend AAAAAAABPJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llimits.h \'B5\'DA 125 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v cast_int\:llimits.h}
{\xe \v llimits.h\:cast_int}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define cast_int( i)\~ {\b cast}(int, (i))}}
\par
{\bkmkstart AAAAAAABPK}
{\bkmkend AAAAAAABPK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llimits.h \'B5\'DA 120 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v cast_num\:llimits.h}
{\xe \v llimits.h\:cast_num}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define cast_num( i)\~ {\b cast}({\b lua_Number}, (i))}}
\par
{\bkmkstart AAAAAAABPL}
{\bkmkend AAAAAAABPL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llimits.h \'B5\'DA 119 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v cast_sizet\:llimits.h}
{\xe \v llimits.h\:cast_sizet}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define cast_sizet( i)\~ {\b cast}(size_t, (i))}}
\par
{\bkmkstart AAAAAAABPM}
{\bkmkend AAAAAAABPM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llimits.h \'B5\'DA 126 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v cast_uchar\:llimits.h}
{\xe \v llimits.h\:cast_uchar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define cast_uchar( i)\~ {\b cast}(unsigned char, (i))}}
\par
{\bkmkstart AAAAAAABPN}
{\bkmkend AAAAAAABPN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llimits.h \'B5\'DA 123 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v cast_uint\:llimits.h}
{\xe \v llimits.h\:cast_uint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define cast_uint( i)\~ {\b cast}(unsigned int, (i))}}
\par
{\bkmkstart AAAAAAABPO}
{\bkmkend AAAAAAABPO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llimits.h \'B5\'DA 121 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v cast_void\:llimits.h}
{\xe \v llimits.h\:cast_void}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define cast_void( i)\~ {\b cast}(void, (i))}}
\par
{\bkmkstart AAAAAAABPP}
{\bkmkend AAAAAAABPP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llimits.h \'B5\'DA 117 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v cast_voidp\:llimits.h}
{\xe \v llimits.h\:cast_voidp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define cast_voidp( i)\~ {\b cast}(void *, (i))}}
\par
{\bkmkstart AAAAAAABPQ}
{\bkmkend AAAAAAABPQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llimits.h \'B5\'DA 118 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v check_exp\:llimits.h}
{\xe \v llimits.h\:check_exp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define check_exp( c,  e)\~ (e)}}
\par
{\bkmkstart AAAAAAABPR}
{\bkmkend AAAAAAABPR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llimits.h \'B5\'DA 94 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v condchangemem\:llimits.h}
{\xe \v llimits.h\:condchangemem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define condchangemem( L,  pre,  pos)\~ ((void)0)}}
\par
{\bkmkstart AAAAAAABPS}
{\bkmkend AAAAAAABPS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llimits.h \'B5\'DA 343 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v condmovestack\:llimits.h}
{\xe \v llimits.h\:condmovestack}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define condmovestack( L,  pre,  pos)\~ ((void)0)}}
\par
{\bkmkstart AAAAAAABPT}
{\bkmkend AAAAAAABPT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llimits.h \'B5\'DA 335 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v ispow2\:llimits.h}
{\xe \v llimits.h\:ispow2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ispow2( x)\~ (((x) & ((x) - 1)) == 0)}}
\par
{\bkmkstart AAAAAAABPU}
{\bkmkend AAAAAAABPU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llimits.h \'B5\'DA 66 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v l_castS2U\:llimits.h}
{\xe \v llimits.h\:l_castS2U}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define l_castS2U( i)\~ (({\b lua_Unsigned})(i))}}
\par
{\bkmkstart AAAAAAABPV}
{\bkmkend AAAAAAABPV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llimits.h \'B5\'DA 131 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v l_castU2S\:llimits.h}
{\xe \v llimits.h\:l_castU2S}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define l_castU2S( i)\~ (({\b lua_Integer})(i))}}
\par
{\bkmkstart AAAAAAABPW}
{\bkmkend AAAAAAABPW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llimits.h \'B5\'DA 140 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v l_noret\:llimits.h}
{\xe \v llimits.h\:l_noret}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define l_noret\~ void}}
\par
{\bkmkstart AAAAAAABPX}
{\bkmkend AAAAAAABPX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llimits.h \'B5\'DA 170 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v likely\:llimits.h}
{\xe \v llimits.h\:likely}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define likely( x)\~ (x)}}
\par
{\bkmkstart AAAAAAABPY}
{\bkmkend AAAAAAABPY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llimits.h \'B5\'DA 153 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LL\:llimits.h}
{\xe \v llimits.h\:LL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LL( x)\~ (sizeof(x)/sizeof(char) - 1)}}
\par
{\bkmkstart AAAAAAABPZ}
{\bkmkend AAAAAAABPZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llimits.h \'B5\'DA 70 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v log2maxs\:llimits.h}
{\xe \v llimits.h\:log2maxs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define log2maxs( t)\~ (sizeof(t) * 8 - 2)}}
\par
{\bkmkstart AAAAAAABQA}
{\bkmkend AAAAAAABQA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llimits.h \'B5\'DA 60 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_assert\:llimits.h}
{\xe \v llimits.h\:lua_assert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lua_assert( c)\~ ((void)0)}}
\par
{\bkmkstart AAAAAAABQB}
{\bkmkend AAAAAAABQB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llimits.h \'B5\'DA 93 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_lock\:llimits.h}
{\xe \v llimits.h\:lua_lock}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lua_lock( L)\~ ((void) 0)}}
\par
{\bkmkstart AAAAAAABQC}
{\bkmkend AAAAAAABQC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llimits.h \'B5\'DA 234 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_longassert\:llimits.h}
{\xe \v llimits.h\:lua_longassert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lua_longassert( c)\~ ((void)0)}}
\par
{\bkmkstart AAAAAAABQD}
{\bkmkend AAAAAAABQD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llimits.h \'B5\'DA 95 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_MINBUFFER\:llimits.h}
{\xe \v llimits.h\:LUA_MINBUFFER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_MINBUFFER\~ 32}}
\par
{\bkmkstart AAAAAAABQE}
{\bkmkend AAAAAAABQE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llimits.h \'B5\'DA 225 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_unlock\:llimits.h}
{\xe \v llimits.h\:lua_unlock}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lua_unlock( L)\~ ((void) 0)}}
\par
{\bkmkstart AAAAAAABQF}
{\bkmkend AAAAAAABQF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llimits.h \'B5\'DA 235 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luai_apicheck\:llimits.h}
{\xe \v llimits.h\:luai_apicheck}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luai_apicheck( l,  e)\~ ((void)l, {\b lua_assert}(e))}}
\par
{\bkmkstart AAAAAAABQG}
{\bkmkend AAAAAAABQG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llimits.h \'B5\'DA 102 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUAI_MAXSHORTLEN\:llimits.h}
{\xe \v llimits.h\:LUAI_MAXSHORTLEN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUAI_MAXSHORTLEN\~ 40}}
\par
{\bkmkstart AAAAAAABQH}
{\bkmkend AAAAAAABQH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llimits.h \'B5\'DA 197 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luai_numadd\:llimits.h}
{\xe \v llimits.h\:luai_numadd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luai_numadd( L,  a,  b)\~ ((a)+(b))}}
\par
{\bkmkstart AAAAAAABQI}
{\bkmkend AAAAAAABQI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llimits.h \'B5\'DA 315 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luai_numdiv\:llimits.h}
{\xe \v llimits.h\:luai_numdiv}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luai_numdiv( L,  a,  b)\~ ((a)/(b))}}
\par
{\bkmkstart AAAAAAABQJ}
{\bkmkend AAAAAAABQJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llimits.h \'B5\'DA 288 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luai_numeq\:llimits.h}
{\xe \v llimits.h\:luai_numeq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luai_numeq( a,  b)\~ ((a)==(b))}}
\par
{\bkmkstart AAAAAAABQK}
{\bkmkend AAAAAAABQK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llimits.h \'B5\'DA 319 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luai_numge\:llimits.h}
{\xe \v llimits.h\:luai_numge}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luai_numge( a,  b)\~ ((a)>=(b))}}
\par
{\bkmkstart AAAAAAABQL}
{\bkmkend AAAAAAABQL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llimits.h \'B5\'DA 323 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luai_numgt\:llimits.h}
{\xe \v llimits.h\:luai_numgt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luai_numgt( a,  b)\~ ((a)>(b))}}
\par
{\bkmkstart AAAAAAABQM}
{\bkmkend AAAAAAABQM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llimits.h \'B5\'DA 322 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luai_numidiv\:llimits.h}
{\xe \v llimits.h\:luai_numidiv}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luai_numidiv( L,  a,  b)\~ ((void)L, {\b l_floor}({\b luai_numdiv}(L,a,b)))}}
\par
{\bkmkstart AAAAAAABQN}
{\bkmkend AAAAAAABQN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llimits.h \'B5\'DA 283 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luai_numisnan\:llimits.h}
{\xe \v llimits.h\:luai_numisnan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luai_numisnan( a)\~ (!{\b luai_numeq}((a), (a)))}}
\par
{\bkmkstart AAAAAAABQO}
{\bkmkend AAAAAAABQO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llimits.h \'B5\'DA 324 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luai_numle\:llimits.h}
{\xe \v llimits.h\:luai_numle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luai_numle( a,  b)\~ ((a)<=(b))}}
\par
{\bkmkstart AAAAAAABQP}
{\bkmkend AAAAAAABQP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llimits.h \'B5\'DA 321 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luai_numlt\:llimits.h}
{\xe \v llimits.h\:luai_numlt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luai_numlt( a,  b)\~ ((a)<(b))}}
\par
{\bkmkstart AAAAAAABQQ}
{\bkmkend AAAAAAABQQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llimits.h \'B5\'DA 320 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luai_nummod\:llimits.h}
{\xe \v llimits.h\:luai_nummod}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luai_nummod( L,  a,  b,  m)}}
\par
{\bkmkstart AAAAAAABQR}
{\bkmkend AAAAAAABQR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   \{ (void)L; (m) = l_mathop(fmod)(a,b); \\\par
    if (((m) > 0) ? (b) < 0 : ((m) < 0 && (b) > 0)) (m) += (b); \}\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE llimits.h \'B5\'DA 303 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luai_nummul\:llimits.h}
{\xe \v llimits.h\:luai_nummul}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luai_nummul( L,  a,  b)\~ ((a)*(b))}}
\par
{\bkmkstart AAAAAAABQS}
{\bkmkend AAAAAAABQS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llimits.h \'B5\'DA 317 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luai_numpow\:llimits.h}
{\xe \v llimits.h\:luai_numpow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luai_numpow( L,  a,  b)\~ ((void)L, {\b l_mathop}(pow)(a,b))}}
\par
{\bkmkstart AAAAAAABQT}
{\bkmkend AAAAAAABQT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llimits.h \'B5\'DA 310 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luai_numsub\:llimits.h}
{\xe \v llimits.h\:luai_numsub}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luai_numsub( L,  a,  b)\~ ((a)-(b))}}
\par
{\bkmkstart AAAAAAABQU}
{\bkmkend AAAAAAABQU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llimits.h \'B5\'DA 316 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luai_numunm\:llimits.h}
{\xe \v llimits.h\:luai_numunm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luai_numunm( L,  a)\~ (-(a))}}
\par
{\bkmkstart AAAAAAABQV}
{\bkmkend AAAAAAABQV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llimits.h \'B5\'DA 318 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luai_threadyield\:llimits.h}
{\xe \v llimits.h\:luai_threadyield}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luai_threadyield( L)\~ \{{\b lua_unlock}(L); {\b lua_lock}(L);\}}}
\par
{\bkmkstart AAAAAAABQW}
{\bkmkend AAAAAAABQW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llimits.h \'B5\'DA 243 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luai_userstateclose\:llimits.h}
{\xe \v llimits.h\:luai_userstateclose}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luai_userstateclose( L)\~ ((void)L)}}
\par
{\bkmkstart AAAAAAABQX}
{\bkmkend AAAAAAABQX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llimits.h \'B5\'DA 256 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luai_userstatefree\:llimits.h}
{\xe \v llimits.h\:luai_userstatefree}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luai_userstatefree( L,  L1)\~ ((void)L)}}
\par
{\bkmkstart AAAAAAABQY}
{\bkmkend AAAAAAABQY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llimits.h \'B5\'DA 264 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luai_userstateopen\:llimits.h}
{\xe \v llimits.h\:luai_userstateopen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luai_userstateopen( L)\~ ((void)L)}}
\par
{\bkmkstart AAAAAAABQZ}
{\bkmkend AAAAAAABQZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llimits.h \'B5\'DA 252 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luai_userstateresume\:llimits.h}
{\xe \v llimits.h\:luai_userstateresume}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luai_userstateresume( L,  n)\~ ((void)L)}}
\par
{\bkmkstart AAAAAAABRA}
{\bkmkend AAAAAAABRA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llimits.h \'B5\'DA 268 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luai_userstatethread\:llimits.h}
{\xe \v llimits.h\:luai_userstatethread}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luai_userstatethread( L,  L1)\~ ((void)L)}}
\par
{\bkmkstart AAAAAAABRB}
{\bkmkend AAAAAAABRB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llimits.h \'B5\'DA 260 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luai_userstateyield\:llimits.h}
{\xe \v llimits.h\:luai_userstateyield}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luai_userstateyield( L,  n)\~ ((void)L)}}
\par
{\bkmkstart AAAAAAABRC}
{\bkmkend AAAAAAABRC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llimits.h \'B5\'DA 272 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v MAX_INT\:llimits.h}
{\xe \v llimits.h\:MAX_INT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAX_INT\~ INT_MAX  /* maximum value of an int */}}
\par
{\bkmkstart AAAAAAABRD}
{\bkmkend AAAAAAABRD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llimits.h \'B5\'DA 53 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v MAX_LMEM\:llimits.h}
{\xe \v llimits.h\:MAX_LMEM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAX_LMEM\~ (({\b l_mem})({\b MAX_LUMEM} >> 1))}}
\par
{\bkmkstart AAAAAAABRE}
{\bkmkend AAAAAAABRE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llimits.h \'B5\'DA 50 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v MAX_LUMEM\:llimits.h}
{\xe \v llimits.h\:MAX_LUMEM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAX_LUMEM\~ (({\b lu_mem})(~({\b lu_mem})0))}}
\par
{\bkmkstart AAAAAAABRF}
{\bkmkend AAAAAAABRF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llimits.h \'B5\'DA 48 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v MAX_SIZE\:llimits.h}
{\xe \v llimits.h\:MAX_SIZE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAX_SIZE}}
\par
{\bkmkstart AAAAAAABRG}
{\bkmkend AAAAAAABRG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                           ({\cf17 sizeof}(size_t) < {\cf17 sizeof}(lua_Integer) ? MAX_SIZET \\\par
                          : (size_t)(LUA_MAXINTEGER))\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE llimits.h \'B5\'DA 44 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v MAX_SIZET\:llimits.h}
{\xe \v llimits.h\:MAX_SIZET}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAX_SIZET\~ ((size_t)(~(size_t)0))}}
\par
{\bkmkstart AAAAAAABRH}
{\bkmkend AAAAAAABRH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llimits.h \'B5\'DA 41 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v MINSTRTABSIZE\:llimits.h}
{\xe \v llimits.h\:MINSTRTABSIZE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MINSTRTABSIZE\~ 128}}
\par
{\bkmkstart AAAAAAABRI}
{\bkmkend AAAAAAABRI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llimits.h \'B5\'DA 208 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v point2uint\:llimits.h}
{\xe \v llimits.h\:point2uint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define point2uint( p)\~ ((unsigned int)((size_t)(p) & UINT_MAX))}}
\par
{\bkmkstart AAAAAAABRJ}
{\bkmkend AAAAAAABRJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llimits.h \'B5\'DA 78 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v STRCACHE_M\:llimits.h}
{\xe \v llimits.h\:STRCACHE_M}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define STRCACHE_M\~ 2}}
\par
{\bkmkstart AAAAAAABRK}
{\bkmkend AAAAAAABRK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llimits.h \'B5\'DA 219 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v STRCACHE_N\:llimits.h}
{\xe \v llimits.h\:STRCACHE_N}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define STRCACHE_N\~ 53}}
\par
{\bkmkstart AAAAAAABRL}
{\bkmkend AAAAAAABRL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llimits.h \'B5\'DA 218 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v unlikely\:llimits.h}
{\xe \v llimits.h\:unlikely}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define unlikely( x)\~ (x)}}
\par
{\bkmkstart AAAAAAABRM}
{\bkmkend AAAAAAABRM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llimits.h \'B5\'DA 154 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v UNUSED\:llimits.h}
{\xe \v llimits.h\:UNUSED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define UNUSED( x)\~ ((void)(x))}}
\par
{\bkmkstart AAAAAAABRN}
{\bkmkend AAAAAAABRN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llimits.h \'B5\'DA 110 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'D0\'CD\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v Instruction\:llimits.h}
{\xe \v llimits.h\:Instruction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef {\b l_uint32} {\b Instruction}}}
\par
{\bkmkstart AAAAAAABRO}
{\bkmkend AAAAAAABRO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llimits.h \'B5\'DA 186 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v l_mem\:llimits.h}
{\xe \v llimits.h\:l_mem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef long {\b l_mem}}}
\par
{\bkmkstart AAAAAAABRP}
{\bkmkend AAAAAAABRP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llimits.h \'B5\'DA 31 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v l_uacInt\:llimits.h}
{\xe \v llimits.h\:l_uacInt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef {\b LUAI_UACINT} {\b l_uacInt}}}
\par
{\bkmkstart AAAAAAABRQ}
{\bkmkend AAAAAAABRQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llimits.h \'B5\'DA 84 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v l_uacNumber\:llimits.h}
{\xe \v llimits.h\:l_uacNumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef {\b LUAI_UACNUMBER} {\b l_uacNumber}}}
\par
{\bkmkstart AAAAAAABRR}
{\bkmkend AAAAAAABRR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llimits.h \'B5\'DA 83 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v l_uint32\:llimits.h}
{\xe \v llimits.h\:l_uint32}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef unsigned long {\b l_uint32}}}
\par
{\bkmkstart AAAAAAABRS}
{\bkmkend AAAAAAABRS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llimits.h \'B5\'DA 183 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v ls_byte\:llimits.h}
{\xe \v llimits.h\:ls_byte}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef signed char {\b ls_byte}}}
\par
{\bkmkstart AAAAAAABRT}
{\bkmkend AAAAAAABRT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llimits.h \'B5\'DA 37 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lu_byte\:llimits.h}
{\xe \v llimits.h\:lu_byte}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef unsigned char {\b lu_byte}}}
\par
{\bkmkstart AAAAAAABRU}
{\bkmkend AAAAAAABRU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llimits.h \'B5\'DA 36 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lu_mem\:llimits.h}
{\xe \v llimits.h\:lu_mem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef unsigned long {\b lu_mem}}}
\par
{\bkmkstart AAAAAAABRV}
{\bkmkend AAAAAAABRV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE llimits.h \'B5\'DA 30 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/gitworkspace/lua/src/lmathlib.c \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v D:/gitworkspace/lua/src/lmathlib.c}
{\xe \v D:/gitworkspace/lua/src/lmathlib.c}
{\bkmkstart AAAAAAABRW}
{\bkmkend AAAAAAABRW}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "lprefix.h"}\par
{\f2 #include <float.h>}\par
{\f2 #include <limits.h>}\par
{\f2 #include <math.h>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <time.h>}\par
{\f2 #include "lua.h"}\par
{\f2 #include "lauxlib.h"}\par
{\f2 #include "lualib.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Rand64}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b RanState}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lmathlib_c}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_LIB}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PI}\~ ({\b l_mathop}(3.141592653589793238462643383279502884))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FIGS}\~ {\b l_floatatt}(MANT_DIG)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b trim32}(x)\~ ((x) & 0xffffffffu)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b UONE}\~ (({\b lu_int32})1)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b scaleFIG}\~ ({\b l_mathop}(0.5) / ({\b UONE} << ({\b FIGS} - 1)))\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'D0\'CD\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef unsigned long {\b lu_int32}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b Rand64} {\b Rand64}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b math_abs} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b math_sin} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b math_cos} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b math_tan} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b math_asin} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b math_acos} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b math_atan} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b math_toint} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b pushnumint} ({\b lua_State} *L, {\b lua_Number} d)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b math_floor} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b math_ceil} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b math_fmod} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b math_modf} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b math_sqrt} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b math_ult} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b math_log} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b math_exp} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b math_deg} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b math_rad} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b math_min} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b math_max} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b math_type} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b Rand64} {\b packI} ({\b lu_int32} h, {\b lu_int32} l)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b Rand64} {\b Ishl} ({\b Rand64} i, int n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b Ixor} ({\b Rand64} *i1, {\b Rand64} i2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b Rand64} {\b Iadd} ({\b Rand64} i1, {\b Rand64} i2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b Rand64} {\b times5} ({\b Rand64} i)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b Rand64} {\b times9} ({\b Rand64} i)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b Rand64} {\b rotl} ({\b Rand64} i, int n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b Rand64} {\b rotl1} ({\b Rand64} i, int n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b Rand64} {\b nextrand} ({\b Rand64} *state)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b lua_Number} {\b I2d} ({\b Rand64} x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b lua_Unsigned} {\b I2UInt} ({\b Rand64} x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b Rand64} {\b Int2I} ({\b lua_Unsigned} n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b lua_Unsigned} {\b project} ({\b lua_Unsigned} ran, {\b lua_Unsigned} n, {\b RanState} *state)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b math_random} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b setseed} ({\b lua_State} *L, {\b Rand64} *state, {\b lua_Unsigned} n1, {\b lua_Unsigned} n2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b randseed} ({\b lua_State} *L, {\b RanState} *state)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b math_randomseed} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b setrandfunc} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAMOD_API} int {\b luaopen_math} ({\b lua_State} *L)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const {\b luaL_Reg} {\b randfuncs} []\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const {\b luaL_Reg} {\b mathlib} []\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v FIGS\:lmathlib.c}
{\xe \v lmathlib.c\:FIGS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FIGS\~ {\b l_floatatt}(MANT_DIG)}}
\par
{\bkmkstart AAAAAAABRX}
{\bkmkend AAAAAAABRX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmathlib.c \'B5\'DA 252 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lmathlib_c\:lmathlib.c}
{\xe \v lmathlib.c\:lmathlib_c}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lmathlib_c}}
\par
{\bkmkstart AAAAAAABRY}
{\bkmkend AAAAAAABRY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmathlib.c \'B5\'DA 7 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_LIB\:lmathlib.c}
{\xe \v lmathlib.c\:LUA_LIB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_LIB}}
\par
{\bkmkstart AAAAAAABRZ}
{\bkmkend AAAAAAABRZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmathlib.c \'B5\'DA 8 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v PI\:lmathlib.c}
{\xe \v lmathlib.c\:PI}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PI\~ ({\b l_mathop}(3.141592653589793238462643383279502884))}}
\par
{\bkmkstart AAAAAAABSA}
{\bkmkend AAAAAAABSA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmathlib.c \'B5\'DA 26 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v scaleFIG\:lmathlib.c}
{\xe \v lmathlib.c\:scaleFIG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define scaleFIG\~ ({\b l_mathop}(0.5) / ({\b UONE} << ({\b FIGS} - 1)))}}
\par
{\bkmkstart AAAAAAABSB}
{\bkmkend AAAAAAABSB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmathlib.c \'B5\'DA 460 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v trim32\:lmathlib.c}
{\xe \v lmathlib.c\:trim32}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define trim32( x)\~ ((x) & 0xffffffffu)}}
\par
{\bkmkstart AAAAAAABSC}
{\bkmkend AAAAAAABSC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmathlib.c \'B5\'DA 373 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v UONE\:lmathlib.c}
{\xe \v lmathlib.c\:UONE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define UONE\~ (({\b lu_int32})1)}}
\par
{\bkmkstart AAAAAAABSD}
{\bkmkend AAAAAAABSD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmathlib.c \'B5\'DA 454 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'D0\'CD\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v lu_int32\:lmathlib.c}
{\xe \v lmathlib.c\:lu_int32}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef unsigned long {\b lu_int32}}}
\par
{\bkmkstart AAAAAAABSE}
{\bkmkend AAAAAAABSE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmathlib.c \'B5\'DA 353 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v Rand64\:lmathlib.c}
{\xe \v lmathlib.c\:Rand64}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b Rand64} {\b Rand64}}}
\par
{\bkmkstart AAAAAAABSF}
{\bkmkend AAAAAAABSF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v I2d\:lmathlib.c}
{\xe \v lmathlib.c\:I2d}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b lua_Number} I2d ({\b Rand64}  {\i x}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABSG}
{\bkmkend AAAAAAABSG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmathlib.c \'B5\'DA 466 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v I2UInt\:lmathlib.c}
{\xe \v lmathlib.c\:I2UInt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b lua_Unsigned} I2UInt ({\b Rand64}  {\i x}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABSH}
{\bkmkend AAAAAAABSH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmathlib.c \'B5\'DA 501 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v Iadd\:lmathlib.c}
{\xe \v lmathlib.c\:Iadd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b Rand64} Iadd ({\b Rand64}  {\i i1}, {\b Rand64}  {\i i2}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABSI}
{\bkmkend AAAAAAABSI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmathlib.c \'B5\'DA 401 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v Int2I\:lmathlib.c}
{\xe \v lmathlib.c\:Int2I}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b Rand64} Int2I ({\b lua_Unsigned}  {\i n}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABSJ}
{\bkmkend AAAAAAABSJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmathlib.c \'B5\'DA 506 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v Ishl\:lmathlib.c}
{\xe \v lmathlib.c\:Ishl}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b Rand64} Ishl ({\b Rand64}  {\i i}, int  {\i n}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABSK}
{\bkmkend AAAAAAABSK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmathlib.c \'B5\'DA 389 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v Ixor\:lmathlib.c}
{\xe \v lmathlib.c\:Ixor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void Ixor ({\b Rand64} *  {\i i1}, {\b Rand64}  {\i i2}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABSL}
{\bkmkend AAAAAAABSL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmathlib.c \'B5\'DA 395 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaopen_math\:lmathlib.c}
{\xe \v lmathlib.c\:luaopen_math}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAMOD_API} int luaopen_math ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAABSM}
{\bkmkend AAAAAAABSM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmathlib.c \'B5\'DA 750 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v math_abs\:lmathlib.c}
{\xe \v lmathlib.c\:math_abs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int math_abs ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABSN}
{\bkmkend AAAAAAABSN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmathlib.c \'B5\'DA 29 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v math_acos\:lmathlib.c}
{\xe \v lmathlib.c\:math_acos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int math_acos ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABSO}
{\bkmkend AAAAAAABSO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmathlib.c \'B5\'DA 60 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v math_asin\:lmathlib.c}
{\xe \v lmathlib.c\:math_asin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int math_asin ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABSP}
{\bkmkend AAAAAAABSP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmathlib.c \'B5\'DA 55 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v math_atan\:lmathlib.c}
{\xe \v lmathlib.c\:math_atan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int math_atan ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABSQ}
{\bkmkend AAAAAAABSQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmathlib.c \'B5\'DA 65 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v math_ceil\:lmathlib.c}
{\xe \v lmathlib.c\:math_ceil}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int math_ceil ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABSR}
{\bkmkend AAAAAAABSR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmathlib.c \'B5\'DA 106 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v math_cos\:lmathlib.c}
{\xe \v lmathlib.c\:math_cos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int math_cos ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABSS}
{\bkmkend AAAAAAABSS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmathlib.c \'B5\'DA 45 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v math_deg\:lmathlib.c}
{\xe \v lmathlib.c\:math_deg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int math_deg ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABST}
{\bkmkend AAAAAAABST}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmathlib.c \'B5\'DA 194 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v math_exp\:lmathlib.c}
{\xe \v lmathlib.c\:math_exp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int math_exp ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABSU}
{\bkmkend AAAAAAABSU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmathlib.c \'B5\'DA 189 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v math_floor\:lmathlib.c}
{\xe \v lmathlib.c\:math_floor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int math_floor ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABSV}
{\bkmkend AAAAAAABSV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmathlib.c \'B5\'DA 95 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v math_fmod\:lmathlib.c}
{\xe \v lmathlib.c\:math_fmod}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int math_fmod ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABSW}
{\bkmkend AAAAAAABSW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmathlib.c \'B5\'DA 117 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v math_log\:lmathlib.c}
{\xe \v lmathlib.c\:math_log}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int math_log ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABSX}
{\bkmkend AAAAAAABSX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmathlib.c \'B5\'DA 169 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v math_max\:lmathlib.c}
{\xe \v lmathlib.c\:math_max}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int math_max ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABSY}
{\bkmkend AAAAAAABSY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmathlib.c \'B5\'DA 219 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v math_min\:lmathlib.c}
{\xe \v lmathlib.c\:math_min}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int math_min ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABSZ}
{\bkmkend AAAAAAABSZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmathlib.c \'B5\'DA 205 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v math_modf\:lmathlib.c}
{\xe \v lmathlib.c\:math_modf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int math_modf ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABTA}
{\bkmkend AAAAAAABTA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmathlib.c \'B5\'DA 139 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v math_rad\:lmathlib.c}
{\xe \v lmathlib.c\:math_rad}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int math_rad ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABTB}
{\bkmkend AAAAAAABTB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmathlib.c \'B5\'DA 199 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v math_random\:lmathlib.c}
{\xe \v lmathlib.c\:math_random}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int math_random ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABTC}
{\bkmkend AAAAAAABTC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmathlib.c \'B5\'DA 556 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v math_randomseed\:lmathlib.c}
{\xe \v lmathlib.c\:math_randomseed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int math_randomseed ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABTD}
{\bkmkend AAAAAAABTD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmathlib.c \'B5\'DA 617 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v math_sin\:lmathlib.c}
{\xe \v lmathlib.c\:math_sin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int math_sin ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABTE}
{\bkmkend AAAAAAABTE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmathlib.c \'B5\'DA 40 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v math_sqrt\:lmathlib.c}
{\xe \v lmathlib.c\:math_sqrt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int math_sqrt ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABTF}
{\bkmkend AAAAAAABTF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmathlib.c \'B5\'DA 156 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v math_tan\:lmathlib.c}
{\xe \v lmathlib.c\:math_tan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int math_tan ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABTG}
{\bkmkend AAAAAAABTG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmathlib.c \'B5\'DA 50 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v math_toint\:lmathlib.c}
{\xe \v lmathlib.c\:math_toint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int math_toint ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABTH}
{\bkmkend AAAAAAABTH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmathlib.c \'B5\'DA 73 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v math_type\:lmathlib.c}
{\xe \v lmathlib.c\:math_type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int math_type ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABTI}
{\bkmkend AAAAAAABTI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmathlib.c \'B5\'DA 233 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v math_ult\:lmathlib.c}
{\xe \v lmathlib.c\:math_ult}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int math_ult ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABTJ}
{\bkmkend AAAAAAABTJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmathlib.c \'B5\'DA 162 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v nextrand\:lmathlib.c}
{\xe \v lmathlib.c\:nextrand}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b Rand64} nextrand ({\b Rand64} *  {\i state}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABTK}
{\bkmkend AAAAAAABTK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmathlib.c \'B5\'DA 436 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v packI\:lmathlib.c}
{\xe \v lmathlib.c\:packI}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b Rand64} packI ({\b lu_int32}  {\i h}, {\b lu_int32}  {\i l}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABTL}
{\bkmkend AAAAAAABTL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmathlib.c \'B5\'DA 381 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v project\:lmathlib.c}
{\xe \v lmathlib.c\:project}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b lua_Unsigned} project ({\b lua_Unsigned}  {\i ran}, {\b lua_Unsigned}  {\i n}, {\b RanState} *  {\i state}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABTM}
{\bkmkend AAAAAAABTM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmathlib.c \'B5\'DA 531 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v pushnumint\:lmathlib.c}
{\xe \v lmathlib.c\:pushnumint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void pushnumint ({\b lua_State} *  {\i L}, {\b lua_Number}  {\i d}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABTN}
{\bkmkend AAAAAAABTN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmathlib.c \'B5\'DA 86 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v randseed\:lmathlib.c}
{\xe \v lmathlib.c\:randseed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void randseed ({\b lua_State} *  {\i L}, {\b RanState} *  {\i state}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABTO}
{\bkmkend AAAAAAABTO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmathlib.c \'B5\'DA 610 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v rotl\:lmathlib.c}
{\xe \v lmathlib.c\:rotl}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b Rand64} rotl ({\b Rand64}  {\i i}, int  {\i n}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABTP}
{\bkmkend AAAAAAABTP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmathlib.c \'B5\'DA 419 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v rotl1\:lmathlib.c}
{\xe \v lmathlib.c\:rotl1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b Rand64} rotl1 ({\b Rand64}  {\i i}, int  {\i n}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABTQ}
{\bkmkend AAAAAAABTQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmathlib.c \'B5\'DA 426 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v setrandfunc\:lmathlib.c}
{\xe \v lmathlib.c\:setrandfunc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void setrandfunc ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABTR}
{\bkmkend AAAAAAABTR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmathlib.c \'B5\'DA 641 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v setseed\:lmathlib.c}
{\xe \v lmathlib.c\:setseed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void setseed ({\b lua_State} *  {\i L}, {\b Rand64} *  {\i state}, {\b lua_Unsigned}  {\i n1}, {\b lua_Unsigned}  {\i n2}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABTS}
{\bkmkend AAAAAAABTS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmathlib.c \'B5\'DA 591 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v times5\:lmathlib.c}
{\xe \v lmathlib.c\:times5}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b Rand64} times5 ({\b Rand64}  {\i i}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABTT}
{\bkmkend AAAAAAABTT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmathlib.c \'B5\'DA 409 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v times9\:lmathlib.c}
{\xe \v lmathlib.c\:times9}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b Rand64} times9 ({\b Rand64}  {\i i}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABTU}
{\bkmkend AAAAAAABTU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmathlib.c \'B5\'DA 414 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v mathlib\:lmathlib.c}
{\xe \v lmathlib.c\:mathlib}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b luaL_Reg} mathlib[]{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABTV}
{\bkmkend AAAAAAABTV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmathlib.c \'B5\'DA 704 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v randfuncs\:lmathlib.c}
{\xe \v lmathlib.c\:randfuncs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b luaL_Reg} randfuncs[]{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABTW}
{\bkmkend AAAAAAABTW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'B3\'F5\'CA\'BC\'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{\par
  \{{\cf22 "random"}, math_random\},\par
  \{{\cf22 "randomseed"}, math_randomseed\},\par
  \{NULL, NULL\}\par
\}\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE lmathlib.c \'B5\'DA 631 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/gitworkspace/lua/src/lmem.c \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v D:/gitworkspace/lua/src/lmem.c}
{\xe \v D:/gitworkspace/lua/src/lmem.c}
{\bkmkstart AAAAAAABTX}
{\bkmkend AAAAAAABTX}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "lprefix.h"}\par
{\f2 #include <stddef.h>}\par
{\f2 #include "lua.h"}\par
{\f2 #include "ldebug.h"}\par
{\f2 #include "ldo.h"}\par
{\f2 #include "lgc.h"}\par
{\f2 #include "lmem.h"}\par
{\f2 #include "lobject.h"}\par
{\f2 #include "lstate.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lmem_c}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_CORE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b firsttry}(g,  {\b block},  os,  ns)\~ ((*g->frealloc)(g->ud, {\b block}, os, ns))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MINSIZEARRAY}\~ 4\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void * {\b luaM_growaux_} ({\b lua_State} *L, void *{\b block}, int nelems, int *psize, int size_elems, int limit, const char *what)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void * {\b luaM_shrinkvector_} ({\b lua_State} *L, void *{\b block}, int *size, int final_n, int size_elem)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b l_noret} {\b luaM_toobig} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaM_free_} ({\b lua_State} *L, void *{\b block}, size_t osize)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void * {\b tryagain} ({\b lua_State} *L, void *{\b block}, size_t osize, size_t nsize)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void * {\b luaM_realloc_} ({\b lua_State} *L, void *{\b block}, size_t osize, size_t nsize)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void * {\b luaM_saferealloc_} ({\b lua_State} *L, void *{\b block}, size_t osize, size_t nsize)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void * {\b luaM_malloc_} ({\b lua_State} *L, size_t size, int tag)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v firsttry\:lmem.c}
{\xe \v lmem.c\:firsttry}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define firsttry( g,  {\b block},  os,  ns)\~ ((*g->frealloc)(g->ud, {\b block}, os, ns))}}
\par
{\bkmkstart AAAAAAABTY}
{\bkmkend AAAAAAABTY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmem.c \'B5\'DA 38 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lmem_c\:lmem.c}
{\xe \v lmem.c\:lmem_c}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lmem_c}}
\par
{\bkmkstart AAAAAAABTZ}
{\bkmkend AAAAAAABTZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmem.c \'B5\'DA 7 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_CORE\:lmem.c}
{\xe \v lmem.c\:LUA_CORE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_CORE}}
\par
{\bkmkstart AAAAAAABUA}
{\bkmkend AAAAAAABUA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmem.c \'B5\'DA 8 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v MINSIZEARRAY\:lmem.c}
{\xe \v lmem.c\:MINSIZEARRAY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MINSIZEARRAY\~ 4}}
\par
{\bkmkstart AAAAAAABUB}
{\bkmkend AAAAAAABUB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmem.c \'B5\'DA 76 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v luaM_free_\:lmem.c}
{\xe \v lmem.c\:luaM_free_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaM_free_ ({\b lua_State} *  {\i L}, void *  {\i block}, size_t  {\i osize})}}
\par
{\bkmkstart AAAAAAABUC}
{\bkmkend AAAAAAABUC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmem.c \'B5\'DA 132 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaM_growaux_\:lmem.c}
{\xe \v lmem.c\:luaM_growaux_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void* luaM_growaux_ ({\b lua_State} *  {\i L}, void *  {\i block}, int  {\i nelems}, int *  {\i psize}, int  {\i size_elems}, int  {\i limit}, const char *  {\i what})}}
\par
{\bkmkstart AAAAAAABUD}
{\bkmkend AAAAAAABUD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmem.c \'B5\'DA 79 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaM_malloc_\:lmem.c}
{\xe \v lmem.c\:luaM_malloc_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void* luaM_malloc_ ({\b lua_State} *  {\i L}, size_t  {\i size}, int  {\i tag})}}
\par
{\bkmkstart AAAAAAABUE}
{\bkmkend AAAAAAABUE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmem.c \'B5\'DA 188 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaM_realloc_\:lmem.c}
{\xe \v lmem.c\:luaM_realloc_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void* luaM_realloc_ ({\b lua_State} *  {\i L}, void *  {\i block}, size_t  {\i osize}, size_t  {\i nsize})}}
\par
{\bkmkstart AAAAAAABUF}
{\bkmkend AAAAAAABUF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmem.c \'B5\'DA 162 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaM_saferealloc_\:lmem.c}
{\xe \v lmem.c\:luaM_saferealloc_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void* luaM_saferealloc_ ({\b lua_State} *  {\i L}, void *  {\i block}, size_t  {\i osize}, size_t  {\i nsize})}}
\par
{\bkmkstart AAAAAAABUG}
{\bkmkend AAAAAAABUG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmem.c \'B5\'DA 179 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaM_shrinkvector_\:lmem.c}
{\xe \v lmem.c\:luaM_shrinkvector_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void* luaM_shrinkvector_ ({\b lua_State} *  {\i L}, void *  {\i block}, int *  {\i size}, int  {\i final_n}, int  {\i size_elem})}}
\par
{\bkmkstart AAAAAAABUH}
{\bkmkend AAAAAAABUH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmem.c \'B5\'DA 110 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaM_toobig\:lmem.c}
{\xe \v lmem.c\:luaM_toobig}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b l_noret} luaM_toobig ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAABUI}
{\bkmkend AAAAAAABUI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmem.c \'B5\'DA 124 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v tryagain\:lmem.c}
{\xe \v lmem.c\:tryagain}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void* tryagain ({\b lua_State} *  {\i L}, void *  {\i block}, size_t  {\i osize}, size_t  {\i nsize}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABUJ}
{\bkmkend AAAAAAABUJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmem.c \'B5\'DA 146 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/gitworkspace/lua/src/lmem.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v D:/gitworkspace/lua/src/lmem.h}
{\xe \v D:/gitworkspace/lua/src/lmem.h}
{\bkmkstart AAAAAAABUK}
{\bkmkend AAAAAAABUK}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stddef.h>}\par
{\f2 #include "llimits.h"}\par
{\f2 #include "lua.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luaM_error}(L)\~ {\b luaD_throw}(L, {\b LUA_ERRMEM})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luaM_testsize}(n,  e)\~ 	(sizeof(n) >= sizeof(size_t) && {\b cast_sizet}((n)) + 1 > {\b MAX_SIZET}/(e))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luaM_checksize}(L,  n,  e)\~ 	({\b luaM_testsize}(n,e) ? {\b luaM_toobig}(L) : {\b cast_void}(0))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luaM_limitN}(n,  t)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luaM_reallocvchar}(L,  b,  on,  n)\~   {\b cast_charp}({\b luaM_saferealloc_}(L, (b), (on)*sizeof(char), (n)*sizeof(char)))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luaM_freemem}(L,  b,  s)\~ {\b luaM_free_}(L, (b), (s))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luaM_free}(L,  b)\~ {\b luaM_free_}(L, (b), sizeof(*(b)))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luaM_freearray}(L,  b,  n)\~ {\b luaM_free_}(L, (b), (n)*sizeof(*(b)))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luaM_new}(L,  t)\~ {\b cast}(t*, {\b luaM_malloc_}(L, sizeof(t), 0))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luaM_newvector}(L,  n,  t)\~ {\b cast}(t*, {\b luaM_malloc_}(L, (n)*sizeof(t), 0))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luaM_newvectorchecked}(L,  n,  t)\~   ({\b luaM_checksize}(L,n,sizeof(t)), {\b luaM_newvector}(L,n,t))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luaM_newobject}(L,  tag,  s)\~ {\b luaM_malloc_}(L, (s), tag)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luaM_growvector}(L,  v,  nelems,  size,  t,  limit,  e)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luaM_reallocvector}(L,  v,  oldn,  n,  t)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luaM_shrinkvector}(L,  v,  size,  fs,  t)\~    ((v)={\b cast}(t *, {\b luaM_shrinkvector_}(L, v, &(size), fs, sizeof(t))))\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} {\b l_noret} {\b luaM_toobig} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void * {\b luaM_realloc_} ({\b lua_State} *L, void *{\b block}, size_t oldsize, size_t size)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void * {\b luaM_saferealloc_} ({\b lua_State} *L, void *{\b block}, size_t oldsize, size_t size)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaM_free_} ({\b lua_State} *L, void *{\b block}, size_t osize)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void * {\b luaM_growaux_} ({\b lua_State} *L, void *{\b block}, int nelems, int *size, int size_elem, int limit, const char *what)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void * {\b luaM_shrinkvector_} ({\b lua_State} *L, void *{\b block}, int *nelem, int final_n, int size_elem)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void * {\b luaM_malloc_} ({\b lua_State} *L, size_t size, int tag)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v luaM_checksize\:lmem.h}
{\xe \v lmem.h\:luaM_checksize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luaM_checksize( L,  n,  e)\~ 	({\b luaM_testsize}(n,e) ? {\b luaM_toobig}(L) : {\b cast_void}(0))}}
\par
{\bkmkstart AAAAAAABUL}
{\bkmkend AAAAAAABUL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmem.h \'B5\'DA 34 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaM_error\:lmem.h}
{\xe \v lmem.h\:luaM_error}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luaM_error( L)\~ {\b luaD_throw}(L, {\b LUA_ERRMEM})}}
\par
{\bkmkstart AAAAAAABUM}
{\bkmkend AAAAAAABUM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmem.h \'B5\'DA 17 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaM_free\:lmem.h}
{\xe \v lmem.h\:luaM_free}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luaM_free( L,  b)\~ {\b luaM_free_}(L, (b), sizeof(*(b)))}}
\par
{\bkmkstart AAAAAAABUN}
{\bkmkend AAAAAAABUN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmem.h \'B5\'DA 56 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaM_freearray\:lmem.h}
{\xe \v lmem.h\:luaM_freearray}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luaM_freearray( L,  b,  n)\~ {\b luaM_free_}(L, (b), (n)*sizeof(*(b)))}}
\par
{\bkmkstart AAAAAAABUO}
{\bkmkend AAAAAAABUO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmem.h \'B5\'DA 57 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaM_freemem\:lmem.h}
{\xe \v lmem.h\:luaM_freemem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luaM_freemem( L,  b,  s)\~ {\b luaM_free_}(L, (b), (s))}}
\par
{\bkmkstart AAAAAAABUP}
{\bkmkend AAAAAAABUP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmem.h \'B5\'DA 55 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaM_growvector\:lmem.h}
{\xe \v lmem.h\:luaM_growvector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luaM_growvector( L,  v,  nelems,  size,  t,  limit,  e)}}
\par
{\bkmkstart AAAAAAABUQ}
{\bkmkend AAAAAAABUQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     ((v)=cast(t *, luaM_growaux_(L,v,nelems,&(size),{\cf17 sizeof}(t), \\\par
                         luaM_limitN(limit,t),e)))\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE lmem.h \'B5\'DA 66 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaM_limitN\:lmem.h}
{\xe \v lmem.h\:luaM_limitN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luaM_limitN( n,  t)}}
\par
{\bkmkstart AAAAAAABUR}
{\bkmkend AAAAAAABUR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   ((cast_sizet(n) <= MAX_SIZET/{\cf17 sizeof}(t)) ? (n) :  \\\par
     cast_uint((MAX_SIZET/{\cf17 sizeof}(t))))\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE lmem.h \'B5\'DA 44 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaM_new\:lmem.h}
{\xe \v lmem.h\:luaM_new}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luaM_new( L,  t)\~ {\b cast}(t*, {\b luaM_malloc_}(L, sizeof(t), 0))}}
\par
{\bkmkstart AAAAAAABUS}
{\bkmkend AAAAAAABUS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmem.h \'B5\'DA 59 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaM_newobject\:lmem.h}
{\xe \v lmem.h\:luaM_newobject}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luaM_newobject( L,  tag,  s)\~ {\b luaM_malloc_}(L, (s), tag)}}
\par
{\bkmkstart AAAAAAABUT}
{\bkmkend AAAAAAABUT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmem.h \'B5\'DA 64 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaM_newvector\:lmem.h}
{\xe \v lmem.h\:luaM_newvector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luaM_newvector( L,  n,  t)\~ {\b cast}(t*, {\b luaM_malloc_}(L, (n)*sizeof(t), 0))}}
\par
{\bkmkstart AAAAAAABUU}
{\bkmkend AAAAAAABUU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmem.h \'B5\'DA 60 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaM_newvectorchecked\:lmem.h}
{\xe \v lmem.h\:luaM_newvectorchecked}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luaM_newvectorchecked( L,  n,  t)\~   ({\b luaM_checksize}(L,n,sizeof(t)), {\b luaM_newvector}(L,n,t))}}
\par
{\bkmkstart AAAAAAABUV}
{\bkmkend AAAAAAABUV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmem.h \'B5\'DA 61 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaM_reallocvchar\:lmem.h}
{\xe \v lmem.h\:luaM_reallocvchar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luaM_reallocvchar( L,  b,  on,  n)\~   {\b cast_charp}({\b luaM_saferealloc_}(L, (b), (on)*sizeof(char), (n)*sizeof(char)))}}
\par
{\bkmkstart AAAAAAABUW}
{\bkmkend AAAAAAABUW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmem.h \'B5\'DA 52 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaM_reallocvector\:lmem.h}
{\xe \v lmem.h\:luaM_reallocvector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luaM_reallocvector( L,  v,  oldn,  n,  t)}}
\par
{\bkmkstart AAAAAAABUX}
{\bkmkend AAAAAAABUX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    (cast(t *, luaM_realloc_(L, v, cast_sizet(oldn) * {\cf17 sizeof}(t), \\\par
                                  cast_sizet(n) * {\cf17 sizeof}(t))))\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE lmem.h \'B5\'DA 70 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaM_shrinkvector\:lmem.h}
{\xe \v lmem.h\:luaM_shrinkvector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luaM_shrinkvector( L,  v,  size,  fs,  t)\~    ((v)={\b cast}(t *, {\b luaM_shrinkvector_}(L, v, &(size), fs, sizeof(t))))}}
\par
{\bkmkstart AAAAAAABUY}
{\bkmkend AAAAAAABUY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmem.h \'B5\'DA 74 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaM_testsize\:lmem.h}
{\xe \v lmem.h\:luaM_testsize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luaM_testsize( n,  e)\~ 	(sizeof(n) >= sizeof(size_t) && {\b cast_sizet}((n)) + 1 > {\b MAX_SIZET}/(e))}}
\par
{\bkmkstart AAAAAAABUZ}
{\bkmkend AAAAAAABUZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmem.h \'B5\'DA 31 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v luaM_free_\:lmem.h}
{\xe \v lmem.h\:luaM_free_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaM_free_ ({\b lua_State} *  {\i L}, void *  {\i block}, size_t  {\i osize})}}
\par
{\bkmkstart AAAAAAABVA}
{\bkmkend AAAAAAABVA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmem.c \'B5\'DA 132 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaM_growaux_\:lmem.h}
{\xe \v lmem.h\:luaM_growaux_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void* luaM_growaux_ ({\b lua_State} *  {\i L}, void *  {\i block}, int  {\i nelems}, int *  {\i size}, int  {\i size_elem}, int  {\i limit}, const char *  {\i what})}}
\par
{\bkmkstart AAAAAAABVB}
{\bkmkend AAAAAAABVB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmem.c \'B5\'DA 79 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaM_malloc_\:lmem.h}
{\xe \v lmem.h\:luaM_malloc_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void* luaM_malloc_ ({\b lua_State} *  {\i L}, size_t  {\i size}, int  {\i tag})}}
\par
{\bkmkstart AAAAAAABVC}
{\bkmkend AAAAAAABVC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmem.c \'B5\'DA 188 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaM_realloc_\:lmem.h}
{\xe \v lmem.h\:luaM_realloc_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void* luaM_realloc_ ({\b lua_State} *  {\i L}, void *  {\i block}, size_t  {\i oldsize}, size_t  {\i size})}}
\par
{\bkmkstart AAAAAAABVD}
{\bkmkend AAAAAAABVD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmem.c \'B5\'DA 162 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaM_saferealloc_\:lmem.h}
{\xe \v lmem.h\:luaM_saferealloc_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void* luaM_saferealloc_ ({\b lua_State} *  {\i L}, void *  {\i block}, size_t  {\i oldsize}, size_t  {\i size})}}
\par
{\bkmkstart AAAAAAABVE}
{\bkmkend AAAAAAABVE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmem.c \'B5\'DA 179 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaM_shrinkvector_\:lmem.h}
{\xe \v lmem.h\:luaM_shrinkvector_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void* luaM_shrinkvector_ ({\b lua_State} *  {\i L}, void *  {\i block}, int *  {\i nelem}, int  {\i final_n}, int  {\i size_elem})}}
\par
{\bkmkstart AAAAAAABVF}
{\bkmkend AAAAAAABVF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmem.c \'B5\'DA 110 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaM_toobig\:lmem.h}
{\xe \v lmem.h\:luaM_toobig}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} {\b l_noret} luaM_toobig ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAABVG}
{\bkmkend AAAAAAABVG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmem.c \'B5\'DA 124 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/gitworkspace/lua/src/loadlib.c \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v D:/gitworkspace/lua/src/loadlib.c}
{\xe \v D:/gitworkspace/lua/src/loadlib.c}
{\bkmkstart AAAAAAABVH}
{\bkmkend AAAAAAABVH}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "lprefix.h"}\par
{\f2 #include <stdio.h>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <string.h>}\par
{\f2 #include "lua.h"}\par
{\f2 #include "lauxlib.h"}\par
{\f2 #include "lualib.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b loadlib_c}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_LIB}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_IGMARK}\~ "-"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_CSUBSEP}\~ {\b LUA_DIRSEP}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_LSUBSEP}\~ {\b LUA_DIRSEP}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_POF}\~ "luaopen_"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_OFSEP}\~ "_"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LIB_FAIL}\~ "open"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b setprogdir}(L)\~ ((void)0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LIB_FAIL}\~ "absent"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DLMSG}\~ "dynamic libraries not enabled; {\b check} your Lua installation"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_PATH_VAR}\~ "LUA_PATH"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_CPATH_VAR}\~ "LUA_CPATH"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERRLIB}\~ 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERRFUNC}\~ 2\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'D0\'CD\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef void(* {\b voidf}) (void)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b lsys_unloadlib} (void *lib)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void * {\b lsys_load} ({\b lua_State} *L, const char *path, int seeglb)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b lua_CFunction} {\b lsys_sym} ({\b lua_State} *L, void *lib, const char *sym)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b noenv} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b setpath} ({\b lua_State} *L, const char *fieldname, const char *envname, const char *dft)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void * {\b checkclib} ({\b lua_State} *L, const char *path)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b addtoclib} ({\b lua_State} *L, const char *path, void *plib)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b gctm} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b lookforfunc} ({\b lua_State} *L, const char *path, const char *sym)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b ll_loadlib} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b readable} (const char *filename)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const char * {\b getnextfilename} (char **path, char *end)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b pusherrornotfound} ({\b lua_State} *L, const char *path)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const char * {\b searchpath} ({\b lua_State} *L, const char *name, const char *path, const char *sep, const char *dirsep)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b ll_searchpath} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const char * {\b findfile} ({\b lua_State} *L, const char *name, const char *pname, const char *dirsep)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b checkload} ({\b lua_State} *L, int stat, const char *filename)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b searcher_Lua} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b loadfunc} ({\b lua_State} *L, const char *filename, const char *modname)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b searcher_C} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b searcher_Croot} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b searcher_preload} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b findloader} ({\b lua_State} *L, const char *name)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b ll_require} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b createsearcherstable} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b createclibstable} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAMOD_API} int {\b luaopen_package} ({\b lua_State} *L)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const char *const {\b CLIBS} = "_CLIBS"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const {\b luaL_Reg} {\b pk_funcs} []\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const {\b luaL_Reg} {\b ll_funcs} []\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v DLMSG\:loadlib.c}
{\xe \v loadlib.c\:DLMSG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DLMSG\~ "dynamic libraries not enabled; {\b check} your Lua installation"}}
\par
{\bkmkstart AAAAAAABVI}
{\bkmkend AAAAAAABVI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loadlib.c \'B5\'DA 235 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v ERRFUNC\:loadlib.c}
{\xe \v loadlib.c\:ERRFUNC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERRFUNC\~ 2}}
\par
{\bkmkstart AAAAAAABVJ}
{\bkmkend AAAAAAABVJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loadlib.c \'B5\'DA 375 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v ERRLIB\:loadlib.c}
{\xe \v loadlib.c\:ERRLIB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERRLIB\~ 1}}
\par
{\bkmkstart AAAAAAABVK}
{\bkmkend AAAAAAABVK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loadlib.c \'B5\'DA 374 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LIB_FAIL\:loadlib.c}
{\xe \v loadlib.c\:LIB_FAIL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LIB_FAIL\~ "open"}}
\par
{\bkmkstart AAAAAAABVL}
{\bkmkend AAAAAAABVL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loadlib.c \'B5\'DA 232 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LIB_FAIL\:loadlib.c}
{\xe \v loadlib.c\:LIB_FAIL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LIB_FAIL\~ "absent"}}
\par
{\bkmkstart AAAAAAABVL}
{\bkmkend AAAAAAABVL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loadlib.c \'B5\'DA 232 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v loadlib_c\:loadlib.c}
{\xe \v loadlib.c\:loadlib_c}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define loadlib_c}}
\par
{\bkmkstart AAAAAAABVM}
{\bkmkend AAAAAAABVM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loadlib.c \'B5\'DA 11 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_CPATH_VAR\:loadlib.c}
{\xe \v loadlib.c\:LUA_CPATH_VAR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_CPATH_VAR\~ "LUA_CPATH"}}
\par
{\bkmkstart AAAAAAABVN}
{\bkmkend AAAAAAABVN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loadlib.c \'B5\'DA 275 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_CSUBSEP\:loadlib.c}
{\xe \v loadlib.c\:LUA_CSUBSEP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_CSUBSEP\~ {\b LUA_DIRSEP}}}
\par
{\bkmkstart AAAAAAABVO}
{\bkmkend AAAAAAABVO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loadlib.c \'B5\'DA 43 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_IGMARK\:loadlib.c}
{\xe \v loadlib.c\:LUA_IGMARK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_IGMARK\~ "-"}}
\par
{\bkmkstart AAAAAAABVP}
{\bkmkend AAAAAAABVP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loadlib.c \'B5\'DA 32 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_LIB\:loadlib.c}
{\xe \v loadlib.c\:LUA_LIB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_LIB}}
\par
{\bkmkstart AAAAAAABVQ}
{\bkmkend AAAAAAABVQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loadlib.c \'B5\'DA 12 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_LSUBSEP\:loadlib.c}
{\xe \v loadlib.c\:LUA_LSUBSEP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_LSUBSEP\~ {\b LUA_DIRSEP}}}
\par
{\bkmkstart AAAAAAABVR}
{\bkmkend AAAAAAABVR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loadlib.c \'B5\'DA 47 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_OFSEP\:loadlib.c}
{\xe \v loadlib.c\:LUA_OFSEP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_OFSEP\~ "_"}}
\par
{\bkmkstart AAAAAAABVS}
{\bkmkend AAAAAAABVS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loadlib.c \'B5\'DA 55 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_PATH_VAR\:loadlib.c}
{\xe \v loadlib.c\:LUA_PATH_VAR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_PATH_VAR\~ "LUA_PATH"}}
\par
{\bkmkstart AAAAAAABVT}
{\bkmkend AAAAAAABVT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loadlib.c \'B5\'DA 271 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_POF\:loadlib.c}
{\xe \v loadlib.c\:LUA_POF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_POF\~ "luaopen_"}}
\par
{\bkmkstart AAAAAAABVU}
{\bkmkend AAAAAAABVU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loadlib.c \'B5\'DA 52 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v setprogdir\:loadlib.c}
{\xe \v loadlib.c\:setprogdir}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define setprogdir( L)\~ ((void)0)}}
\par
{\bkmkstart AAAAAAABVV}
{\bkmkend AAAAAAABVV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loadlib.c \'B5\'DA 67 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'D0\'CD\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v voidf\:loadlib.c}
{\xe \v loadlib.c\:voidf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef void(* voidf) (void)}}
\par
{\bkmkstart AAAAAAABVW}
{\bkmkend AAAAAAABVW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loadlib.c \'B5\'DA 74 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v addtoclib\:loadlib.c}
{\xe \v loadlib.c\:addtoclib}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void addtoclib ({\b lua_State} *  {\i L}, const char *  {\i path}, void *  {\i plib}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABVX}
{\bkmkend AAAAAAABVX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loadlib.c \'B5\'DA 347 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v checkclib\:loadlib.c}
{\xe \v loadlib.c\:checkclib}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void* checkclib ({\b lua_State} *  {\i L}, const char *  {\i path}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABVY}
{\bkmkend AAAAAAABVY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loadlib.c \'B5\'DA 333 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v checkload\:loadlib.c}
{\xe \v loadlib.c\:checkload}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int checkload ({\b lua_State} *  {\i L}, int  {\i stat}, const char *  {\i filename}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABVZ}
{\bkmkend AAAAAAABVZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loadlib.c \'B5\'DA 532 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v createclibstable\:loadlib.c}
{\xe \v loadlib.c\:createclibstable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void createclibstable ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABWA}
{\bkmkend AAAAAAABWA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loadlib.c \'B5\'DA 727 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v createsearcherstable\:loadlib.c}
{\xe \v loadlib.c\:createsearcherstable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void createsearcherstable ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABWB}
{\bkmkend AAAAAAABWB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loadlib.c \'B5\'DA 707 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v findfile\:loadlib.c}
{\xe \v loadlib.c\:findfile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static const char* findfile ({\b lua_State} *  {\i L}, const char *  {\i name}, const char *  {\i pname}, const char *  {\i dirsep}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABWC}
{\bkmkend AAAAAAABWC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loadlib.c \'B5\'DA 520 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v findloader\:loadlib.c}
{\xe \v loadlib.c\:findloader}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void findloader ({\b lua_State} *  {\i L}, const char *  {\i name}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABWD}
{\bkmkend AAAAAAABWD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loadlib.c \'B5\'DA 622 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v gctm\:loadlib.c}
{\xe \v loadlib.c\:gctm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int gctm ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABWE}
{\bkmkend AAAAAAABWE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loadlib.c \'B5\'DA 361 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v getnextfilename\:loadlib.c}
{\xe \v loadlib.c\:getnextfilename}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static const char* getnextfilename (char **  {\i path}, char *  {\i end}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABWF}
{\bkmkend AAAAAAABWF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loadlib.c \'B5\'DA 445 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v ll_loadlib\:loadlib.c}
{\xe \v loadlib.c\:ll_loadlib}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int ll_loadlib ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABWG}
{\bkmkend AAAAAAABWG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loadlib.c \'B5\'DA 409 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v ll_require\:loadlib.c}
{\xe \v loadlib.c\:ll_require}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int ll_require ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABWH}
{\bkmkend AAAAAAABWH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loadlib.c \'B5\'DA 654 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v ll_searchpath\:loadlib.c}
{\xe \v loadlib.c\:ll_searchpath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int ll_searchpath ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABWI}
{\bkmkend AAAAAAABWI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loadlib.c \'B5\'DA 506 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v loadfunc\:loadlib.c}
{\xe \v loadlib.c\:loadfunc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int loadfunc ({\b lua_State} *  {\i L}, const char *  {\i filename}, const char *  {\i modname}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABWJ}
{\bkmkend AAAAAAABWJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loadlib.c \'B5\'DA 560 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lookforfunc\:loadlib.c}
{\xe \v loadlib.c\:lookforfunc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int lookforfunc ({\b lua_State} *  {\i L}, const char *  {\i path}, const char *  {\i sym}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABWK}
{\bkmkend AAAAAAABWK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loadlib.c \'B5\'DA 388 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lsys_load\:loadlib.c}
{\xe \v loadlib.c\:lsys_load}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void * lsys_load ({\b lua_State} *  {\i L}, const char *  {\i path}, int  {\i seeglb}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABWL}
{\bkmkend AAAAAAABWL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loadlib.c \'B5\'DA 243 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lsys_sym\:loadlib.c}
{\xe \v loadlib.c\:lsys_sym}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b lua_CFunction} lsys_sym ({\b lua_State} *  {\i L}, void *  {\i lib}, const char *  {\i sym}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABWM}
{\bkmkend AAAAAAABWM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loadlib.c \'B5\'DA 250 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lsys_unloadlib\:loadlib.c}
{\xe \v loadlib.c\:lsys_unloadlib}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void lsys_unloadlib (void *  {\i lib}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABWN}
{\bkmkend AAAAAAABWN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loadlib.c \'B5\'DA 238 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaopen_package\:loadlib.c}
{\xe \v loadlib.c\:luaopen_package}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAMOD_API} int luaopen_package ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAABWO}
{\bkmkend AAAAAAABWO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loadlib.c \'B5\'DA 736 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v noenv\:loadlib.c}
{\xe \v loadlib.c\:noenv}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int noenv ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABWP}
{\bkmkend AAAAAAABWP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loadlib.c \'B5\'DA 283 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v pusherrornotfound\:loadlib.c}
{\xe \v loadlib.c\:pusherrornotfound}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void pusherrornotfound ({\b lua_State} *  {\i L}, const char *  {\i path}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABWQ}
{\bkmkend AAAAAAABWQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loadlib.c \'B5\'DA 469 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v readable\:loadlib.c}
{\xe \v loadlib.c\:readable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int readable (const char *  {\i filename}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABWR}
{\bkmkend AAAAAAABWR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loadlib.c \'B5\'DA 432 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v searcher_C\:loadlib.c}
{\xe \v loadlib.c\:searcher_C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int searcher_C ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABWS}
{\bkmkend AAAAAAABWS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loadlib.c \'B5\'DA 578 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v searcher_Croot\:loadlib.c}
{\xe \v loadlib.c\:searcher_Croot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int searcher_Croot ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABWT}
{\bkmkend AAAAAAABWT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loadlib.c \'B5\'DA 586 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v searcher_Lua\:loadlib.c}
{\xe \v loadlib.c\:searcher_Lua}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int searcher_Lua ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABWU}
{\bkmkend AAAAAAABWU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loadlib.c \'B5\'DA 543 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v searcher_preload\:loadlib.c}
{\xe \v loadlib.c\:searcher_preload}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int searcher_preload ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABWV}
{\bkmkend AAAAAAABWV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loadlib.c \'B5\'DA 608 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v searchpath\:loadlib.c}
{\xe \v loadlib.c\:searchpath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static const char* searchpath ({\b lua_State} *  {\i L}, const char *  {\i name}, const char *  {\i path}, const char *  {\i sep}, const char *  {\i dirsep}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABWW}
{\bkmkend AAAAAAABWW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loadlib.c \'B5\'DA 479 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v setpath\:loadlib.c}
{\xe \v loadlib.c\:setpath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void setpath ({\b lua_State} *  {\i L}, const char *  {\i fieldname}, const char *  {\i envname}, const char *  {\i dft}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABWX}
{\bkmkend AAAAAAABWX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loadlib.c \'B5\'DA 295 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v CLIBS\:loadlib.c}
{\xe \v loadlib.c\:CLIBS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* const CLIBS = "_CLIBS"{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABWY}
{\bkmkend AAAAAAABWY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loadlib.c \'B5\'DA 62 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v ll_funcs\:loadlib.c}
{\xe \v loadlib.c\:ll_funcs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b luaL_Reg} ll_funcs[]{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABWZ}
{\bkmkend AAAAAAABWZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'B3\'F5\'CA\'BC\'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{\par
  \{{\cf22 "require"}, ll_require\},\par
  \{NULL, NULL\}\par
\}\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE loadlib.c \'B5\'DA 701 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v pk_funcs\:loadlib.c}
{\xe \v loadlib.c\:pk_funcs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b luaL_Reg} pk_funcs[]{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABXA}
{\bkmkend AAAAAAABXA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'B3\'F5\'CA\'BC\'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{\par
  \{{\cf22 "loadlib"}, ll_loadlib\},\par
  \{{\cf22 "searchpath"}, ll_searchpath\},\par
  \par
  \{{\cf22 "preload"}, NULL\},\par
  \{{\cf22 "cpath"}, NULL\},\par
  \{{\cf22 "path"}, NULL\},\par
  \{{\cf22 "searchers"}, NULL\},\par
  \{{\cf22 "loaded"}, NULL\},\par
  \{NULL, NULL\}\par
\}\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE loadlib.c \'B5\'DA 688 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/gitworkspace/lua/src/lobject.c \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v D:/gitworkspace/lua/src/lobject.c}
{\xe \v D:/gitworkspace/lua/src/lobject.c}
{\bkmkstart AAAAAAABXB}
{\bkmkend AAAAAAABXB}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "lprefix.h"}\par
{\f2 #include <locale.h>}\par
{\f2 #include <math.h>}\par
{\f2 #include <stdarg.h>}\par
{\f2 #include <stdio.h>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <string.h>}\par
{\f2 #include "lua.h"}\par
{\f2 #include "lctype.h"}\par
{\f2 #include "ldebug.h"}\par
{\f2 #include "ldo.h"}\par
{\f2 #include "lmem.h"}\par
{\f2 #include "lobject.h"}\par
{\f2 #include "lstate.h"}\par
{\f2 #include "lstring.h"}\par
{\f2 #include "lvm.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b BuffFS}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lobject_c}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_CORE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b L_MAXLENNUM}\~ 200\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAXBY10}\~ {\b cast}({\b lua_Unsigned}, LUA_MAXINTEGER / 10)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAXLASTD}\~ {\b cast_int}(LUA_MAXINTEGER % 10)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAXNUMBER2STR}\~ 50\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BUFVFS}\~ 400\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b addsize}(b,  sz)\~ ((b)->blen += (sz))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RETS}\~ "..."\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PRE}\~ "[string \\""\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b POS}\~ "\\"]"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b addstr}(a,  b,  l)\~ ( memcpy(a,b,(l) * sizeof(char)), a += (l) )\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'D0\'CD\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b BuffFS} {\b BuffFS}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b luaO_ceillog2} (unsigned int x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b lua_Integer} {\b intarith} ({\b lua_State} *L, int op, {\b lua_Integer} v1, {\b lua_Integer} v2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b lua_Number} {\b numarith} ({\b lua_State} *L, int op, {\b lua_Number} v1, {\b lua_Number} v2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b luaO_rawarith} ({\b lua_State} *L, int op, const {\b TValue} *p1, const {\b TValue} *p2, {\b TValue} *res)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaO_arith} ({\b lua_State} *L, int op, const {\b TValue} *p1, const {\b TValue} *p2, {\b StkId} res)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b luaO_hexavalue} (int c)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b isneg} (const char **s)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const char * {\b l_str2dloc} (const char *s, {\b lua_Number} *result, int mode)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const char * {\b l_str2d} (const char *s, {\b lua_Number} *result)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const char * {\b l_str2int} (const char *s, {\b lua_Integer} *result)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
size_t {\b luaO_str2num} (const char *s, {\b TValue} *o)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b luaO_utf8esc} (char *buff, unsigned long x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b tostringbuff} ({\b TValue} *obj, char *buff)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaO_tostring} ({\b lua_State} *L, {\b TValue} *obj)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b pushstr} ({\b BuffFS} *buff, const char *str, size_t l)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b clearbuff} ({\b BuffFS} *buff)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static char * {\b getbuff} ({\b BuffFS} *buff, int sz)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b addstr2buff} ({\b BuffFS} *buff, const char *str, size_t slen)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b addnum2buff} ({\b BuffFS} *buff, {\b TValue} *num)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b luaO_pushvfstring} ({\b lua_State} *L, const char *fmt, va_list argp)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b luaO_pushfstring} ({\b lua_State} *L, const char *fmt,...)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaO_chunkid} (char *out, const char *source, size_t srclen)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v addsize\:lobject.c}
{\xe \v lobject.c\:addsize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define addsize( b,  sz)\~ ((b)->blen += (sz))}}
\par
{\bkmkstart AAAAAAABXC}
{\bkmkend AAAAAAABXC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.c \'B5\'DA 426 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v addstr\:lobject.c}
{\xe \v lobject.c\:addstr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define addstr( a,  b,  l)\~ ( memcpy(a,b,(l) * sizeof(char)), a += (l) )}}
\par
{\bkmkstart AAAAAAABXD}
{\bkmkend AAAAAAABXD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.c \'B5\'DA 546 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v BUFVFS\:lobject.c}
{\xe \v lobject.c\:BUFVFS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BUFVFS\~ 400}}
\par
{\bkmkstart AAAAAAABXE}
{\bkmkend AAAAAAABXE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.c \'B5\'DA 378 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v L_MAXLENNUM\:lobject.c}
{\xe \v lobject.c\:L_MAXLENNUM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define L_MAXLENNUM\~ 200}}
\par
{\bkmkstart AAAAAAABXF}
{\bkmkend AAAAAAABXF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.c \'B5\'DA 220 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lobject_c\:lobject.c}
{\xe \v lobject.c\:lobject_c}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lobject_c}}
\par
{\bkmkstart AAAAAAABXG}
{\bkmkend AAAAAAABXG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.c \'B5\'DA 7 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_CORE\:lobject.c}
{\xe \v lobject.c\:LUA_CORE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_CORE}}
\par
{\bkmkstart AAAAAAABXH}
{\bkmkend AAAAAAABXH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.c \'B5\'DA 8 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v MAXBY10\:lobject.c}
{\xe \v lobject.c\:MAXBY10}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAXBY10\~ {\b cast}({\b lua_Unsigned}, LUA_MAXINTEGER / 10)}}
\par
{\bkmkstart AAAAAAABXI}
{\bkmkend AAAAAAABXI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.c \'B5\'DA 268 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v MAXLASTD\:lobject.c}
{\xe \v lobject.c\:MAXLASTD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAXLASTD\~ {\b cast_int}(LUA_MAXINTEGER % 10)}}
\par
{\bkmkstart AAAAAAABXJ}
{\bkmkend AAAAAAABXJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.c \'B5\'DA 269 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v MAXNUMBER2STR\:lobject.c}
{\xe \v lobject.c\:MAXNUMBER2STR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAXNUMBER2STR\~ 50}}
\par
{\bkmkstart AAAAAAABXK}
{\bkmkend AAAAAAABXK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.c \'B5\'DA 337 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v POS\:lobject.c}
{\xe \v lobject.c\:POS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define POS\~ "\\"]"}}
\par
{\bkmkstart AAAAAAABXL}
{\bkmkend AAAAAAABXL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.c \'B5\'DA 544 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v PRE\:lobject.c}
{\xe \v lobject.c\:PRE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PRE\~ "[string \\""}}
\par
{\bkmkstart AAAAAAABXM}
{\bkmkend AAAAAAABXM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.c \'B5\'DA 543 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v RETS\:lobject.c}
{\xe \v lobject.c\:RETS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RETS\~ "..."}}
\par
{\bkmkstart AAAAAAABXN}
{\bkmkend AAAAAAABXN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.c \'B5\'DA 542 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'D0\'CD\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v BuffFS\:lobject.c}
{\xe \v lobject.c\:BuffFS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b BuffFS} {\b BuffFS}}}
\par
{\bkmkstart AAAAAAABXO}
{\bkmkend AAAAAAABXO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v addnum2buff\:lobject.c}
{\xe \v lobject.c\:addnum2buff}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void addnum2buff ({\b BuffFS} *  {\i buff}, {\b TValue} *  {\i num}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABXP}
{\bkmkend AAAAAAABXP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.c \'B5\'DA 449 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v addstr2buff\:lobject.c}
{\xe \v lobject.c\:addstr2buff}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void addstr2buff ({\b BuffFS} *  {\i buff}, const char *  {\i str}, size_t  {\i slen}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABXQ}
{\bkmkend AAAAAAABXQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.c \'B5\'DA 433 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v clearbuff\:lobject.c}
{\xe \v lobject.c\:clearbuff}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void clearbuff ({\b BuffFS} *  {\i buff}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABXR}
{\bkmkend AAAAAAABXR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.c \'B5\'DA 408 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v getbuff\:lobject.c}
{\xe \v lobject.c\:getbuff}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static char* getbuff ({\b BuffFS} *  {\i buff}, int  {\i sz}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABXS}
{\bkmkend AAAAAAABXS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.c \'B5\'DA 418 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v intarith\:lobject.c}
{\xe \v lobject.c\:intarith}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b lua_Integer} intarith ({\b lua_State} *  {\i L}, int  {\i op}, {\b lua_Integer}  {\i v1}, {\b lua_Integer}  {\i v2}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABXT}
{\bkmkend AAAAAAABXT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.c \'B5\'DA 53 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v isneg\:lobject.c}
{\xe \v lobject.c\:isneg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int isneg (const char **  {\i s}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABXU}
{\bkmkend AAAAAAABXU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.c \'B5\'DA 141 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v l_str2d\:lobject.c}
{\xe \v lobject.c\:l_str2d}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static const char* l_str2d (const char *  {\i s}, {\b lua_Number} *  {\i result}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABXV}
{\bkmkend AAAAAAABXV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.c \'B5\'DA 246 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v l_str2dloc\:lobject.c}
{\xe \v lobject.c\:l_str2dloc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static const char* l_str2dloc (const char *  {\i s}, {\b lua_Number} *  {\i result}, int  {\i mode}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABXW}
{\bkmkend AAAAAAABXW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.c \'B5\'DA 223 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v l_str2int\:lobject.c}
{\xe \v lobject.c\:l_str2int}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static const char* l_str2int (const char *  {\i s}, {\b lua_Integer} *  {\i result}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABXX}
{\bkmkend AAAAAAABXX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.c \'B5\'DA 271 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaO_arith\:lobject.c}
{\xe \v lobject.c\:luaO_arith}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaO_arith ({\b lua_State} *  {\i L}, int  {\i op}, const {\b TValue} *  {\i p1}, const {\b TValue} *  {\i p2}, {\b StkId}  {\i res})}}
\par
{\bkmkstart AAAAAAABXY}
{\bkmkend AAAAAAABXY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.c \'B5\'DA 126 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaO_ceillog2\:lobject.c}
{\xe \v lobject.c\:luaO_ceillog2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int luaO_ceillog2 (unsigned int  {\i x})}}
\par
{\bkmkstart AAAAAAABXZ}
{\bkmkend AAAAAAABXZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.c \'B5\'DA 35 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaO_chunkid\:lobject.c}
{\xe \v lobject.c\:luaO_chunkid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaO_chunkid (char *  {\i out}, const char *  {\i source}, size_t  {\i srclen})}}
\par
{\bkmkstart AAAAAAABYA}
{\bkmkend AAAAAAABYA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.c \'B5\'DA 548 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaO_hexavalue\:lobject.c}
{\xe \v lobject.c\:luaO_hexavalue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int luaO_hexavalue (int  {\i c})}}
\par
{\bkmkstart AAAAAAABYB}
{\bkmkend AAAAAAABYB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.c \'B5\'DA 135 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaO_pushfstring\:lobject.c}
{\xe \v lobject.c\:luaO_pushfstring}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* luaO_pushfstring ({\b lua_State} *  {\i L}, const char *  {\i fmt},   {\i ...})}}
\par
{\bkmkstart AAAAAAABYC}
{\bkmkend AAAAAAABYC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.c \'B5\'DA 530 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaO_pushvfstring\:lobject.c}
{\xe \v lobject.c\:luaO_pushvfstring}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* luaO_pushvfstring ({\b lua_State} *  {\i L}, const char *  {\i fmt}, va_list  {\i argp})}}
\par
{\bkmkstart AAAAAAABYD}
{\bkmkend AAAAAAABYD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.c \'B5\'DA 460 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaO_rawarith\:lobject.c}
{\xe \v lobject.c\:luaO_rawarith}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int luaO_rawarith ({\b lua_State} *  {\i L}, int  {\i op}, const {\b TValue} *  {\i p1}, const {\b TValue} *  {\i p2}, {\b TValue} *  {\i res})}}
\par
{\bkmkstart AAAAAAABYE}
{\bkmkend AAAAAAABYE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.c \'B5\'DA 89 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaO_str2num\:lobject.c}
{\xe \v lobject.c\:luaO_str2num}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
size_t luaO_str2num (const char *  {\i s}, {\b TValue} *  {\i o})}}
\par
{\bkmkstart AAAAAAABYF}
{\bkmkend AAAAAAABYF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.c \'B5\'DA 303 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaO_tostring\:lobject.c}
{\xe \v lobject.c\:luaO_tostring}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaO_tostring ({\b lua_State} *  {\i L}, {\b TValue} *  {\i obj})}}
\par
{\bkmkstart AAAAAAABYG}
{\bkmkend AAAAAAABYG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.c \'B5\'DA 362 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaO_utf8esc\:lobject.c}
{\xe \v lobject.c\:luaO_utf8esc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int luaO_utf8esc (char *  {\i buff}, unsigned long  {\i x})}}
\par
{\bkmkstart AAAAAAABYH}
{\bkmkend AAAAAAABYH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.c \'B5\'DA 318 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v numarith\:lobject.c}
{\xe \v lobject.c\:numarith}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b lua_Number} numarith ({\b lua_State} *  {\i L}, int  {\i op}, {\b lua_Number}  {\i v1}, {\b lua_Number}  {\i v2}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABYI}
{\bkmkend AAAAAAABYI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.c \'B5\'DA 73 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v pushstr\:lobject.c}
{\xe \v lobject.c\:pushstr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void pushstr ({\b BuffFS} *  {\i buff}, const char *  {\i str}, size_t  {\i l}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABYJ}
{\bkmkend AAAAAAABYJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.c \'B5\'DA 393 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v tostringbuff\:lobject.c}
{\xe \v lobject.c\:tostringbuff}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int tostringbuff ({\b TValue} *  {\i obj}, char *  {\i buff}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABYK}
{\bkmkend AAAAAAABYK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.c \'B5\'DA 343 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/gitworkspace/lua/src/lobject.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v D:/gitworkspace/lua/src/lobject.h}
{\xe \v D:/gitworkspace/lua/src/lobject.h}
{\bkmkstart AAAAAAABYL}
{\bkmkend AAAAAAABYL}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdarg.h>}\par
{\f2 #include "llimits.h"}\par
{\f2 #include "lua.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union {\b Value}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b TValue}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union {\b StackValue}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b GCObject}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b TString}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union {\b UValue}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Udata}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Udata0}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Upvaldesc}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LocVar}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b AbsLineInfo}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Proto}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b UpVal}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b CClosure}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LClosure}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union {\b Closure}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union {\b Node}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Node::NodeKey}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Table}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_TUPVAL}\~ {\b LUA_NUMTYPES}  /* upvalues */\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_TPROTO}\~ ({\b LUA_NUMTYPES}+1)  /* function prototypes */\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_TOTALTYPES}\~ ({\b LUA_TPROTO} + 2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b makevariant}(t,  v)\~ ((t) | ((v) << 4))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TValuefields}\~ {\b Value} value_; {\b lu_byte} tt_\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b val_}(o)\~ ((o)->value_)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b valraw}(o)\~ (&{\b val_}(o))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b rawtt}(o)\~ ((o)->tt_)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b novariant}(t)\~ ((t) & 0x0F)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b withvariant}(t)\~ ((t) & 0x3F)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ttypetag}(o)\~ {\b withvariant}({\b rawtt}(o))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ttype}(o)\~ ({\b novariant}({\b rawtt}(o)))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b checktag}(o,  t)\~ ({\b rawtt}(o) == (t))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b checktype}(o,  t)\~ ({\b ttype}(o) == (t))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b righttt}(obj)\~ ({\b ttypetag}(obj) == {\b gcvalue}(obj)->tt)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b checkliveness}(L,  obj)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b settt_}(o,  t)\~ ((o)->tt_=(t))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b setobj}(L,  obj1,  obj2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b setobjs2s}(L,  o1,  o2)\~ {\b setobj}(L,{\b s2v}(o1),{\b s2v}(o2))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b setobj2s}(L,  o1,  o2)\~ {\b setobj}(L,{\b s2v}(o1),o2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b setobjt2t}\~ {\b setobj}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b setobj2n}\~ {\b setobj}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b setobj2t}\~ {\b setobj}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b s2v}(o)\~ (&(o)->val)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_VNIL}\~ {\b makevariant}({\b LUA_TNIL}, 0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_VEMPTY}\~ {\b makevariant}({\b LUA_TNIL}, 1)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_VABSTKEY}\~ {\b makevariant}({\b LUA_TNIL}, 2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ttisnil}(v)\~ {\b checktype}((v), {\b LUA_TNIL})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ttisstrictnil}(o)\~ {\b checktag}((o), {\b LUA_VNIL})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b setnilvalue}(obj)\~ {\b settt_}(obj, {\b LUA_VNIL})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b isabstkey}(v)\~ {\b checktag}((v), {\b LUA_VABSTKEY})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b isnonstrictnil}(v)\~ ({\b ttisnil}(v) && !{\b ttisstrictnil}(v))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b isempty}(v)\~ {\b ttisnil}(v)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ABSTKEYCONSTANT}\~ \{NULL\}, {\b LUA_VABSTKEY}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b setempty}(v)\~ {\b settt_}(v, {\b LUA_VEMPTY})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_VFALSE}\~ {\b makevariant}({\b LUA_TBOOLEAN}, 0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_VTRUE}\~ {\b makevariant}({\b LUA_TBOOLEAN}, 1)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ttisboolean}(o)\~ {\b checktype}((o), {\b LUA_TBOOLEAN})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ttisfalse}(o)\~ {\b checktag}((o), {\b LUA_VFALSE})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ttistrue}(o)\~ {\b checktag}((o), {\b LUA_VTRUE})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b l_isfalse}(o)\~ ({\b ttisfalse}(o) || {\b ttisnil}(o))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b setbfvalue}(obj)\~ {\b settt_}(obj, {\b LUA_VFALSE})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b setbtvalue}(obj)\~ {\b settt_}(obj, {\b LUA_VTRUE})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_VTHREAD}\~ {\b makevariant}({\b LUA_TTHREAD}, 0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ttisthread}(o)\~ {\b checktag}((o), {\b ctb}({\b LUA_VTHREAD}))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b thvalue}(o)\~ {\b check_exp}({\b ttisthread}(o), {\b gco2th}({\b val_}(o).gc))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b setthvalue}(L,  obj,  x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b setthvalue2s}(L,  o,  t)\~ {\b setthvalue}(L,{\b s2v}(o),t)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CommonHeader}\~ struct {\b GCObject} *{\b next}; {\b lu_byte} tt; {\b lu_byte} marked\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BIT_ISCOLLECTABLE}\~ (1 << 6)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b iscollectable}(o)\~ ({\b rawtt}(o) & {\b BIT_ISCOLLECTABLE})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ctb}(t)\~ ((t) | {\b BIT_ISCOLLECTABLE})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b gcvalue}(o)\~ {\b check_exp}({\b iscollectable}(o), {\b val_}(o).gc)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b gcvalueraw}(v)\~ ((v).gc)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b setgcovalue}(L,  obj,  x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_VNUMINT}\~ {\b makevariant}({\b LUA_TNUMBER}, 0)  /* integer numbers */\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_VNUMFLT}\~ {\b makevariant}({\b LUA_TNUMBER}, 1)  /* float numbers */\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ttisnumber}(o)\~ {\b checktype}((o), {\b LUA_TNUMBER})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ttisfloat}(o)\~ {\b checktag}((o), {\b LUA_VNUMFLT})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ttisinteger}(o)\~ {\b checktag}((o), {\b LUA_VNUMINT})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b nvalue}(o)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b fltvalue}(o)\~ {\b check_exp}({\b ttisfloat}(o), {\b val_}(o).n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ivalue}(o)\~ {\b check_exp}({\b ttisinteger}(o), {\b val_}(o).i)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b fltvalueraw}(v)\~ ((v).n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ivalueraw}(v)\~ ((v).i)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b setfltvalue}(obj,  x)\~   \{ {\b TValue} *io=(obj); {\b val_}(io).n=(x); {\b settt_}(io, {\b LUA_VNUMFLT}); \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b chgfltvalue}(obj,  x)\~   \{ {\b TValue} *io=(obj); {\b lua_assert}({\b ttisfloat}(io)); {\b val_}(io).n=(x); \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b setivalue}(obj,  x)\~   \{ {\b TValue} *io=(obj); {\b val_}(io).i=(x); {\b settt_}(io, {\b LUA_VNUMINT}); \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b chgivalue}(obj,  x)\~   \{ {\b TValue} *io=(obj); {\b lua_assert}({\b ttisinteger}(io)); {\b val_}(io).i=(x); \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_VSHRSTR}\~ {\b makevariant}({\b LUA_TSTRING}, 0)  /* short strings */\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_VLNGSTR}\~ {\b makevariant}({\b LUA_TSTRING}, 1)  /* long strings */\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ttisstring}(o)\~ {\b checktype}((o), {\b LUA_TSTRING})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ttisshrstring}(o)\~ {\b checktag}((o), {\b ctb}({\b LUA_VSHRSTR}))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ttislngstring}(o)\~ {\b checktag}((o), {\b ctb}({\b LUA_VLNGSTR}))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b tsvalueraw}(v)\~ ({\b gco2ts}((v).gc))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b tsvalue}(o)\~ {\b check_exp}({\b ttisstring}(o), {\b gco2ts}({\b val_}(o).gc))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b setsvalue}(L,  obj,  x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b setsvalue2s}(L,  o,  s)\~ {\b setsvalue}(L,{\b s2v}(o),s)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b setsvalue2n}\~ {\b setsvalue}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b getstr}(ts)\~ ((ts)->contents)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b svalue}(o)\~ {\b getstr}({\b tsvalue}(o))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b tsslen}(s)\~ ((s)->tt == {\b LUA_VSHRSTR} ? (s)->shrlen : (s)->u.lnglen)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b vslen}(o)\~ {\b tsslen}({\b tsvalue}(o))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_VLIGHTUSERDATA}\~ {\b makevariant}({\b LUA_TLIGHTUSERDATA}, 0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_VUSERDATA}\~ {\b makevariant}({\b LUA_TUSERDATA}, 0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ttislightuserdata}(o)\~ {\b checktag}((o), {\b LUA_VLIGHTUSERDATA})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ttisfulluserdata}(o)\~ {\b checktag}((o), {\b ctb}({\b LUA_VUSERDATA}))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b pvalue}(o)\~ {\b check_exp}({\b ttislightuserdata}(o), {\b val_}(o).p)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b uvalue}(o)\~ {\b check_exp}({\b ttisfulluserdata}(o), {\b gco2u}({\b val_}(o).gc))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b pvalueraw}(v)\~ ((v).p)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b setpvalue}(obj,  x)\~   \{ {\b TValue} *io=(obj); {\b val_}(io).p=(x); {\b settt_}(io, {\b LUA_VLIGHTUSERDATA}); \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b setuvalue}(L,  obj,  x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b udatamemoffset}(nuv)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b getudatamem}(u)\~ ({\b cast_charp}(u) + {\b udatamemoffset}((u)->nuvalue))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b sizeudata}(nuv,  nb)\~ ({\b udatamemoffset}(nuv) + (nb))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_VPROTO}\~ {\b makevariant}({\b LUA_TPROTO}, 0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_VUPVAL}\~ {\b makevariant}({\b LUA_TUPVAL}, 0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_VLCL}\~ {\b makevariant}({\b LUA_TFUNCTION}, 0)  /* Lua closure */\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_VLCF}\~ {\b makevariant}({\b LUA_TFUNCTION}, 1)  /* light C function */\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_VCCL}\~ {\b makevariant}({\b LUA_TFUNCTION}, 2)  /* C closure */\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ttisfunction}(o)\~ {\b checktype}(o, {\b LUA_TFUNCTION})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ttisclosure}(o)\~ (({\b rawtt}(o) & 0x1F) == {\b LUA_VLCL})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ttisLclosure}(o)\~ {\b checktag}((o), {\b ctb}({\b LUA_VLCL}))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ttislcf}(o)\~ {\b checktag}((o), {\b LUA_VLCF})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ttisCclosure}(o)\~ {\b checktag}((o), {\b ctb}({\b LUA_VCCL}))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b isLfunction}(o)\~ {\b ttisLclosure}(o)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b clvalue}(o)\~ {\b check_exp}({\b ttisclosure}(o), {\b gco2cl}({\b val_}(o).gc))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b clLvalue}(o)\~ {\b check_exp}({\b ttisLclosure}(o), {\b gco2lcl}({\b val_}(o).gc))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b fvalue}(o)\~ {\b check_exp}({\b ttislcf}(o), {\b val_}(o).f)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b clCvalue}(o)\~ {\b check_exp}({\b ttisCclosure}(o), {\b gco2ccl}({\b val_}(o).gc))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b fvalueraw}(v)\~ ((v).f)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b setclLvalue}(L,  obj,  x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b setclLvalue2s}(L,  o,  cl)\~ {\b setclLvalue}(L,{\b s2v}(o),cl)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b setfvalue}(obj,  x)\~   \{ {\b TValue} *io=(obj); {\b val_}(io).f=(x); {\b settt_}(io, {\b LUA_VLCF}); \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b setclCvalue}(L,  obj,  x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ClosureHeader}\~ 	{\b CommonHeader}; {\b lu_byte} nupvalues; {\b GCObject} *gclist\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b getproto}(o)\~ ({\b clLvalue}(o)->p)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_VTABLE}\~ {\b makevariant}({\b LUA_TTABLE}, 0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ttistable}(o)\~ {\b checktag}((o), {\b ctb}({\b LUA_VTABLE}))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b hvalue}(o)\~ {\b check_exp}({\b ttistable}(o), {\b gco2t}({\b val_}(o).gc))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b sethvalue}(L,  obj,  x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b sethvalue2s}(L,  o,  h)\~ {\b sethvalue}(L,{\b s2v}(o),h)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b setnodekey}(L,  node,  obj)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b getnodekey}(L,  obj,  node)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BITRAS}\~ (1 << 7)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b isrealasize}(t)\~ (!((t)->marked & {\b BITRAS}))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b setrealasize}(t)\~ ((t)->marked &= {\b cast_byte}(~{\b BITRAS}))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b setnorealasize}(t)\~ ((t)->marked |= {\b BITRAS})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b keytt}(node)\~ ((node)->u.key_tt)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b keyval}(node)\~ ((node)->u.key_val)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b keyisnil}(node)\~ ({\b keytt}(node) == {\b LUA_TNIL})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b keyisinteger}(node)\~ ({\b keytt}(node) == {\b LUA_VNUMINT})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b keyival}(node)\~ ({\b keyval}(node).i)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b keyisshrstr}(node)\~ ({\b keytt}(node) == {\b ctb}({\b LUA_VSHRSTR}))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b keystrval}(node)\~ ({\b gco2ts}({\b keyval}(node).gc))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b setnilkey}(node)\~ ({\b keytt}(node) = {\b LUA_TNIL})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b keyiscollectable}(n)\~ ({\b keytt}(n) & {\b BIT_ISCOLLECTABLE})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b gckey}(n)\~ ({\b keyval}(n).gc)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b gckeyN}(n)\~ ({\b keyiscollectable}(n) ? {\b gckey}(n) : NULL)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b setdeadkey}(n)\~ ({\b keytt}(n) = {\b LUA_TTABLE}, {\b gckey}(n) = NULL)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lmod}(s,  size)\~ 	({\b check_exp}((size&(size-1))==0, ({\b cast_int}((s) & ((size)-1)))))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b twoto}(x)\~ (1<<(x))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b sizenode}(t)\~ ({\b twoto}((t)->lsizenode))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b UTF8BUFFSZ}\~ 8\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'D0\'CD\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef union {\b Value} {\b Value}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b TValue} {\b TValue}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef union {\b StackValue} {\b StackValue}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef {\b StackValue} * {\b StkId}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b GCObject} {\b GCObject}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b TString} {\b TString}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef union {\b UValue} {\b UValue}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b Udata} {\b Udata}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b Udata0} {\b Udata0}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b Upvaldesc} {\b Upvaldesc}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b LocVar} {\b LocVar}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b AbsLineInfo} {\b AbsLineInfo}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b Proto} {\b Proto}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b UpVal} {\b UpVal}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b CClosure} {\b CClosure}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b LClosure} {\b LClosure}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef union {\b Closure} {\b Closure}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef union {\b Node} {\b Node}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b Table} {\b Table}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} int {\b luaO_utf8esc} (char *buff, unsigned long x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} int {\b luaO_ceillog2} (unsigned int x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} int {\b luaO_rawarith} ({\b lua_State} *L, int op, const {\b TValue} *p1, const {\b TValue} *p2, {\b TValue} *res)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaO_arith} ({\b lua_State} *L, int op, const {\b TValue} *p1, const {\b TValue} *p2, {\b StkId} res)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} size_t {\b luaO_str2num} (const char *s, {\b TValue} *o)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} int {\b luaO_hexavalue} (int c)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaO_tostring} ({\b lua_State} *L, {\b TValue} *obj)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} const char * {\b luaO_pushvfstring} ({\b lua_State} *L, const char *fmt, va_list argp)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} const char * {\b luaO_pushfstring} ({\b lua_State} *L, const char *fmt,...)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaO_chunkid} (char *out, const char *source, size_t srclen)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v ABSTKEYCONSTANT\:lobject.h}
{\xe \v lobject.h\:ABSTKEYCONSTANT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ABSTKEYCONSTANT\~ \{NULL\}, {\b LUA_VABSTKEY}}}
\par
{\bkmkstart AAAAAAABYM}
{\bkmkend AAAAAAABYM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 196 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v BIT_ISCOLLECTABLE\:lobject.h}
{\xe \v lobject.h\:BIT_ISCOLLECTABLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BIT_ISCOLLECTABLE\~ (1 << 6)}}
\par
{\bkmkstart AAAAAAABYN}
{\bkmkend AAAAAAABYN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 273 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v BITRAS\:lobject.h}
{\xe \v lobject.h\:BITRAS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BITRAS\~ (1 << 7)}}
\par
{\bkmkstart AAAAAAABYO}
{\bkmkend AAAAAAABYO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 705 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v checkliveness\:lobject.h}
{\xe \v lobject.h\:checkliveness}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define checkliveness( L,  obj)}}
\par
{\bkmkstart AAAAAAABYP}
{\bkmkend AAAAAAABYP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     ((void)L, lua_longassert(!iscollectable(obj) || \\\par
        (righttt(obj) && (L == NULL || !isdead(G(L),gcvalue(obj))))))\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 101 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v checktag\:lobject.h}
{\xe \v lobject.h\:checktag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define checktag( o,  t)\~ ({\b rawtt}(o) == (t))}}
\par
{\bkmkstart AAAAAAABYQ}
{\bkmkend AAAAAAABYQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 87 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v checktype\:lobject.h}
{\xe \v lobject.h\:checktype}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define checktype( o,  t)\~ ({\b ttype}(o) == (t))}}
\par
{\bkmkstart AAAAAAABYR}
{\bkmkend AAAAAAABYR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 88 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v chgfltvalue\:lobject.h}
{\xe \v lobject.h\:chgfltvalue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define chgfltvalue( obj,  x)\~   \{ {\b TValue} *io=(obj); {\b lua_assert}({\b ttisfloat}(io)); {\b val_}(io).n=(x); \}}}
\par
{\bkmkstart AAAAAAABYS}
{\bkmkend AAAAAAABYS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 316 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v chgivalue\:lobject.h}
{\xe \v lobject.h\:chgivalue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define chgivalue( obj,  x)\~   \{ {\b TValue} *io=(obj); {\b lua_assert}({\b ttisinteger}(io)); {\b val_}(io).i=(x); \}}}
\par
{\bkmkstart AAAAAAABYT}
{\bkmkend AAAAAAABYT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 322 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v clCvalue\:lobject.h}
{\xe \v lobject.h\:clCvalue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define clCvalue( o)\~ {\b check_exp}({\b ttisCclosure}(o), {\b gco2ccl}({\b val_}(o).gc))}}
\par
{\bkmkstart AAAAAAABYU}
{\bkmkend AAAAAAABYU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 580 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v clLvalue\:lobject.h}
{\xe \v lobject.h\:clLvalue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define clLvalue( o)\~ {\b check_exp}({\b ttisLclosure}(o), {\b gco2lcl}({\b val_}(o).gc))}}
\par
{\bkmkstart AAAAAAABYV}
{\bkmkend AAAAAAABYV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 578 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v ClosureHeader\:lobject.h}
{\xe \v lobject.h\:ClosureHeader}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ClosureHeader\~ 	{\b CommonHeader}; {\b lu_byte} nupvalues; {\b GCObject} *gclist}}
\par
{\bkmkstart AAAAAAABYW}
{\bkmkend AAAAAAABYW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 618 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v clvalue\:lobject.h}
{\xe \v lobject.h\:clvalue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define clvalue( o)\~ {\b check_exp}({\b ttisclosure}(o), {\b gco2cl}({\b val_}(o).gc))}}
\par
{\bkmkstart AAAAAAABYX}
{\bkmkend AAAAAAABYX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 577 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v CommonHeader\:lobject.h}
{\xe \v lobject.h\:CommonHeader}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CommonHeader\~ struct {\b GCObject} *{\b next}; {\b lu_byte} tt; {\b lu_byte} marked}}
\par
{\bkmkstart AAAAAAABYY}
{\bkmkend AAAAAAABYY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 263 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v ctb\:lobject.h}
{\xe \v lobject.h\:ctb}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ctb( t)\~ ((t) | {\b BIT_ISCOLLECTABLE})}}
\par
{\bkmkstart AAAAAAABYZ}
{\bkmkend AAAAAAABYZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 278 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v fltvalue\:lobject.h}
{\xe \v lobject.h\:fltvalue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define fltvalue( o)\~ {\b check_exp}({\b ttisfloat}(o), {\b val_}(o).n)}}
\par
{\bkmkstart AAAAAAABZA}
{\bkmkend AAAAAAABZA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 307 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v fltvalueraw\:lobject.h}
{\xe \v lobject.h\:fltvalueraw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define fltvalueraw( v)\~ ((v).n)}}
\par
{\bkmkstart AAAAAAABZB}
{\bkmkend AAAAAAABZB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 310 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v fvalue\:lobject.h}
{\xe \v lobject.h\:fvalue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define fvalue( o)\~ {\b check_exp}({\b ttislcf}(o), {\b val_}(o).f)}}
\par
{\bkmkstart AAAAAAABZC}
{\bkmkend AAAAAAABZC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 579 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v fvalueraw\:lobject.h}
{\xe \v lobject.h\:fvalueraw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define fvalueraw( v)\~ ((v).f)}}
\par
{\bkmkstart AAAAAAABZD}
{\bkmkend AAAAAAABZD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 582 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v gckey\:lobject.h}
{\xe \v lobject.h\:gckey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define gckey( n)\~ ({\b keyval}(n).gc)}}
\par
{\bkmkstart AAAAAAABZE}
{\bkmkend AAAAAAABZE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 740 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v gckeyN\:lobject.h}
{\xe \v lobject.h\:gckeyN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define gckeyN( n)\~ ({\b keyiscollectable}(n) ? {\b gckey}(n) : NULL)}}
\par
{\bkmkstart AAAAAAABZF}
{\bkmkend AAAAAAABZF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 741 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v gcvalue\:lobject.h}
{\xe \v lobject.h\:gcvalue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define gcvalue( o)\~ {\b check_exp}({\b iscollectable}(o), {\b val_}(o).gc)}}
\par
{\bkmkstart AAAAAAABZG}
{\bkmkend AAAAAAABZG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 280 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v gcvalueraw\:lobject.h}
{\xe \v lobject.h\:gcvalueraw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define gcvalueraw( v)\~ ((v).gc)}}
\par
{\bkmkstart AAAAAAABZH}
{\bkmkend AAAAAAABZH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 282 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v getnodekey\:lobject.h}
{\xe \v lobject.h\:getnodekey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define getnodekey( L,  obj,  node)}}
\par
{\bkmkstart AAAAAAABZI}
{\bkmkend AAAAAAABZI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     \{ TValue *io_=(obj); {\cf17 const} Node *n_=(node); \\\par
      io_->value_ = n_->u.key_val; io_->tt_ = n_->u.key_tt; \\\par
      checkliveness(L,io_); \}\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 692 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v getproto\:lobject.h}
{\xe \v lobject.h\:getproto}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define getproto( o)\~ ({\b clLvalue}(o)->p)}}
\par
{\bkmkstart AAAAAAABZJ}
{\bkmkend AAAAAAABZJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 641 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v getstr\:lobject.h}
{\xe \v lobject.h\:getstr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define getstr( ts)\~ ((ts)->contents)}}
\par
{\bkmkstart AAAAAAABZK}
{\bkmkend AAAAAAABZK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 378 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v getudatamem\:lobject.h}
{\xe \v lobject.h\:getudatamem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define getudatamem( u)\~ ({\b cast_charp}(u) + {\b udatamemoffset}((u)->nuvalue))}}
\par
{\bkmkstart AAAAAAABZL}
{\bkmkend AAAAAAABZL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 470 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v hvalue\:lobject.h}
{\xe \v lobject.h\:hvalue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define hvalue( o)\~ {\b check_exp}({\b ttistable}(o), {\b gco2t}({\b val_}(o).gc))}}
\par
{\bkmkstart AAAAAAABZM}
{\bkmkend AAAAAAABZM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 656 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v isabstkey\:lobject.h}
{\xe \v lobject.h\:isabstkey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define isabstkey( v)\~ {\b checktag}((v), {\b LUA_VABSTKEY})}}
\par
{\bkmkstart AAAAAAABZN}
{\bkmkend AAAAAAABZN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 178 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v iscollectable\:lobject.h}
{\xe \v lobject.h\:iscollectable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define iscollectable( o)\~ ({\b rawtt}(o) & {\b BIT_ISCOLLECTABLE})}}
\par
{\bkmkstart AAAAAAABZO}
{\bkmkend AAAAAAABZO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 275 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v isempty\:lobject.h}
{\xe \v lobject.h\:isempty}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define isempty( v)\~ {\b ttisnil}(v)}}
\par
{\bkmkstart AAAAAAABZP}
{\bkmkend AAAAAAABZP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 192 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v isLfunction\:lobject.h}
{\xe \v lobject.h\:isLfunction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define isLfunction( o)\~ {\b ttisLclosure}(o)}}
\par
{\bkmkstart AAAAAAABZQ}
{\bkmkend AAAAAAABZQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 575 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v isnonstrictnil\:lobject.h}
{\xe \v lobject.h\:isnonstrictnil}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define isnonstrictnil( v)\~ ({\b ttisnil}(v) && !{\b ttisstrictnil}(v))}}
\par
{\bkmkstart AAAAAAABZR}
{\bkmkend AAAAAAABZR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 184 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v isrealasize\:lobject.h}
{\xe \v lobject.h\:isrealasize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define isrealasize( t)\~ (!((t)->marked & {\b BITRAS}))}}
\par
{\bkmkstart AAAAAAABZS}
{\bkmkend AAAAAAABZS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 706 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v ivalue\:lobject.h}
{\xe \v lobject.h\:ivalue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ivalue( o)\~ {\b check_exp}({\b ttisinteger}(o), {\b val_}(o).i)}}
\par
{\bkmkstart AAAAAAABZT}
{\bkmkend AAAAAAABZT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 308 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v ivalueraw\:lobject.h}
{\xe \v lobject.h\:ivalueraw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ivalueraw( v)\~ ((v).i)}}
\par
{\bkmkstart AAAAAAABZU}
{\bkmkend AAAAAAABZU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 311 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v keyiscollectable\:lobject.h}
{\xe \v lobject.h\:keyiscollectable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define keyiscollectable( n)\~ ({\b keytt}(n) & {\b BIT_ISCOLLECTABLE})}}
\par
{\bkmkstart AAAAAAABZV}
{\bkmkend AAAAAAABZV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 738 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v keyisinteger\:lobject.h}
{\xe \v lobject.h\:keyisinteger}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define keyisinteger( node)\~ ({\b keytt}(node) == {\b LUA_VNUMINT})}}
\par
{\bkmkstart AAAAAAABZW}
{\bkmkend AAAAAAABZW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 731 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v keyisnil\:lobject.h}
{\xe \v lobject.h\:keyisnil}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define keyisnil( node)\~ ({\b keytt}(node) == {\b LUA_TNIL})}}
\par
{\bkmkstart AAAAAAABZX}
{\bkmkend AAAAAAABZX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 730 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v keyisshrstr\:lobject.h}
{\xe \v lobject.h\:keyisshrstr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define keyisshrstr( node)\~ ({\b keytt}(node) == {\b ctb}({\b LUA_VSHRSTR}))}}
\par
{\bkmkstart AAAAAAABZY}
{\bkmkend AAAAAAABZY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 733 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v keyival\:lobject.h}
{\xe \v lobject.h\:keyival}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define keyival( node)\~ ({\b keyval}(node).i)}}
\par
{\bkmkstart AAAAAAABZZ}
{\bkmkend AAAAAAABZZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 732 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v keystrval\:lobject.h}
{\xe \v lobject.h\:keystrval}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define keystrval( node)\~ ({\b gco2ts}({\b keyval}(node).gc))}}
\par
{\bkmkstart AAAAAAACAA}
{\bkmkend AAAAAAACAA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 734 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v keytt\:lobject.h}
{\xe \v lobject.h\:keytt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define keytt( node)\~ ((node)->u.key_tt)}}
\par
{\bkmkstart AAAAAAACAB}
{\bkmkend AAAAAAACAB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 727 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v keyval\:lobject.h}
{\xe \v lobject.h\:keyval}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define keyval( node)\~ ((node)->u.key_val)}}
\par
{\bkmkstart AAAAAAACAC}
{\bkmkend AAAAAAACAC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 728 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v l_isfalse\:lobject.h}
{\xe \v lobject.h\:l_isfalse}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define l_isfalse( o)\~ ({\b ttisfalse}(o) || {\b ttisnil}(o))}}
\par
{\bkmkstart AAAAAAACAD}
{\bkmkend AAAAAAACAD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 222 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lmod\:lobject.h}
{\xe \v lobject.h\:lmod}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lmod( s,  size)\~ 	({\b check_exp}((size&(size-1))==0, ({\b cast_int}((s) & ((size)-1)))))}}
\par
{\bkmkstart AAAAAAACAE}
{\bkmkend AAAAAAACAE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 760 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_TOTALTYPES\:lobject.h}
{\xe \v lobject.h\:LUA_TOTALTYPES}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_TOTALTYPES\~ ({\b LUA_TPROTO} + 2)}}
\par
{\bkmkstart AAAAAAACAF}
{\bkmkend AAAAAAACAF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 29 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_TPROTO\:lobject.h}
{\xe \v lobject.h\:LUA_TPROTO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_TPROTO\~ ({\b LUA_NUMTYPES}+1)  /* function prototypes */}}
\par
{\bkmkstart AAAAAAACAG}
{\bkmkend AAAAAAACAG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 23 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_TUPVAL\:lobject.h}
{\xe \v lobject.h\:LUA_TUPVAL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_TUPVAL\~ {\b LUA_NUMTYPES}  /* upvalues */}}
\par
{\bkmkstart AAAAAAACAH}
{\bkmkend AAAAAAACAH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 22 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_VABSTKEY\:lobject.h}
{\xe \v lobject.h\:LUA_VABSTKEY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_VABSTKEY\~ {\b makevariant}({\b LUA_TNIL}, 2)}}
\par
{\bkmkstart AAAAAAACAI}
{\bkmkend AAAAAAACAI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 164 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_VCCL\:lobject.h}
{\xe \v lobject.h\:LUA_VCCL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_VCCL\~ {\b makevariant}({\b LUA_TFUNCTION}, 2)  /* C closure */}}
\par
{\bkmkstart AAAAAAACAJ}
{\bkmkend AAAAAAACAJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 567 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_VEMPTY\:lobject.h}
{\xe \v lobject.h\:LUA_VEMPTY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_VEMPTY\~ {\b makevariant}({\b LUA_TNIL}, 1)}}
\par
{\bkmkstart AAAAAAACAK}
{\bkmkend AAAAAAACAK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 161 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_VFALSE\:lobject.h}
{\xe \v lobject.h\:LUA_VFALSE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_VFALSE\~ {\b makevariant}({\b LUA_TBOOLEAN}, 0)}}
\par
{\bkmkstart AAAAAAACAL}
{\bkmkend AAAAAAACAL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 214 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_VLCF\:lobject.h}
{\xe \v lobject.h\:LUA_VLCF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_VLCF\~ {\b makevariant}({\b LUA_TFUNCTION}, 1)  /* light C function */}}
\par
{\bkmkstart AAAAAAACAM}
{\bkmkend AAAAAAACAM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 566 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_VLCL\:lobject.h}
{\xe \v lobject.h\:LUA_VLCL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_VLCL\~ {\b makevariant}({\b LUA_TFUNCTION}, 0)  /* Lua closure */}}
\par
{\bkmkstart AAAAAAACAN}
{\bkmkend AAAAAAACAN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 565 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_VLIGHTUSERDATA\:lobject.h}
{\xe \v lobject.h\:LUA_VLIGHTUSERDATA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_VLIGHTUSERDATA\~ {\b makevariant}({\b LUA_TLIGHTUSERDATA}, 0)}}
\par
{\bkmkstart AAAAAAACAO}
{\bkmkend AAAAAAACAO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 404 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_VLNGSTR\:lobject.h}
{\xe \v lobject.h\:LUA_VLNGSTR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_VLNGSTR\~ {\b makevariant}({\b LUA_TSTRING}, 1)  /* long strings */}}
\par
{\bkmkstart AAAAAAACAP}
{\bkmkend AAAAAAACAP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 336 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_VNIL\:lobject.h}
{\xe \v lobject.h\:LUA_VNIL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_VNIL\~ {\b makevariant}({\b LUA_TNIL}, 0)}}
\par
{\bkmkstart AAAAAAACAQ}
{\bkmkend AAAAAAACAQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 158 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_VNUMFLT\:lobject.h}
{\xe \v lobject.h\:LUA_VNUMFLT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_VNUMFLT\~ {\b makevariant}({\b LUA_TNUMBER}, 1)  /* float numbers */}}
\par
{\bkmkstart AAAAAAACAR}
{\bkmkend AAAAAAACAR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 299 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_VNUMINT\:lobject.h}
{\xe \v lobject.h\:LUA_VNUMINT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_VNUMINT\~ {\b makevariant}({\b LUA_TNUMBER}, 0)  /* integer numbers */}}
\par
{\bkmkstart AAAAAAACAS}
{\bkmkend AAAAAAACAS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 298 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_VPROTO\:lobject.h}
{\xe \v lobject.h\:LUA_VPROTO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_VPROTO\~ {\b makevariant}({\b LUA_TPROTO}, 0)}}
\par
{\bkmkstart AAAAAAACAT}
{\bkmkend AAAAAAACAT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 484 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_VSHRSTR\:lobject.h}
{\xe \v lobject.h\:LUA_VSHRSTR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_VSHRSTR\~ {\b makevariant}({\b LUA_TSTRING}, 0)  /* short strings */}}
\par
{\bkmkstart AAAAAAACAU}
{\bkmkend AAAAAAACAU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 335 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_VTABLE\:lobject.h}
{\xe \v lobject.h\:LUA_VTABLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_VTABLE\~ {\b makevariant}({\b LUA_TTABLE}, 0)}}
\par
{\bkmkstart AAAAAAACAV}
{\bkmkend AAAAAAACAV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 652 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_VTHREAD\:lobject.h}
{\xe \v lobject.h\:LUA_VTHREAD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_VTHREAD\~ {\b makevariant}({\b LUA_TTHREAD}, 0)}}
\par
{\bkmkstart AAAAAAACAW}
{\bkmkend AAAAAAACAW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 237 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_VTRUE\:lobject.h}
{\xe \v lobject.h\:LUA_VTRUE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_VTRUE\~ {\b makevariant}({\b LUA_TBOOLEAN}, 1)}}
\par
{\bkmkstart AAAAAAACAX}
{\bkmkend AAAAAAACAX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 215 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_VUPVAL\:lobject.h}
{\xe \v lobject.h\:LUA_VUPVAL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_VUPVAL\~ {\b makevariant}({\b LUA_TUPVAL}, 0)}}
\par
{\bkmkstart AAAAAAACAY}
{\bkmkend AAAAAAACAY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 561 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_VUSERDATA\:lobject.h}
{\xe \v lobject.h\:LUA_VUSERDATA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_VUSERDATA\~ {\b makevariant}({\b LUA_TUSERDATA}, 0)}}
\par
{\bkmkstart AAAAAAACAZ}
{\bkmkend AAAAAAACAZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 406 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v makevariant\:lobject.h}
{\xe \v lobject.h\:makevariant}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define makevariant( t,  v)\~ ((t) | ((v) << 4))}}
\par
{\bkmkstart AAAAAAACBA}
{\bkmkend AAAAAAACBA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 40 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v novariant\:lobject.h}
{\xe \v lobject.h\:novariant}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define novariant( t)\~ ((t) & 0x0F)}}
\par
{\bkmkstart AAAAAAACBB}
{\bkmkend AAAAAAACBB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 76 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v nvalue\:lobject.h}
{\xe \v lobject.h\:nvalue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define nvalue( o)}}
\par
{\bkmkstart AAAAAAACBC}
{\bkmkend AAAAAAACBC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     check_exp(ttisnumber(o), \\\par
    (ttisinteger(o) ? cast_num(ivalue(o)) : fltvalue(o)))\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 305 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v pvalue\:lobject.h}
{\xe \v lobject.h\:pvalue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define pvalue( o)\~ {\b check_exp}({\b ttislightuserdata}(o), {\b val_}(o).p)}}
\par
{\bkmkstart AAAAAAACBD}
{\bkmkend AAAAAAACBD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 411 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v pvalueraw\:lobject.h}
{\xe \v lobject.h\:pvalueraw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define pvalueraw( v)\~ ((v).p)}}
\par
{\bkmkstart AAAAAAACBE}
{\bkmkend AAAAAAACBE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 414 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v rawtt\:lobject.h}
{\xe \v lobject.h\:rawtt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define rawtt( o)\~ ((o)->tt_)}}
\par
{\bkmkstart AAAAAAACBF}
{\bkmkend AAAAAAACBF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 73 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v righttt\:lobject.h}
{\xe \v lobject.h\:righttt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define righttt( obj)\~ ({\b ttypetag}(obj) == {\b gcvalue}(obj)->tt)}}
\par
{\bkmkstart AAAAAAACBG}
{\bkmkend AAAAAAACBG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 94 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v s2v\:lobject.h}
{\xe \v lobject.h\:s2v}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define s2v( o)\~ (&(o)->val)}}
\par
{\bkmkstart AAAAAAACBH}
{\bkmkend AAAAAAACBH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 147 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v setbfvalue\:lobject.h}
{\xe \v lobject.h\:setbfvalue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define setbfvalue( obj)\~ {\b settt_}(obj, {\b LUA_VFALSE})}}
\par
{\bkmkstart AAAAAAACBI}
{\bkmkend AAAAAAACBI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 225 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v setbtvalue\:lobject.h}
{\xe \v lobject.h\:setbtvalue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define setbtvalue( obj)\~ {\b settt_}(obj, {\b LUA_VTRUE})}}
\par
{\bkmkstart AAAAAAACBJ}
{\bkmkend AAAAAAACBJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 226 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v setclCvalue\:lobject.h}
{\xe \v lobject.h\:setclCvalue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define setclCvalue( L,  obj,  x)}}
\par
{\bkmkstart AAAAAAACBK}
{\bkmkend AAAAAAACBK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   \{ TValue *io = (obj); CClosure *x_ = (x); \\\par
    val_(io).gc = obj2gco(x_); settt_(io, ctb(LUA_VCCL)); \\\par
    checkliveness(L,io); \}\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 594 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v setclLvalue\:lobject.h}
{\xe \v lobject.h\:setclLvalue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define setclLvalue( L,  obj,  x)}}
\par
{\bkmkstart AAAAAAACBL}
{\bkmkend AAAAAAACBL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   \{ TValue *io = (obj); LClosure *x_ = (x); \\\par
    val_(io).gc = obj2gco(x_); settt_(io, ctb(LUA_VLCL)); \\\par
    checkliveness(L,io); \}\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 584 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v setclLvalue2s\:lobject.h}
{\xe \v lobject.h\:setclLvalue2s}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define setclLvalue2s( L,  o,  cl)\~ {\b setclLvalue}(L,{\b s2v}(o),cl)}}
\par
{\bkmkstart AAAAAAACBM}
{\bkmkend AAAAAAACBM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 589 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v setdeadkey\:lobject.h}
{\xe \v lobject.h\:setdeadkey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define setdeadkey( n)\~ ({\b keytt}(n) = {\b LUA_TTABLE}, {\b gckey}(n) = NULL)}}
\par
{\bkmkstart AAAAAAACBN}
{\bkmkend AAAAAAACBN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 751 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v setempty\:lobject.h}
{\xe \v lobject.h\:setempty}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define setempty( v)\~ {\b settt_}(v, {\b LUA_VEMPTY})}}
\par
{\bkmkstart AAAAAAACBO}
{\bkmkend AAAAAAACBO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 200 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v setfltvalue\:lobject.h}
{\xe \v lobject.h\:setfltvalue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define setfltvalue( obj,  x)\~   \{ {\b TValue} *io=(obj); {\b val_}(io).n=(x); {\b settt_}(io, {\b LUA_VNUMFLT}); \}}}
\par
{\bkmkstart AAAAAAACBP}
{\bkmkend AAAAAAACBP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 313 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v setfvalue\:lobject.h}
{\xe \v lobject.h\:setfvalue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define setfvalue( obj,  x)\~   \{ {\b TValue} *io=(obj); {\b val_}(io).f=(x); {\b settt_}(io, {\b LUA_VLCF}); \}}}
\par
{\bkmkstart AAAAAAACBQ}
{\bkmkend AAAAAAACBQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 591 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v setgcovalue\:lobject.h}
{\xe \v lobject.h\:setgcovalue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define setgcovalue( L,  obj,  x)}}
\par
{\bkmkstart AAAAAAACBR}
{\bkmkend AAAAAAACBR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   \{ TValue *io = (obj); GCObject *i_g=(x); \\\par
    val_(io).gc = i_g; settt_(io, ctb(i_g->tt)); \}\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 284 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v sethvalue\:lobject.h}
{\xe \v lobject.h\:sethvalue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define sethvalue( L,  obj,  x)}}
\par
{\bkmkstart AAAAAAACBS}
{\bkmkend AAAAAAACBS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   \{ TValue *io = (obj); Table *x_ = (x); \\\par
    val_(io).gc = obj2gco(x_); settt_(io, ctb(LUA_VTABLE)); \\\par
    checkliveness(L,io); \}\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 658 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v sethvalue2s\:lobject.h}
{\xe \v lobject.h\:sethvalue2s}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define sethvalue2s( L,  o,  h)\~ {\b sethvalue}(L,{\b s2v}(o),h)}}
\par
{\bkmkstart AAAAAAACBT}
{\bkmkend AAAAAAACBT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 663 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v setivalue\:lobject.h}
{\xe \v lobject.h\:setivalue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define setivalue( obj,  x)\~   \{ {\b TValue} *io=(obj); {\b val_}(io).i=(x); {\b settt_}(io, {\b LUA_VNUMINT}); \}}}
\par
{\bkmkstart AAAAAAACBU}
{\bkmkend AAAAAAACBU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 319 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v setnilkey\:lobject.h}
{\xe \v lobject.h\:setnilkey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define setnilkey( node)\~ ({\b keytt}(node) = {\b LUA_TNIL})}}
\par
{\bkmkstart AAAAAAACBV}
{\bkmkend AAAAAAACBV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 736 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v setnilvalue\:lobject.h}
{\xe \v lobject.h\:setnilvalue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define setnilvalue( obj)\~ {\b settt_}(obj, {\b LUA_VNIL})}}
\par
{\bkmkstart AAAAAAACBW}
{\bkmkend AAAAAAACBW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 175 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v setnodekey\:lobject.h}
{\xe \v lobject.h\:setnodekey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define setnodekey( L,  node,  obj)}}
\par
{\bkmkstart AAAAAAACBX}
{\bkmkend AAAAAAACBX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     \{ Node *n_=(node); {\cf17 const} TValue *io_=(obj); \\\par
      n_->u.key_val = io_->value_; n_->u.key_tt = io_->tt_; \\\par
      checkliveness(L,io_); \}\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 685 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v setnorealasize\:lobject.h}
{\xe \v lobject.h\:setnorealasize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define setnorealasize( t)\~ ((t)->marked |= {\b BITRAS})}}
\par
{\bkmkstart AAAAAAACBY}
{\bkmkend AAAAAAACBY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 708 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v setobj\:lobject.h}
{\xe \v lobject.h\:setobj}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define setobj( L,  obj1,  obj2)}}
\par
{\bkmkstart AAAAAAACBZ}
{\bkmkend AAAAAAACBZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     \{ TValue *io1=(obj1); {\cf17 const} TValue *io2=(obj2); \\\par
          io1->value_ = io2->value_; settt_(io1, io2->tt_); \\\par
      checkliveness(L,io1); lua_assert(!isnonstrictnil(io1)); \}\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 113 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v setobj2n\:lobject.h}
{\xe \v lobject.h\:setobj2n}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define setobj2n\~ {\b setobj}}}
\par
{\bkmkstart AAAAAAACCA}
{\bkmkend AAAAAAACCA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 130 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v setobj2s\:lobject.h}
{\xe \v lobject.h\:setobj2s}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define setobj2s( L,  o1,  o2)\~ {\b setobj}(L,{\b s2v}(o1),o2)}}
\par
{\bkmkstart AAAAAAACCB}
{\bkmkend AAAAAAACCB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 126 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v setobj2t\:lobject.h}
{\xe \v lobject.h\:setobj2t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define setobj2t\~ {\b setobj}}}
\par
{\bkmkstart AAAAAAACCC}
{\bkmkend AAAAAAACCC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 132 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v setobjs2s\:lobject.h}
{\xe \v lobject.h\:setobjs2s}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define setobjs2s( L,  o1,  o2)\~ {\b setobj}(L,{\b s2v}(o1),{\b s2v}(o2))}}
\par
{\bkmkstart AAAAAAACCD}
{\bkmkend AAAAAAACCD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 124 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v setobjt2t\:lobject.h}
{\xe \v lobject.h\:setobjt2t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define setobjt2t\~ {\b setobj}}}
\par
{\bkmkstart AAAAAAACCE}
{\bkmkend AAAAAAACCE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 128 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v setpvalue\:lobject.h}
{\xe \v lobject.h\:setpvalue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define setpvalue( obj,  x)\~   \{ {\b TValue} *io=(obj); {\b val_}(io).p=(x); {\b settt_}(io, {\b LUA_VLIGHTUSERDATA}); \}}}
\par
{\bkmkstart AAAAAAACCF}
{\bkmkend AAAAAAACCF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 416 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v setrealasize\:lobject.h}
{\xe \v lobject.h\:setrealasize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define setrealasize( t)\~ ((t)->marked &= {\b cast_byte}(~{\b BITRAS}))}}
\par
{\bkmkstart AAAAAAACCG}
{\bkmkend AAAAAAACCG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 707 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v setsvalue\:lobject.h}
{\xe \v lobject.h\:setsvalue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define setsvalue( L,  obj,  x)}}
\par
{\bkmkstart AAAAAAACCH}
{\bkmkend AAAAAAACCH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   \{ TValue *io = (obj); TString *x_ = (x); \\\par
    val_(io).gc = obj2gco(x_); settt_(io, ctb(x_->tt)); \\\par
    checkliveness(L,io); \}\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 346 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v setsvalue2n\:lobject.h}
{\xe \v lobject.h\:setsvalue2n}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define setsvalue2n\~ {\b setsvalue}}}
\par
{\bkmkstart AAAAAAACCI}
{\bkmkend AAAAAAACCI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 355 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v setsvalue2s\:lobject.h}
{\xe \v lobject.h\:setsvalue2s}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define setsvalue2s( L,  o,  s)\~ {\b setsvalue}(L,{\b s2v}(o),s)}}
\par
{\bkmkstart AAAAAAACCJ}
{\bkmkend AAAAAAACCJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 352 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v setthvalue\:lobject.h}
{\xe \v lobject.h\:setthvalue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define setthvalue( L,  obj,  x)}}
\par
{\bkmkstart AAAAAAACCK}
{\bkmkend AAAAAAACCK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   \{ TValue *io = (obj); lua_State *x_ = (x); \\\par
    val_(io).gc = obj2gco(x_); settt_(io, ctb(LUA_VTHREAD)); \\\par
    checkliveness(L,io); \}\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 243 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v setthvalue2s\:lobject.h}
{\xe \v lobject.h\:setthvalue2s}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define setthvalue2s( L,  o,  t)\~ {\b setthvalue}(L,{\b s2v}(o),t)}}
\par
{\bkmkstart AAAAAAACCL}
{\bkmkend AAAAAAACCL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 248 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v settt_\:lobject.h}
{\xe \v lobject.h\:settt_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define settt_( o,  t)\~ ((o)->tt_=(t))}}
\par
{\bkmkstart AAAAAAACCM}
{\bkmkend AAAAAAACCM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 109 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v setuvalue\:lobject.h}
{\xe \v lobject.h\:setuvalue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define setuvalue( L,  obj,  x)}}
\par
{\bkmkstart AAAAAAACCN}
{\bkmkend AAAAAAACCN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   \{ TValue *io = (obj); Udata *x_ = (x); \\\par
    val_(io).gc = obj2gco(x_); settt_(io, ctb(LUA_VUSERDATA)); \\\par
    checkliveness(L,io); \}\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 419 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v sizenode\:lobject.h}
{\xe \v lobject.h\:sizenode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define sizenode( t)\~ ({\b twoto}((t)->lsizenode))}}
\par
{\bkmkstart AAAAAAACCO}
{\bkmkend AAAAAAACCO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 765 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v sizeudata\:lobject.h}
{\xe \v lobject.h\:sizeudata}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define sizeudata( nuv,  nb)\~ ({\b udatamemoffset}(nuv) + (nb))}}
\par
{\bkmkstart AAAAAAACCP}
{\bkmkend AAAAAAACCP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 473 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v svalue\:lobject.h}
{\xe \v lobject.h\:svalue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define svalue( o)\~ {\b getstr}({\b tsvalue}(o))}}
\par
{\bkmkstart AAAAAAACCQ}
{\bkmkend AAAAAAACCQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 382 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v thvalue\:lobject.h}
{\xe \v lobject.h\:thvalue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define thvalue( o)\~ {\b check_exp}({\b ttisthread}(o), {\b gco2th}({\b val_}(o).gc))}}
\par
{\bkmkstart AAAAAAACCR}
{\bkmkend AAAAAAACCR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 241 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v tsslen\:lobject.h}
{\xe \v lobject.h\:tsslen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define tsslen( s)\~ ((s)->tt == {\b LUA_VSHRSTR} ? (s)->shrlen : (s)->u.lnglen)}}
\par
{\bkmkstart AAAAAAACCS}
{\bkmkend AAAAAAACCS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 385 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v tsvalue\:lobject.h}
{\xe \v lobject.h\:tsvalue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define tsvalue( o)\~ {\b check_exp}({\b ttisstring}(o), {\b gco2ts}({\b val_}(o).gc))}}
\par
{\bkmkstart AAAAAAACCT}
{\bkmkend AAAAAAACCT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 344 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v tsvalueraw\:lobject.h}
{\xe \v lobject.h\:tsvalueraw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define tsvalueraw( v)\~ ({\b gco2ts}((v).gc))}}
\par
{\bkmkstart AAAAAAACCU}
{\bkmkend AAAAAAACCU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 342 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v ttisboolean\:lobject.h}
{\xe \v lobject.h\:ttisboolean}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ttisboolean( o)\~ {\b checktype}((o), {\b LUA_TBOOLEAN})}}
\par
{\bkmkstart AAAAAAACCV}
{\bkmkend AAAAAAACCV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 217 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v ttisCclosure\:lobject.h}
{\xe \v lobject.h\:ttisCclosure}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ttisCclosure( o)\~ {\b checktag}((o), {\b ctb}({\b LUA_VCCL}))}}
\par
{\bkmkstart AAAAAAACCW}
{\bkmkend AAAAAAACCW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 573 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v ttisclosure\:lobject.h}
{\xe \v lobject.h\:ttisclosure}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ttisclosure( o)\~ (({\b rawtt}(o) & 0x1F) == {\b LUA_VLCL})}}
\par
{\bkmkstart AAAAAAACCX}
{\bkmkend AAAAAAACCX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 570 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v ttisfalse\:lobject.h}
{\xe \v lobject.h\:ttisfalse}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ttisfalse( o)\~ {\b checktag}((o), {\b LUA_VFALSE})}}
\par
{\bkmkstart AAAAAAACCY}
{\bkmkend AAAAAAACCY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 218 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v ttisfloat\:lobject.h}
{\xe \v lobject.h\:ttisfloat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ttisfloat( o)\~ {\b checktag}((o), {\b LUA_VNUMFLT})}}
\par
{\bkmkstart AAAAAAACCZ}
{\bkmkend AAAAAAACCZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 302 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v ttisfulluserdata\:lobject.h}
{\xe \v lobject.h\:ttisfulluserdata}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ttisfulluserdata( o)\~ {\b checktag}((o), {\b ctb}({\b LUA_VUSERDATA}))}}
\par
{\bkmkstart AAAAAAACDA}
{\bkmkend AAAAAAACDA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 409 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v ttisfunction\:lobject.h}
{\xe \v lobject.h\:ttisfunction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ttisfunction( o)\~ {\b checktype}(o, {\b LUA_TFUNCTION})}}
\par
{\bkmkstart AAAAAAACDB}
{\bkmkend AAAAAAACDB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 569 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v ttisinteger\:lobject.h}
{\xe \v lobject.h\:ttisinteger}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ttisinteger( o)\~ {\b checktag}((o), {\b LUA_VNUMINT})}}
\par
{\bkmkstart AAAAAAACDC}
{\bkmkend AAAAAAACDC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 303 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v ttislcf\:lobject.h}
{\xe \v lobject.h\:ttislcf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ttislcf( o)\~ {\b checktag}((o), {\b LUA_VLCF})}}
\par
{\bkmkstart AAAAAAACDD}
{\bkmkend AAAAAAACDD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 572 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v ttisLclosure\:lobject.h}
{\xe \v lobject.h\:ttisLclosure}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ttisLclosure( o)\~ {\b checktag}((o), {\b ctb}({\b LUA_VLCL}))}}
\par
{\bkmkstart AAAAAAACDE}
{\bkmkend AAAAAAACDE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 571 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v ttislightuserdata\:lobject.h}
{\xe \v lobject.h\:ttislightuserdata}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ttislightuserdata( o)\~ {\b checktag}((o), {\b LUA_VLIGHTUSERDATA})}}
\par
{\bkmkstart AAAAAAACDF}
{\bkmkend AAAAAAACDF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 408 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v ttislngstring\:lobject.h}
{\xe \v lobject.h\:ttislngstring}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ttislngstring( o)\~ {\b checktag}((o), {\b ctb}({\b LUA_VLNGSTR}))}}
\par
{\bkmkstart AAAAAAACDG}
{\bkmkend AAAAAAACDG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 340 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v ttisnil\:lobject.h}
{\xe \v lobject.h\:ttisnil}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ttisnil( v)\~ {\b checktype}((v), {\b LUA_TNIL})}}
\par
{\bkmkstart AAAAAAACDH}
{\bkmkend AAAAAAACDH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 168 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v ttisnumber\:lobject.h}
{\xe \v lobject.h\:ttisnumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ttisnumber( o)\~ {\b checktype}((o), {\b LUA_TNUMBER})}}
\par
{\bkmkstart AAAAAAACDI}
{\bkmkend AAAAAAACDI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 301 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v ttisshrstring\:lobject.h}
{\xe \v lobject.h\:ttisshrstring}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ttisshrstring( o)\~ {\b checktag}((o), {\b ctb}({\b LUA_VSHRSTR}))}}
\par
{\bkmkstart AAAAAAACDJ}
{\bkmkend AAAAAAACDJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 339 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v ttisstrictnil\:lobject.h}
{\xe \v lobject.h\:ttisstrictnil}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ttisstrictnil( o)\~ {\b checktag}((o), {\b LUA_VNIL})}}
\par
{\bkmkstart AAAAAAACDK}
{\bkmkend AAAAAAACDK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 172 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v ttisstring\:lobject.h}
{\xe \v lobject.h\:ttisstring}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ttisstring( o)\~ {\b checktype}((o), {\b LUA_TSTRING})}}
\par
{\bkmkstart AAAAAAACDL}
{\bkmkend AAAAAAACDL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 338 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v ttistable\:lobject.h}
{\xe \v lobject.h\:ttistable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ttistable( o)\~ {\b checktag}((o), {\b ctb}({\b LUA_VTABLE}))}}
\par
{\bkmkstart AAAAAAACDM}
{\bkmkend AAAAAAACDM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 654 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v ttisthread\:lobject.h}
{\xe \v lobject.h\:ttisthread}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ttisthread( o)\~ {\b checktag}((o), {\b ctb}({\b LUA_VTHREAD}))}}
\par
{\bkmkstart AAAAAAACDN}
{\bkmkend AAAAAAACDN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 239 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v ttistrue\:lobject.h}
{\xe \v lobject.h\:ttistrue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ttistrue( o)\~ {\b checktag}((o), {\b LUA_VTRUE})}}
\par
{\bkmkstart AAAAAAACDO}
{\bkmkend AAAAAAACDO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 219 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v ttype\:lobject.h}
{\xe \v lobject.h\:ttype}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ttype( o)\~ ({\b novariant}({\b rawtt}(o)))}}
\par
{\bkmkstart AAAAAAACDP}
{\bkmkend AAAAAAACDP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 83 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v ttypetag\:lobject.h}
{\xe \v lobject.h\:ttypetag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ttypetag( o)\~ {\b withvariant}({\b rawtt}(o))}}
\par
{\bkmkstart AAAAAAACDQ}
{\bkmkend AAAAAAACDQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 80 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v TValuefields\:lobject.h}
{\xe \v lobject.h\:TValuefields}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TValuefields\~ {\b Value} value_; {\b lu_byte} tt_}}
\par
{\bkmkstart AAAAAAACDR}
{\bkmkend AAAAAAACDR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 61 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v twoto\:lobject.h}
{\xe \v lobject.h\:twoto}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define twoto( x)\~ (1<<(x))}}
\par
{\bkmkstart AAAAAAACDS}
{\bkmkend AAAAAAACDS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 764 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v udatamemoffset\:lobject.h}
{\xe \v lobject.h\:udatamemoffset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define udatamemoffset( nuv)}}
\par
{\bkmkstart AAAAAAACDT}
{\bkmkend AAAAAAACDT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     ((nuv) == 0 ? offsetof(Udata0, bindata)  \\\par
                    : offsetof(Udata, uv) + ({\cf17 sizeof}(UValue) * (nuv)))\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 465 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v UTF8BUFFSZ\:lobject.h}
{\xe \v lobject.h\:UTF8BUFFSZ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define UTF8BUFFSZ\~ 8}}
\par
{\bkmkstart AAAAAAACDU}
{\bkmkend AAAAAAACDU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 769 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v uvalue\:lobject.h}
{\xe \v lobject.h\:uvalue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define uvalue( o)\~ {\b check_exp}({\b ttisfulluserdata}(o), {\b gco2u}({\b val_}(o).gc))}}
\par
{\bkmkstart AAAAAAACDV}
{\bkmkend AAAAAAACDV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 412 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v val_\:lobject.h}
{\xe \v lobject.h\:val_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define val_( o)\~ ((o)->value_)}}
\par
{\bkmkstart AAAAAAACDW}
{\bkmkend AAAAAAACDW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 68 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v valraw\:lobject.h}
{\xe \v lobject.h\:valraw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define valraw( o)\~ (&{\b val_}(o))}}
\par
{\bkmkstart AAAAAAACDX}
{\bkmkend AAAAAAACDX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 69 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v vslen\:lobject.h}
{\xe \v lobject.h\:vslen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define vslen( o)\~ {\b tsslen}({\b tsvalue}(o))}}
\par
{\bkmkstart AAAAAAACDY}
{\bkmkend AAAAAAACDY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 388 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v withvariant\:lobject.h}
{\xe \v lobject.h\:withvariant}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define withvariant( t)\~ ((t) & 0x3F)}}
\par
{\bkmkstart AAAAAAACDZ}
{\bkmkend AAAAAAACDZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 79 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'D0\'CD\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v AbsLineInfo\:lobject.h}
{\xe \v lobject.h\:AbsLineInfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b AbsLineInfo} {\b AbsLineInfo}}}
\par
{\bkmkstart AAAAAAACEA}
{\bkmkend AAAAAAACEA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CClosure\:lobject.h}
{\xe \v lobject.h\:CClosure}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b CClosure} {\b CClosure}}}
\par
{\bkmkstart AAAAAAACEB}
{\bkmkend AAAAAAACEB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Closure\:lobject.h}
{\xe \v lobject.h\:Closure}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef union {\b Closure} {\b Closure}}}
\par
{\bkmkstart AAAAAAACEC}
{\bkmkend AAAAAAACEC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GCObject\:lobject.h}
{\xe \v lobject.h\:GCObject}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b GCObject} {\b GCObject}}}
\par
{\bkmkstart AAAAAAACED}
{\bkmkend AAAAAAACED}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v LClosure\:lobject.h}
{\xe \v lobject.h\:LClosure}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b LClosure} {\b LClosure}}}
\par
{\bkmkstart AAAAAAACEE}
{\bkmkend AAAAAAACEE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v LocVar\:lobject.h}
{\xe \v lobject.h\:LocVar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b LocVar} {\b LocVar}}}
\par
{\bkmkstart AAAAAAACEF}
{\bkmkend AAAAAAACEF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Node\:lobject.h}
{\xe \v lobject.h\:Node}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef union {\b Node} {\b Node}}}
\par
{\bkmkstart AAAAAAACEG}
{\bkmkend AAAAAAACEG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Proto\:lobject.h}
{\xe \v lobject.h\:Proto}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b Proto} {\b Proto}}}
\par
{\bkmkstart AAAAAAACEH}
{\bkmkend AAAAAAACEH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v StackValue\:lobject.h}
{\xe \v lobject.h\:StackValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef union {\b StackValue} {\b StackValue}}}
\par
{\bkmkstart AAAAAAACEI}
{\bkmkend AAAAAAACEI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v StkId\:lobject.h}
{\xe \v lobject.h\:StkId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef {\b StackValue}* {\b StkId}}}
\par
{\bkmkstart AAAAAAACEJ}
{\bkmkend AAAAAAACEJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.h \'B5\'DA 144 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v Table\:lobject.h}
{\xe \v lobject.h\:Table}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b Table} {\b Table}}}
\par
{\bkmkstart AAAAAAACEK}
{\bkmkend AAAAAAACEK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TString\:lobject.h}
{\xe \v lobject.h\:TString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b TString} {\b TString}}}
\par
{\bkmkstart AAAAAAACEL}
{\bkmkend AAAAAAACEL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TValue\:lobject.h}
{\xe \v lobject.h\:TValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b TValue} {\b TValue}}}
\par
{\bkmkstart AAAAAAACEM}
{\bkmkend AAAAAAACEM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Udata\:lobject.h}
{\xe \v lobject.h\:Udata}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b Udata} {\b Udata}}}
\par
{\bkmkstart AAAAAAACEN}
{\bkmkend AAAAAAACEN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Udata0\:lobject.h}
{\xe \v lobject.h\:Udata0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b Udata0} {\b Udata0}}}
\par
{\bkmkstart AAAAAAACEO}
{\bkmkend AAAAAAACEO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v UpVal\:lobject.h}
{\xe \v lobject.h\:UpVal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b UpVal} {\b UpVal}}}
\par
{\bkmkstart AAAAAAACEP}
{\bkmkend AAAAAAACEP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Upvaldesc\:lobject.h}
{\xe \v lobject.h\:Upvaldesc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b Upvaldesc} {\b Upvaldesc}}}
\par
{\bkmkstart AAAAAAACEQ}
{\bkmkend AAAAAAACEQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v UValue\:lobject.h}
{\xe \v lobject.h\:UValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef union {\b UValue} {\b UValue}}}
\par
{\bkmkstart AAAAAAACER}
{\bkmkend AAAAAAACER}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Value\:lobject.h}
{\xe \v lobject.h\:Value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef union {\b Value} {\b Value}}}
\par
{\bkmkstart AAAAAAACES}
{\bkmkend AAAAAAACES}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v luaO_arith\:lobject.h}
{\xe \v lobject.h\:luaO_arith}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaO_arith ({\b lua_State} *  {\i L}, int  {\i op}, const {\b TValue} *  {\i p1}, const {\b TValue} *  {\i p2}, {\b StkId}  {\i res})}}
\par
{\bkmkstart AAAAAAACET}
{\bkmkend AAAAAAACET}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.c \'B5\'DA 126 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaO_ceillog2\:lobject.h}
{\xe \v lobject.h\:luaO_ceillog2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} int luaO_ceillog2 (unsigned int  {\i x})}}
\par
{\bkmkstart AAAAAAACEU}
{\bkmkend AAAAAAACEU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.c \'B5\'DA 35 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaO_chunkid\:lobject.h}
{\xe \v lobject.h\:luaO_chunkid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaO_chunkid (char *  {\i out}, const char *  {\i source}, size_t  {\i srclen})}}
\par
{\bkmkstart AAAAAAACEV}
{\bkmkend AAAAAAACEV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.c \'B5\'DA 548 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaO_hexavalue\:lobject.h}
{\xe \v lobject.h\:luaO_hexavalue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} int luaO_hexavalue (int  {\i c})}}
\par
{\bkmkstart AAAAAAACEW}
{\bkmkend AAAAAAACEW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.c \'B5\'DA 135 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaO_pushfstring\:lobject.h}
{\xe \v lobject.h\:luaO_pushfstring}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} const char* luaO_pushfstring ({\b lua_State} *  {\i L}, const char *  {\i fmt},   {\i ...})}}
\par
{\bkmkstart AAAAAAACEX}
{\bkmkend AAAAAAACEX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.c \'B5\'DA 530 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaO_pushvfstring\:lobject.h}
{\xe \v lobject.h\:luaO_pushvfstring}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} const char* luaO_pushvfstring ({\b lua_State} *  {\i L}, const char *  {\i fmt}, va_list  {\i argp})}}
\par
{\bkmkstart AAAAAAACEY}
{\bkmkend AAAAAAACEY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.c \'B5\'DA 460 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaO_rawarith\:lobject.h}
{\xe \v lobject.h\:luaO_rawarith}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} int luaO_rawarith ({\b lua_State} *  {\i L}, int  {\i op}, const {\b TValue} *  {\i p1}, const {\b TValue} *  {\i p2}, {\b TValue} *  {\i res})}}
\par
{\bkmkstart AAAAAAACEZ}
{\bkmkend AAAAAAACEZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.c \'B5\'DA 89 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaO_str2num\:lobject.h}
{\xe \v lobject.h\:luaO_str2num}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} size_t luaO_str2num (const char *  {\i s}, {\b TValue} *  {\i o})}}
\par
{\bkmkstart AAAAAAACFA}
{\bkmkend AAAAAAACFA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.c \'B5\'DA 303 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaO_tostring\:lobject.h}
{\xe \v lobject.h\:luaO_tostring}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaO_tostring ({\b lua_State} *  {\i L}, {\b TValue} *  {\i obj})}}
\par
{\bkmkstart AAAAAAACFB}
{\bkmkend AAAAAAACFB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.c \'B5\'DA 362 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaO_utf8esc\:lobject.h}
{\xe \v lobject.h\:luaO_utf8esc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} int luaO_utf8esc (char *  {\i buff}, unsigned long  {\i x})}}
\par
{\bkmkstart AAAAAAACFC}
{\bkmkend AAAAAAACFC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lobject.c \'B5\'DA 318 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/gitworkspace/lua/src/lopcodes.c \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v D:/gitworkspace/lua/src/lopcodes.c}
{\xe \v D:/gitworkspace/lua/src/lopcodes.c}
{\bkmkstart AAAAAAACFD}
{\bkmkend AAAAAAACFD}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "lprefix.h"}\par
{\f2 #include "lopcodes.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lopcodes_c}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_CORE}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_DDEF} const {\b lu_byte} {\b luaP_opmodes} [{\b NUM_OPCODES}]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v lopcodes_c\:lopcodes.c}
{\xe \v lopcodes.c\:lopcodes_c}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lopcodes_c}}
\par
{\bkmkstart AAAAAAACFE}
{\bkmkend AAAAAAACFE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lopcodes.c \'B5\'DA 7 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_CORE\:lopcodes.c}
{\xe \v lopcodes.c\:LUA_CORE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_CORE}}
\par
{\bkmkstart AAAAAAACFF}
{\bkmkend AAAAAAACFF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lopcodes.c \'B5\'DA 8 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v luaP_opmodes\:lopcodes.c}
{\xe \v lopcodes.c\:luaP_opmodes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_DDEF} const {\b lu_byte} luaP_opmodes[{\b NUM_OPCODES}]}}
\par
{\bkmkstart AAAAAAACFG}
{\bkmkend AAAAAAACFG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lopcodes.c \'B5\'DA 18 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/gitworkspace/lua/src/lopcodes.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v D:/gitworkspace/lua/src/lopcodes.h}
{\xe \v D:/gitworkspace/lua/src/lopcodes.h}
{\bkmkstart AAAAAAACFH}
{\bkmkend AAAAAAACFH}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "llimits.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SIZE_C}\~ 8\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SIZE_B}\~ 8\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SIZE_Bx}\~ ({\b SIZE_C} + {\b SIZE_B} + 1)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SIZE_A}\~ 8\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SIZE_Ax}\~ ({\b SIZE_Bx} + {\b SIZE_A})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SIZE_sJ}\~ ({\b SIZE_Bx} + {\b SIZE_A})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SIZE_OP}\~ 7\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b POS_OP}\~ 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b POS_A}\~ ({\b POS_OP} + {\b SIZE_OP})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b POS_k}\~ ({\b POS_A} + {\b SIZE_A})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b POS_B}\~ ({\b POS_k} + 1)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b POS_C}\~ ({\b POS_B} + {\b SIZE_B})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b POS_Bx}\~ {\b POS_k}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b POS_Ax}\~ {\b POS_A}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b POS_sJ}\~ {\b POS_A}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b L_INTHASBITS}(b)\~ ((UINT_MAX >> ((b) - 1)) >= 1)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAXARG_Bx}\~ {\b MAX_INT}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b OFFSET_sBx}\~ ({\b MAXARG_Bx}>>1)         /* 'sBx' is signed */\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAXARG_Ax}\~ {\b MAX_INT}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAXARG_sJ}\~ {\b MAX_INT}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b OFFSET_sJ}\~ ({\b MAXARG_sJ} >> 1)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAXARG_A}\~ ((1<<{\b SIZE_A})-1)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAXARG_B}\~ ((1<<{\b SIZE_B})-1)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAXARG_C}\~ ((1<<{\b SIZE_C})-1)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b OFFSET_sC}\~ ({\b MAXARG_C} >> 1)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b int2sC}(i)\~ ((i) + {\b OFFSET_sC})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b sC2int}(i)\~ ((i) - {\b OFFSET_sC})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MASK1}(n,  p)\~ ((~((~({\b Instruction})0)<<(n)))<<(p))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MASK0}(n,  p)\~ (~{\b MASK1}(n,p))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GET_OPCODE}(i)\~ ({\b cast}({\b OpCode}, ((i)>>{\b POS_OP}) & {\b MASK1}({\b SIZE_OP},0)))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SET_OPCODE}(i,  o)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b checkopm}(i,  m)\~ ({\b getOpMode}({\b GET_OPCODE}(i)) == m)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b getarg}(i,  pos,  size)\~ ({\b cast_int}(((i)>>(pos)) & {\b MASK1}(size,0)))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b setarg}(i,  v,  pos,  size)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GETARG_A}(i)\~ {\b getarg}(i, {\b POS_A}, {\b SIZE_A})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SETARG_A}(i,  v)\~ {\b setarg}(i, v, {\b POS_A}, {\b SIZE_A})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GETARG_B}(i)\~ {\b check_exp}({\b checkopm}(i, {\b iABC}), {\b getarg}(i, {\b POS_B}, {\b SIZE_B}))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GETARG_sB}(i)\~ {\b sC2int}({\b GETARG_B}(i))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SETARG_B}(i,  v)\~ {\b setarg}(i, v, {\b POS_B}, {\b SIZE_B})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GETARG_C}(i)\~ {\b check_exp}({\b checkopm}(i, {\b iABC}), {\b getarg}(i, {\b POS_C}, {\b SIZE_C}))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GETARG_sC}(i)\~ {\b sC2int}({\b GETARG_C}(i))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SETARG_C}(i,  v)\~ {\b setarg}(i, v, {\b POS_C}, {\b SIZE_C})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TESTARG_k}(i)\~ {\b check_exp}({\b checkopm}(i, {\b iABC}), ({\b cast_int}(((i) & (1u << {\b POS_k})))))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GETARG_k}(i)\~ {\b check_exp}({\b checkopm}(i, {\b iABC}), {\b getarg}(i, {\b POS_k}, 1))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SETARG_k}(i,  v)\~ {\b setarg}(i, v, {\b POS_k}, 1)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GETARG_Bx}(i)\~ {\b check_exp}({\b checkopm}(i, {\b iABx}), {\b getarg}(i, {\b POS_Bx}, {\b SIZE_Bx}))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SETARG_Bx}(i,  v)\~ {\b setarg}(i, v, {\b POS_Bx}, {\b SIZE_Bx})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GETARG_Ax}(i)\~ {\b check_exp}({\b checkopm}(i, {\b iAx}), {\b getarg}(i, {\b POS_Ax}, {\b SIZE_Ax}))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SETARG_Ax}(i,  v)\~ {\b setarg}(i, v, {\b POS_Ax}, {\b SIZE_Ax})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GETARG_sBx}(i)\~ 	{\b check_exp}({\b checkopm}(i, {\b iAsBx}), {\b getarg}(i, {\b POS_Bx}, {\b SIZE_Bx}) - {\b OFFSET_sBx})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SETARG_sBx}(i,  b)\~ {\b SETARG_Bx}((i),{\b cast_uint}((b)+{\b OFFSET_sBx}))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GETARG_sJ}(i)\~ 	{\b check_exp}({\b checkopm}(i, {\b isJ}), {\b getarg}(i, {\b POS_sJ}, {\b SIZE_sJ}) - {\b OFFSET_sJ})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SETARG_sJ}(i,  j)\~ 	{\b setarg}(i, {\b cast_uint}((j)+{\b OFFSET_sJ}), {\b POS_sJ}, {\b SIZE_sJ})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CREATE_ABCk}(o,  a,  b,  c,  k)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CREATE_ABx}(o,  a,  bc)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CREATE_Ax}(o,  a)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CREATE_sJ}(o,  j,  k)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAXINDEXRK}\~ {\b MAXARG_B}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b NO_REG}\~ {\b MAXARG_A}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b NUM_OPCODES}\~ ((int)({\b OP_EXTRAARG}) + 1)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b getOpMode}(m)\~ ({\b cast}(enum {\b OpMode}, {\b luaP_opmodes}[m] & 7))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b testAMode}(m)\~ ({\b luaP_opmodes}[m] & (1 << 3))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b testTMode}(m)\~ ({\b luaP_opmodes}[m] & (1 << 4))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b testITMode}(m)\~ ({\b luaP_opmodes}[m] & (1 << 5))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b testOTMode}(m)\~ ({\b luaP_opmodes}[m] & (1 << 6))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b testMMMode}(m)\~ ({\b luaP_opmodes}[m] & (1 << 7))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b isOT}(i)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b isIT}(i)\~ ({\b testITMode}({\b GET_OPCODE}(i)) && {\b GETARG_B}(i) == 0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b opmode}(mm,  ot,  it,  t,  a,  m)\~     (((mm) << 7) | ((ot) << 6) | ((it) << 5) | ((t) << 4) | ((a) << 3) | (m))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LFIELDS_PER_FLUSH}\~ 50\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'B6\'BE\'D9\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b OpMode} \{ {\b iABC}, 
{\b iABx}, 
{\b iAsBx}, 
{\b iAx}, 
{\b isJ}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b OpCode} \{ {\b OP_MOVE}, 
{\b OP_LOADI}, 
{\b OP_LOADF}, 
{\b OP_LOADK}, 
{\b OP_LOADKX}, 
{\b OP_LOADFALSE}, 
{\b OP_LFALSESKIP}, 
{\b OP_LOADTRUE}, 
{\b OP_LOADNIL}, 
{\b OP_GETUPVAL}, 
{\b OP_SETUPVAL}, 
{\b OP_GETTABUP}, 
{\b OP_GETTABLE}, 
{\b OP_GETI}, 
{\b OP_GETFIELD}, 
{\b OP_SETTABUP}, 
{\b OP_SETTABLE}, 
{\b OP_SETI}, 
{\b OP_SETFIELD}, 
{\b OP_NEWTABLE}, 
{\b OP_SELF}, 
{\b OP_ADDI}, 
{\b OP_ADDK}, 
{\b OP_SUBK}, 
{\b OP_MULK}, 
{\b OP_MODK}, 
{\b OP_POWK}, 
{\b OP_DIVK}, 
{\b OP_IDIVK}, 
{\b OP_BANDK}, 
{\b OP_BORK}, 
{\b OP_BXORK}, 
{\b OP_SHRI}, 
{\b OP_SHLI}, 
{\b OP_ADD}, 
{\b OP_SUB}, 
{\b OP_MUL}, 
{\b OP_MOD}, 
{\b OP_POW}, 
{\b OP_DIV}, 
{\b OP_IDIV}, 
{\b OP_BAND}, 
{\b OP_BOR}, 
{\b OP_BXOR}, 
{\b OP_SHL}, 
{\b OP_SHR}, 
{\b OP_MMBIN}, 
{\b OP_MMBINI}, 
{\b OP_MMBINK}, 
{\b OP_UNM}, 
{\b OP_BNOT}, 
{\b OP_NOT}, 
{\b OP_LEN}, 
{\b OP_CONCAT}, 
{\b OP_CLOSE}, 
{\b OP_TBC}, 
{\b OP_JMP}, 
{\b OP_EQ}, 
{\b OP_LT}, 
{\b OP_LE}, 
{\b OP_EQK}, 
{\b OP_EQI}, 
{\b OP_LTI}, 
{\b OP_LEI}, 
{\b OP_GTI}, 
{\b OP_GEI}, 
{\b OP_TEST}, 
{\b OP_TESTSET}, 
{\b OP_CALL}, 
{\b OP_TAILCALL}, 
{\b OP_RETURN}, 
{\b OP_RETURN0}, 
{\b OP_RETURN1}, 
{\b OP_FORLOOP}, 
{\b OP_FORPREP}, 
{\b OP_TFORPREP}, 
{\b OP_TFORCALL}, 
{\b OP_TFORLOOP}, 
{\b OP_SETLIST}, 
{\b OP_CLOSURE}, 
{\b OP_VARARG}, 
{\b OP_VARARGPREP}, 
{\b OP_EXTRAARG}
 \}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v checkopm\:lopcodes.h}
{\xe \v lopcodes.h\:checkopm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define checkopm( i,  m)\~ ({\b getOpMode}({\b GET_OPCODE}(i)) == m)}}
\par
{\bkmkstart AAAAAAACFI}
{\bkmkend AAAAAAACFI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lopcodes.h \'B5\'DA 118 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v CREATE_ABCk\:lopcodes.h}
{\xe \v lopcodes.h\:CREATE_ABCk}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CREATE_ABCk( o,  a,  b,  c,  k)}}
\par
{\bkmkstart AAAAAAACFJ}
{\bkmkend AAAAAAACFJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             ((cast(Instruction, o)<<POS_OP) \\\par
            | (cast(Instruction, a)<<POS_A) \\\par
            | (cast(Instruction, b)<<POS_B) \\\par
            | (cast(Instruction, c)<<POS_C) \\\par
            | (cast(Instruction, k)<<POS_k))\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE lopcodes.h \'B5\'DA 156 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v CREATE_ABx\:lopcodes.h}
{\xe \v lopcodes.h\:CREATE_ABx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CREATE_ABx( o,  a,  bc)}}
\par
{\bkmkstart AAAAAAACFK}
{\bkmkend AAAAAAACFK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             ((cast(Instruction, o)<<POS_OP) \\\par
            | (cast(Instruction, a)<<POS_A) \\\par
            | (cast(Instruction, bc)<<POS_Bx))\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE lopcodes.h \'B5\'DA 162 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v CREATE_Ax\:lopcodes.h}
{\xe \v lopcodes.h\:CREATE_Ax}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CREATE_Ax( o,  a)}}
\par
{\bkmkstart AAAAAAACFL}
{\bkmkend AAAAAAACFL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             ((cast(Instruction, o)<<POS_OP) \\\par
            | (cast(Instruction, a)<<POS_Ax))\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE lopcodes.h \'B5\'DA 166 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v CREATE_sJ\:lopcodes.h}
{\xe \v lopcodes.h\:CREATE_sJ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CREATE_sJ( o,  j,  k)}}
\par
{\bkmkstart AAAAAAACFM}
{\bkmkend AAAAAAACFM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid             ((cast(Instruction, o) << POS_OP) \\\par
            | (cast(Instruction, j) << POS_sJ) \\\par
            | (cast(Instruction, k) << POS_k))\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE lopcodes.h \'B5\'DA 169 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v GET_OPCODE\:lopcodes.h}
{\xe \v lopcodes.h\:GET_OPCODE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GET_OPCODE( i)\~ ({\b cast}({\b OpCode}, ((i)>>{\b POS_OP}) & {\b MASK1}({\b SIZE_OP},0)))}}
\par
{\bkmkstart AAAAAAACFN}
{\bkmkend AAAAAAACFN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lopcodes.h \'B5\'DA 114 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v getarg\:lopcodes.h}
{\xe \v lopcodes.h\:getarg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define getarg( i,  pos,  size)\~ ({\b cast_int}(((i)>>(pos)) & {\b MASK1}(size,0)))}}
\par
{\bkmkstart AAAAAAACFO}
{\bkmkend AAAAAAACFO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lopcodes.h \'B5\'DA 121 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v GETARG_A\:lopcodes.h}
{\xe \v lopcodes.h\:GETARG_A}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GETARG_A( i)\~ {\b getarg}(i, {\b POS_A}, {\b SIZE_A})}}
\par
{\bkmkstart AAAAAAACFP}
{\bkmkend AAAAAAACFP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lopcodes.h \'B5\'DA 125 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v GETARG_Ax\:lopcodes.h}
{\xe \v lopcodes.h\:GETARG_Ax}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GETARG_Ax( i)\~ {\b check_exp}({\b checkopm}(i, {\b iAx}), {\b getarg}(i, {\b POS_Ax}, {\b SIZE_Ax}))}}
\par
{\bkmkstart AAAAAAACFQ}
{\bkmkend AAAAAAACFQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lopcodes.h \'B5\'DA 143 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v GETARG_B\:lopcodes.h}
{\xe \v lopcodes.h\:GETARG_B}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GETARG_B( i)\~ {\b check_exp}({\b checkopm}(i, {\b iABC}), {\b getarg}(i, {\b POS_B}, {\b SIZE_B}))}}
\par
{\bkmkstart AAAAAAACFR}
{\bkmkend AAAAAAACFR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lopcodes.h \'B5\'DA 128 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v GETARG_Bx\:lopcodes.h}
{\xe \v lopcodes.h\:GETARG_Bx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GETARG_Bx( i)\~ {\b check_exp}({\b checkopm}(i, {\b iABx}), {\b getarg}(i, {\b POS_Bx}, {\b SIZE_Bx}))}}
\par
{\bkmkstart AAAAAAACFS}
{\bkmkend AAAAAAACFS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lopcodes.h \'B5\'DA 140 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v GETARG_C\:lopcodes.h}
{\xe \v lopcodes.h\:GETARG_C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GETARG_C( i)\~ {\b check_exp}({\b checkopm}(i, {\b iABC}), {\b getarg}(i, {\b POS_C}, {\b SIZE_C}))}}
\par
{\bkmkstart AAAAAAACFT}
{\bkmkend AAAAAAACFT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lopcodes.h \'B5\'DA 132 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v GETARG_k\:lopcodes.h}
{\xe \v lopcodes.h\:GETARG_k}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GETARG_k( i)\~ {\b check_exp}({\b checkopm}(i, {\b iABC}), {\b getarg}(i, {\b POS_k}, 1))}}
\par
{\bkmkstart AAAAAAACFU}
{\bkmkend AAAAAAACFU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lopcodes.h \'B5\'DA 137 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v GETARG_sB\:lopcodes.h}
{\xe \v lopcodes.h\:GETARG_sB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GETARG_sB( i)\~ {\b sC2int}({\b GETARG_B}(i))}}
\par
{\bkmkstart AAAAAAACFV}
{\bkmkend AAAAAAACFV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lopcodes.h \'B5\'DA 129 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v GETARG_sBx\:lopcodes.h}
{\xe \v lopcodes.h\:GETARG_sBx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GETARG_sBx( i)\~ 	{\b check_exp}({\b checkopm}(i, {\b iAsBx}), {\b getarg}(i, {\b POS_Bx}, {\b SIZE_Bx}) - {\b OFFSET_sBx})}}
\par
{\bkmkstart AAAAAAACFW}
{\bkmkend AAAAAAACFW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lopcodes.h \'B5\'DA 146 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v GETARG_sC\:lopcodes.h}
{\xe \v lopcodes.h\:GETARG_sC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GETARG_sC( i)\~ {\b sC2int}({\b GETARG_C}(i))}}
\par
{\bkmkstart AAAAAAACFX}
{\bkmkend AAAAAAACFX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lopcodes.h \'B5\'DA 133 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v GETARG_sJ\:lopcodes.h}
{\xe \v lopcodes.h\:GETARG_sJ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GETARG_sJ( i)\~ 	{\b check_exp}({\b checkopm}(i, {\b isJ}), {\b getarg}(i, {\b POS_sJ}, {\b SIZE_sJ}) - {\b OFFSET_sJ})}}
\par
{\bkmkstart AAAAAAACFY}
{\bkmkend AAAAAAACFY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lopcodes.h \'B5\'DA 150 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v getOpMode\:lopcodes.h}
{\xe \v lopcodes.h\:getOpMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define getOpMode( m)\~ ({\b cast}(enum {\b OpMode}, {\b luaP_opmodes}[m] & 7))}}
\par
{\bkmkstart AAAAAAACFZ}
{\bkmkend AAAAAAACFZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lopcodes.h \'B5\'DA 370 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v int2sC\:lopcodes.h}
{\xe \v lopcodes.h\:int2sC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define int2sC( i)\~ ((i) + {\b OFFSET_sC})}}
\par
{\bkmkstart AAAAAAACGA}
{\bkmkend AAAAAAACGA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lopcodes.h \'B5\'DA 100 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v isIT\:lopcodes.h}
{\xe \v lopcodes.h\:isIT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define isIT( i)\~ ({\b testITMode}({\b GET_OPCODE}(i)) && {\b GETARG_B}(i) == 0)}}
\par
{\bkmkstart AAAAAAACGB}
{\bkmkend AAAAAAACGB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lopcodes.h \'B5\'DA 383 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v isOT\:lopcodes.h}
{\xe \v lopcodes.h\:isOT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define isOT( i)}}
\par
{\bkmkstart AAAAAAACGC}
{\bkmkend AAAAAAACGC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     ((testOTMode(GET_OPCODE(i)) && GETARG_C(i) == 0) || \\\par
          GET_OPCODE(i) == OP_TAILCALL)\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE lopcodes.h \'B5\'DA 378 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v L_INTHASBITS\:lopcodes.h}
{\xe \v lopcodes.h\:L_INTHASBITS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define L_INTHASBITS( b)\~ ((UINT_MAX >> ((b) - 1)) >= 1)}}
\par
{\bkmkstart AAAAAAACGD}
{\bkmkend AAAAAAACGD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lopcodes.h \'B5\'DA 68 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LFIELDS_PER_FLUSH\:lopcodes.h}
{\xe \v lopcodes.h\:LFIELDS_PER_FLUSH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LFIELDS_PER_FLUSH\~ 50}}
\par
{\bkmkstart AAAAAAACGE}
{\bkmkend AAAAAAACGE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lopcodes.h \'B5\'DA 390 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v MASK0\:lopcodes.h}
{\xe \v lopcodes.h\:MASK0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MASK0( n,  p)\~ (~{\b MASK1}(n,p))}}
\par
{\bkmkstart AAAAAAACGF}
{\bkmkend AAAAAAACGF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lopcodes.h \'B5\'DA 108 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v MASK1\:lopcodes.h}
{\xe \v lopcodes.h\:MASK1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MASK1( n,  p)\~ ((~((~({\b Instruction})0)<<(n)))<<(p))}}
\par
{\bkmkstart AAAAAAACGG}
{\bkmkend AAAAAAACGG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lopcodes.h \'B5\'DA 105 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v MAXARG_A\:lopcodes.h}
{\xe \v lopcodes.h\:MAXARG_A}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAXARG_A\~ ((1<<{\b SIZE_A})-1)}}
\par
{\bkmkstart AAAAAAACGH}
{\bkmkend AAAAAAACGH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lopcodes.h \'B5\'DA 95 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v MAXARG_Ax\:lopcodes.h}
{\xe \v lopcodes.h\:MAXARG_Ax}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAXARG_Ax\~ {\b MAX_INT}}}
\par
{\bkmkstart AAAAAAACGI}
{\bkmkend AAAAAAACGI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lopcodes.h \'B5\'DA 83 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v MAXARG_B\:lopcodes.h}
{\xe \v lopcodes.h\:MAXARG_B}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAXARG_B\~ ((1<<{\b SIZE_B})-1)}}
\par
{\bkmkstart AAAAAAACGJ}
{\bkmkend AAAAAAACGJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lopcodes.h \'B5\'DA 96 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v MAXARG_Bx\:lopcodes.h}
{\xe \v lopcodes.h\:MAXARG_Bx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAXARG_Bx\~ {\b MAX_INT}}}
\par
{\bkmkstart AAAAAAACGK}
{\bkmkend AAAAAAACGK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lopcodes.h \'B5\'DA 74 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v MAXARG_C\:lopcodes.h}
{\xe \v lopcodes.h\:MAXARG_C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAXARG_C\~ ((1<<{\b SIZE_C})-1)}}
\par
{\bkmkstart AAAAAAACGL}
{\bkmkend AAAAAAACGL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lopcodes.h \'B5\'DA 97 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v MAXARG_sJ\:lopcodes.h}
{\xe \v lopcodes.h\:MAXARG_sJ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAXARG_sJ\~ {\b MAX_INT}}}
\par
{\bkmkstart AAAAAAACGM}
{\bkmkend AAAAAAACGM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lopcodes.h \'B5\'DA 89 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v MAXINDEXRK\:lopcodes.h}
{\xe \v lopcodes.h\:MAXINDEXRK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAXINDEXRK\~ {\b MAXARG_B}}}
\par
{\bkmkstart AAAAAAACGN}
{\bkmkend AAAAAAACGN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lopcodes.h \'B5\'DA 175 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v NO_REG\:lopcodes.h}
{\xe \v lopcodes.h\:NO_REG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define NO_REG\~ {\b MAXARG_A}}}
\par
{\bkmkstart AAAAAAACGO}
{\bkmkend AAAAAAACGO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lopcodes.h \'B5\'DA 182 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v NUM_OPCODES\:lopcodes.h}
{\xe \v lopcodes.h\:NUM_OPCODES}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define NUM_OPCODES\~ ((int)({\b OP_EXTRAARG}) + 1)}}
\par
{\bkmkstart AAAAAAACGP}
{\bkmkend AAAAAAACGP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lopcodes.h \'B5\'DA 312 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v OFFSET_sBx\:lopcodes.h}
{\xe \v lopcodes.h\:OFFSET_sBx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define OFFSET_sBx\~ ({\b MAXARG_Bx}>>1)         /* 'sBx' is signed */}}
\par
{\bkmkstart AAAAAAACGQ}
{\bkmkend AAAAAAACGQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lopcodes.h \'B5\'DA 77 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v OFFSET_sC\:lopcodes.h}
{\xe \v lopcodes.h\:OFFSET_sC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define OFFSET_sC\~ ({\b MAXARG_C} >> 1)}}
\par
{\bkmkstart AAAAAAACGR}
{\bkmkend AAAAAAACGR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lopcodes.h \'B5\'DA 98 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v OFFSET_sJ\:lopcodes.h}
{\xe \v lopcodes.h\:OFFSET_sJ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define OFFSET_sJ\~ ({\b MAXARG_sJ} >> 1)}}
\par
{\bkmkstart AAAAAAACGS}
{\bkmkend AAAAAAACGS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lopcodes.h \'B5\'DA 92 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v opmode\:lopcodes.h}
{\xe \v lopcodes.h\:opmode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define opmode( mm,  ot,  it,  t,  a,  m)\~     (((mm) << 7) | ((ot) << 6) | ((it) << 5) | ((t) << 4) | ((a) << 3) | (m))}}
\par
{\bkmkstart AAAAAAACGT}
{\bkmkend AAAAAAACGT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lopcodes.h \'B5\'DA 385 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v POS_A\:lopcodes.h}
{\xe \v lopcodes.h\:POS_A}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define POS_A\~ ({\b POS_OP} + {\b SIZE_OP})}}
\par
{\bkmkstart AAAAAAACGU}
{\bkmkend AAAAAAACGU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lopcodes.h \'B5\'DA 49 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v POS_Ax\:lopcodes.h}
{\xe \v lopcodes.h\:POS_Ax}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define POS_Ax\~ {\b POS_A}}}
\par
{\bkmkstart AAAAAAACGV}
{\bkmkend AAAAAAACGV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lopcodes.h \'B5\'DA 56 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v POS_B\:lopcodes.h}
{\xe \v lopcodes.h\:POS_B}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define POS_B\~ ({\b POS_k} + 1)}}
\par
{\bkmkstart AAAAAAACGW}
{\bkmkend AAAAAAACGW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lopcodes.h \'B5\'DA 51 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v POS_Bx\:lopcodes.h}
{\xe \v lopcodes.h\:POS_Bx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define POS_Bx\~ {\b POS_k}}}
\par
{\bkmkstart AAAAAAACGX}
{\bkmkend AAAAAAACGX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lopcodes.h \'B5\'DA 54 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v POS_C\:lopcodes.h}
{\xe \v lopcodes.h\:POS_C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define POS_C\~ ({\b POS_B} + {\b SIZE_B})}}
\par
{\bkmkstart AAAAAAACGY}
{\bkmkend AAAAAAACGY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lopcodes.h \'B5\'DA 52 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v POS_k\:lopcodes.h}
{\xe \v lopcodes.h\:POS_k}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define POS_k\~ ({\b POS_A} + {\b SIZE_A})}}
\par
{\bkmkstart AAAAAAACGZ}
{\bkmkend AAAAAAACGZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lopcodes.h \'B5\'DA 50 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v POS_OP\:lopcodes.h}
{\xe \v lopcodes.h\:POS_OP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define POS_OP\~ 0}}
\par
{\bkmkstart AAAAAAACHA}
{\bkmkend AAAAAAACHA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lopcodes.h \'B5\'DA 47 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v POS_sJ\:lopcodes.h}
{\xe \v lopcodes.h\:POS_sJ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define POS_sJ\~ {\b POS_A}}}
\par
{\bkmkstart AAAAAAACHB}
{\bkmkend AAAAAAACHB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lopcodes.h \'B5\'DA 58 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v sC2int\:lopcodes.h}
{\xe \v lopcodes.h\:sC2int}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define sC2int( i)\~ ((i) - {\b OFFSET_sC})}}
\par
{\bkmkstart AAAAAAACHC}
{\bkmkend AAAAAAACHC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lopcodes.h \'B5\'DA 101 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v SET_OPCODE\:lopcodes.h}
{\xe \v lopcodes.h\:SET_OPCODE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SET_OPCODE( i,  o)}}
\par
{\bkmkstart AAAAAAACHD}
{\bkmkend AAAAAAACHD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid         ((i) = (((i)&MASK0(SIZE_OP,POS_OP)) | \\\par
        ((cast(Instruction, o)<<POS_OP)&MASK1(SIZE_OP,POS_OP))))\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE lopcodes.h \'B5\'DA 115 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v setarg\:lopcodes.h}
{\xe \v lopcodes.h\:setarg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define setarg( i,  v,  pos,  size)}}
\par
{\bkmkstart AAAAAAACHE}
{\bkmkend AAAAAAACHE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                 ((i) = (((i)&MASK0(size,pos)) | \\\par
                ((cast(Instruction, v)<<pos)&MASK1(size,pos))))\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE lopcodes.h \'B5\'DA 122 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v SETARG_A\:lopcodes.h}
{\xe \v lopcodes.h\:SETARG_A}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SETARG_A( i,  v)\~ {\b setarg}(i, v, {\b POS_A}, {\b SIZE_A})}}
\par
{\bkmkstart AAAAAAACHF}
{\bkmkend AAAAAAACHF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lopcodes.h \'B5\'DA 126 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v SETARG_Ax\:lopcodes.h}
{\xe \v lopcodes.h\:SETARG_Ax}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SETARG_Ax( i,  v)\~ {\b setarg}(i, v, {\b POS_Ax}, {\b SIZE_Ax})}}
\par
{\bkmkstart AAAAAAACHG}
{\bkmkend AAAAAAACHG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lopcodes.h \'B5\'DA 144 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v SETARG_B\:lopcodes.h}
{\xe \v lopcodes.h\:SETARG_B}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SETARG_B( i,  v)\~ {\b setarg}(i, v, {\b POS_B}, {\b SIZE_B})}}
\par
{\bkmkstart AAAAAAACHH}
{\bkmkend AAAAAAACHH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lopcodes.h \'B5\'DA 130 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v SETARG_Bx\:lopcodes.h}
{\xe \v lopcodes.h\:SETARG_Bx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SETARG_Bx( i,  v)\~ {\b setarg}(i, v, {\b POS_Bx}, {\b SIZE_Bx})}}
\par
{\bkmkstart AAAAAAACHI}
{\bkmkend AAAAAAACHI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lopcodes.h \'B5\'DA 141 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v SETARG_C\:lopcodes.h}
{\xe \v lopcodes.h\:SETARG_C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SETARG_C( i,  v)\~ {\b setarg}(i, v, {\b POS_C}, {\b SIZE_C})}}
\par
{\bkmkstart AAAAAAACHJ}
{\bkmkend AAAAAAACHJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lopcodes.h \'B5\'DA 134 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v SETARG_k\:lopcodes.h}
{\xe \v lopcodes.h\:SETARG_k}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SETARG_k( i,  v)\~ {\b setarg}(i, v, {\b POS_k}, 1)}}
\par
{\bkmkstart AAAAAAACHK}
{\bkmkend AAAAAAACHK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lopcodes.h \'B5\'DA 138 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v SETARG_sBx\:lopcodes.h}
{\xe \v lopcodes.h\:SETARG_sBx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SETARG_sBx( i,  b)\~ {\b SETARG_Bx}((i),{\b cast_uint}((b)+{\b OFFSET_sBx}))}}
\par
{\bkmkstart AAAAAAACHL}
{\bkmkend AAAAAAACHL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lopcodes.h \'B5\'DA 148 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v SETARG_sJ\:lopcodes.h}
{\xe \v lopcodes.h\:SETARG_sJ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SETARG_sJ( i,  j)\~ 	{\b setarg}(i, {\b cast_uint}((j)+{\b OFFSET_sJ}), {\b POS_sJ}, {\b SIZE_sJ})}}
\par
{\bkmkstart AAAAAAACHM}
{\bkmkend AAAAAAACHM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lopcodes.h \'B5\'DA 152 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v SIZE_A\:lopcodes.h}
{\xe \v lopcodes.h\:SIZE_A}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SIZE_A\~ 8}}
\par
{\bkmkstart AAAAAAACHN}
{\bkmkend AAAAAAACHN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lopcodes.h \'B5\'DA 41 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v SIZE_Ax\:lopcodes.h}
{\xe \v lopcodes.h\:SIZE_Ax}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SIZE_Ax\~ ({\b SIZE_Bx} + {\b SIZE_A})}}
\par
{\bkmkstart AAAAAAACHO}
{\bkmkend AAAAAAACHO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lopcodes.h \'B5\'DA 42 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v SIZE_B\:lopcodes.h}
{\xe \v lopcodes.h\:SIZE_B}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SIZE_B\~ 8}}
\par
{\bkmkstart AAAAAAACHP}
{\bkmkend AAAAAAACHP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lopcodes.h \'B5\'DA 39 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v SIZE_Bx\:lopcodes.h}
{\xe \v lopcodes.h\:SIZE_Bx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SIZE_Bx\~ ({\b SIZE_C} + {\b SIZE_B} + 1)}}
\par
{\bkmkstart AAAAAAACHQ}
{\bkmkend AAAAAAACHQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lopcodes.h \'B5\'DA 40 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v SIZE_C\:lopcodes.h}
{\xe \v lopcodes.h\:SIZE_C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SIZE_C\~ 8}}
\par
{\bkmkstart AAAAAAACHR}
{\bkmkend AAAAAAACHR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lopcodes.h \'B5\'DA 38 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v SIZE_OP\:lopcodes.h}
{\xe \v lopcodes.h\:SIZE_OP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SIZE_OP\~ 7}}
\par
{\bkmkstart AAAAAAACHS}
{\bkmkend AAAAAAACHS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lopcodes.h \'B5\'DA 45 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v SIZE_sJ\:lopcodes.h}
{\xe \v lopcodes.h\:SIZE_sJ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SIZE_sJ\~ ({\b SIZE_Bx} + {\b SIZE_A})}}
\par
{\bkmkstart AAAAAAACHT}
{\bkmkend AAAAAAACHT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lopcodes.h \'B5\'DA 43 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v testAMode\:lopcodes.h}
{\xe \v lopcodes.h\:testAMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define testAMode( m)\~ ({\b luaP_opmodes}[m] & (1 << 3))}}
\par
{\bkmkstart AAAAAAACHU}
{\bkmkend AAAAAAACHU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lopcodes.h \'B5\'DA 371 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v TESTARG_k\:lopcodes.h}
{\xe \v lopcodes.h\:TESTARG_k}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TESTARG_k( i)\~ {\b check_exp}({\b checkopm}(i, {\b iABC}), ({\b cast_int}(((i) & (1u << {\b POS_k})))))}}
\par
{\bkmkstart AAAAAAACHV}
{\bkmkend AAAAAAACHV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lopcodes.h \'B5\'DA 136 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v testITMode\:lopcodes.h}
{\xe \v lopcodes.h\:testITMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define testITMode( m)\~ ({\b luaP_opmodes}[m] & (1 << 5))}}
\par
{\bkmkstart AAAAAAACHW}
{\bkmkend AAAAAAACHW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lopcodes.h \'B5\'DA 373 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v testMMMode\:lopcodes.h}
{\xe \v lopcodes.h\:testMMMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define testMMMode( m)\~ ({\b luaP_opmodes}[m] & (1 << 7))}}
\par
{\bkmkstart AAAAAAACHX}
{\bkmkend AAAAAAACHX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lopcodes.h \'B5\'DA 375 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v testOTMode\:lopcodes.h}
{\xe \v lopcodes.h\:testOTMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define testOTMode( m)\~ ({\b luaP_opmodes}[m] & (1 << 6))}}
\par
{\bkmkstart AAAAAAACHY}
{\bkmkend AAAAAAACHY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lopcodes.h \'B5\'DA 374 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v testTMode\:lopcodes.h}
{\xe \v lopcodes.h\:testTMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define testTMode( m)\~ ({\b luaP_opmodes}[m] & (1 << 4))}}
\par
{\bkmkstart AAAAAAACHZ}
{\bkmkend AAAAAAACHZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lopcodes.h \'B5\'DA 372 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'B6\'BE\'D9\'C0\'E0\'D0\'CD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v OpCode\:lopcodes.h}
{\xe \v lopcodes.h\:OpCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b OpCode}}}
\par
{\bkmkstart AAAAAAACIA}
{\bkmkend AAAAAAACIA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C3\'B6\'BE\'D9\'D6\'B5:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v OP_MOVE\:lopcodes.h}
{\xe \v lopcodes.h\:OP_MOVE}
{\qr OP_MOVE{\bkmkstart AAAAAAACIB}
{\bkmkend AAAAAAACIB}
\cell }{\cell }{\row }
{\xe \v OP_LOADI\:lopcodes.h}
{\xe \v lopcodes.h\:OP_LOADI}
{\qr OP_LOADI{\bkmkstart AAAAAAACIC}
{\bkmkend AAAAAAACIC}
\cell }{\cell }{\row }
{\xe \v OP_LOADF\:lopcodes.h}
{\xe \v lopcodes.h\:OP_LOADF}
{\qr OP_LOADF{\bkmkstart AAAAAAACID}
{\bkmkend AAAAAAACID}
\cell }{\cell }{\row }
{\xe \v OP_LOADK\:lopcodes.h}
{\xe \v lopcodes.h\:OP_LOADK}
{\qr OP_LOADK{\bkmkstart AAAAAAACIE}
{\bkmkend AAAAAAACIE}
\cell }{\cell }{\row }
{\xe \v OP_LOADKX\:lopcodes.h}
{\xe \v lopcodes.h\:OP_LOADKX}
{\qr OP_LOADKX{\bkmkstart AAAAAAACIF}
{\bkmkend AAAAAAACIF}
\cell }{\cell }{\row }
{\xe \v OP_LOADFALSE\:lopcodes.h}
{\xe \v lopcodes.h\:OP_LOADFALSE}
{\qr OP_LOADFALSE{\bkmkstart AAAAAAACIG}
{\bkmkend AAAAAAACIG}
\cell }{\cell }{\row }
{\xe \v OP_LFALSESKIP\:lopcodes.h}
{\xe \v lopcodes.h\:OP_LFALSESKIP}
{\qr OP_LFALSESKIP{\bkmkstart AAAAAAACIH}
{\bkmkend AAAAAAACIH}
\cell }{\cell }{\row }
{\xe \v OP_LOADTRUE\:lopcodes.h}
{\xe \v lopcodes.h\:OP_LOADTRUE}
{\qr OP_LOADTRUE{\bkmkstart AAAAAAACII}
{\bkmkend AAAAAAACII}
\cell }{\cell }{\row }
{\xe \v OP_LOADNIL\:lopcodes.h}
{\xe \v lopcodes.h\:OP_LOADNIL}
{\qr OP_LOADNIL{\bkmkstart AAAAAAACIJ}
{\bkmkend AAAAAAACIJ}
\cell }{\cell }{\row }
{\xe \v OP_GETUPVAL\:lopcodes.h}
{\xe \v lopcodes.h\:OP_GETUPVAL}
{\qr OP_GETUPVAL{\bkmkstart AAAAAAACIK}
{\bkmkend AAAAAAACIK}
\cell }{\cell }{\row }
{\xe \v OP_SETUPVAL\:lopcodes.h}
{\xe \v lopcodes.h\:OP_SETUPVAL}
{\qr OP_SETUPVAL{\bkmkstart AAAAAAACIL}
{\bkmkend AAAAAAACIL}
\cell }{\cell }{\row }
{\xe \v OP_GETTABUP\:lopcodes.h}
{\xe \v lopcodes.h\:OP_GETTABUP}
{\qr OP_GETTABUP{\bkmkstart AAAAAAACIM}
{\bkmkend AAAAAAACIM}
\cell }{\cell }{\row }
{\xe \v OP_GETTABLE\:lopcodes.h}
{\xe \v lopcodes.h\:OP_GETTABLE}
{\qr OP_GETTABLE{\bkmkstart AAAAAAACIN}
{\bkmkend AAAAAAACIN}
\cell }{\cell }{\row }
{\xe \v OP_GETI\:lopcodes.h}
{\xe \v lopcodes.h\:OP_GETI}
{\qr OP_GETI{\bkmkstart AAAAAAACIO}
{\bkmkend AAAAAAACIO}
\cell }{\cell }{\row }
{\xe \v OP_GETFIELD\:lopcodes.h}
{\xe \v lopcodes.h\:OP_GETFIELD}
{\qr OP_GETFIELD{\bkmkstart AAAAAAACIP}
{\bkmkend AAAAAAACIP}
\cell }{\cell }{\row }
{\xe \v OP_SETTABUP\:lopcodes.h}
{\xe \v lopcodes.h\:OP_SETTABUP}
{\qr OP_SETTABUP{\bkmkstart AAAAAAACIQ}
{\bkmkend AAAAAAACIQ}
\cell }{\cell }{\row }
{\xe \v OP_SETTABLE\:lopcodes.h}
{\xe \v lopcodes.h\:OP_SETTABLE}
{\qr OP_SETTABLE{\bkmkstart AAAAAAACIR}
{\bkmkend AAAAAAACIR}
\cell }{\cell }{\row }
{\xe \v OP_SETI\:lopcodes.h}
{\xe \v lopcodes.h\:OP_SETI}
{\qr OP_SETI{\bkmkstart AAAAAAACIS}
{\bkmkend AAAAAAACIS}
\cell }{\cell }{\row }
{\xe \v OP_SETFIELD\:lopcodes.h}
{\xe \v lopcodes.h\:OP_SETFIELD}
{\qr OP_SETFIELD{\bkmkstart AAAAAAACIT}
{\bkmkend AAAAAAACIT}
\cell }{\cell }{\row }
{\xe \v OP_NEWTABLE\:lopcodes.h}
{\xe \v lopcodes.h\:OP_NEWTABLE}
{\qr OP_NEWTABLE{\bkmkstart AAAAAAACIU}
{\bkmkend AAAAAAACIU}
\cell }{\cell }{\row }
{\xe \v OP_SELF\:lopcodes.h}
{\xe \v lopcodes.h\:OP_SELF}
{\qr OP_SELF{\bkmkstart AAAAAAACIV}
{\bkmkend AAAAAAACIV}
\cell }{\cell }{\row }
{\xe \v OP_ADDI\:lopcodes.h}
{\xe \v lopcodes.h\:OP_ADDI}
{\qr OP_ADDI{\bkmkstart AAAAAAACIW}
{\bkmkend AAAAAAACIW}
\cell }{\cell }{\row }
{\xe \v OP_ADDK\:lopcodes.h}
{\xe \v lopcodes.h\:OP_ADDK}
{\qr OP_ADDK{\bkmkstart AAAAAAACIX}
{\bkmkend AAAAAAACIX}
\cell }{\cell }{\row }
{\xe \v OP_SUBK\:lopcodes.h}
{\xe \v lopcodes.h\:OP_SUBK}
{\qr OP_SUBK{\bkmkstart AAAAAAACIY}
{\bkmkend AAAAAAACIY}
\cell }{\cell }{\row }
{\xe \v OP_MULK\:lopcodes.h}
{\xe \v lopcodes.h\:OP_MULK}
{\qr OP_MULK{\bkmkstart AAAAAAACIZ}
{\bkmkend AAAAAAACIZ}
\cell }{\cell }{\row }
{\xe \v OP_MODK\:lopcodes.h}
{\xe \v lopcodes.h\:OP_MODK}
{\qr OP_MODK{\bkmkstart AAAAAAACJA}
{\bkmkend AAAAAAACJA}
\cell }{\cell }{\row }
{\xe \v OP_POWK\:lopcodes.h}
{\xe \v lopcodes.h\:OP_POWK}
{\qr OP_POWK{\bkmkstart AAAAAAACJB}
{\bkmkend AAAAAAACJB}
\cell }{\cell }{\row }
{\xe \v OP_DIVK\:lopcodes.h}
{\xe \v lopcodes.h\:OP_DIVK}
{\qr OP_DIVK{\bkmkstart AAAAAAACJC}
{\bkmkend AAAAAAACJC}
\cell }{\cell }{\row }
{\xe \v OP_IDIVK\:lopcodes.h}
{\xe \v lopcodes.h\:OP_IDIVK}
{\qr OP_IDIVK{\bkmkstart AAAAAAACJD}
{\bkmkend AAAAAAACJD}
\cell }{\cell }{\row }
{\xe \v OP_BANDK\:lopcodes.h}
{\xe \v lopcodes.h\:OP_BANDK}
{\qr OP_BANDK{\bkmkstart AAAAAAACJE}
{\bkmkend AAAAAAACJE}
\cell }{\cell }{\row }
{\xe \v OP_BORK\:lopcodes.h}
{\xe \v lopcodes.h\:OP_BORK}
{\qr OP_BORK{\bkmkstart AAAAAAACJF}
{\bkmkend AAAAAAACJF}
\cell }{\cell }{\row }
{\xe \v OP_BXORK\:lopcodes.h}
{\xe \v lopcodes.h\:OP_BXORK}
{\qr OP_BXORK{\bkmkstart AAAAAAACJG}
{\bkmkend AAAAAAACJG}
\cell }{\cell }{\row }
{\xe \v OP_SHRI\:lopcodes.h}
{\xe \v lopcodes.h\:OP_SHRI}
{\qr OP_SHRI{\bkmkstart AAAAAAACJH}
{\bkmkend AAAAAAACJH}
\cell }{\cell }{\row }
{\xe \v OP_SHLI\:lopcodes.h}
{\xe \v lopcodes.h\:OP_SHLI}
{\qr OP_SHLI{\bkmkstart AAAAAAACJI}
{\bkmkend AAAAAAACJI}
\cell }{\cell }{\row }
{\xe \v OP_ADD\:lopcodes.h}
{\xe \v lopcodes.h\:OP_ADD}
{\qr OP_ADD{\bkmkstart AAAAAAACJJ}
{\bkmkend AAAAAAACJJ}
\cell }{\cell }{\row }
{\xe \v OP_SUB\:lopcodes.h}
{\xe \v lopcodes.h\:OP_SUB}
{\qr OP_SUB{\bkmkstart AAAAAAACJK}
{\bkmkend AAAAAAACJK}
\cell }{\cell }{\row }
{\xe \v OP_MUL\:lopcodes.h}
{\xe \v lopcodes.h\:OP_MUL}
{\qr OP_MUL{\bkmkstart AAAAAAACJL}
{\bkmkend AAAAAAACJL}
\cell }{\cell }{\row }
{\xe \v OP_MOD\:lopcodes.h}
{\xe \v lopcodes.h\:OP_MOD}
{\qr OP_MOD{\bkmkstart AAAAAAACJM}
{\bkmkend AAAAAAACJM}
\cell }{\cell }{\row }
{\xe \v OP_POW\:lopcodes.h}
{\xe \v lopcodes.h\:OP_POW}
{\qr OP_POW{\bkmkstart AAAAAAACJN}
{\bkmkend AAAAAAACJN}
\cell }{\cell }{\row }
{\xe \v OP_DIV\:lopcodes.h}
{\xe \v lopcodes.h\:OP_DIV}
{\qr OP_DIV{\bkmkstart AAAAAAACJO}
{\bkmkend AAAAAAACJO}
\cell }{\cell }{\row }
{\xe \v OP_IDIV\:lopcodes.h}
{\xe \v lopcodes.h\:OP_IDIV}
{\qr OP_IDIV{\bkmkstart AAAAAAACJP}
{\bkmkend AAAAAAACJP}
\cell }{\cell }{\row }
{\xe \v OP_BAND\:lopcodes.h}
{\xe \v lopcodes.h\:OP_BAND}
{\qr OP_BAND{\bkmkstart AAAAAAACJQ}
{\bkmkend AAAAAAACJQ}
\cell }{\cell }{\row }
{\xe \v OP_BOR\:lopcodes.h}
{\xe \v lopcodes.h\:OP_BOR}
{\qr OP_BOR{\bkmkstart AAAAAAACJR}
{\bkmkend AAAAAAACJR}
\cell }{\cell }{\row }
{\xe \v OP_BXOR\:lopcodes.h}
{\xe \v lopcodes.h\:OP_BXOR}
{\qr OP_BXOR{\bkmkstart AAAAAAACJS}
{\bkmkend AAAAAAACJS}
\cell }{\cell }{\row }
{\xe \v OP_SHL\:lopcodes.h}
{\xe \v lopcodes.h\:OP_SHL}
{\qr OP_SHL{\bkmkstart AAAAAAACJT}
{\bkmkend AAAAAAACJT}
\cell }{\cell }{\row }
{\xe \v OP_SHR\:lopcodes.h}
{\xe \v lopcodes.h\:OP_SHR}
{\qr OP_SHR{\bkmkstart AAAAAAACJU}
{\bkmkend AAAAAAACJU}
\cell }{\cell }{\row }
{\xe \v OP_MMBIN\:lopcodes.h}
{\xe \v lopcodes.h\:OP_MMBIN}
{\qr OP_MMBIN{\bkmkstart AAAAAAACJV}
{\bkmkend AAAAAAACJV}
\cell }{\cell }{\row }
{\xe \v OP_MMBINI\:lopcodes.h}
{\xe \v lopcodes.h\:OP_MMBINI}
{\qr OP_MMBINI{\bkmkstart AAAAAAACJW}
{\bkmkend AAAAAAACJW}
\cell }{\cell }{\row }
{\xe \v OP_MMBINK\:lopcodes.h}
{\xe \v lopcodes.h\:OP_MMBINK}
{\qr OP_MMBINK{\bkmkstart AAAAAAACJX}
{\bkmkend AAAAAAACJX}
\cell }{\cell }{\row }
{\xe \v OP_UNM\:lopcodes.h}
{\xe \v lopcodes.h\:OP_UNM}
{\qr OP_UNM{\bkmkstart AAAAAAACJY}
{\bkmkend AAAAAAACJY}
\cell }{\cell }{\row }
{\xe \v OP_BNOT\:lopcodes.h}
{\xe \v lopcodes.h\:OP_BNOT}
{\qr OP_BNOT{\bkmkstart AAAAAAACJZ}
{\bkmkend AAAAAAACJZ}
\cell }{\cell }{\row }
{\xe \v OP_NOT\:lopcodes.h}
{\xe \v lopcodes.h\:OP_NOT}
{\qr OP_NOT{\bkmkstart AAAAAAACKA}
{\bkmkend AAAAAAACKA}
\cell }{\cell }{\row }
{\xe \v OP_LEN\:lopcodes.h}
{\xe \v lopcodes.h\:OP_LEN}
{\qr OP_LEN{\bkmkstart AAAAAAACKB}
{\bkmkend AAAAAAACKB}
\cell }{\cell }{\row }
{\xe \v OP_CONCAT\:lopcodes.h}
{\xe \v lopcodes.h\:OP_CONCAT}
{\qr OP_CONCAT{\bkmkstart AAAAAAACKC}
{\bkmkend AAAAAAACKC}
\cell }{\cell }{\row }
{\xe \v OP_CLOSE\:lopcodes.h}
{\xe \v lopcodes.h\:OP_CLOSE}
{\qr OP_CLOSE{\bkmkstart AAAAAAACKD}
{\bkmkend AAAAAAACKD}
\cell }{\cell }{\row }
{\xe \v OP_TBC\:lopcodes.h}
{\xe \v lopcodes.h\:OP_TBC}
{\qr OP_TBC{\bkmkstart AAAAAAACKE}
{\bkmkend AAAAAAACKE}
\cell }{\cell }{\row }
{\xe \v OP_JMP\:lopcodes.h}
{\xe \v lopcodes.h\:OP_JMP}
{\qr OP_JMP{\bkmkstart AAAAAAACKF}
{\bkmkend AAAAAAACKF}
\cell }{\cell }{\row }
{\xe \v OP_EQ\:lopcodes.h}
{\xe \v lopcodes.h\:OP_EQ}
{\qr OP_EQ{\bkmkstart AAAAAAACKG}
{\bkmkend AAAAAAACKG}
\cell }{\cell }{\row }
{\xe \v OP_LT\:lopcodes.h}
{\xe \v lopcodes.h\:OP_LT}
{\qr OP_LT{\bkmkstart AAAAAAACKH}
{\bkmkend AAAAAAACKH}
\cell }{\cell }{\row }
{\xe \v OP_LE\:lopcodes.h}
{\xe \v lopcodes.h\:OP_LE}
{\qr OP_LE{\bkmkstart AAAAAAACKI}
{\bkmkend AAAAAAACKI}
\cell }{\cell }{\row }
{\xe \v OP_EQK\:lopcodes.h}
{\xe \v lopcodes.h\:OP_EQK}
{\qr OP_EQK{\bkmkstart AAAAAAACKJ}
{\bkmkend AAAAAAACKJ}
\cell }{\cell }{\row }
{\xe \v OP_EQI\:lopcodes.h}
{\xe \v lopcodes.h\:OP_EQI}
{\qr OP_EQI{\bkmkstart AAAAAAACKK}
{\bkmkend AAAAAAACKK}
\cell }{\cell }{\row }
{\xe \v OP_LTI\:lopcodes.h}
{\xe \v lopcodes.h\:OP_LTI}
{\qr OP_LTI{\bkmkstart AAAAAAACKL}
{\bkmkend AAAAAAACKL}
\cell }{\cell }{\row }
{\xe \v OP_LEI\:lopcodes.h}
{\xe \v lopcodes.h\:OP_LEI}
{\qr OP_LEI{\bkmkstart AAAAAAACKM}
{\bkmkend AAAAAAACKM}
\cell }{\cell }{\row }
{\xe \v OP_GTI\:lopcodes.h}
{\xe \v lopcodes.h\:OP_GTI}
{\qr OP_GTI{\bkmkstart AAAAAAACKN}
{\bkmkend AAAAAAACKN}
\cell }{\cell }{\row }
{\xe \v OP_GEI\:lopcodes.h}
{\xe \v lopcodes.h\:OP_GEI}
{\qr OP_GEI{\bkmkstart AAAAAAACKO}
{\bkmkend AAAAAAACKO}
\cell }{\cell }{\row }
{\xe \v OP_TEST\:lopcodes.h}
{\xe \v lopcodes.h\:OP_TEST}
{\qr OP_TEST{\bkmkstart AAAAAAACKP}
{\bkmkend AAAAAAACKP}
\cell }{\cell }{\row }
{\xe \v OP_TESTSET\:lopcodes.h}
{\xe \v lopcodes.h\:OP_TESTSET}
{\qr OP_TESTSET{\bkmkstart AAAAAAACKQ}
{\bkmkend AAAAAAACKQ}
\cell }{\cell }{\row }
{\xe \v OP_CALL\:lopcodes.h}
{\xe \v lopcodes.h\:OP_CALL}
{\qr OP_CALL{\bkmkstart AAAAAAACKR}
{\bkmkend AAAAAAACKR}
\cell }{\cell }{\row }
{\xe \v OP_TAILCALL\:lopcodes.h}
{\xe \v lopcodes.h\:OP_TAILCALL}
{\qr OP_TAILCALL{\bkmkstart AAAAAAACKS}
{\bkmkend AAAAAAACKS}
\cell }{\cell }{\row }
{\xe \v OP_RETURN\:lopcodes.h}
{\xe \v lopcodes.h\:OP_RETURN}
{\qr OP_RETURN{\bkmkstart AAAAAAACKT}
{\bkmkend AAAAAAACKT}
\cell }{\cell }{\row }
{\xe \v OP_RETURN0\:lopcodes.h}
{\xe \v lopcodes.h\:OP_RETURN0}
{\qr OP_RETURN0{\bkmkstart AAAAAAACKU}
{\bkmkend AAAAAAACKU}
\cell }{\cell }{\row }
{\xe \v OP_RETURN1\:lopcodes.h}
{\xe \v lopcodes.h\:OP_RETURN1}
{\qr OP_RETURN1{\bkmkstart AAAAAAACKV}
{\bkmkend AAAAAAACKV}
\cell }{\cell }{\row }
{\xe \v OP_FORLOOP\:lopcodes.h}
{\xe \v lopcodes.h\:OP_FORLOOP}
{\qr OP_FORLOOP{\bkmkstart AAAAAAACKW}
{\bkmkend AAAAAAACKW}
\cell }{\cell }{\row }
{\xe \v OP_FORPREP\:lopcodes.h}
{\xe \v lopcodes.h\:OP_FORPREP}
{\qr OP_FORPREP{\bkmkstart AAAAAAACKX}
{\bkmkend AAAAAAACKX}
\cell }{\cell }{\row }
{\xe \v OP_TFORPREP\:lopcodes.h}
{\xe \v lopcodes.h\:OP_TFORPREP}
{\qr OP_TFORPREP{\bkmkstart AAAAAAACKY}
{\bkmkend AAAAAAACKY}
\cell }{\cell }{\row }
{\xe \v OP_TFORCALL\:lopcodes.h}
{\xe \v lopcodes.h\:OP_TFORCALL}
{\qr OP_TFORCALL{\bkmkstart AAAAAAACKZ}
{\bkmkend AAAAAAACKZ}
\cell }{\cell }{\row }
{\xe \v OP_TFORLOOP\:lopcodes.h}
{\xe \v lopcodes.h\:OP_TFORLOOP}
{\qr OP_TFORLOOP{\bkmkstart AAAAAAACLA}
{\bkmkend AAAAAAACLA}
\cell }{\cell }{\row }
{\xe \v OP_SETLIST\:lopcodes.h}
{\xe \v lopcodes.h\:OP_SETLIST}
{\qr OP_SETLIST{\bkmkstart AAAAAAACLB}
{\bkmkend AAAAAAACLB}
\cell }{\cell }{\row }
{\xe \v OP_CLOSURE\:lopcodes.h}
{\xe \v lopcodes.h\:OP_CLOSURE}
{\qr OP_CLOSURE{\bkmkstart AAAAAAACLC}
{\bkmkend AAAAAAACLC}
\cell }{\cell }{\row }
{\xe \v OP_VARARG\:lopcodes.h}
{\xe \v lopcodes.h\:OP_VARARG}
{\qr OP_VARARG{\bkmkstart AAAAAAACLD}
{\bkmkend AAAAAAACLD}
\cell }{\cell }{\row }
{\xe \v OP_VARARGPREP\:lopcodes.h}
{\xe \v lopcodes.h\:OP_VARARGPREP}
{\qr OP_VARARGPREP{\bkmkstart AAAAAAACLE}
{\bkmkend AAAAAAACLE}
\cell }{\cell }{\row }
{\xe \v OP_EXTRAARG\:lopcodes.h}
{\xe \v lopcodes.h\:OP_EXTRAARG}
{\qr OP_EXTRAARG{\bkmkstart AAAAAAACLF}
{\bkmkend AAAAAAACLF}
\cell }{\cell }{\row }
}
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lopcodes.h \'B5\'DA 196 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v OpMode\:lopcodes.h}
{\xe \v lopcodes.h\:OpMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b OpMode}}}
\par
{\bkmkstart AAAAAAACLG}
{\bkmkend AAAAAAACLG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C3\'B6\'BE\'D9\'D6\'B5:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v iABC\:lopcodes.h}
{\xe \v lopcodes.h\:iABC}
{\qr iABC{\bkmkstart AAAAAAACLH}
{\bkmkend AAAAAAACLH}
\cell }{\cell }{\row }
{\xe \v iABx\:lopcodes.h}
{\xe \v lopcodes.h\:iABx}
{\qr iABx{\bkmkstart AAAAAAACLI}
{\bkmkend AAAAAAACLI}
\cell }{\cell }{\row }
{\xe \v iAsBx\:lopcodes.h}
{\xe \v lopcodes.h\:iAsBx}
{\qr iAsBx{\bkmkstart AAAAAAACLJ}
{\bkmkend AAAAAAACLJ}
\cell }{\cell }{\row }
{\xe \v iAx\:lopcodes.h}
{\xe \v lopcodes.h\:iAx}
{\qr iAx{\bkmkstart AAAAAAACLK}
{\bkmkend AAAAAAACLK}
\cell }{\cell }{\row }
{\xe \v isJ\:lopcodes.h}
{\xe \v lopcodes.h\:isJ}
{\qr isJ{\bkmkstart AAAAAAACLL}
{\bkmkend AAAAAAACLL}
\cell }{\cell }{\row }
}
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lopcodes.h \'B5\'DA 32 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/gitworkspace/lua/src/lopnames.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v D:/gitworkspace/lua/src/lopnames.h}
{\xe \v D:/gitworkspace/lua/src/lopnames.h}
{\bkmkstart AAAAAAACLM}
{\bkmkend AAAAAAACLM}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stddef.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const char *const {\b opnames} []\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v opnames\:lopnames.h}
{\xe \v lopnames.h\:opnames}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* const opnames[]{\f2 [static]}}}
\par
{\bkmkstart AAAAAAACLN}
{\bkmkend AAAAAAACLN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lopnames.h \'B5\'DA 15 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/gitworkspace/lua/src/loslib.c \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v D:/gitworkspace/lua/src/loslib.c}
{\xe \v D:/gitworkspace/lua/src/loslib.c}
{\bkmkstart AAAAAAACLO}
{\bkmkend AAAAAAACLO}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "lprefix.h"}\par
{\f2 #include <errno.h>}\par
{\f2 #include <locale.h>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <string.h>}\par
{\f2 #include <time.h>}\par
{\f2 #include "lua.h"}\par
{\f2 #include "lauxlib.h"}\par
{\f2 #include "lualib.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b loslib_c}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_LIB}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b L_STRFTIMEC89}\~ "aAbBcdHIjmMpSUwWxXyYZ%"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b L_STRFTIMEC99}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b L_STRFTIMEWIN}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_STRFTIMEOPTIONS}\~ {\b L_STRFTIMEC99}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b l_timet}\~ {\b lua_Integer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b l_pushtime}(L,  t)\~ {\b lua_pushinteger}(L,({\b lua_Integer})(t))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b l_gettime}(L,  arg)\~ {\b luaL_checkinteger}(L, arg)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b l_gmtime}(t,  r)\~ ((void)(r)->tm_sec, gmtime(t))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b l_localtime}(t,  r)\~ ((void)(r)->tm_sec, localtime(t))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_TMPNAMBUFSIZE}\~ L_tmpnam\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lua_tmpnam}(b,  e)\~ \{ e = (tmpnam(b) == NULL); \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SIZETIMEFMT}\~ 250\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b os_execute} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b os_remove} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b os_rename} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b os_tmpname} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b os_getenv} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b os_clock} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b setfield} ({\b lua_State} *L, const char *key, int value, int delta)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b setboolfield} ({\b lua_State} *L, const char *key, int value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b setallfields} ({\b lua_State} *L, struct tm *stm)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b getboolfield} ({\b lua_State} *L, const char *key)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b getfield} ({\b lua_State} *L, const char *key, int d, int delta)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const char * {\b checkoption} ({\b lua_State} *L, const char *conv, ptrdiff_t convlen, char *buff)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static time_t {\b l_checktime} ({\b lua_State} *L, int arg)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b os_date} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b os_time} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b os_difftime} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b os_setlocale} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b os_exit} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAMOD_API} int {\b luaopen_os} ({\b lua_State} *L)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const {\b luaL_Reg} {\b syslib} []\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v l_gettime\:loslib.c}
{\xe \v loslib.c\:l_gettime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define l_gettime( L,  arg)\~ {\b luaL_checkinteger}(L, arg)}}
\par
{\bkmkstart AAAAAAACLP}
{\bkmkend AAAAAAACLP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loslib.c \'B5\'DA 69 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v l_gmtime\:loslib.c}
{\xe \v loslib.c\:l_gmtime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define l_gmtime( t,  r)\~ ((void)(r)->tm_sec, gmtime(t))}}
\par
{\bkmkstart AAAAAAACLQ}
{\bkmkend AAAAAAACLQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loslib.c \'B5\'DA 94 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v l_localtime\:loslib.c}
{\xe \v loslib.c\:l_localtime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define l_localtime( t,  r)\~ ((void)(r)->tm_sec, localtime(t))}}
\par
{\bkmkstart AAAAAAACLR}
{\bkmkend AAAAAAACLR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loslib.c \'B5\'DA 95 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v l_pushtime\:loslib.c}
{\xe \v loslib.c\:l_pushtime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define l_pushtime( L,  t)\~ {\b lua_pushinteger}(L,({\b lua_Integer})(t))}}
\par
{\bkmkstart AAAAAAACLS}
{\bkmkend AAAAAAACLS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loslib.c \'B5\'DA 68 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v L_STRFTIMEC89\:loslib.c}
{\xe \v loslib.c\:L_STRFTIMEC89}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define L_STRFTIMEC89\~ "aAbBcdHIjmMpSUwWxXyYZ%"}}
\par
{\bkmkstart AAAAAAACLT}
{\bkmkend AAAAAAACLT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loslib.c \'B5\'DA 34 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v L_STRFTIMEC99\:loslib.c}
{\xe \v loslib.c\:L_STRFTIMEC99}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define L_STRFTIMEC99}}
\par
{\bkmkstart AAAAAAACLU}
{\bkmkend AAAAAAACLU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     {\cf22 "aAbBcCdDeFgGhHIjmMnprRStTuUVwWxXyYzZ%"} \\\par
    {\cf22 "||"} {\cf22 "EcECExEXEyEY"} {\cf22 "OdOeOHOIOmOMOSOuOUOVOwOWOy"}  {\cf20 /* two-char options */}\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE loslib.c \'B5\'DA 37 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v L_STRFTIMEWIN\:loslib.c}
{\xe \v loslib.c\:L_STRFTIMEWIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define L_STRFTIMEWIN}}
\par
{\bkmkstart AAAAAAACLV}
{\bkmkend AAAAAAACLV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     {\cf22 "aAbBcdHIjmMpSUwWxXyYzZ%"} \\\par
    {\cf22 "||"} {\cf22 "#c#x#d#H#I#j#m#M#S#U#w#W#y#Y"}  {\cf20 /* two-char options */}\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE loslib.c \'B5\'DA 41 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v l_timet\:loslib.c}
{\xe \v loslib.c\:l_timet}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define l_timet\~ {\b lua_Integer}}}
\par
{\bkmkstart AAAAAAACLW}
{\bkmkend AAAAAAACLW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loslib.c \'B5\'DA 67 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v loslib_c\:loslib.c}
{\xe \v loslib.c\:loslib_c}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define loslib_c}}
\par
{\bkmkstart AAAAAAACLX}
{\bkmkend AAAAAAACLX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loslib.c \'B5\'DA 7 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_LIB\:loslib.c}
{\xe \v loslib.c\:LUA_LIB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_LIB}}
\par
{\bkmkstart AAAAAAACLY}
{\bkmkend AAAAAAACLY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loslib.c \'B5\'DA 8 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_STRFTIMEOPTIONS\:loslib.c}
{\xe \v loslib.c\:LUA_STRFTIMEOPTIONS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_STRFTIMEOPTIONS\~ {\b L_STRFTIMEC99}}}
\par
{\bkmkstart AAAAAAACLZ}
{\bkmkend AAAAAAACLZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loslib.c \'B5\'DA 49 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_tmpnam\:loslib.c}
{\xe \v loslib.c\:lua_tmpnam}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lua_tmpnam( b,  e)\~ \{ e = (tmpnam(b) == NULL); \}}}
\par
{\bkmkstart AAAAAAACMA}
{\bkmkend AAAAAAACMA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loslib.c \'B5\'DA 133 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_TMPNAMBUFSIZE\:loslib.c}
{\xe \v loslib.c\:LUA_TMPNAMBUFSIZE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_TMPNAMBUFSIZE\~ L_tmpnam}}
\par
{\bkmkstart AAAAAAACMB}
{\bkmkend AAAAAAACMB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loslib.c \'B5\'DA 132 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v SIZETIMEFMT\:loslib.c}
{\xe \v loslib.c\:SIZETIMEFMT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SIZETIMEFMT\~ 250}}
\par
{\bkmkstart AAAAAAACMC}
{\bkmkend AAAAAAACMC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loslib.c \'B5\'DA 301 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v checkoption\:loslib.c}
{\xe \v loslib.c\:checkoption}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static const char* checkoption ({\b lua_State} *  {\i L}, const char *  {\i conv}, ptrdiff_t  {\i convlen}, char *  {\i buff}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACMD}
{\bkmkend AAAAAAACMD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loslib.c \'B5\'DA 274 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v getboolfield\:loslib.c}
{\xe \v loslib.c\:getboolfield}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int getboolfield ({\b lua_State} *  {\i L}, const char *  {\i key}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACME}
{\bkmkend AAAAAAACME}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loslib.c \'B5\'DA 243 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v getfield\:loslib.c}
{\xe \v loslib.c\:getfield}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int getfield ({\b lua_State} *  {\i L}, const char *  {\i key}, int  {\i d}, int  {\i delta}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACMF}
{\bkmkend AAAAAAACMF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loslib.c \'B5\'DA 251 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v l_checktime\:loslib.c}
{\xe \v loslib.c\:l_checktime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static time_t l_checktime ({\b lua_State} *  {\i L}, int  {\i arg}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACMG}
{\bkmkend AAAAAAACMG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loslib.c \'B5\'DA 293 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaopen_os\:loslib.c}
{\xe \v loslib.c\:luaopen_os}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAMOD_API} int luaopen_os ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAACMH}
{\bkmkend AAAAAAACMH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loslib.c \'B5\'DA 426 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v os_clock\:loslib.c}
{\xe \v loslib.c\:os_clock}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int os_clock ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACMI}
{\bkmkend AAAAAAACMI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loslib.c \'B5\'DA 186 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v os_date\:loslib.c}
{\xe \v loslib.c\:os_date}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int os_date ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACMJ}
{\bkmkend AAAAAAACMJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loslib.c \'B5\'DA 304 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v os_difftime\:loslib.c}
{\xe \v loslib.c\:os_difftime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int os_difftime ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACMK}
{\bkmkend AAAAAAACMK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loslib.c \'B5\'DA 372 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v os_execute\:loslib.c}
{\xe \v loslib.c\:os_execute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int os_execute ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACML}
{\bkmkend AAAAAAACML}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loslib.c \'B5\'DA 142 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v os_exit\:loslib.c}
{\xe \v loslib.c\:os_exit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int os_exit ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACMM}
{\bkmkend AAAAAAACMM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loslib.c \'B5\'DA 394 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v os_getenv\:loslib.c}
{\xe \v loslib.c\:os_getenv}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int os_getenv ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACMN}
{\bkmkend AAAAAAACMN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loslib.c \'B5\'DA 180 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v os_remove\:loslib.c}
{\xe \v loslib.c\:os_remove}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int os_remove ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACMO}
{\bkmkend AAAAAAACMO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loslib.c \'B5\'DA 156 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v os_rename\:loslib.c}
{\xe \v loslib.c\:os_rename}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int os_rename ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACMP}
{\bkmkend AAAAAAACMP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loslib.c \'B5\'DA 162 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v os_setlocale\:loslib.c}
{\xe \v loslib.c\:os_setlocale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int os_setlocale ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACMQ}
{\bkmkend AAAAAAACMQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loslib.c \'B5\'DA 382 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v os_time\:loslib.c}
{\xe \v loslib.c\:os_time}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int os_time ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACMR}
{\bkmkend AAAAAAACMR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loslib.c \'B5\'DA 346 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v os_tmpname\:loslib.c}
{\xe \v loslib.c\:os_tmpname}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int os_tmpname ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACMS}
{\bkmkend AAAAAAACMS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loslib.c \'B5\'DA 169 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v setallfields\:loslib.c}
{\xe \v loslib.c\:setallfields}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void setallfields ({\b lua_State} *  {\i L}, struct tm *  {\i stm}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACMT}
{\bkmkend AAAAAAACMT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loslib.c \'B5\'DA 230 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v setboolfield\:loslib.c}
{\xe \v loslib.c\:setboolfield}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void setboolfield ({\b lua_State} *  {\i L}, const char *  {\i key}, int  {\i value}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACMU}
{\bkmkend AAAAAAACMU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loslib.c \'B5\'DA 219 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v setfield\:loslib.c}
{\xe \v loslib.c\:setfield}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void setfield ({\b lua_State} *  {\i L}, const char *  {\i key}, int  {\i value}, int  {\i delta}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACMV}
{\bkmkend AAAAAAACMV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loslib.c \'B5\'DA 209 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v syslib\:loslib.c}
{\xe \v loslib.c\:syslib}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b luaL_Reg} syslib[]{\f2 [static]}}}
\par
{\bkmkstart AAAAAAACMW}
{\bkmkend AAAAAAACMW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'B3\'F5\'CA\'BC\'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{\par
  \{{\cf22 "clock"},     os_clock\},\par
  \{{\cf22 "date"},      os_date\},\par
  \{{\cf22 "difftime"},  os_difftime\},\par
  \{{\cf22 "execute"},   os_execute\},\par
  \{{\cf22 "exit"},      os_exit\},\par
  \{{\cf22 "getenv"},    os_getenv\},\par
  \{{\cf22 "remove"},    os_remove\},\par
  \{{\cf22 "rename"},    os_rename\},\par
  \{{\cf22 "setlocale"}, os_setlocale\},\par
  \{{\cf22 "time"},      os_time\},\par
  \{{\cf22 "tmpname"},   os_tmpname\},\par
  \{NULL, NULL\}\par
\}\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE loslib.c \'B5\'DA 407 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/gitworkspace/lua/src/lparser.c \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v D:/gitworkspace/lua/src/lparser.c}
{\xe \v D:/gitworkspace/lua/src/lparser.c}
{\bkmkstart AAAAAAACMX}
{\bkmkend AAAAAAACMX}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "lprefix.h"}\par
{\f2 #include <limits.h>}\par
{\f2 #include <string.h>}\par
{\f2 #include "lua.h"}\par
{\f2 #include "lcode.h"}\par
{\f2 #include "ldebug.h"}\par
{\f2 #include "ldo.h"}\par
{\f2 #include "lfunc.h"}\par
{\f2 #include "llex.h"}\par
{\f2 #include "lmem.h"}\par
{\f2 #include "lobject.h"}\par
{\f2 #include "lopcodes.h"}\par
{\f2 #include "lparser.h"}\par
{\f2 #include "lstate.h"}\par
{\f2 #include "lstring.h"}\par
{\f2 #include "ltable.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b BlockCnt}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b ConsControl}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LHS_assign}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lparser_c}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_CORE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAXVARS}\~ 200\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b hasmultret}(k)\~ ((k) == {\b VCALL} || (k) == {\b VVARARG})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b eqstr}(a,  b)\~ ((a) == (b))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b check_condition}(ls,  c,  msg)\~ \{ if (!(c)) {\b luaX_syntaxerror}(ls, msg); \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b new_localvarliteral}(ls,  v)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b enterlevel}(ls)\~ {\b luaE_enterCcall}((ls)->L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b leavelevel}(ls)\~ {\b luaE_exitCcall}((ls)->L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b UNARY_PRIORITY}\~ 12  /* {\b priority} for unary operators */\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'D0\'CD\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b BlockCnt} {\b BlockCnt}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b ConsControl} {\b ConsControl}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b statement} ({\b LexState} *ls)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b expr} ({\b LexState} *ls, {\b expdesc} *v)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b l_noret} {\b error_expected} ({\b LexState} *ls, int token)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b l_noret} {\b errorlimit} ({\b FuncState} *fs, int limit, const char *what)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b checklimit} ({\b FuncState} *fs, int v, int l, const char *what)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b testnext} ({\b LexState} *ls, int c)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b check} ({\b LexState} *ls, int c)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b checknext} ({\b LexState} *ls, int c)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b check_match} ({\b LexState} *ls, int what, int who, int where)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b TString} * {\b str_checkname} ({\b LexState} *ls)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b init_exp} ({\b expdesc} *e, {\b expkind} k, int i)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b codestring} ({\b expdesc} *e, {\b TString} *s)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b codename} ({\b LexState} *ls, {\b expdesc} *e)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b registerlocalvar} ({\b LexState} *ls, {\b FuncState} *fs, {\b TString} *varname)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b new_localvar} ({\b LexState} *ls, {\b TString} *name)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b Vardesc} * {\b getlocalvardesc} ({\b FuncState} *fs, int vidx)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b stacklevel} ({\b FuncState} *fs, int nvar)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b luaY_nvarstack} ({\b FuncState} *fs)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b LocVar} * {\b localdebuginfo} ({\b FuncState} *fs, int vidx)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b init_var} ({\b FuncState} *fs, {\b expdesc} *e, int vidx)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b check_readonly} ({\b LexState} *ls, {\b expdesc} *e)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b adjustlocalvars} ({\b LexState} *ls, int nvars)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b removevars} ({\b FuncState} *fs, int tolevel)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b searchupvalue} ({\b FuncState} *fs, {\b TString} *name)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b Upvaldesc} * {\b allocupvalue} ({\b FuncState} *fs)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b newupvalue} ({\b FuncState} *fs, {\b TString} *name, {\b expdesc} *v)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b searchvar} ({\b FuncState} *fs, {\b TString} *n, {\b expdesc} *var)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b markupval} ({\b FuncState} *fs, int level)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b singlevaraux} ({\b FuncState} *fs, {\b TString} *n, {\b expdesc} *var, int base)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b singlevar} ({\b LexState} *ls, {\b expdesc} *var)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b adjust_assign} ({\b LexState} *ls, int nvars, int nexps, {\b expdesc} *e)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b l_noret} {\b jumpscopeerror} ({\b LexState} *ls, {\b Labeldesc} *gt)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b solvegoto} ({\b LexState} *ls, int g, {\b Labeldesc} *label)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b Labeldesc} * {\b findlabel} ({\b LexState} *ls, {\b TString} *name)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b newlabelentry} ({\b LexState} *ls, {\b Labellist} *l, {\b TString} *name, int line, int pc)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b newgotoentry} ({\b LexState} *ls, {\b TString} *name, int line, int pc)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b solvegotos} ({\b LexState} *ls, {\b Labeldesc} *lb)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b createlabel} ({\b LexState} *ls, {\b TString} *name, int line, int last)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b movegotosout} ({\b FuncState} *fs, {\b BlockCnt} *bl)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b enterblock} ({\b FuncState} *fs, {\b BlockCnt} *bl, {\b lu_byte} isloop)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b l_noret} {\b undefgoto} ({\b LexState} *ls, {\b Labeldesc} *gt)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b leaveblock} ({\b FuncState} *fs)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b Proto} * {\b addprototype} ({\b LexState} *ls)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b codeclosure} ({\b LexState} *ls, {\b expdesc} *v)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b open_func} ({\b LexState} *ls, {\b FuncState} *fs, {\b BlockCnt} *bl)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b close_func} ({\b LexState} *ls)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b block_follow} ({\b LexState} *ls, int withuntil)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b statlist} ({\b LexState} *ls)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b fieldsel} ({\b LexState} *ls, {\b expdesc} *v)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b yindex} ({\b LexState} *ls, {\b expdesc} *v)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b recfield} ({\b LexState} *ls, {\b ConsControl} *cc)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b closelistfield} ({\b FuncState} *fs, {\b ConsControl} *cc)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b lastlistfield} ({\b FuncState} *fs, {\b ConsControl} *cc)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b listfield} ({\b LexState} *ls, {\b ConsControl} *cc)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b field} ({\b LexState} *ls, {\b ConsControl} *cc)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b constructor} ({\b LexState} *ls, {\b expdesc} *t)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b setvararg} ({\b FuncState} *fs, int nparams)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b parlist} ({\b LexState} *ls)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b body} ({\b LexState} *ls, {\b expdesc} *e, int ismethod, int line)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b explist} ({\b LexState} *ls, {\b expdesc} *v)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b funcargs} ({\b LexState} *ls, {\b expdesc} *f, int line)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b primaryexp} ({\b LexState} *ls, {\b expdesc} *v)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b suffixedexp} ({\b LexState} *ls, {\b expdesc} *v)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b simpleexp} ({\b LexState} *ls, {\b expdesc} *v)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b UnOpr} {\b getunopr} (int op)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b BinOpr} {\b getbinopr} (int op)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b BinOpr} {\b subexpr} ({\b LexState} *ls, {\b expdesc} *v, int limit)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b block} ({\b LexState} *ls)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b check_conflict} ({\b LexState} *ls, struct {\b LHS_assign} *lh, {\b expdesc} *v)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b restassign} ({\b LexState} *ls, struct {\b LHS_assign} *lh, int nvars)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b cond} ({\b LexState} *ls)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b gotostat} ({\b LexState} *ls)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b breakstat} ({\b LexState} *ls)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b checkrepeated} ({\b LexState} *ls, {\b TString} *name)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b labelstat} ({\b LexState} *ls, {\b TString} *name, int line)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b whilestat} ({\b LexState} *ls, int line)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b repeatstat} ({\b LexState} *ls, int line)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b exp1} ({\b LexState} *ls)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b fixforjump} ({\b FuncState} *fs, int pc, int dest, int back)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b forbody} ({\b LexState} *ls, int base, int line, int nvars, int isgen)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b fornum} ({\b LexState} *ls, {\b TString} *varname, int line)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b forlist} ({\b LexState} *ls, {\b TString} *indexname)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b forstat} ({\b LexState} *ls, int line)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b issinglejump} ({\b LexState} *ls, {\b TString} **label, int *target)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b test_then_block} ({\b LexState} *ls, int *escapelist)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b ifstat} ({\b LexState} *ls, int line)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b localfunc} ({\b LexState} *ls)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b getlocalattribute} ({\b LexState} *ls)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b checktoclose} ({\b LexState} *ls, int level)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b localstat} ({\b LexState} *ls)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b funcname} ({\b LexState} *ls, {\b expdesc} *v)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b funcstat} ({\b LexState} *ls, int line)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b exprstat} ({\b LexState} *ls)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b retstat} ({\b LexState} *ls)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b mainfunc} ({\b LexState} *ls, {\b FuncState} *fs)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LClosure} * {\b luaY_parser} ({\b lua_State} *L, {\b ZIO} *z, {\b Mbuffer} *buff, {\b Dyndata} *dyd, const char *name, int firstchar)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union \{\par

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ {\b lu_byte} {\b left}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ {\b lu_byte} {\b right}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ int {\b dummy}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ char {\b little}\par
}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\} {\b priority} []\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v check_condition\:lparser.c}
{\xe \v lparser.c\:check_condition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define check_condition( ls,  c,  msg)\~ \{ if (!(c)) {\b luaX_syntaxerror}(ls, msg); \}}}
\par
{\bkmkstart AAAAAAACMY}
{\bkmkend AAAAAAACMY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 122 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v enterlevel\:lparser.c}
{\xe \v lparser.c\:enterlevel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define enterlevel( ls)\~ {\b luaE_enterCcall}((ls)->L)}}
\par
{\bkmkstart AAAAAAACMZ}
{\bkmkend AAAAAAACMZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 495 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v eqstr\:lparser.c}
{\xe \v lparser.c\:eqstr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define eqstr( a,  b)\~ ((a) == (b))}}
\par
{\bkmkstart AAAAAAACNA}
{\bkmkend AAAAAAACNA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 43 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v hasmultret\:lparser.c}
{\xe \v lparser.c\:hasmultret}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define hasmultret( k)\~ ((k) == {\b VCALL} || (k) == {\b VVARARG})}}
\par
{\bkmkstart AAAAAAACNB}
{\bkmkend AAAAAAACNB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 38 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v leavelevel\:lparser.c}
{\xe \v lparser.c\:leavelevel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define leavelevel( ls)\~ {\b luaE_exitCcall}((ls)->L)}}
\par
{\bkmkstart AAAAAAACNC}
{\bkmkend AAAAAAACNC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 497 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lparser_c\:lparser.c}
{\xe \v lparser.c\:lparser_c}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lparser_c}}
\par
{\bkmkstart AAAAAAACND}
{\bkmkend AAAAAAACND}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 7 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_CORE\:lparser.c}
{\xe \v lparser.c\:LUA_CORE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_CORE}}
\par
{\bkmkstart AAAAAAACNE}
{\bkmkend AAAAAAACNE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 8 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v MAXVARS\:lparser.c}
{\xe \v lparser.c\:MAXVARS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAXVARS\~ 200}}
\par
{\bkmkstart AAAAAAACNF}
{\bkmkend AAAAAAACNF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 35 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v new_localvarliteral\:lparser.c}
{\xe \v lparser.c\:new_localvarliteral}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define new_localvarliteral( ls,  v)}}
\par
{\bkmkstart AAAAAAACNG}
{\bkmkend AAAAAAACNG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     new_localvar(ls,  \\\par
      luaX_newstring(ls, {\cf22 ""} v, ({\cf17 sizeof}(v)/{\cf17 sizeof}({\cf18 char})) - 1));\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 208 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v UNARY_PRIORITY\:lparser.c}
{\xe \v lparser.c\:UNARY_PRIORITY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define UNARY_PRIORITY\~ 12  /* {\b priority} for unary operators */}}
\par
{\bkmkstart AAAAAAACNH}
{\bkmkend AAAAAAACNH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 1243 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'D0\'CD\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v BlockCnt\:lparser.c}
{\xe \v lparser.c\:BlockCnt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b BlockCnt} {\b BlockCnt}}}
\par
{\bkmkstart AAAAAAACNI}
{\bkmkend AAAAAAACNI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ConsControl\:lparser.c}
{\xe \v lparser.c\:ConsControl}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b ConsControl} {\b ConsControl}}}
\par
{\bkmkstart AAAAAAACNJ}
{\bkmkend AAAAAAACNJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v addprototype\:lparser.c}
{\xe \v lparser.c\:addprototype}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b Proto}* addprototype ({\b LexState} *  {\i ls}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACNK}
{\bkmkend AAAAAAACNK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 688 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v adjust_assign\:lparser.c}
{\xe \v lparser.c\:adjust_assign}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void adjust_assign ({\b LexState} *  {\i ls}, int  {\i nvars}, int  {\i nexps}, {\b expdesc} *  {\i e}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACNL}
{\bkmkend AAAAAAACNL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 470 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v adjustlocalvars\:lparser.c}
{\xe \v lparser.c\:adjustlocalvars}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void adjustlocalvars ({\b LexState} *  {\i ls}, int  {\i nvars}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACNM}
{\bkmkend AAAAAAACNM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 311 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v allocupvalue\:lparser.c}
{\xe \v lparser.c\:allocupvalue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b Upvaldesc}* allocupvalue ({\b FuncState} *  {\i fs}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACNN}
{\bkmkend AAAAAAACNN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 352 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v block\:lparser.c}
{\xe \v lparser.c\:block}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void block ({\b LexState} *  {\i ls}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACNO}
{\bkmkend AAAAAAACNO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 1295 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v block_follow\:lparser.c}
{\xe \v lparser.c\:block_follow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int block_follow ({\b LexState} *  {\i ls}, int  {\i withuntil}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACNP}
{\bkmkend AAAAAAACNP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 778 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v body\:lparser.c}
{\xe \v lparser.c\:body}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void body ({\b LexState} *  {\i ls}, {\b expdesc} *  {\i e}, int  {\i ismethod}, int  {\i line}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACNQ}
{\bkmkend AAAAAAACNQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 980 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v breakstat\:lparser.c}
{\xe \v lparser.c\:breakstat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void breakstat ({\b LexState} *  {\i ls}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACNR}
{\bkmkend AAAAAAACNR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 1428 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v check\:lparser.c}
{\xe \v lparser.c\:check}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void check ({\b LexState} *  {\i ls}, int  {\i c}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACNS}
{\bkmkend AAAAAAACNS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 107 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v check_conflict\:lparser.c}
{\xe \v lparser.c\:check_conflict}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void check_conflict ({\b LexState} *  {\i ls}, struct {\b LHS_assign} *  {\i lh}, {\b expdesc} *  {\i v}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACNT}
{\bkmkend AAAAAAACNT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 1321 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v check_match\:lparser.c}
{\xe \v lparser.c\:check_match}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void check_match ({\b LexState} *  {\i ls}, int  {\i what}, int  {\i who}, int  {\i where}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACNU}
{\bkmkend AAAAAAACNU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 130 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v check_readonly\:lparser.c}
{\xe \v lparser.c\:check_readonly}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void check_readonly ({\b LexState} *  {\i ls}, {\b expdesc} *  {\i e}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACNV}
{\bkmkend AAAAAAACNV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 277 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v checklimit\:lparser.c}
{\xe \v lparser.c\:checklimit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void checklimit ({\b FuncState} *  {\i fs}, int  {\i v}, int  {\i l}, const char *  {\i what}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACNW}
{\bkmkend AAAAAAACNW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 87 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v checknext\:lparser.c}
{\xe \v lparser.c\:checknext}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void checknext ({\b LexState} *  {\i ls}, int  {\i c}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACNX}
{\bkmkend AAAAAAACNX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 116 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v checkrepeated\:lparser.c}
{\xe \v lparser.c\:checkrepeated}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void checkrepeated ({\b LexState} *  {\i ls}, {\b TString} *  {\i name}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACNY}
{\bkmkend AAAAAAACNY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 1438 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v checktoclose\:lparser.c}
{\xe \v lparser.c\:checktoclose}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void checktoclose ({\b LexState} *  {\i ls}, int  {\i level}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACNZ}
{\bkmkend AAAAAAACNZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 1746 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v close_func\:lparser.c}
{\xe \v lparser.c\:close_func}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void close_func ({\b LexState} *  {\i ls}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACOA}
{\bkmkend AAAAAAACOA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 746 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v closelistfield\:lparser.c}
{\xe \v lparser.c\:closelistfield}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void closelistfield ({\b FuncState} *  {\i fs}, {\b ConsControl} *  {\i cc}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACOB}
{\bkmkend AAAAAAACOB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 858 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v codeclosure\:lparser.c}
{\xe \v lparser.c\:codeclosure}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void codeclosure ({\b LexState} *  {\i ls}, {\b expdesc} *  {\i v}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACOC}
{\bkmkend AAAAAAACOC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 712 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v codename\:lparser.c}
{\xe \v lparser.c\:codename}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void codename ({\b LexState} *  {\i ls}, {\b expdesc} *  {\i e}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACOD}
{\bkmkend AAAAAAACOD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 166 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v codestring\:lparser.c}
{\xe \v lparser.c\:codestring}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void codestring ({\b expdesc} *  {\i e}, {\b TString} *  {\i s}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACOE}
{\bkmkend AAAAAAACOE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 159 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v cond\:lparser.c}
{\xe \v lparser.c\:cond}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int cond ({\b LexState} *  {\i ls}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACOF}
{\bkmkend AAAAAAACOF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 1396 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v constructor\:lparser.c}
{\xe \v lparser.c\:constructor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void constructor ({\b LexState} *  {\i ls}, {\b expdesc} *  {\i t}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACOG}
{\bkmkend AAAAAAACOG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 915 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v createlabel\:lparser.c}
{\xe \v lparser.c\:createlabel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int createlabel ({\b LexState} *  {\i ls}, {\b TString} *  {\i name}, int  {\i line}, int  {\i last}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACOH}
{\bkmkend AAAAAAACOH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 598 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v enterblock\:lparser.c}
{\xe \v lparser.c\:enterblock}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void enterblock ({\b FuncState} *  {\i fs}, {\b BlockCnt} *  {\i bl}, {\b lu_byte}  {\i isloop}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACOI}
{\bkmkend AAAAAAACOI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 632 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v error_expected\:lparser.c}
{\xe \v lparser.c\:error_expected}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b l_noret} error_expected ({\b LexState} *  {\i ls}, int  {\i token}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACOJ}
{\bkmkend AAAAAAACOJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 68 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v errorlimit\:lparser.c}
{\xe \v lparser.c\:errorlimit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b l_noret} errorlimit ({\b FuncState} *  {\i fs}, int  {\i limit}, const char *  {\i what}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACOK}
{\bkmkend AAAAAAACOK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 74 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v exp1\:lparser.c}
{\xe \v lparser.c\:exp1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void exp1 ({\b LexState} *  {\i ls}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACOL}
{\bkmkend AAAAAAACOL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 1507 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v explist\:lparser.c}
{\xe \v lparser.c\:explist}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int explist ({\b LexState} *  {\i ls}, {\b expdesc} *  {\i v}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACOM}
{\bkmkend AAAAAAACOM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 1002 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v expr\:lparser.c}
{\xe \v lparser.c\:expr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void expr ({\b LexState} *  {\i ls}, {\b expdesc} *  {\i v}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACON}
{\bkmkend AAAAAAACON}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 1280 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v exprstat\:lparser.c}
{\xe \v lparser.c\:exprstat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void exprstat ({\b LexState} *  {\i ls}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACOO}
{\bkmkend AAAAAAACOO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 1824 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v field\:lparser.c}
{\xe \v lparser.c\:field}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void field ({\b LexState} *  {\i ls}, {\b ConsControl} *  {\i cc}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACOP}
{\bkmkend AAAAAAACOP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 893 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v fieldsel\:lparser.c}
{\xe \v lparser.c\:fieldsel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void fieldsel ({\b LexState} *  {\i ls}, {\b expdesc} *  {\i v}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACOQ}
{\bkmkend AAAAAAACOQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 801 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v findlabel\:lparser.c}
{\xe \v lparser.c\:findlabel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b Labeldesc}* findlabel ({\b LexState} *  {\i ls}, {\b TString} *  {\i name}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACOR}
{\bkmkend AAAAAAACOR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 534 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v fixforjump\:lparser.c}
{\xe \v lparser.c\:fixforjump}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void fixforjump ({\b FuncState} *  {\i fs}, int  {\i pc}, int  {\i dest}, int  {\i back}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACOS}
{\bkmkend AAAAAAACOS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 1520 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v forbody\:lparser.c}
{\xe \v lparser.c\:forbody}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void forbody ({\b LexState} *  {\i ls}, int  {\i base}, int  {\i line}, int  {\i nvars}, int  {\i isgen}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACOT}
{\bkmkend AAAAAAACOT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 1534 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v forlist\:lparser.c}
{\xe \v lparser.c\:forlist}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void forlist ({\b LexState} *  {\i ls}, {\b TString} *  {\i indexname}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACOU}
{\bkmkend AAAAAAACOU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 1582 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v fornum\:lparser.c}
{\xe \v lparser.c\:fornum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void fornum ({\b LexState} *  {\i ls}, {\b TString} *  {\i varname}, int  {\i line}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACOV}
{\bkmkend AAAAAAACOV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 1559 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v forstat\:lparser.c}
{\xe \v lparser.c\:forstat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void forstat ({\b LexState} *  {\i ls}, int  {\i line}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACOW}
{\bkmkend AAAAAAACOW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 1610 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v funcargs\:lparser.c}
{\xe \v lparser.c\:funcargs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void funcargs ({\b LexState} *  {\i ls}, {\b expdesc} *  {\i f}, int  {\i line}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACOX}
{\bkmkend AAAAAAACOX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 1015 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v funcname\:lparser.c}
{\xe \v lparser.c\:funcname}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int funcname ({\b LexState} *  {\i ls}, {\b expdesc} *  {\i v}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACOY}
{\bkmkend AAAAAAACOY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 1798 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v funcstat\:lparser.c}
{\xe \v lparser.c\:funcstat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void funcstat ({\b LexState} *  {\i ls}, int  {\i line}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACOZ}
{\bkmkend AAAAAAACOZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 1812 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v getbinopr\:lparser.c}
{\xe \v lparser.c\:getbinopr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b BinOpr} getbinopr (int  {\i op}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACPA}
{\bkmkend AAAAAAACPA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 1196 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v getlocalattribute\:lparser.c}
{\xe \v lparser.c\:getlocalattribute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int getlocalattribute ({\b LexState} *  {\i ls}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACPB}
{\bkmkend AAAAAAACPB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 1729 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v getlocalvardesc\:lparser.c}
{\xe \v lparser.c\:getlocalvardesc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b Vardesc}* getlocalvardesc ({\b FuncState} *  {\i fs}, int  {\i vidx}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACPC}
{\bkmkend AAAAAAACPC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 219 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v getunopr\:lparser.c}
{\xe \v lparser.c\:getunopr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b UnOpr} getunopr (int  {\i op}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACPD}
{\bkmkend AAAAAAACPD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 1185 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v gotostat\:lparser.c}
{\xe \v lparser.c\:gotostat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void gotostat ({\b LexState} *  {\i ls}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACPE}
{\bkmkend AAAAAAACPE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 1406 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v ifstat\:lparser.c}
{\xe \v lparser.c\:ifstat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void ifstat ({\b LexState} *  {\i ls}, int  {\i line}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACPF}
{\bkmkend AAAAAAACPF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 1703 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v init_exp\:lparser.c}
{\xe \v lparser.c\:init_exp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void init_exp ({\b expdesc} *  {\i e}, {\b expkind}  {\i k}, int  {\i i}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACPG}
{\bkmkend AAAAAAACPG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 152 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v init_var\:lparser.c}
{\xe \v lparser.c\:init_var}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void init_var ({\b FuncState} *  {\i fs}, {\b expdesc} *  {\i e}, int  {\i vidx}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACPH}
{\bkmkend AAAAAAACPH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 266 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v issinglejump\:lparser.c}
{\xe \v lparser.c\:issinglejump}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int issinglejump ({\b LexState} *  {\i ls}, {\b TString} **  {\i label}, int *  {\i target}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACPI}
{\bkmkend AAAAAAACPI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 1636 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v jumpscopeerror\:lparser.c}
{\xe \v lparser.c\:jumpscopeerror}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b l_noret} jumpscopeerror ({\b LexState} *  {\i ls}, {\b Labeldesc} *  {\i gt}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACPJ}
{\bkmkend AAAAAAACPJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 504 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v labelstat\:lparser.c}
{\xe \v lparser.c\:labelstat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void labelstat ({\b LexState} *  {\i ls}, {\b TString} *  {\i name}, int  {\i line}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACPK}
{\bkmkend AAAAAAACPK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 1448 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lastlistfield\:lparser.c}
{\xe \v lparser.c\:lastlistfield}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void lastlistfield ({\b FuncState} *  {\i fs}, {\b ConsControl} *  {\i cc}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACPL}
{\bkmkend AAAAAAACPL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 870 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v leaveblock\:lparser.c}
{\xe \v lparser.c\:leaveblock}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void leaveblock ({\b FuncState} *  {\i fs}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACPM}
{\bkmkend AAAAAAACPM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 662 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v listfield\:lparser.c}
{\xe \v lparser.c\:listfield}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void listfield ({\b LexState} *  {\i ls}, {\b ConsControl} *  {\i cc}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACPN}
{\bkmkend AAAAAAACPN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 886 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v localdebuginfo\:lparser.c}
{\xe \v lparser.c\:localdebuginfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b LocVar}* localdebuginfo ({\b FuncState} *  {\i fs}, int  {\i vidx}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACPO}
{\bkmkend AAAAAAACPO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 251 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v localfunc\:lparser.c}
{\xe \v lparser.c\:localfunc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void localfunc ({\b LexState} *  {\i ls}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACPP}
{\bkmkend AAAAAAACPP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 1717 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v localstat\:lparser.c}
{\xe \v lparser.c\:localstat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void localstat ({\b LexState} *  {\i ls}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACPQ}
{\bkmkend AAAAAAACPQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 1756 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaY_nvarstack\:lparser.c}
{\xe \v lparser.c\:luaY_nvarstack}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int luaY_nvarstack ({\b FuncState} *  {\i fs})}}
\par
{\bkmkstart AAAAAAACPR}
{\bkmkend AAAAAAACPR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 243 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaY_parser\:lparser.c}
{\xe \v lparser.c\:luaY_parser}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LClosure}* luaY_parser ({\b lua_State} *  {\i L}, {\b ZIO} *  {\i z}, {\b Mbuffer} *  {\i buff}, {\b Dyndata} *  {\i dyd}, const char *  {\i name}, int  {\i firstchar})}}
\par
{\bkmkstart AAAAAAACPS}
{\bkmkend AAAAAAACPS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 1971 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v mainfunc\:lparser.c}
{\xe \v lparser.c\:mainfunc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void mainfunc ({\b LexState} *  {\i ls}, {\b FuncState} *  {\i fs}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACPT}
{\bkmkend AAAAAAACPT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 1953 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v markupval\:lparser.c}
{\xe \v lparser.c\:markupval}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void markupval ({\b FuncState} *  {\i fs}, int  {\i level}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACPU}
{\bkmkend AAAAAAACPU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 410 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v movegotosout\:lparser.c}
{\xe \v lparser.c\:movegotosout}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void movegotosout ({\b FuncState} *  {\i fs}, {\b BlockCnt} *  {\i bl}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACPV}
{\bkmkend AAAAAAACPV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 618 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v new_localvar\:lparser.c}
{\xe \v lparser.c\:new_localvar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int new_localvar ({\b LexState} *  {\i ls}, {\b TString} *  {\i name}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACPW}
{\bkmkend AAAAAAACPW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 193 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v newgotoentry\:lparser.c}
{\xe \v lparser.c\:newgotoentry}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int newgotoentry ({\b LexState} *  {\i ls}, {\b TString} *  {\i name}, int  {\i line}, int  {\i pc}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACPX}
{\bkmkend AAAAAAACPX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 565 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v newlabelentry\:lparser.c}
{\xe \v lparser.c\:newlabelentry}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int newlabelentry ({\b LexState} *  {\i ls}, {\b Labellist} *  {\i l}, {\b TString} *  {\i name}, int  {\i line}, int  {\i pc}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACPY}
{\bkmkend AAAAAAACPY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 550 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v newupvalue\:lparser.c}
{\xe \v lparser.c\:newupvalue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int newupvalue ({\b FuncState} *  {\i fs}, {\b TString} *  {\i name}, {\b expdesc} *  {\i v}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACPZ}
{\bkmkend AAAAAAACPZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 364 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v open_func\:lparser.c}
{\xe \v lparser.c\:open_func}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void open_func ({\b LexState} *  {\i ls}, {\b FuncState} *  {\i fs}, {\b BlockCnt} *  {\i bl}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACQA}
{\bkmkend AAAAAAACQA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 719 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v parlist\:lparser.c}
{\xe \v lparser.c\:parlist}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void parlist ({\b LexState} *  {\i ls}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACQB}
{\bkmkend AAAAAAACQB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 949 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v primaryexp\:lparser.c}
{\xe \v lparser.c\:primaryexp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void primaryexp ({\b LexState} *  {\i ls}, {\b expdesc} *  {\i v}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACQC}
{\bkmkend AAAAAAACQC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 1070 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v recfield\:lparser.c}
{\xe \v lparser.c\:recfield}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void recfield ({\b LexState} *  {\i ls}, {\b ConsControl} *  {\i cc}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACQD}
{\bkmkend AAAAAAACQD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 837 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v registerlocalvar\:lparser.c}
{\xe \v lparser.c\:registerlocalvar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int registerlocalvar ({\b LexState} *  {\i ls}, {\b FuncState} *  {\i fs}, {\b TString} *  {\i varname}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACQE}
{\bkmkend AAAAAAACQE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 175 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v removevars\:lparser.c}
{\xe \v lparser.c\:removevars}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void removevars ({\b FuncState} *  {\i fs}, int  {\i tolevel}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACQF}
{\bkmkend AAAAAAACQF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 328 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v repeatstat\:lparser.c}
{\xe \v lparser.c\:repeatstat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void repeatstat ({\b LexState} *  {\i ls}, int  {\i line}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACQG}
{\bkmkend AAAAAAACQG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 1477 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v restassign\:lparser.c}
{\xe \v lparser.c\:restassign}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void restassign ({\b LexState} *  {\i ls}, struct {\b LHS_assign} *  {\i lh}, int  {\i nvars}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACQH}
{\bkmkend AAAAAAACQH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 1365 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v retstat\:lparser.c}
{\xe \v lparser.c\:retstat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void retstat ({\b LexState} *  {\i ls}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACQI}
{\bkmkend AAAAAAACQI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 1842 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v searchupvalue\:lparser.c}
{\xe \v lparser.c\:searchupvalue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int searchupvalue ({\b FuncState} *  {\i fs}, {\b TString} *  {\i name}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACQJ}
{\bkmkend AAAAAAACQJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 342 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v searchvar\:lparser.c}
{\xe \v lparser.c\:searchvar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int searchvar ({\b FuncState} *  {\i fs}, {\b TString} *  {\i n}, {\b expdesc} *  {\i var}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACQK}
{\bkmkend AAAAAAACQK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 390 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v setvararg\:lparser.c}
{\xe \v lparser.c\:setvararg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void setvararg ({\b FuncState} *  {\i fs}, int  {\i nparams}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACQL}
{\bkmkend AAAAAAACQL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 943 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v simpleexp\:lparser.c}
{\xe \v lparser.c\:simpleexp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void simpleexp ({\b LexState} *  {\i ls}, {\b expdesc} *  {\i v}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACQM}
{\bkmkend AAAAAAACQM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 1130 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v singlevar\:lparser.c}
{\xe \v lparser.c\:singlevar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void singlevar ({\b LexState} *  {\i ls}, {\b expdesc} *  {\i var}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACQN}
{\bkmkend AAAAAAACQN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 452 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v singlevaraux\:lparser.c}
{\xe \v lparser.c\:singlevaraux}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void singlevaraux ({\b FuncState} *  {\i fs}, {\b TString} *  {\i n}, {\b expdesc} *  {\i var}, int  {\i base}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACQO}
{\bkmkend AAAAAAACQO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 424 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v solvegoto\:lparser.c}
{\xe \v lparser.c\:solvegoto}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void solvegoto ({\b LexState} *  {\i ls}, int  {\i g}, {\b Labeldesc} *  {\i label}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACQP}
{\bkmkend AAAAAAACQP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 517 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v solvegotos\:lparser.c}
{\xe \v lparser.c\:solvegotos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int solvegotos ({\b LexState} *  {\i ls}, {\b Labeldesc} *  {\i lb}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACQQ}
{\bkmkend AAAAAAACQQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 575 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v stacklevel\:lparser.c}
{\xe \v lparser.c\:stacklevel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int stacklevel ({\b FuncState} *  {\i fs}, int  {\i nvar}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACQR}
{\bkmkend AAAAAAACQR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 230 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v statement\:lparser.c}
{\xe \v lparser.c\:statement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void statement ({\b LexState} *  {\i ls}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACQS}
{\bkmkend AAAAAAACQS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 1874 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v statlist\:lparser.c}
{\xe \v lparser.c\:statlist}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void statlist ({\b LexState} *  {\i ls}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACQT}
{\bkmkend AAAAAAACQT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 789 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v str_checkname\:lparser.c}
{\xe \v lparser.c\:str_checkname}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b TString}* str_checkname ({\b LexState} *  {\i ls}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACQU}
{\bkmkend AAAAAAACQU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 143 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v subexpr\:lparser.c}
{\xe \v lparser.c\:subexpr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b BinOpr} subexpr ({\b LexState} *  {\i ls}, {\b expdesc} *  {\i v}, int  {\i limit}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACQV}
{\bkmkend AAAAAAACQV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 1250 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v suffixedexp\:lparser.c}
{\xe \v lparser.c\:suffixedexp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void suffixedexp ({\b LexState} *  {\i ls}, {\b expdesc} *  {\i v}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACQW}
{\bkmkend AAAAAAACQW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 1092 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v test_then_block\:lparser.c}
{\xe \v lparser.c\:test_then_block}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void test_then_block ({\b LexState} *  {\i ls}, int *  {\i escapelist}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACQX}
{\bkmkend AAAAAAACQX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 1661 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v testnext\:lparser.c}
{\xe \v lparser.c\:testnext}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int testnext ({\b LexState} *  {\i ls}, int  {\i c}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACQY}
{\bkmkend AAAAAAACQY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 95 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v undefgoto\:lparser.c}
{\xe \v lparser.c\:undefgoto}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b l_noret} undefgoto ({\b LexState} *  {\i ls}, {\b Labeldesc} *  {\i gt}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACQZ}
{\bkmkend AAAAAAACQZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 648 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v whilestat\:lparser.c}
{\xe \v lparser.c\:whilestat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void whilestat ({\b LexState} *  {\i ls}, int  {\i line}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACRA}
{\bkmkend AAAAAAACRA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 1458 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v yindex\:lparser.c}
{\xe \v lparser.c\:yindex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void yindex ({\b LexState} *  {\i ls}, {\b expdesc} *  {\i v}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACRB}
{\bkmkend AAAAAAACRB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 812 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v left\:lparser.c}
{\xe \v lparser.c\:left}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lu_byte} left}}
\par
{\bkmkstart AAAAAAACRC}
{\bkmkend AAAAAAACRC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 1228 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v priority\:lparser.c}
{\xe \v lparser.c\:priority}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const \{ ... \}  priority[]{\f2 [static]}}}
\par
{\bkmkstart AAAAAAACRD}
{\bkmkend AAAAAAACRD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'B3\'F5\'CA\'BC\'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{  \par
   \{10, 10\}, \{10, 10\},           \par
   \{11, 11\}, \{11, 11\},           \par
   \{14, 13\},                  \par
   \{11, 11\}, \{11, 11\},           \par
   \{6, 6\}, \{4, 4\}, \{5, 5\},   \par
   \{7, 7\}, \{7, 7\},           \par
   \{9, 8\},                   \par
   \{3, 3\}, \{3, 3\}, \{3, 3\},   \par
   \{3, 3\}, \{3, 3\}, \{3, 3\},   \par
   \{2, 2\}, \{1, 1\}            \par
\}\par
}
}
{\xe \v right\:lparser.c}
{\xe \v lparser.c\:right}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lu_byte} right}}
\par
{\bkmkstart AAAAAAACRE}
{\bkmkend AAAAAAACRE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 1229 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/gitworkspace/lua/src/lparser.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v D:/gitworkspace/lua/src/lparser.h}
{\xe \v D:/gitworkspace/lua/src/lparser.h}
{\bkmkstart AAAAAAACRF}
{\bkmkend AAAAAAACRF}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "llimits.h"}\par
{\f2 #include "lobject.h"}\par
{\f2 #include "lzio.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b expdesc}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union {\b Vardesc}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Labeldesc}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Labellist}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Dyndata}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b FuncState}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b vkisvar}(k)\~ ({\b VLOCAL} <= (k) && (k) <= {\b VINDEXSTR})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b vkisindexed}(k)\~ ({\b VINDEXED} <= (k) && (k) <= {\b VINDEXSTR})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b VDKREG}\~ 0   /* regular */\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RDKCONST}\~ 1   /* constant */\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RDKTOCLOSE}\~ 2   /* to-be-closed */\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RDKCTC}\~ 3   /* compile-time constant */\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'D0\'CD\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b expdesc} {\b expdesc}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef union {\b Vardesc} {\b Vardesc}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b Labeldesc} {\b Labeldesc}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b Labellist} {\b Labellist}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b Dyndata} {\b Dyndata}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b FuncState} {\b FuncState}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'B6\'BE\'D9\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b expkind} \{ {\b VVOID}, 
{\b VNIL}, 
{\b VTRUE}, 
{\b VFALSE}, 
{\b VK}, 
{\b VKFLT}, 
{\b VKINT}, 
{\b VKSTR}, 
{\b VNONRELOC}, 
{\b VLOCAL}, 
{\b VUPVAL}, 
{\b VCONST}, 
{\b VINDEXED}, 
{\b VINDEXUP}, 
{\b VINDEXI}, 
{\b VINDEXSTR}, 
{\b VJMP}, 
{\b VRELOC}, 
{\b VCALL}, 
{\b VVARARG}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} int {\b luaY_nvarstack} ({\b FuncState} *fs)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} {\b LClosure} * {\b luaY_parser} ({\b lua_State} *L, {\b ZIO} *z, {\b Mbuffer} *buff, {\b Dyndata} *dyd, const char *name, int firstchar)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v RDKCONST\:lparser.h}
{\xe \v lparser.h\:RDKCONST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RDKCONST\~ 1   /* constant */}}
\par
{\bkmkstart AAAAAAACRG}
{\bkmkend AAAAAAACRG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.h \'B5\'DA 90 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v RDKCTC\:lparser.h}
{\xe \v lparser.h\:RDKCTC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RDKCTC\~ 3   /* compile-time constant */}}
\par
{\bkmkstart AAAAAAACRH}
{\bkmkend AAAAAAACRH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.h \'B5\'DA 92 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v RDKTOCLOSE\:lparser.h}
{\xe \v lparser.h\:RDKTOCLOSE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RDKTOCLOSE\~ 2   /* to-be-closed */}}
\par
{\bkmkstart AAAAAAACRI}
{\bkmkend AAAAAAACRI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.h \'B5\'DA 91 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v VDKREG\:lparser.h}
{\xe \v lparser.h\:VDKREG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define VDKREG\~ 0   /* regular */}}
\par
{\bkmkstart AAAAAAACRJ}
{\bkmkend AAAAAAACRJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.h \'B5\'DA 89 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v vkisindexed\:lparser.h}
{\xe \v lparser.h\:vkisindexed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define vkisindexed( k)\~ ({\b VINDEXED} <= (k) && (k) <= {\b VINDEXSTR})}}
\par
{\bkmkstart AAAAAAACRK}
{\bkmkend AAAAAAACRK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.h \'B5\'DA 64 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v vkisvar\:lparser.h}
{\xe \v lparser.h\:vkisvar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define vkisvar( k)\~ ({\b VLOCAL} <= (k) && (k) <= {\b VINDEXSTR})}}
\par
{\bkmkstart AAAAAAACRL}
{\bkmkend AAAAAAACRL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.h \'B5\'DA 63 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'D0\'CD\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v Dyndata\:lparser.h}
{\xe \v lparser.h\:Dyndata}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b Dyndata} {\b Dyndata}}}
\par
{\bkmkstart AAAAAAACRM}
{\bkmkend AAAAAAACRM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v expdesc\:lparser.h}
{\xe \v lparser.h\:expdesc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b expdesc} {\b expdesc}}}
\par
{\bkmkstart AAAAAAACRN}
{\bkmkend AAAAAAACRN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FuncState\:lparser.h}
{\xe \v lparser.h\:FuncState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b FuncState} {\b FuncState}}}
\par
{\bkmkstart AAAAAAACRO}
{\bkmkend AAAAAAACRO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Labeldesc\:lparser.h}
{\xe \v lparser.h\:Labeldesc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b Labeldesc} {\b Labeldesc}}}
\par
{\bkmkstart AAAAAAACRP}
{\bkmkend AAAAAAACRP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Labellist\:lparser.h}
{\xe \v lparser.h\:Labellist}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b Labellist} {\b Labellist}}}
\par
{\bkmkstart AAAAAAACRQ}
{\bkmkend AAAAAAACRQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Vardesc\:lparser.h}
{\xe \v lparser.h\:Vardesc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef union {\b Vardesc} {\b Vardesc}}}
\par
{\bkmkstart AAAAAAACRR}
{\bkmkend AAAAAAACRR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'B6\'BE\'D9\'C0\'E0\'D0\'CD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v expkind\:lparser.h}
{\xe \v lparser.h\:expkind}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b expkind}}}
\par
{\bkmkstart AAAAAAACRS}
{\bkmkend AAAAAAACRS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C3\'B6\'BE\'D9\'D6\'B5:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v VVOID\:lparser.h}
{\xe \v lparser.h\:VVOID}
{\qr VVOID{\bkmkstart AAAAAAACRT}
{\bkmkend AAAAAAACRT}
\cell }{\cell }{\row }
{\xe \v VNIL\:lparser.h}
{\xe \v lparser.h\:VNIL}
{\qr VNIL{\bkmkstart AAAAAAACRU}
{\bkmkend AAAAAAACRU}
\cell }{\cell }{\row }
{\xe \v VTRUE\:lparser.h}
{\xe \v lparser.h\:VTRUE}
{\qr VTRUE{\bkmkstart AAAAAAACRV}
{\bkmkend AAAAAAACRV}
\cell }{\cell }{\row }
{\xe \v VFALSE\:lparser.h}
{\xe \v lparser.h\:VFALSE}
{\qr VFALSE{\bkmkstart AAAAAAACRW}
{\bkmkend AAAAAAACRW}
\cell }{\cell }{\row }
{\xe \v VK\:lparser.h}
{\xe \v lparser.h\:VK}
{\qr VK{\bkmkstart AAAAAAACRX}
{\bkmkend AAAAAAACRX}
\cell }{\cell }{\row }
{\xe \v VKFLT\:lparser.h}
{\xe \v lparser.h\:VKFLT}
{\qr VKFLT{\bkmkstart AAAAAAACRY}
{\bkmkend AAAAAAACRY}
\cell }{\cell }{\row }
{\xe \v VKINT\:lparser.h}
{\xe \v lparser.h\:VKINT}
{\qr VKINT{\bkmkstart AAAAAAACRZ}
{\bkmkend AAAAAAACRZ}
\cell }{\cell }{\row }
{\xe \v VKSTR\:lparser.h}
{\xe \v lparser.h\:VKSTR}
{\qr VKSTR{\bkmkstart AAAAAAACSA}
{\bkmkend AAAAAAACSA}
\cell }{\cell }{\row }
{\xe \v VNONRELOC\:lparser.h}
{\xe \v lparser.h\:VNONRELOC}
{\qr VNONRELOC{\bkmkstart AAAAAAACSB}
{\bkmkend AAAAAAACSB}
\cell }{\cell }{\row }
{\xe \v VLOCAL\:lparser.h}
{\xe \v lparser.h\:VLOCAL}
{\qr VLOCAL{\bkmkstart AAAAAAACSC}
{\bkmkend AAAAAAACSC}
\cell }{\cell }{\row }
{\xe \v VUPVAL\:lparser.h}
{\xe \v lparser.h\:VUPVAL}
{\qr VUPVAL{\bkmkstart AAAAAAACSD}
{\bkmkend AAAAAAACSD}
\cell }{\cell }{\row }
{\xe \v VCONST\:lparser.h}
{\xe \v lparser.h\:VCONST}
{\qr VCONST{\bkmkstart AAAAAAACSE}
{\bkmkend AAAAAAACSE}
\cell }{\cell }{\row }
{\xe \v VINDEXED\:lparser.h}
{\xe \v lparser.h\:VINDEXED}
{\qr VINDEXED{\bkmkstart AAAAAAACSF}
{\bkmkend AAAAAAACSF}
\cell }{\cell }{\row }
{\xe \v VINDEXUP\:lparser.h}
{\xe \v lparser.h\:VINDEXUP}
{\qr VINDEXUP{\bkmkstart AAAAAAACSG}
{\bkmkend AAAAAAACSG}
\cell }{\cell }{\row }
{\xe \v VINDEXI\:lparser.h}
{\xe \v lparser.h\:VINDEXI}
{\qr VINDEXI{\bkmkstart AAAAAAACSH}
{\bkmkend AAAAAAACSH}
\cell }{\cell }{\row }
{\xe \v VINDEXSTR\:lparser.h}
{\xe \v lparser.h\:VINDEXSTR}
{\qr VINDEXSTR{\bkmkstart AAAAAAACSI}
{\bkmkend AAAAAAACSI}
\cell }{\cell }{\row }
{\xe \v VJMP\:lparser.h}
{\xe \v lparser.h\:VJMP}
{\qr VJMP{\bkmkstart AAAAAAACSJ}
{\bkmkend AAAAAAACSJ}
\cell }{\cell }{\row }
{\xe \v VRELOC\:lparser.h}
{\xe \v lparser.h\:VRELOC}
{\qr VRELOC{\bkmkstart AAAAAAACSK}
{\bkmkend AAAAAAACSK}
\cell }{\cell }{\row }
{\xe \v VCALL\:lparser.h}
{\xe \v lparser.h\:VCALL}
{\qr VCALL{\bkmkstart AAAAAAACSL}
{\bkmkend AAAAAAACSL}
\cell }{\cell }{\row }
{\xe \v VVARARG\:lparser.h}
{\xe \v lparser.h\:VVARARG}
{\qr VVARARG{\bkmkstart AAAAAAACSM}
{\bkmkend AAAAAAACSM}
\cell }{\cell }{\row }
}
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.h \'B5\'DA 25 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v luaY_nvarstack\:lparser.h}
{\xe \v lparser.h\:luaY_nvarstack}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} int luaY_nvarstack ({\b FuncState} *  {\i fs})}}
\par
{\bkmkstart AAAAAAACSN}
{\bkmkend AAAAAAACSN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 243 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaY_parser\:lparser.h}
{\xe \v lparser.h\:luaY_parser}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} {\b LClosure}* luaY_parser ({\b lua_State} *  {\i L}, {\b ZIO} *  {\i z}, {\b Mbuffer} *  {\i buff}, {\b Dyndata} *  {\i dyd}, const char *  {\i name}, int  {\i firstchar})}}
\par
{\bkmkstart AAAAAAACSO}
{\bkmkend AAAAAAACSO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lparser.c \'B5\'DA 1971 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/gitworkspace/lua/src/lprefix.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v D:/gitworkspace/lua/src/lprefix.h}
{\xe \v D:/gitworkspace/lua/src/lprefix.h}
{\bkmkstart AAAAAAACSP}
{\bkmkend AAAAAAACSP}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b _XOPEN_SOURCE}\~ 600\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b _LARGEFILE_SOURCE}\~ 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b _FILE_OFFSET_BITS}\~ 64\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v _FILE_OFFSET_BITS\:lprefix.h}
{\xe \v lprefix.h\:_FILE_OFFSET_BITS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define _FILE_OFFSET_BITS\~ 64}}
\par
{\bkmkstart AAAAAAACSQ}
{\bkmkend AAAAAAACSQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lprefix.h \'B5\'DA 27 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v _LARGEFILE_SOURCE\:lprefix.h}
{\xe \v lprefix.h\:_LARGEFILE_SOURCE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define _LARGEFILE_SOURCE\~ 1}}
\par
{\bkmkstart AAAAAAACSR}
{\bkmkend AAAAAAACSR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lprefix.h \'B5\'DA 26 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v _XOPEN_SOURCE\:lprefix.h}
{\xe \v lprefix.h\:_XOPEN_SOURCE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define _XOPEN_SOURCE\~ 600}}
\par
{\bkmkstart AAAAAAACSS}
{\bkmkend AAAAAAACSS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lprefix.h \'B5\'DA 17 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/gitworkspace/lua/src/lstate.c \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v D:/gitworkspace/lua/src/lstate.c}
{\xe \v D:/gitworkspace/lua/src/lstate.c}
{\bkmkstart AAAAAAACST}
{\bkmkend AAAAAAACST}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "lprefix.h"}\par
{\f2 #include <stddef.h>}\par
{\f2 #include <string.h>}\par
{\f2 #include "lua.h"}\par
{\f2 #include "lapi.h"}\par
{\f2 #include "ldebug.h"}\par
{\f2 #include "ldo.h"}\par
{\f2 #include "lfunc.h"}\par
{\f2 #include "lgc.h"}\par
{\f2 #include "llex.h"}\par
{\f2 #include "lmem.h"}\par
{\f2 #include "lstate.h"}\par
{\f2 #include "lstring.h"}\par
{\f2 #include "ltable.h"}\par
{\f2 #include "ltm.h"}\par
{\f2 #include <time.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LX}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LG}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lstate_c}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_CORE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b fromstate}(L)\~ ({\b cast}({\b LX} *, {\b cast}({\b lu_byte} *, (L)) - offsetof({\b LX}, l)))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b addbuff}(b,  p,  e)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'D0\'CD\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b LX} {\b LX}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b LG} {\b LG}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static unsigned int {\b luai_makeseed} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaE_setdebt} ({\b global_State} *g, {\b l_mem} debt)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int {\b lua_setcstacklimit} ({\b lua_State} *L, unsigned int limit)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaE_enterCcall} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CallInfo} * {\b luaE_extendCI} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaE_freeCI} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaE_shrinkCI} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b stack_init} ({\b lua_State} *L1, {\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b freestack} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b init_registry} ({\b lua_State} *L, {\b global_State} *g)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b f_luaopen} ({\b lua_State} *L, void *ud)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b preinit_thread} ({\b lua_State} *L, {\b global_State} *g)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b close_state} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} {\b lua_State} * {\b lua_newthread} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaE_freethread} ({\b lua_State} *L, {\b lua_State} *L1)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b lua_resetthread} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} {\b lua_State} * {\b lua_newstate} ({\b lua_Alloc} f, void *ud)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} void {\b lua_close} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaE_warning} ({\b lua_State} *L, const char *msg, int tocont)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaE_warnerror} ({\b lua_State} *L, const char *where)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v addbuff\:lstate.c}
{\xe \v lstate.c\:addbuff}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define addbuff( b,  p,  e)}}
\par
{\bkmkstart AAAAAAACSU}
{\bkmkend AAAAAAACSU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   \{ {\cf18 size_t} t = cast_sizet(e); \\\par
    memcpy(b + p, &t, {\cf17 sizeof}(t)); p += {\cf17 sizeof}(t); \}\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.c \'B5\'DA 67 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v fromstate\:lstate.c}
{\xe \v lstate.c\:fromstate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define fromstate( L)\~ ({\b cast}({\b LX} *, {\b cast}({\b lu_byte} *, (L)) - offsetof({\b LX}, l)))}}
\par
{\bkmkstart AAAAAAACSV}
{\bkmkend AAAAAAACSV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.c \'B5\'DA 51 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lstate_c\:lstate.c}
{\xe \v lstate.c\:lstate_c}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lstate_c}}
\par
{\bkmkstart AAAAAAACSW}
{\bkmkend AAAAAAACSW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.c \'B5\'DA 7 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_CORE\:lstate.c}
{\xe \v lstate.c\:LUA_CORE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_CORE}}
\par
{\bkmkstart AAAAAAACSX}
{\bkmkend AAAAAAACSX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.c \'B5\'DA 8 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'D0\'CD\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v LG\:lstate.c}
{\xe \v lstate.c\:LG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b LG} {\b LG}}}
\par
{\bkmkstart AAAAAAACSY}
{\bkmkend AAAAAAACSY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v LX\:lstate.c}
{\xe \v lstate.c\:LX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b LX} {\b LX}}}
\par
{\bkmkstart AAAAAAACSZ}
{\bkmkend AAAAAAACSZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v close_state\:lstate.c}
{\xe \v lstate.c\:close_state}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void close_state ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACTA}
{\bkmkend AAAAAAACTA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.c \'B5\'DA 307 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v f_luaopen\:lstate.c}
{\xe \v lstate.c\:f_luaopen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void f_luaopen ({\b lua_State} *  {\i L}, void *  {\i ud}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACTB}
{\bkmkend AAAAAAACTB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.c \'B5\'DA 270 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v freestack\:lstate.c}
{\xe \v lstate.c\:freestack}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void freestack ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACTC}
{\bkmkend AAAAAAACTC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.c \'B5\'DA 237 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v init_registry\:lstate.c}
{\xe \v lstate.c\:init_registry}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void init_registry ({\b lua_State} *  {\i L}, {\b global_State} *  {\i g}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACTD}
{\bkmkend AAAAAAACTD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.c \'B5\'DA 250 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_close\:lstate.c}
{\xe \v lstate.c\:lua_close}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} void lua_close ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAACTE}
{\bkmkend AAAAAAACTE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.c \'B5\'DA 438 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_newstate\:lstate.c}
{\xe \v lstate.c\:lua_newstate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} {\b lua_State}* lua_newstate ({\b lua_Alloc}  {\i f}, void *  {\i ud})}}
\par
{\bkmkstart AAAAAAACTF}
{\bkmkend AAAAAAACTF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.c \'B5\'DA 383 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_newthread\:lstate.c}
{\xe \v lstate.c\:lua_newthread}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} {\b lua_State}* lua_newthread ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAACTG}
{\bkmkend AAAAAAACTG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.c \'B5\'DA 320 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_resetthread\:lstate.c}
{\xe \v lstate.c\:lua_resetthread}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int lua_resetthread ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAACTH}
{\bkmkend AAAAAAACTH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.c \'B5\'DA 361 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_setcstacklimit\:lstate.c}
{\xe \v lstate.c\:lua_setcstacklimit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int lua_setcstacklimit ({\b lua_State} *  {\i L}, unsigned int  {\i limit})}}
\par
{\bkmkstart AAAAAAACTI}
{\bkmkend AAAAAAACTI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.c \'B5\'DA 99 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaE_enterCcall\:lstate.c}
{\xe \v lstate.c\:luaE_enterCcall}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaE_enterCcall ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAACTJ}
{\bkmkend AAAAAAACTJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.c \'B5\'DA 135 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaE_extendCI\:lstate.c}
{\xe \v lstate.c\:luaE_extendCI}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CallInfo}* luaE_extendCI ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAACTK}
{\bkmkend AAAAAAACTK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.c \'B5\'DA 156 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaE_freeCI\:lstate.c}
{\xe \v lstate.c\:luaE_freeCI}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaE_freeCI ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAACTL}
{\bkmkend AAAAAAACTL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.c \'B5\'DA 174 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaE_freethread\:lstate.c}
{\xe \v lstate.c\:luaE_freethread}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaE_freethread ({\b lua_State} *  {\i L}, {\b lua_State} *  {\i L1})}}
\par
{\bkmkstart AAAAAAACTM}
{\bkmkend AAAAAAACTM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.c \'B5\'DA 351 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaE_setdebt\:lstate.c}
{\xe \v lstate.c\:luaE_setdebt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaE_setdebt ({\b global_State} *  {\i g}, {\b l_mem}  {\i debt})}}
\par
{\bkmkstart AAAAAAACTN}
{\bkmkend AAAAAAACTN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.c \'B5\'DA 89 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaE_shrinkCI\:lstate.c}
{\xe \v lstate.c\:luaE_shrinkCI}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaE_shrinkCI ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAACTO}
{\bkmkend AAAAAAACTO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.c \'B5\'DA 192 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaE_warnerror\:lstate.c}
{\xe \v lstate.c\:luaE_warnerror}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaE_warnerror ({\b lua_State} *  {\i L}, const char *  {\i where})}}
\par
{\bkmkstart AAAAAAACTP}
{\bkmkend AAAAAAACTP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.c \'B5\'DA 455 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaE_warning\:lstate.c}
{\xe \v lstate.c\:luaE_warning}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaE_warning ({\b lua_State} *  {\i L}, const char *  {\i msg}, int  {\i tocont})}}
\par
{\bkmkstart AAAAAAACTQ}
{\bkmkend AAAAAAACTQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.c \'B5\'DA 445 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luai_makeseed\:lstate.c}
{\xe \v lstate.c\:luai_makeseed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static unsigned int luai_makeseed ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACTR}
{\bkmkend AAAAAAACTR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.c \'B5\'DA 71 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v preinit_thread\:lstate.c}
{\xe \v lstate.c\:preinit_thread}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void preinit_thread ({\b lua_State} *  {\i L}, {\b global_State} *  {\i g}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACTS}
{\bkmkend AAAAAAACTS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.c \'B5\'DA 288 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v stack_init\:lstate.c}
{\xe \v lstate.c\:stack_init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void stack_init ({\b lua_State} *  {\i L1}, {\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACTT}
{\bkmkend AAAAAAACTT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.c \'B5\'DA 214 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/gitworkspace/lua/src/lstate.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v D:/gitworkspace/lua/src/lstate.h}
{\xe \v D:/gitworkspace/lua/src/lstate.h}
{\bkmkstart AAAAAAACTU}
{\bkmkend AAAAAAACTU}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "lua.h"}\par
{\f2 #include "lobject.h"}\par
{\f2 #include "ltm.h"}\par
{\f2 #include "lzio.h"}\par
{\f2 #include <signal.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b stringtable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b CallInfo}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b global_State}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b lua_State}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union {\b GCUnion}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CSTACKCF}\~ 10\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CSTACKERR}\~ (8 * {\b CSTACKCF})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CSTACKMARK}\~ ({\b CSTACKERR} - ({\b CSTACKCF} + 2))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CSTACKERRMARK}\~ ({\b CSTACKCF} + 2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CSTACKTHREAD}\~ (2 * {\b CSTACKERR})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b yieldable}(L)\~ (((L)->nCcalls & 0xffff0000) == 0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b getCcalls}(L)\~ ((L)->nCcalls & 0xffff)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b incnny}(L)\~ ((L)->nCcalls += 0x10000)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b decnny}(L)\~ ((L)->nCcalls -= 0x10000)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b incXCcalls}(L)\~ ((L)->nCcalls += 0x10000 - {\b CSTACKCF})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b decXCcalls}(L)\~ ((L)->nCcalls -= 0x10000 - {\b CSTACKCF})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b l_signalT}\~ sig_atomic_t\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EXTRA_STACK}\~ 5\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BASIC_STACK_SIZE}\~ (2*{\b LUA_MINSTACK})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b KGC_INC}\~ 0	/* incremental gc */\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b KGC_GEN}\~ 1	/* generational gc */\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CIST_OAH}\~ (1<<0)	/* original value of 'allowhook' */\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CIST_C}\~ (1<<1)	/* call is running a C function */\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CIST_HOOKED}\~ (1<<2)	/* call is running a debug hook */\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CIST_YPCALL}\~ (1<<3)	/* call is a {\b yieldable} protected call */\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CIST_TAIL}\~ (1<<4)	/* call was tail called */\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CIST_HOOKYIELD}\~ (1<<5)	/* last hook called yielded */\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CIST_FIN}\~ (1<<6)  /* call is running a finalizer */\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CIST_TRAN}\~ (1<<7)	/* 'ci' has transfer information */\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b isLua}(ci)\~ (!((ci)->callstatus & {\b CIST_C}))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b isLuacode}(ci)\~ (!((ci)->callstatus & ({\b CIST_C} | {\b CIST_HOOKED})))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b setoah}(st,  v)\~ ((st) = ((st) & ~{\b CIST_OAH}) | (v))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b getoah}(st)\~ ((st) & {\b CIST_OAH})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b G}(L)\~ (L->l_G)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b cast_u}(o)\~ {\b cast}(union {\b GCUnion} *, (o))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b gco2ts}(o)\~ 	{\b check_exp}({\b novariant}((o)->tt) == {\b LUA_TSTRING}, &(({\b cast_u}(o))->ts))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b gco2u}(o)\~ {\b check_exp}((o)->tt == {\b LUA_VUSERDATA}, &(({\b cast_u}(o))->u))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b gco2lcl}(o)\~ {\b check_exp}((o)->tt == {\b LUA_VLCL}, &(({\b cast_u}(o))->cl.l))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b gco2ccl}(o)\~ {\b check_exp}((o)->tt == {\b LUA_VCCL}, &(({\b cast_u}(o))->cl.c))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b gco2cl}(o)\~ 	{\b check_exp}({\b novariant}((o)->tt) == {\b LUA_TFUNCTION}, &(({\b cast_u}(o))->cl))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b gco2t}(o)\~ {\b check_exp}((o)->tt == {\b LUA_VTABLE}, &(({\b cast_u}(o))->h))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b gco2p}(o)\~ {\b check_exp}((o)->tt == {\b LUA_VPROTO}, &(({\b cast_u}(o))->p))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b gco2th}(o)\~ {\b check_exp}((o)->tt == {\b LUA_VTHREAD}, &(({\b cast_u}(o))->th))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b gco2upv}(o)\~ {\b check_exp}((o)->tt == {\b LUA_VUPVAL}, &(({\b cast_u}(o))->upv))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b obj2gco}(v)\~ {\b check_exp}((v)->tt >= {\b LUA_TSTRING}, &({\b cast_u}(v)->gc))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b gettotalbytes}(g)\~ {\b cast}({\b lu_mem}, (g)->totalbytes + (g)->GCdebt)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luaE_exitCcall}(L)\~ ((L)->nCcalls++)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'D0\'CD\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b stringtable} {\b stringtable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b CallInfo} {\b CallInfo}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b global_State} {\b global_State}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaE_setdebt} ({\b global_State} *g, {\b l_mem} debt)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaE_freethread} ({\b lua_State} *L, {\b lua_State} *L1)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} {\b CallInfo} * {\b luaE_extendCI} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaE_freeCI} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaE_shrinkCI} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaE_enterCcall} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaE_warning} ({\b lua_State} *L, const char *msg, int tocont)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaE_warnerror} ({\b lua_State} *L, const char *where)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v BASIC_STACK_SIZE\:lstate.h}
{\xe \v lstate.h\:BASIC_STACK_SIZE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BASIC_STACK_SIZE\~ (2*{\b LUA_MINSTACK})}}
\par
{\bkmkstart AAAAAAACTV}
{\bkmkend AAAAAAACTV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 150 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v cast_u\:lstate.h}
{\xe \v lstate.h\:cast_u}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define cast_u( o)\~ {\b cast}(union {\b GCUnion} *, (o))}}
\par
{\bkmkstart AAAAAAACTW}
{\bkmkend AAAAAAACTW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 328 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v CIST_C\:lstate.h}
{\xe \v lstate.h\:CIST_C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CIST_C\~ (1<<1)	/* call is running a C function */}}
\par
{\bkmkstart AAAAAAACTX}
{\bkmkend AAAAAAACTX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 205 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v CIST_FIN\:lstate.h}
{\xe \v lstate.h\:CIST_FIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CIST_FIN\~ (1<<6)  /* call is running a finalizer */}}
\par
{\bkmkstart AAAAAAACTY}
{\bkmkend AAAAAAACTY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 210 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v CIST_HOOKED\:lstate.h}
{\xe \v lstate.h\:CIST_HOOKED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CIST_HOOKED\~ (1<<2)	/* call is running a debug hook */}}
\par
{\bkmkstart AAAAAAACTZ}
{\bkmkend AAAAAAACTZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 206 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v CIST_HOOKYIELD\:lstate.h}
{\xe \v lstate.h\:CIST_HOOKYIELD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CIST_HOOKYIELD\~ (1<<5)	/* last hook called yielded */}}
\par
{\bkmkstart AAAAAAACUA}
{\bkmkend AAAAAAACUA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 209 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v CIST_OAH\:lstate.h}
{\xe \v lstate.h\:CIST_OAH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CIST_OAH\~ (1<<0)	/* original value of 'allowhook' */}}
\par
{\bkmkstart AAAAAAACUB}
{\bkmkend AAAAAAACUB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 204 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v CIST_TAIL\:lstate.h}
{\xe \v lstate.h\:CIST_TAIL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CIST_TAIL\~ (1<<4)	/* call was tail called */}}
\par
{\bkmkstart AAAAAAACUC}
{\bkmkend AAAAAAACUC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 208 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v CIST_TRAN\:lstate.h}
{\xe \v lstate.h\:CIST_TRAN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CIST_TRAN\~ (1<<7)	/* 'ci' has transfer information */}}
\par
{\bkmkstart AAAAAAACUD}
{\bkmkend AAAAAAACUD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 211 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v CIST_YPCALL\:lstate.h}
{\xe \v lstate.h\:CIST_YPCALL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CIST_YPCALL\~ (1<<3)	/* call is a {\b yieldable} protected call */}}
\par
{\bkmkstart AAAAAAACUE}
{\bkmkend AAAAAAACUE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 207 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v CSTACKCF\:lstate.h}
{\xe \v lstate.h\:CSTACKCF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CSTACKCF\~ 10}}
\par
{\bkmkstart AAAAAAACUF}
{\bkmkend AAAAAAACUF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 88 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v CSTACKERR\:lstate.h}
{\xe \v lstate.h\:CSTACKERR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CSTACKERR\~ (8 * {\b CSTACKCF})}}
\par
{\bkmkstart AAAAAAACUG}
{\bkmkend AAAAAAACUG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 101 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v CSTACKERRMARK\:lstate.h}
{\xe \v lstate.h\:CSTACKERRMARK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CSTACKERRMARK\~ ({\b CSTACKCF} + 2)}}
\par
{\bkmkstart AAAAAAACUH}
{\bkmkend AAAAAAACUH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 103 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v CSTACKMARK\:lstate.h}
{\xe \v lstate.h\:CSTACKMARK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CSTACKMARK\~ ({\b CSTACKERR} - ({\b CSTACKCF} + 2))}}
\par
{\bkmkstart AAAAAAACUI}
{\bkmkend AAAAAAACUI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 102 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v CSTACKTHREAD\:lstate.h}
{\xe \v lstate.h\:CSTACKTHREAD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CSTACKTHREAD\~ (2 * {\b CSTACKERR})}}
\par
{\bkmkstart AAAAAAACUJ}
{\bkmkend AAAAAAACUJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 107 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v decnny\:lstate.h}
{\xe \v lstate.h\:decnny}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define decnny( L)\~ ((L)->nCcalls -= 0x10000)}}
\par
{\bkmkstart AAAAAAACUK}
{\bkmkend AAAAAAACUK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 121 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v decXCcalls\:lstate.h}
{\xe \v lstate.h\:decXCcalls}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define decXCcalls( L)\~ ((L)->nCcalls -= 0x10000 - {\b CSTACKCF})}}
\par
{\bkmkstart AAAAAAACUL}
{\bkmkend AAAAAAACUL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 127 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v EXTRA_STACK\:lstate.h}
{\xe \v lstate.h\:EXTRA_STACK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EXTRA_STACK\~ 5}}
\par
{\bkmkstart AAAAAAACUM}
{\bkmkend AAAAAAACUM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 147 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v G\:lstate.h}
{\xe \v lstate.h\:G}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define G( L)\~ (L->l_G)}}
\par
{\bkmkstart AAAAAAACUN}
{\bkmkend AAAAAAACUN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 310 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v gco2ccl\:lstate.h}
{\xe \v lstate.h\:gco2ccl}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define gco2ccl( o)\~ {\b check_exp}((o)->tt == {\b LUA_VCCL}, &(({\b cast_u}(o))->cl.c))}}
\par
{\bkmkstart AAAAAAACUO}
{\bkmkend AAAAAAACUO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 335 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v gco2cl\:lstate.h}
{\xe \v lstate.h\:gco2cl}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define gco2cl( o)\~ 	{\b check_exp}({\b novariant}((o)->tt) == {\b LUA_TFUNCTION}, &(({\b cast_u}(o))->cl))}}
\par
{\bkmkstart AAAAAAACUP}
{\bkmkend AAAAAAACUP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 336 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v gco2lcl\:lstate.h}
{\xe \v lstate.h\:gco2lcl}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define gco2lcl( o)\~ {\b check_exp}((o)->tt == {\b LUA_VLCL}, &(({\b cast_u}(o))->cl.l))}}
\par
{\bkmkstart AAAAAAACUQ}
{\bkmkend AAAAAAACUQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 334 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v gco2p\:lstate.h}
{\xe \v lstate.h\:gco2p}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define gco2p( o)\~ {\b check_exp}((o)->tt == {\b LUA_VPROTO}, &(({\b cast_u}(o))->p))}}
\par
{\bkmkstart AAAAAAACUR}
{\bkmkend AAAAAAACUR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 339 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v gco2t\:lstate.h}
{\xe \v lstate.h\:gco2t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define gco2t( o)\~ {\b check_exp}((o)->tt == {\b LUA_VTABLE}, &(({\b cast_u}(o))->h))}}
\par
{\bkmkstart AAAAAAACUS}
{\bkmkend AAAAAAACUS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 338 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v gco2th\:lstate.h}
{\xe \v lstate.h\:gco2th}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define gco2th( o)\~ {\b check_exp}((o)->tt == {\b LUA_VTHREAD}, &(({\b cast_u}(o))->th))}}
\par
{\bkmkstart AAAAAAACUT}
{\bkmkend AAAAAAACUT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 340 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v gco2ts\:lstate.h}
{\xe \v lstate.h\:gco2ts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define gco2ts( o)\~ 	{\b check_exp}({\b novariant}((o)->tt) == {\b LUA_TSTRING}, &(({\b cast_u}(o))->ts))}}
\par
{\bkmkstart AAAAAAACUU}
{\bkmkend AAAAAAACUU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 331 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v gco2u\:lstate.h}
{\xe \v lstate.h\:gco2u}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define gco2u( o)\~ {\b check_exp}((o)->tt == {\b LUA_VUSERDATA}, &(({\b cast_u}(o))->u))}}
\par
{\bkmkstart AAAAAAACUV}
{\bkmkend AAAAAAACUV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 333 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v gco2upv\:lstate.h}
{\xe \v lstate.h\:gco2upv}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define gco2upv( o)\~ {\b check_exp}((o)->tt == {\b LUA_VUPVAL}, &(({\b cast_u}(o))->upv))}}
\par
{\bkmkstart AAAAAAACUW}
{\bkmkend AAAAAAACUW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 341 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v getCcalls\:lstate.h}
{\xe \v lstate.h\:getCcalls}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define getCcalls( L)\~ ((L)->nCcalls & 0xffff)}}
\par
{\bkmkstart AAAAAAACUX}
{\bkmkend AAAAAAACUX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 114 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v getoah\:lstate.h}
{\xe \v lstate.h\:getoah}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define getoah( st)\~ ((st) & {\b CIST_OAH})}}
\par
{\bkmkstart AAAAAAACUY}
{\bkmkend AAAAAAACUY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 224 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v gettotalbytes\:lstate.h}
{\xe \v lstate.h\:gettotalbytes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define gettotalbytes( g)\~ {\b cast}({\b lu_mem}, (g)->totalbytes + (g)->GCdebt)}}
\par
{\bkmkstart AAAAAAACUZ}
{\bkmkend AAAAAAACUZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 352 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v incnny\:lstate.h}
{\xe \v lstate.h\:incnny}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define incnny( L)\~ ((L)->nCcalls += 0x10000)}}
\par
{\bkmkstart AAAAAAACVA}
{\bkmkend AAAAAAACVA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 118 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v incXCcalls\:lstate.h}
{\xe \v lstate.h\:incXCcalls}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define incXCcalls( L)\~ ((L)->nCcalls += 0x10000 - {\b CSTACKCF})}}
\par
{\bkmkstart AAAAAAACVB}
{\bkmkend AAAAAAACVB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 124 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v isLua\:lstate.h}
{\xe \v lstate.h\:isLua}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define isLua( ci)\~ (!((ci)->callstatus & {\b CIST_C}))}}
\par
{\bkmkstart AAAAAAACVC}
{\bkmkend AAAAAAACVC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 217 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v isLuacode\:lstate.h}
{\xe \v lstate.h\:isLuacode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define isLuacode( ci)\~ (!((ci)->callstatus & ({\b CIST_C} | {\b CIST_HOOKED})))}}
\par
{\bkmkstart AAAAAAACVD}
{\bkmkend AAAAAAACVD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 220 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v KGC_GEN\:lstate.h}
{\xe \v lstate.h\:KGC_GEN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define KGC_GEN\~ 1	/* generational gc */}}
\par
{\bkmkstart AAAAAAACVE}
{\bkmkend AAAAAAACVE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 155 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v KGC_INC\:lstate.h}
{\xe \v lstate.h\:KGC_INC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define KGC_INC\~ 0	/* incremental gc */}}
\par
{\bkmkstart AAAAAAACVF}
{\bkmkend AAAAAAACVF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 154 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v l_signalT\:lstate.h}
{\xe \v lstate.h\:l_signalT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define l_signalT\~ sig_atomic_t}}
\par
{\bkmkstart AAAAAAACVG}
{\bkmkend AAAAAAACVG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'BC\'FB\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b ldo.c} \par
}}}{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 142 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaE_exitCcall\:lstate.h}
{\xe \v lstate.h\:luaE_exitCcall}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luaE_exitCcall( L)\~ ((L)->nCcalls++)}}
\par
{\bkmkstart AAAAAAACVH}
{\bkmkend AAAAAAACVH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 364 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v obj2gco\:lstate.h}
{\xe \v lstate.h\:obj2gco}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define obj2gco( v)\~ {\b check_exp}((v)->tt >= {\b LUA_TSTRING}, &({\b cast_u}(v)->gc))}}
\par
{\bkmkstart AAAAAAACVI}
{\bkmkend AAAAAAACVI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 348 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v setoah\:lstate.h}
{\xe \v lstate.h\:setoah}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define setoah( st,  v)\~ ((st) = ((st) & ~{\b CIST_OAH}) | (v))}}
\par
{\bkmkstart AAAAAAACVJ}
{\bkmkend AAAAAAACVJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 223 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v yieldable\:lstate.h}
{\xe \v lstate.h\:yieldable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define yieldable( L)\~ (((L)->nCcalls & 0xffff0000) == 0)}}
\par
{\bkmkstart AAAAAAACVK}
{\bkmkend AAAAAAACVK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.h \'B5\'DA 111 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'D0\'CD\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v CallInfo\:lstate.h}
{\xe \v lstate.h\:CallInfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b CallInfo} {\b CallInfo}}}
\par
{\bkmkstart AAAAAAACVL}
{\bkmkend AAAAAAACVL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Information about a call. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'D7\'A2\'BD\'E2\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\'BC\'C7\'C2\'BC\'C1\'CB\'BA\'AF\'CA\'FD\'D4\'DA\'B6\'D1\'D5\'BB\'D6\'D0\'B5\'C4\'CE\'BB\'D6\'C3,\'BA\'AF\'CA\'FDtop\'A3\'AC\'C7\'B0\'D2\'BB\'B8\'F6\'B5\'F7\'D3\'C3\'B5\'C4\'BA\'AF\'CA\'FD(\'C8\'E7\'B9\'FB\'B1\'BB\'B5\'F7\'D3\'C3\'D5\'DF),\'BA\'F3\'D2\'BB\'B8\'F6\'B5\'F7\'D3\'C3\'BA\'AF\'CA\'FD(\'C8\'E7\'B9\'FB\'B5\'F7\'D3\'C3\'D5\'DF)\'A1\'A3c func\'BA\'CD lua func\'C7\'F8\'B7\'D6\'B9\'AB\'D3\'C3union\'A3\'AC\'B5\'F7\'D3\'C3\'D7\'B4\'CC\'AC\'A1\'A2\'B7\'B5\'BB\'D8\'D6\'B5\'B8\'F6\'CA\'FD\'A1\'A3 \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B4\'FD\'B0\'EC\'CA\'C2\'CF\'EE:\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid yields\'B2\'BF\'B7\'D6 TODO \par
}
}}
{\xe \v global_State\:lstate.h}
{\xe \v lstate.h\:global_State}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b global_State} {\b global_State}}}
\par
{\bkmkstart AAAAAAACVM}
{\bkmkend AAAAAAACVM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v stringtable\:lstate.h}
{\xe \v lstate.h\:stringtable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b stringtable} {\b stringtable}}}
\par
{\bkmkstart AAAAAAACVN}
{\bkmkend AAAAAAACVN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
hash table for strings \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B4\'FD\'B0\'EC\'CA\'C2\'CF\'EE:\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid \par
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v luaE_enterCcall\:lstate.h}
{\xe \v lstate.h\:luaE_enterCcall}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaE_enterCcall ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAACVO}
{\bkmkend AAAAAAACVO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.c \'B5\'DA 135 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaE_extendCI\:lstate.h}
{\xe \v lstate.h\:luaE_extendCI}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} {\b CallInfo}* luaE_extendCI ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAACVP}
{\bkmkend AAAAAAACVP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.c \'B5\'DA 156 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaE_freeCI\:lstate.h}
{\xe \v lstate.h\:luaE_freeCI}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaE_freeCI ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAACVQ}
{\bkmkend AAAAAAACVQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.c \'B5\'DA 174 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaE_freethread\:lstate.h}
{\xe \v lstate.h\:luaE_freethread}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaE_freethread ({\b lua_State} *  {\i L}, {\b lua_State} *  {\i L1})}}
\par
{\bkmkstart AAAAAAACVR}
{\bkmkend AAAAAAACVR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.c \'B5\'DA 351 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaE_setdebt\:lstate.h}
{\xe \v lstate.h\:luaE_setdebt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaE_setdebt ({\b global_State} *  {\i g}, {\b l_mem}  {\i debt})}}
\par
{\bkmkstart AAAAAAACVS}
{\bkmkend AAAAAAACVS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.c \'B5\'DA 89 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaE_shrinkCI\:lstate.h}
{\xe \v lstate.h\:luaE_shrinkCI}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaE_shrinkCI ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAACVT}
{\bkmkend AAAAAAACVT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.c \'B5\'DA 192 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaE_warnerror\:lstate.h}
{\xe \v lstate.h\:luaE_warnerror}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaE_warnerror ({\b lua_State} *  {\i L}, const char *  {\i where})}}
\par
{\bkmkstart AAAAAAACVU}
{\bkmkend AAAAAAACVU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.c \'B5\'DA 455 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaE_warning\:lstate.h}
{\xe \v lstate.h\:luaE_warning}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaE_warning ({\b lua_State} *  {\i L}, const char *  {\i msg}, int  {\i tocont})}}
\par
{\bkmkstart AAAAAAACVV}
{\bkmkend AAAAAAACVV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.c \'B5\'DA 445 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/gitworkspace/lua/src/lstring.c \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v D:/gitworkspace/lua/src/lstring.c}
{\xe \v D:/gitworkspace/lua/src/lstring.c}
{\bkmkstart AAAAAAACVW}
{\bkmkend AAAAAAACVW}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "lprefix.h"}\par
{\f2 #include <string.h>}\par
{\f2 #include "lua.h"}\par
{\f2 #include "ldebug.h"}\par
{\f2 #include "ldo.h"}\par
{\f2 #include "lmem.h"}\par
{\f2 #include "lobject.h"}\par
{\f2 #include "lstate.h"}\par
{\f2 #include "lstring.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lstring_c}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_CORE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUAI_HASHLIMIT}\~ 5\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAXSTRTB}\~ {\b cast_int}({\b luaM_limitN}({\b MAX_INT}, {\b TString}*))\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b luaS_eqlngstr} ({\b TString} *a, {\b TString} *b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b luaS_hash} (const char *str, size_t l, unsigned int seed, size_t step)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b luaS_hashlongstr} ({\b TString} *ts)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b tablerehash} ({\b TString} **vect, int osize, int nsize)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaS_resize} ({\b lua_State} *L, int nsize)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaS_clearcache} ({\b global_State} *g)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaS_init} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b TString} * {\b createstrobj} ({\b lua_State} *L, size_t l, int tag, unsigned int h)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TString} * {\b luaS_createlngstrobj} ({\b lua_State} *L, size_t l)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaS_remove} ({\b lua_State} *L, {\b TString} *ts)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b growstrtab} ({\b lua_State} *L, {\b stringtable} *tb)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b TString} * {\b internshrstr} ({\b lua_State} *L, const char *str, size_t l)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TString} * {\b luaS_newlstr} ({\b lua_State} *L, const char *str, size_t l)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TString} * {\b luaS_new} ({\b lua_State} *L, const char *str)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Udata} * {\b luaS_newudata} ({\b lua_State} *L, size_t s, int nuvalue)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v lstring_c\:lstring.c}
{\xe \v lstring.c\:lstring_c}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lstring_c}}
\par
{\bkmkstart AAAAAAACVX}
{\bkmkend AAAAAAACVX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstring.c \'B5\'DA 7 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_CORE\:lstring.c}
{\xe \v lstring.c\:LUA_CORE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_CORE}}
\par
{\bkmkstart AAAAAAACVY}
{\bkmkend AAAAAAACVY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstring.c \'B5\'DA 8 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUAI_HASHLIMIT\:lstring.c}
{\xe \v lstring.c\:LUAI_HASHLIMIT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUAI_HASHLIMIT\~ 5}}
\par
{\bkmkstart AAAAAAACVZ}
{\bkmkend AAAAAAACVZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstring.c \'B5\'DA 30 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v MAXSTRTB\:lstring.c}
{\xe \v lstring.c\:MAXSTRTB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAXSTRTB\~ {\b cast_int}({\b luaM_limitN}({\b MAX_INT}, {\b TString}*))}}
\par
{\bkmkstart AAAAAAACWA}
{\bkmkend AAAAAAACWA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstring.c \'B5\'DA 38 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v createstrobj\:lstring.c}
{\xe \v lstring.c\:createstrobj}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b TString}* createstrobj ({\b lua_State} *  {\i L}, size_t  {\i l}, int  {\i tag}, unsigned int  {\i h}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACWB}
{\bkmkend AAAAAAACWB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstring.c \'B5\'DA 155 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v growstrtab\:lstring.c}
{\xe \v lstring.c\:growstrtab}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void growstrtab ({\b lua_State} *  {\i L}, {\b stringtable} *  {\i tb}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACWC}
{\bkmkend AAAAAAACWC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstring.c \'B5\'DA 186 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v internshrstr\:lstring.c}
{\xe \v lstring.c\:internshrstr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b TString}* internshrstr ({\b lua_State} *  {\i L}, const char *  {\i str}, size_t  {\i l}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACWD}
{\bkmkend AAAAAAACWD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstring.c \'B5\'DA 200 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaS_clearcache\:lstring.c}
{\xe \v lstring.c\:luaS_clearcache}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaS_clearcache ({\b global_State} *  {\i g})}}
\par
{\bkmkstart AAAAAAACWE}
{\bkmkend AAAAAAACWE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstring.c \'B5\'DA 122 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaS_createlngstrobj\:lstring.c}
{\xe \v lstring.c\:luaS_createlngstrobj}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TString}* luaS_createlngstrobj ({\b lua_State} *  {\i L}, size_t  {\i l})}}
\par
{\bkmkstart AAAAAAACWF}
{\bkmkend AAAAAAACWF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstring.c \'B5\'DA 169 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaS_eqlngstr\:lstring.c}
{\xe \v lstring.c\:luaS_eqlngstr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int luaS_eqlngstr ({\b TString} *  {\i a}, {\b TString} *  {\i b})}}
\par
{\bkmkstart AAAAAAACWG}
{\bkmkend AAAAAAACWG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstring.c \'B5\'DA 44 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaS_hash\:lstring.c}
{\xe \v lstring.c\:luaS_hash}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int luaS_hash (const char *  {\i str}, size_t  {\i l}, unsigned int  {\i seed}, size_t  {\i step})}}
\par
{\bkmkstart AAAAAAACWH}
{\bkmkend AAAAAAACWH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstring.c \'B5\'DA 53 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaS_hashlongstr\:lstring.c}
{\xe \v lstring.c\:luaS_hashlongstr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int luaS_hashlongstr ({\b TString} *  {\i ts})}}
\par
{\bkmkstart AAAAAAACWI}
{\bkmkend AAAAAAACWI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstring.c \'B5\'DA 62 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaS_init\:lstring.c}
{\xe \v lstring.c\:luaS_init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaS_init ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAACWJ}
{\bkmkend AAAAAAACWJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstring.c \'B5\'DA 135 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaS_new\:lstring.c}
{\xe \v lstring.c\:luaS_new}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TString}* luaS_new ({\b lua_State} *  {\i L}, const char *  {\i str})}}
\par
{\bkmkstart AAAAAAACWK}
{\bkmkend AAAAAAACWK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstring.c \'B5\'DA 253 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaS_newlstr\:lstring.c}
{\xe \v lstring.c\:luaS_newlstr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TString}* luaS_newlstr ({\b lua_State} *  {\i L}, const char *  {\i str}, size_t  {\i l})}}
\par
{\bkmkstart AAAAAAACWL}
{\bkmkend AAAAAAACWL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstring.c \'B5\'DA 233 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaS_newudata\:lstring.c}
{\xe \v lstring.c\:luaS_newudata}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Udata}* luaS_newudata ({\b lua_State} *  {\i L}, size_t  {\i s}, int  {\i nuvalue})}}
\par
{\bkmkstart AAAAAAACWM}
{\bkmkend AAAAAAACWM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstring.c \'B5\'DA 270 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaS_remove\:lstring.c}
{\xe \v lstring.c\:luaS_remove}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaS_remove ({\b lua_State} *  {\i L}, {\b TString} *  {\i ts})}}
\par
{\bkmkstart AAAAAAACWN}
{\bkmkend AAAAAAACWN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstring.c \'B5\'DA 176 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaS_resize\:lstring.c}
{\xe \v lstring.c\:luaS_resize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaS_resize ({\b lua_State} *  {\i L}, int  {\i nsize})}}
\par
{\bkmkstart AAAAAAACWO}
{\bkmkend AAAAAAACWO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstring.c \'B5\'DA 97 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v tablerehash\:lstring.c}
{\xe \v lstring.c\:tablerehash}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void tablerehash ({\b TString} **  {\i vect}, int  {\i osize}, int  {\i nsize}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACWP}
{\bkmkend AAAAAAACWP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstring.c \'B5\'DA 74 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/gitworkspace/lua/src/lstring.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v D:/gitworkspace/lua/src/lstring.h}
{\xe \v D:/gitworkspace/lua/src/lstring.h}
{\bkmkstart AAAAAAACWQ}
{\bkmkend AAAAAAACWQ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "lgc.h"}\par
{\f2 #include "lobject.h"}\par
{\f2 #include "lstate.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MEMERRMSG}\~ "not enough memory"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b sizelstring}(l)\~ (offsetof({\b TString}, contents) + ((l) + 1) * sizeof(char))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luaS_newliteral}(L,  s)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b isreserved}(s)\~ ((s)->tt == {\b LUA_VSHRSTR} && (s)->extra > 0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b eqshrstr}(a,  b)\~ {\b check_exp}((a)->tt == {\b LUA_VSHRSTR}, (a) == (b))\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} unsigned int {\b luaS_hash} (const char *str, size_t l, unsigned int seed, size_t step)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} unsigned int {\b luaS_hashlongstr} ({\b TString} *ts)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} int {\b luaS_eqlngstr} ({\b TString} *a, {\b TString} *b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaS_resize} ({\b lua_State} *L, int newsize)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaS_clearcache} ({\b global_State} *g)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaS_init} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaS_remove} ({\b lua_State} *L, {\b TString} *ts)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} {\b Udata} * {\b luaS_newudata} ({\b lua_State} *L, size_t s, int nuvalue)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} {\b TString} * {\b luaS_newlstr} ({\b lua_State} *L, const char *str, size_t l)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} {\b TString} * {\b luaS_new} ({\b lua_State} *L, const char *str)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} {\b TString} * {\b luaS_createlngstrobj} ({\b lua_State} *L, size_t l)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v eqshrstr\:lstring.h}
{\xe \v lstring.h\:eqshrstr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define eqshrstr( a,  b)\~ {\b check_exp}((a)->tt == {\b LUA_VSHRSTR}, (a) == (b))}}
\par
{\bkmkstart AAAAAAACWR}
{\bkmkend AAAAAAACWR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstring.h \'B5\'DA 41 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v isreserved\:lstring.h}
{\xe \v lstring.h\:isreserved}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define isreserved( s)\~ ((s)->tt == {\b LUA_VSHRSTR} && (s)->extra > 0)}}
\par
{\bkmkstart AAAAAAACWS}
{\bkmkend AAAAAAACWS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstring.h \'B5\'DA 35 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaS_newliteral\:lstring.h}
{\xe \v lstring.h\:luaS_newliteral}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luaS_newliteral( L,  s)}}
\par
{\bkmkstart AAAAAAACWT}
{\bkmkend AAAAAAACWT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                                  (luaS_newlstr(L, {\cf22 ""} s, \\\par
                                 ({\cf17 sizeof}(s)/{\cf17 sizeof}({\cf18 char}))-1))\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE lstring.h \'B5\'DA 28 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v MEMERRMSG\:lstring.h}
{\xe \v lstring.h\:MEMERRMSG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MEMERRMSG\~ "not enough memory"}}
\par
{\bkmkstart AAAAAAACWU}
{\bkmkend AAAAAAACWU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstring.h \'B5\'DA 19 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v sizelstring\:lstring.h}
{\xe \v lstring.h\:sizelstring}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define sizelstring( l)\~ (offsetof({\b TString}, contents) + ((l) + 1) * sizeof(char))}}
\par
{\bkmkstart AAAAAAACWV}
{\bkmkend AAAAAAACWV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstring.h \'B5\'DA 26 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v luaS_clearcache\:lstring.h}
{\xe \v lstring.h\:luaS_clearcache}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaS_clearcache ({\b global_State} *  {\i g})}}
\par
{\bkmkstart AAAAAAACWW}
{\bkmkend AAAAAAACWW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstring.c \'B5\'DA 122 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaS_createlngstrobj\:lstring.h}
{\xe \v lstring.h\:luaS_createlngstrobj}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} {\b TString}* luaS_createlngstrobj ({\b lua_State} *  {\i L}, size_t  {\i l})}}
\par
{\bkmkstart AAAAAAACWX}
{\bkmkend AAAAAAACWX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstring.c \'B5\'DA 169 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaS_eqlngstr\:lstring.h}
{\xe \v lstring.h\:luaS_eqlngstr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} int luaS_eqlngstr ({\b TString} *  {\i a}, {\b TString} *  {\i b})}}
\par
{\bkmkstart AAAAAAACWY}
{\bkmkend AAAAAAACWY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstring.c \'B5\'DA 44 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaS_hash\:lstring.h}
{\xe \v lstring.h\:luaS_hash}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} unsigned int luaS_hash (const char *  {\i str}, size_t  {\i l}, unsigned int  {\i seed}, size_t  {\i step})}}
\par
{\bkmkstart AAAAAAACWZ}
{\bkmkend AAAAAAACWZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstring.c \'B5\'DA 53 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaS_hashlongstr\:lstring.h}
{\xe \v lstring.h\:luaS_hashlongstr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} unsigned int luaS_hashlongstr ({\b TString} *  {\i ts})}}
\par
{\bkmkstart AAAAAAACXA}
{\bkmkend AAAAAAACXA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstring.c \'B5\'DA 62 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaS_init\:lstring.h}
{\xe \v lstring.h\:luaS_init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaS_init ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAACXB}
{\bkmkend AAAAAAACXB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstring.c \'B5\'DA 135 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaS_new\:lstring.h}
{\xe \v lstring.h\:luaS_new}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} {\b TString}* luaS_new ({\b lua_State} *  {\i L}, const char *  {\i str})}}
\par
{\bkmkstart AAAAAAACXC}
{\bkmkend AAAAAAACXC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstring.c \'B5\'DA 253 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaS_newlstr\:lstring.h}
{\xe \v lstring.h\:luaS_newlstr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} {\b TString}* luaS_newlstr ({\b lua_State} *  {\i L}, const char *  {\i str}, size_t  {\i l})}}
\par
{\bkmkstart AAAAAAACXD}
{\bkmkend AAAAAAACXD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstring.c \'B5\'DA 233 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaS_newudata\:lstring.h}
{\xe \v lstring.h\:luaS_newudata}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} {\b Udata}* luaS_newudata ({\b lua_State} *  {\i L}, size_t  {\i s}, int  {\i nuvalue})}}
\par
{\bkmkstart AAAAAAACXE}
{\bkmkend AAAAAAACXE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstring.c \'B5\'DA 270 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaS_remove\:lstring.h}
{\xe \v lstring.h\:luaS_remove}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaS_remove ({\b lua_State} *  {\i L}, {\b TString} *  {\i ts})}}
\par
{\bkmkstart AAAAAAACXF}
{\bkmkend AAAAAAACXF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstring.c \'B5\'DA 176 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaS_resize\:lstring.h}
{\xe \v lstring.h\:luaS_resize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaS_resize ({\b lua_State} *  {\i L}, int  {\i newsize})}}
\par
{\bkmkstart AAAAAAACXG}
{\bkmkend AAAAAAACXG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstring.c \'B5\'DA 97 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/gitworkspace/lua/src/lstrlib.c \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v D:/gitworkspace/lua/src/lstrlib.c}
{\xe \v D:/gitworkspace/lua/src/lstrlib.c}
{\bkmkstart AAAAAAACXH}
{\bkmkend AAAAAAACXH}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "lprefix.h"}\par
{\f2 #include <ctype.h>}\par
{\f2 #include <float.h>}\par
{\f2 #include <limits.h>}\par
{\f2 #include <locale.h>}\par
{\f2 #include <math.h>}\par
{\f2 #include <stddef.h>}\par
{\f2 #include <stdio.h>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <string.h>}\par
{\f2 #include "lua.h"}\par
{\f2 #include "lauxlib.h"}\par
{\f2 #include "lualib.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b str_Writer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b MatchState}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b GMatchState}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b cD}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union {\b Ftypes}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Header}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lstrlib_c}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_LIB}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_MAXCAPTURES}\~ 32\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b uchar}(c)\~ ((unsigned char)(c))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAX_SIZET}\~ ((size_t)(~(size_t)0))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAXSIZE}\~ 	(sizeof(size_t) < sizeof(int) ? {\b MAX_SIZET} : (size_t)(INT_MAX))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CAP_UNFINISHED}\~ (-1)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CAP_POSITION}\~ (-2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAXCCALLS}\~ 200\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b L_ESC}\~ '%'\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SPECIALS}\~ "^$*+?.([%-"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAX_ITEMF}\~ (110 + {\b l_floatatt}(MAX_10_EXP))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAX_ITEM}\~ 120\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b L_FMTFLAGS}\~ "-+ #0"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAX_FORMAT}\~ 32\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUAL_PACKPADBYTE}\~ 0x00\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAXINTSIZE}\~ 16\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b NB}\~ CHAR_BIT\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MC}\~ ((1 << {\b NB}) - 1)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SZINT}\~ ((int)sizeof({\b lua_Integer}))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAXALIGN}\~ (offsetof(struct {\b cD}, u))\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'D0\'CD\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b MatchState} {\b MatchState}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b GMatchState} {\b GMatchState}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef union {\b Ftypes} {\b Ftypes}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b Header} {\b Header}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef enum {\b KOption} {\b KOption}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'B6\'BE\'D9\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b KOption} \{ {\b Kint}, 
{\b Kuint}, 
{\b Kfloat}, 
{\b Kchar}, 
{\b Kstring}, 
{\b Kzstr}, 
{\b Kpadding}, 
{\b Kpaddalign}, 
{\b Knop}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b str_len} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static size_t {\b posrelatI} ({\b lua_Integer} pos, size_t len)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static size_t {\b getendpos} ({\b lua_State} *L, int arg, {\b lua_Integer} def, size_t len)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b str_sub} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b str_reverse} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b str_lower} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b str_upper} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b str_rep} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b str_byte} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b str_char} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b writer} ({\b lua_State} *L, const void *b, size_t size, void *ud)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b str_dump} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b tonum} ({\b lua_State} *L, int arg)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b trymt} ({\b lua_State} *L, const char *mtname)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b arith} ({\b lua_State} *L, int op, const char *mtname)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b arith_add} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b arith_sub} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b arith_mul} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b arith_mod} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b arith_pow} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b arith_div} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b arith_idiv} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b arith_unm} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const char * {\b match} ({\b MatchState} *ms, const char *s, const char *p)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b check_capture} ({\b MatchState} *ms, int l)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b capture_to_close} ({\b MatchState} *ms)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const char * {\b classend} ({\b MatchState} *ms, const char *p)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b match_class} (int c, int cl)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b matchbracketclass} (int c, const char *p, const char *ec)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b singlematch} ({\b MatchState} *ms, const char *s, const char *p, const char *ep)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const char * {\b matchbalance} ({\b MatchState} *ms, const char *s, const char *p)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const char * {\b max_expand} ({\b MatchState} *ms, const char *s, const char *p, const char *ep)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const char * {\b min_expand} ({\b MatchState} *ms, const char *s, const char *p, const char *ep)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const char * {\b start_capture} ({\b MatchState} *ms, const char *s, const char *p, int what)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const char * {\b end_capture} ({\b MatchState} *ms, const char *s, const char *p)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const char * {\b match_capture} ({\b MatchState} *ms, const char *s, int l)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const char * {\b lmemfind} (const char *s1, size_t l1, const char *s2, size_t l2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static size_t {\b get_onecapture} ({\b MatchState} *ms, int i, const char *s, const char *e, const char **cap)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b push_onecapture} ({\b MatchState} *ms, int i, const char *s, const char *e)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b push_captures} ({\b MatchState} *ms, const char *s, const char *e)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b nospecials} (const char *p, size_t l)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b prepstate} ({\b MatchState} *ms, {\b lua_State} *L, const char *s, size_t ls, const char *p, size_t lp)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b reprepstate} ({\b MatchState} *ms)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b str_find_aux} ({\b lua_State} *L, int find)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b str_find} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b str_match} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b gmatch_aux} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b gmatch} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b add_s} ({\b MatchState} *ms, {\b luaL_Buffer} *b, const char *s, const char *e)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b add_value} ({\b MatchState} *ms, {\b luaL_Buffer} *b, const char *s, const char *e, int tr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b str_gsub} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b addquoted} ({\b luaL_Buffer} *b, const char *s, size_t len)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b quotefloat} ({\b lua_State} *L, char *buff, {\b lua_Number} n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b addliteral} ({\b lua_State} *L, {\b luaL_Buffer} *b, int arg)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const char * {\b scanformat} ({\b lua_State} *L, const char *strfrmt, char *form)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b addlenmod} (char *form, const char *lenmod)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b str_format} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b digit} (int c)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b getnum} (const char **fmt, int df)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b getnumlimit} ({\b Header} *h, const char **fmt, int df)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b initheader} ({\b lua_State} *L, {\b Header} *h)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b KOption} {\b getoption} ({\b Header} *h, const char **fmt, int *size)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b KOption} {\b getdetails} ({\b Header} *h, size_t totalsize, const char **fmt, int *psize, int *ntoalign)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b packint} ({\b luaL_Buffer} *b, {\b lua_Unsigned} n, int islittle, int size, int neg)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b copywithendian} (volatile char *dest, volatile const char *src, int size, int islittle)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b str_pack} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b str_packsize} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b lua_Integer} {\b unpackint} ({\b lua_State} *L, const char *str, int islittle, int size, int issigned)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b str_unpack} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b createmetatable} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAMOD_API} int {\b luaopen_string} ({\b lua_State} *L)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const {\b luaL_Reg} {\b stringmetamethods} []\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union \{\par

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ {\b lu_byte} {\b left}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ {\b lu_byte} {\b right}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ int {\b dummy}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ char {\b little}\par
}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\} {\b nativeendian} = \{1\}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const {\b luaL_Reg} {\b strlib} []\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v CAP_POSITION\:lstrlib.c}
{\xe \v lstrlib.c\:CAP_POSITION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CAP_POSITION\~ (-2)}}
\par
{\bkmkstart AAAAAAACXI}
{\bkmkend AAAAAAACXI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 353 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v CAP_UNFINISHED\:lstrlib.c}
{\xe \v lstrlib.c\:CAP_UNFINISHED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CAP_UNFINISHED\~ (-1)}}
\par
{\bkmkstart AAAAAAACXJ}
{\bkmkend AAAAAAACXJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 352 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v L_ESC\:lstrlib.c}
{\xe \v lstrlib.c\:L_ESC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define L_ESC\~ '%'}}
\par
{\bkmkstart AAAAAAACXK}
{\bkmkend AAAAAAACXK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 380 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v L_FMTFLAGS\:lstrlib.c}
{\xe \v lstrlib.c\:L_FMTFLAGS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define L_FMTFLAGS\~ "-+ #0"}}
\par
{\bkmkstart AAAAAAACXL}
{\bkmkend AAAAAAACXL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 1091 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lstrlib_c\:lstrlib.c}
{\xe \v lstrlib.c\:lstrlib_c}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lstrlib_c}}
\par
{\bkmkstart AAAAAAACXM}
{\bkmkend AAAAAAACXM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 7 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_LIB\:lstrlib.c}
{\xe \v lstrlib.c\:LUA_LIB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_LIB}}
\par
{\bkmkstart AAAAAAACXN}
{\bkmkend AAAAAAACXN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 8 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_MAXCAPTURES\:lstrlib.c}
{\xe \v lstrlib.c\:LUA_MAXCAPTURES}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_MAXCAPTURES\~ 32}}
\par
{\bkmkstart AAAAAAACXO}
{\bkmkend AAAAAAACXO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 35 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUAL_PACKPADBYTE\:lstrlib.c}
{\xe \v lstrlib.c\:LUAL_PACKPADBYTE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUAL_PACKPADBYTE\~ 0x00}}
\par
{\bkmkstart AAAAAAACXP}
{\bkmkend AAAAAAACXP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 1329 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v MAX_FORMAT\:lstrlib.c}
{\xe \v lstrlib.c\:MAX_FORMAT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAX_FORMAT\~ 32}}
\par
{\bkmkstart AAAAAAACXQ}
{\bkmkend AAAAAAACXQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 1098 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v MAX_ITEM\:lstrlib.c}
{\xe \v lstrlib.c\:MAX_ITEM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAX_ITEM\~ 120}}
\par
{\bkmkstart AAAAAAACXR}
{\bkmkend AAAAAAACXR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 1086 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v MAX_ITEMF\:lstrlib.c}
{\xe \v lstrlib.c\:MAX_ITEMF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAX_ITEMF\~ (110 + {\b l_floatatt}(MAX_10_EXP))}}
\par
{\bkmkstart AAAAAAACXS}
{\bkmkend AAAAAAACXS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 1075 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v MAX_SIZET\:lstrlib.c}
{\xe \v lstrlib.c\:MAX_SIZET}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAX_SIZET\~ ((size_t)(~(size_t)0))}}
\par
{\bkmkstart AAAAAAACXT}
{\bkmkend AAAAAAACXT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 47 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v MAXALIGN\:lstrlib.c}
{\xe \v lstrlib.c\:MAXALIGN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAXALIGN\~ (offsetof(struct {\b cD}, u))}}
\par
{\bkmkstart AAAAAAACXU}
{\bkmkend AAAAAAACXU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 1358 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v MAXCCALLS\:lstrlib.c}
{\xe \v lstrlib.c\:MAXCCALLS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAXCCALLS\~ 200}}
\par
{\bkmkstart AAAAAAACXV}
{\bkmkend AAAAAAACXV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 376 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v MAXINTSIZE\:lstrlib.c}
{\xe \v lstrlib.c\:MAXINTSIZE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAXINTSIZE\~ 16}}
\par
{\bkmkstart AAAAAAACXW}
{\bkmkend AAAAAAACXW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 1333 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v MAXSIZE\:lstrlib.c}
{\xe \v lstrlib.c\:MAXSIZE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAXSIZE\~ 	(sizeof(size_t) < sizeof(int) ? {\b MAX_SIZET} : (size_t)(INT_MAX))}}
\par
{\bkmkstart AAAAAAACXX}
{\bkmkend AAAAAAACXX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 49 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v MC\:lstrlib.c}
{\xe \v lstrlib.c\:MC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MC\~ ((1 << {\b NB}) - 1)}}
\par
{\bkmkstart AAAAAAACXY}
{\bkmkend AAAAAAACXY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 1339 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v NB\:lstrlib.c}
{\xe \v lstrlib.c\:NB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define NB\~ CHAR_BIT}}
\par
{\bkmkstart AAAAAAACXZ}
{\bkmkend AAAAAAACXZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 1336 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v SPECIALS\:lstrlib.c}
{\xe \v lstrlib.c\:SPECIALS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SPECIALS\~ "^$*+?.([%-"}}
\par
{\bkmkstart AAAAAAACYA}
{\bkmkend AAAAAAACYA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 381 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v SZINT\:lstrlib.c}
{\xe \v lstrlib.c\:SZINT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SZINT\~ ((int)sizeof({\b lua_Integer}))}}
\par
{\bkmkstart AAAAAAACYB}
{\bkmkend AAAAAAACYB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 1342 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v uchar\:lstrlib.c}
{\xe \v lstrlib.c\:uchar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define uchar( c)\~ ((unsigned char)(c))}}
\par
{\bkmkstart AAAAAAACYC}
{\bkmkend AAAAAAACYC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 40 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'D0\'CD\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v Ftypes\:lstrlib.c}
{\xe \v lstrlib.c\:Ftypes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef union {\b Ftypes} {\b Ftypes}}}
\par
{\bkmkstart AAAAAAACYD}
{\bkmkend AAAAAAACYD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GMatchState\:lstrlib.c}
{\xe \v lstrlib.c\:GMatchState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b GMatchState} {\b GMatchState}}}
\par
{\bkmkstart AAAAAAACYE}
{\bkmkend AAAAAAACYE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Header\:lstrlib.c}
{\xe \v lstrlib.c\:Header}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b Header} {\b Header}}}
\par
{\bkmkstart AAAAAAACYF}
{\bkmkend AAAAAAACYF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v KOption\:lstrlib.c}
{\xe \v lstrlib.c\:KOption}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef enum {\b KOption} {\b KOption}}}
\par
{\bkmkstart AAAAAAACYG}
{\bkmkend AAAAAAACYG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MatchState\:lstrlib.c}
{\xe \v lstrlib.c\:MatchState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b MatchState} {\b MatchState}}}
\par
{\bkmkstart AAAAAAACYH}
{\bkmkend AAAAAAACYH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'B6\'BE\'D9\'C0\'E0\'D0\'CD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v KOption\:lstrlib.c}
{\xe \v lstrlib.c\:KOption}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b KOption}}}
\par
{\bkmkstart AAAAAAACYI}
{\bkmkend AAAAAAACYI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C3\'B6\'BE\'D9\'D6\'B5:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v Kint\:lstrlib.c}
{\xe \v lstrlib.c\:Kint}
{\qr Kint{\bkmkstart AAAAAAACYJ}
{\bkmkend AAAAAAACYJ}
\cell }{\cell }{\row }
{\xe \v Kuint\:lstrlib.c}
{\xe \v lstrlib.c\:Kuint}
{\qr Kuint{\bkmkstart AAAAAAACYK}
{\bkmkend AAAAAAACYK}
\cell }{\cell }{\row }
{\xe \v Kfloat\:lstrlib.c}
{\xe \v lstrlib.c\:Kfloat}
{\qr Kfloat{\bkmkstart AAAAAAACYL}
{\bkmkend AAAAAAACYL}
\cell }{\cell }{\row }
{\xe \v Kchar\:lstrlib.c}
{\xe \v lstrlib.c\:Kchar}
{\qr Kchar{\bkmkstart AAAAAAACYM}
{\bkmkend AAAAAAACYM}
\cell }{\cell }{\row }
{\xe \v Kstring\:lstrlib.c}
{\xe \v lstrlib.c\:Kstring}
{\qr Kstring{\bkmkstart AAAAAAACYN}
{\bkmkend AAAAAAACYN}
\cell }{\cell }{\row }
{\xe \v Kzstr\:lstrlib.c}
{\xe \v lstrlib.c\:Kzstr}
{\qr Kzstr{\bkmkstart AAAAAAACYO}
{\bkmkend AAAAAAACYO}
\cell }{\cell }{\row }
{\xe \v Kpadding\:lstrlib.c}
{\xe \v lstrlib.c\:Kpadding}
{\qr Kpadding{\bkmkstart AAAAAAACYP}
{\bkmkend AAAAAAACYP}
\cell }{\cell }{\row }
{\xe \v Kpaddalign\:lstrlib.c}
{\xe \v lstrlib.c\:Kpaddalign}
{\qr Kpaddalign{\bkmkstart AAAAAAACYQ}
{\bkmkend AAAAAAACYQ}
\cell }{\cell }{\row }
{\xe \v Knop\:lstrlib.c}
{\xe \v lstrlib.c\:Knop}
{\qr Knop{\bkmkstart AAAAAAACYR}
{\bkmkend AAAAAAACYR}
\cell }{\cell }{\row }
}
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 1385 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v add_s\:lstrlib.c}
{\xe \v lstrlib.c\:add_s}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void add_s ({\b MatchState} *  {\i ms}, {\b luaL_Buffer} *  {\i b}, const char *  {\i s}, const char *  {\i e}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACYS}
{\bkmkend AAAAAAACYS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 868 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v add_value\:lstrlib.c}
{\xe \v lstrlib.c\:add_value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int add_value ({\b MatchState} *  {\i ms}, {\b luaL_Buffer} *  {\i b}, const char *  {\i s}, const char *  {\i e}, int  {\i tr}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACYT}
{\bkmkend AAAAAAACYT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 903 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v addlenmod\:lstrlib.c}
{\xe \v lstrlib.c\:addlenmod}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void addlenmod (char *  {\i form}, const char *  {\i lenmod}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACYU}
{\bkmkend AAAAAAACYU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 1214 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v addliteral\:lstrlib.c}
{\xe \v lstrlib.c\:addliteral}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void addliteral ({\b lua_State} *  {\i L}, {\b luaL_Buffer} *  {\i b}, int  {\i arg}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACYV}
{\bkmkend AAAAAAACYV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 1154 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v addquoted\:lstrlib.c}
{\xe \v lstrlib.c\:addquoted}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void addquoted ({\b luaL_Buffer} *  {\i b}, const char *  {\i s}, size_t  {\i len}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACYW}
{\bkmkend AAAAAAACYW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 1101 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v arith\:lstrlib.c}
{\xe \v lstrlib.c\:arith}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int arith ({\b lua_State} *  {\i L}, int  {\i op}, const char *  {\i mtname}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACYX}
{\bkmkend AAAAAAACYX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 286 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v arith_add\:lstrlib.c}
{\xe \v lstrlib.c\:arith_add}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int arith_add ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACYY}
{\bkmkend AAAAAAACYY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 295 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v arith_div\:lstrlib.c}
{\xe \v lstrlib.c\:arith_div}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int arith_div ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACYZ}
{\bkmkend AAAAAAACYZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 315 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v arith_idiv\:lstrlib.c}
{\xe \v lstrlib.c\:arith_idiv}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int arith_idiv ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACZA}
{\bkmkend AAAAAAACZA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 319 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v arith_mod\:lstrlib.c}
{\xe \v lstrlib.c\:arith_mod}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int arith_mod ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACZB}
{\bkmkend AAAAAAACZB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 307 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v arith_mul\:lstrlib.c}
{\xe \v lstrlib.c\:arith_mul}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int arith_mul ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACZC}
{\bkmkend AAAAAAACZC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 303 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v arith_pow\:lstrlib.c}
{\xe \v lstrlib.c\:arith_pow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int arith_pow ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACZD}
{\bkmkend AAAAAAACZD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 311 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v arith_sub\:lstrlib.c}
{\xe \v lstrlib.c\:arith_sub}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int arith_sub ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACZE}
{\bkmkend AAAAAAACZE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 299 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v arith_unm\:lstrlib.c}
{\xe \v lstrlib.c\:arith_unm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int arith_unm ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACZF}
{\bkmkend AAAAAAACZF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 323 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v capture_to_close\:lstrlib.c}
{\xe \v lstrlib.c\:capture_to_close}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int capture_to_close ({\b MatchState} *  {\i ms}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACZG}
{\bkmkend AAAAAAACZG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 392 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v check_capture\:lstrlib.c}
{\xe \v lstrlib.c\:check_capture}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int check_capture ({\b MatchState} *  {\i ms}, int  {\i l}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACZH}
{\bkmkend AAAAAAACZH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 384 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v classend\:lstrlib.c}
{\xe \v lstrlib.c\:classend}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static const char* classend ({\b MatchState} *  {\i ms}, const char *  {\i p}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACZI}
{\bkmkend AAAAAAACZI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 400 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v copywithendian\:lstrlib.c}
{\xe \v lstrlib.c\:copywithendian}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void copywithendian (volatile char *  {\i dest}, volatile const char *  {\i src}, int  {\i size}, int  {\i islittle}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACZJ}
{\bkmkend AAAAAAACZJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 1538 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v createmetatable\:lstrlib.c}
{\xe \v lstrlib.c\:createmetatable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void createmetatable ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACZK}
{\bkmkend AAAAAAACZK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 1783 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v digit\:lstrlib.c}
{\xe \v lstrlib.c\:digit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int digit (int  {\i c}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACZL}
{\bkmkend AAAAAAACZL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 1402 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v end_capture\:lstrlib.c}
{\xe \v lstrlib.c\:end_capture}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static const char* end_capture ({\b MatchState} *  {\i ms}, const char *  {\i s}, const char *  {\i p}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACZM}
{\bkmkend AAAAAAACZM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 545 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v get_onecapture\:lstrlib.c}
{\xe \v lstrlib.c\:get_onecapture}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static size_t get_onecapture ({\b MatchState} *  {\i ms}, int  {\i i}, const char *  {\i s}, const char *  {\i e}, const char **  {\i cap}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACZN}
{\bkmkend AAAAAAACZN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 699 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v getdetails\:lstrlib.c}
{\xe \v lstrlib.c\:getdetails}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b KOption} getdetails ({\b Header} *  {\i h}, size_t  {\i totalsize}, const char **  {\i fmt}, int *  {\i psize}, int *  {\i ntoalign}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACZO}
{\bkmkend AAAAAAACZO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 1490 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v getendpos\:lstrlib.c}
{\xe \v lstrlib.c\:getendpos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static size_t getendpos ({\b lua_State} *  {\i L}, int  {\i arg}, {\b lua_Integer}  {\i def}, size_t  {\i len}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACZP}
{\bkmkend AAAAAAACZP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 87 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v getnum\:lstrlib.c}
{\xe \v lstrlib.c\:getnum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int getnum (const char **  {\i fmt}, int  {\i df}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACZQ}
{\bkmkend AAAAAAACZQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 1404 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v getnumlimit\:lstrlib.c}
{\xe \v lstrlib.c\:getnumlimit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int getnumlimit ({\b Header} *  {\i h}, const char **  {\i fmt}, int  {\i df}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACZR}
{\bkmkend AAAAAAACZR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 1421 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v getoption\:lstrlib.c}
{\xe \v lstrlib.c\:getoption}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b KOption} getoption ({\b Header} *  {\i h}, const char **  {\i fmt}, int *  {\i size}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACZS}
{\bkmkend AAAAAAACZS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 1443 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v gmatch\:lstrlib.c}
{\xe \v lstrlib.c\:gmatch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int gmatch ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACZT}
{\bkmkend AAAAAAACZT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 851 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v gmatch_aux\:lstrlib.c}
{\xe \v lstrlib.c\:gmatch_aux}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int gmatch_aux ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACZU}
{\bkmkend AAAAAAACZU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 835 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v initheader\:lstrlib.c}
{\xe \v lstrlib.c\:initheader}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void initheader ({\b lua_State} *  {\i L}, {\b Header} *  {\i h}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACZV}
{\bkmkend AAAAAAACZV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 1433 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lmemfind\:lstrlib.c}
{\xe \v lstrlib.c\:lmemfind}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static const char* lmemfind (const char *  {\i s1}, size_t  {\i l1}, const char *  {\i s2}, size_t  {\i l2}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACZW}
{\bkmkend AAAAAAACZW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 670 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaopen_string\:lstrlib.c}
{\xe \v lstrlib.c\:luaopen_string}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAMOD_API} int luaopen_string ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAACZX}
{\bkmkend AAAAAAACZX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 1800 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v match\:lstrlib.c}
{\xe \v lstrlib.c\:match}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static const char * match ({\b MatchState} *  {\i ms}, const char *  {\i s}, const char *  {\i p}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACZY}
{\bkmkend AAAAAAACZY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 567 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v match_capture\:lstrlib.c}
{\xe \v lstrlib.c\:match_capture}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static const char* match_capture ({\b MatchState} *  {\i ms}, const char *  {\i s}, int  {\i l}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACZZ}
{\bkmkend AAAAAAACZZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 556 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v match_class\:lstrlib.c}
{\xe \v lstrlib.c\:match_class}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int match_class (int  {\i c}, int  {\i cl}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADAA}
{\bkmkend AAAAAAADAA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 424 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v matchbalance\:lstrlib.c}
{\xe \v lstrlib.c\:matchbalance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static const char* matchbalance ({\b MatchState} *  {\i ms}, const char *  {\i s}, const char *  {\i p}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADAB}
{\bkmkend AAAAAAADAB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 483 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v matchbracketclass\:lstrlib.c}
{\xe \v lstrlib.c\:matchbracketclass}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int matchbracketclass (int  {\i c}, const char *  {\i p}, const char *  {\i ec}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADAC}
{\bkmkend AAAAAAADAC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 444 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v max_expand\:lstrlib.c}
{\xe \v lstrlib.c\:max_expand}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static const char* max_expand ({\b MatchState} *  {\i ms}, const char *  {\i s}, const char *  {\i p}, const char *  {\i ep}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADAD}
{\bkmkend AAAAAAADAD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 503 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v min_expand\:lstrlib.c}
{\xe \v lstrlib.c\:min_expand}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static const char* min_expand ({\b MatchState} *  {\i ms}, const char *  {\i s}, const char *  {\i p}, const char *  {\i ep}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADAE}
{\bkmkend AAAAAAADAE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 518 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v nospecials\:lstrlib.c}
{\xe \v lstrlib.c\:nospecials}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int nospecials (const char *  {\i p}, size_t  {\i l}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADAF}
{\bkmkend AAAAAAADAF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 743 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v packint\:lstrlib.c}
{\xe \v lstrlib.c\:packint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void packint ({\b luaL_Buffer} *  {\i b}, {\b lua_Unsigned}  {\i n}, int  {\i islittle}, int  {\i size}, int  {\i neg}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADAG}
{\bkmkend AAAAAAADAG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 1517 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v posrelatI\:lstrlib.c}
{\xe \v lstrlib.c\:posrelatI}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static size_t posrelatI ({\b lua_Integer}  {\i pos}, size_t  {\i len}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADAH}
{\bkmkend AAAAAAADAH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 71 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v prepstate\:lstrlib.c}
{\xe \v lstrlib.c\:prepstate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void prepstate ({\b MatchState} *  {\i ms}, {\b lua_State} *  {\i L}, const char *  {\i s}, size_t  {\i ls}, const char *  {\i p}, size_t  {\i lp}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADAI}
{\bkmkend AAAAAAADAI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 754 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v push_captures\:lstrlib.c}
{\xe \v lstrlib.c\:push_captures}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int push_captures ({\b MatchState} *  {\i ms}, const char *  {\i s}, const char *  {\i e}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADAJ}
{\bkmkend AAAAAAADAJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 732 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v push_onecapture\:lstrlib.c}
{\xe \v lstrlib.c\:push_onecapture}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void push_onecapture ({\b MatchState} *  {\i ms}, int  {\i i}, const char *  {\i s}, const char *  {\i e}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADAK}
{\bkmkend AAAAAAADAK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 722 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v quotefloat\:lstrlib.c}
{\xe \v lstrlib.c\:quotefloat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int quotefloat ({\b lua_State} *  {\i L}, char *  {\i buff}, {\b lua_Number}  {\i n}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADAL}
{\bkmkend AAAAAAADAL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 1130 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v reprepstate\:lstrlib.c}
{\xe \v lstrlib.c\:reprepstate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void reprepstate ({\b MatchState} *  {\i ms}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADAM}
{\bkmkend AAAAAAADAM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 764 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v scanformat\:lstrlib.c}
{\xe \v lstrlib.c\:scanformat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static const char* scanformat ({\b lua_State} *  {\i L}, const char *  {\i strfrmt}, char *  {\i form}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADAN}
{\bkmkend AAAAAAADAN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 1189 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v singlematch\:lstrlib.c}
{\xe \v lstrlib.c\:singlematch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int singlematch ({\b MatchState} *  {\i ms}, const char *  {\i s}, const char *  {\i p}, const char *  {\i ep}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADAO}
{\bkmkend AAAAAAADAO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 467 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v start_capture\:lstrlib.c}
{\xe \v lstrlib.c\:start_capture}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static const char* start_capture ({\b MatchState} *  {\i ms}, const char *  {\i s}, const char *  {\i p}, int  {\i what}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADAP}
{\bkmkend AAAAAAADAP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 531 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v str_byte\:lstrlib.c}
{\xe \v lstrlib.c\:str_byte}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int str_byte ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADAQ}
{\bkmkend AAAAAAADAQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 176 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v str_char\:lstrlib.c}
{\xe \v lstrlib.c\:str_char}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int str_char ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADAR}
{\bkmkend AAAAAAADAR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 194 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v str_dump\:lstrlib.c}
{\xe \v lstrlib.c\:str_dump}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int str_dump ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADAS}
{\bkmkend AAAAAAADAS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 232 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v str_find\:lstrlib.c}
{\xe \v lstrlib.c\:str_find}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int str_find ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADAT}
{\bkmkend AAAAAAADAT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 816 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v str_find_aux\:lstrlib.c}
{\xe \v lstrlib.c\:str_find_aux}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int str_find_aux ({\b lua_State} *  {\i L}, int  {\i find}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADAU}
{\bkmkend AAAAAAADAU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 770 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v str_format\:lstrlib.c}
{\xe \v lstrlib.c\:str_format}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int str_format ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADAV}
{\bkmkend AAAAAAADAV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 1224 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v str_gsub\:lstrlib.c}
{\xe \v lstrlib.c\:str_gsub}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int str_gsub ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADAW}
{\bkmkend AAAAAAADAW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 939 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v str_len\:lstrlib.c}
{\xe \v lstrlib.c\:str_len}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int str_len ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADAX}
{\bkmkend AAAAAAADAX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 55 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v str_lower\:lstrlib.c}
{\xe \v lstrlib.c\:str_lower}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int str_lower ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADAY}
{\bkmkend AAAAAAADAY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 124 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v str_match\:lstrlib.c}
{\xe \v lstrlib.c\:str_match}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int str_match ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADAZ}
{\bkmkend AAAAAAADAZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 821 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v str_pack\:lstrlib.c}
{\xe \v lstrlib.c\:str_pack}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int str_pack ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADBA}
{\bkmkend AAAAAAADBA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 1552 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v str_packsize\:lstrlib.c}
{\xe \v lstrlib.c\:str_packsize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int str_packsize ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADBB}
{\bkmkend AAAAAAADBB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 1639 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v str_rep\:lstrlib.c}
{\xe \v lstrlib.c\:str_rep}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int str_rep ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADBC}
{\bkmkend AAAAAAADBC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 150 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v str_reverse\:lstrlib.c}
{\xe \v lstrlib.c\:str_reverse}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int str_reverse ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADBD}
{\bkmkend AAAAAAADBD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 112 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v str_sub\:lstrlib.c}
{\xe \v lstrlib.c\:str_sub}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int str_sub ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADBE}
{\bkmkend AAAAAAADBE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 100 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v str_unpack\:lstrlib.c}
{\xe \v lstrlib.c\:str_unpack}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int str_unpack ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADBF}
{\bkmkend AAAAAAADBF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 1693 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v str_upper\:lstrlib.c}
{\xe \v lstrlib.c\:str_upper}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int str_upper ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADBG}
{\bkmkend AAAAAAADBG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 137 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v tonum\:lstrlib.c}
{\xe \v lstrlib.c\:tonum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int tonum ({\b lua_State} *  {\i L}, int  {\i arg}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADBH}
{\bkmkend AAAAAAADBH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 263 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v trymt\:lstrlib.c}
{\xe \v lstrlib.c\:trymt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void trymt ({\b lua_State} *  {\i L}, const char *  {\i mtname}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADBI}
{\bkmkend AAAAAAADBI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 276 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v unpackint\:lstrlib.c}
{\xe \v lstrlib.c\:unpackint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b lua_Integer} unpackint ({\b lua_State} *  {\i L}, const char *  {\i str}, int  {\i islittle}, int  {\i size}, int  {\i issigned}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADBJ}
{\bkmkend AAAAAAADBJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 1667 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v writer\:lstrlib.c}
{\xe \v lstrlib.c\:writer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int writer ({\b lua_State} *  {\i L}, const void *  {\i b}, size_t  {\i size}, void *  {\i ud}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADBK}
{\bkmkend AAAAAAADBK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 221 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v dummy\:lstrlib.c}
{\xe \v lstrlib.c\:dummy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int dummy}}
\par
{\bkmkstart AAAAAAADBL}
{\bkmkend AAAAAAADBL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 1347 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v little\:lstrlib.c}
{\xe \v lstrlib.c\:little}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char little}}
\par
{\bkmkstart AAAAAAADBM}
{\bkmkend AAAAAAADBM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 1348 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v nativeendian\:lstrlib.c}
{\xe \v lstrlib.c\:nativeendian}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const \{ ... \}  nativeendian{\f2 [static]}}}
\par
{\bkmkstart AAAAAAADBN}
{\bkmkend AAAAAAADBN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v stringmetamethods\:lstrlib.c}
{\xe \v lstrlib.c\:stringmetamethods}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b luaL_Reg} stringmetamethods[]{\f2 [static]}}}
\par
{\bkmkstart AAAAAAADBO}
{\bkmkend AAAAAAADBO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'B3\'F5\'CA\'BC\'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{\par
  \{{\cf22 "__add"}, arith_add\},\par
  \{{\cf22 "__sub"}, arith_sub\},\par
  \{{\cf22 "__mul"}, arith_mul\},\par
  \{{\cf22 "__mod"}, arith_mod\},\par
  \{{\cf22 "__pow"}, arith_pow\},\par
  \{{\cf22 "__div"}, arith_div\},\par
  \{{\cf22 "__idiv"}, arith_idiv\},\par
  \{{\cf22 "__unm"}, arith_unm\},\par
  \{{\cf22 "__index"}, NULL\},  \par
  \{NULL, NULL\}\par
\}\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 328 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v strlib\:lstrlib.c}
{\xe \v lstrlib.c\:strlib}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b luaL_Reg} strlib[]{\f2 [static]}}}
\par
{\bkmkstart AAAAAAADBP}
{\bkmkend AAAAAAADBP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'B3\'F5\'CA\'BC\'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{\par
  \{{\cf22 "byte"}, str_byte\},\par
  \{{\cf22 "char"}, str_char\},\par
  \{{\cf22 "dump"}, str_dump\},\par
  \{{\cf22 "find"}, str_find\},\par
  \{{\cf22 "format"}, str_format\},\par
  \{{\cf22 "gmatch"}, gmatch\},\par
  \{{\cf22 "gsub"}, str_gsub\},\par
  \{{\cf22 "len"}, str_len\},\par
  \{{\cf22 "lower"}, str_lower\},\par
  \{{\cf22 "match"}, str_match\},\par
  \{{\cf22 "rep"}, str_rep\},\par
  \{{\cf22 "reverse"}, str_reverse\},\par
  \{{\cf22 "sub"}, str_sub\},\par
  \{{\cf22 "upper"}, str_upper\},\par
  \{{\cf22 "pack"}, str_pack\},\par
  \{{\cf22 "packsize"}, str_packsize\},\par
  \{{\cf22 "unpack"}, str_unpack\},\par
  \{NULL, NULL\}\par
\}\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 1761 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/gitworkspace/lua/src/ltable.c \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v D:/gitworkspace/lua/src/ltable.c}
{\xe \v D:/gitworkspace/lua/src/ltable.c}
{\bkmkstart AAAAAAADBQ}
{\bkmkend AAAAAAADBQ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "lprefix.h"}\par
{\f2 #include <math.h>}\par
{\f2 #include <limits.h>}\par
{\f2 #include "lua.h"}\par
{\f2 #include "ldebug.h"}\par
{\f2 #include "ldo.h"}\par
{\f2 #include "lgc.h"}\par
{\f2 #include "lmem.h"}\par
{\f2 #include "lobject.h"}\par
{\f2 #include "lstate.h"}\par
{\f2 #include "lstring.h"}\par
{\f2 #include "ltable.h"}\par
{\f2 #include "lvm.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ltable_c}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_CORE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAXABITS}\~ {\b cast_int}(sizeof(int) * CHAR_BIT - 1)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAXASIZE}\~ {\b luaM_limitN}(1u << {\b MAXABITS}, {\b TValue})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAXHBITS}\~ ({\b MAXABITS} - 1)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAXHSIZE}\~ {\b luaM_limitN}(1u << {\b MAXHBITS}, {\b Node})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b hashpow2}(t,  n)\~ ({\b gnode}(t, {\b lmod}((n), {\b sizenode}(t))))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b hashstr}(t,  str)\~ {\b hashpow2}(t, (str)->hash)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b hashboolean}(t,  p)\~ {\b hashpow2}(t, p)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b hashint}(t,  i)\~ {\b hashpow2}(t, i)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b hashmod}(t,  n)\~ ({\b gnode}(t, ((n) % (({\b sizenode}(t)-1)|1))))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b hashpointer}(t,  p)\~ {\b hashmod}(t, {\b point2uint}(p))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b dummynode}\~ (&{\b dummynode_})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b limitequalsasize}(t)\~ ({\b isrealasize}(t) || {\b ispow2}((t)->alimit))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b limitasasize}(t)\~ {\b check_exp}({\b isrealasize}(t), t->alimit)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b l_hashfloat} ({\b lua_Number} n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b Node} * {\b mainposition} (const {\b Table} *t, int ktt, const {\b Value} *kvl)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b Node} * {\b mainpositionTV} (const {\b Table} *t, const {\b TValue} *key)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b equalkey} (const {\b TValue} *k1, const {\b Node} *n2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} unsigned int {\b luaH_realasize} (const {\b Table} *t)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b ispow2realasize} (const {\b Table} *t)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static unsigned int {\b setlimittosize} ({\b Table} *t)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const {\b TValue} * {\b getgeneric} ({\b Table} *t, const {\b TValue} *key)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static unsigned int {\b arrayindex} ({\b lua_Integer} k)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static unsigned int {\b findindex} ({\b lua_State} *L, {\b Table} *t, {\b TValue} *key, unsigned int asize)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b luaH_next} ({\b lua_State} *L, {\b Table} *t, {\b StkId} key)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b freehash} ({\b lua_State} *L, {\b Table} *t)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static unsigned int {\b computesizes} (unsigned int nums[], unsigned int *pna)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b countint} ({\b lua_Integer} key, unsigned int *nums)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static unsigned int {\b numusearray} (const {\b Table} *t, unsigned int *nums)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b numusehash} (const {\b Table} *t, unsigned int *nums, unsigned int *pna)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b setnodevector} ({\b lua_State} *L, {\b Table} *t, unsigned int size)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b reinsert} ({\b lua_State} *L, {\b Table} *ot, {\b Table} *t)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b exchangehashpart} ({\b Table} *t1, {\b Table} *t2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaH_resize} ({\b lua_State} *L, {\b Table} *t, unsigned int newasize, unsigned int nhsize)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaH_resizearray} ({\b lua_State} *L, {\b Table} *t, unsigned int nasize)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b rehash} ({\b lua_State} *L, {\b Table} *t, const {\b TValue} *ek)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Table} * {\b luaH_new} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaH_free} ({\b lua_State} *L, {\b Table} *t)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b Node} * {\b getfreepos} ({\b Table} *t)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TValue} * {\b luaH_newkey} ({\b lua_State} *L, {\b Table} *t, const {\b TValue} *key)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b TValue} * {\b luaH_getint} ({\b Table} *t, {\b lua_Integer} key)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b TValue} * {\b luaH_getshortstr} ({\b Table} *t, {\b TString} *key)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b TValue} * {\b luaH_getstr} ({\b Table} *t, {\b TString} *key)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b TValue} * {\b luaH_get} ({\b Table} *t, const {\b TValue} *key)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TValue} * {\b luaH_set} ({\b lua_State} *L, {\b Table} *t, const {\b TValue} *key)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaH_setint} ({\b lua_State} *L, {\b Table} *t, {\b lua_Integer} key, {\b TValue} *value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b lua_Unsigned} {\b hash_search} ({\b Table} *t, {\b lua_Unsigned} j)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static unsigned int {\b binsearch} (const {\b TValue} *array, unsigned int i, unsigned int j)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b lua_Unsigned} {\b luaH_getn} ({\b Table} *t)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const {\b Node} {\b dummynode_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const {\b TValue} {\b absentkey} = \{{\b ABSTKEYCONSTANT}\}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v dummynode\:ltable.c}
{\xe \v ltable.c\:dummynode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define dummynode\~ (&{\b dummynode_})}}
\par
{\bkmkstart AAAAAAADBR}
{\bkmkend AAAAAAADBR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltable.c \'B5\'DA 88 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v hashboolean\:ltable.c}
{\xe \v ltable.c\:hashboolean}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define hashboolean( t,  p)\~ {\b hashpow2}(t, p)}}
\par
{\bkmkstart AAAAAAADBS}
{\bkmkend AAAAAAADBS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltable.c \'B5\'DA 74 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v hashint\:ltable.c}
{\xe \v ltable.c\:hashint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define hashint( t,  i)\~ {\b hashpow2}(t, i)}}
\par
{\bkmkstart AAAAAAADBT}
{\bkmkend AAAAAAADBT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltable.c \'B5\'DA 75 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v hashmod\:ltable.c}
{\xe \v ltable.c\:hashmod}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define hashmod( t,  n)\~ ({\b gnode}(t, ((n) % (({\b sizenode}(t)-1)|1))))}}
\par
{\bkmkstart AAAAAAADBU}
{\bkmkend AAAAAAADBU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltable.c \'B5\'DA 82 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v hashpointer\:ltable.c}
{\xe \v ltable.c\:hashpointer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define hashpointer( t,  p)\~ {\b hashmod}(t, {\b point2uint}(p))}}
\par
{\bkmkstart AAAAAAADBV}
{\bkmkend AAAAAAADBV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltable.c \'B5\'DA 85 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v hashpow2\:ltable.c}
{\xe \v ltable.c\:hashpow2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define hashpow2( t,  n)\~ ({\b gnode}(t, {\b lmod}((n), {\b sizenode}(t))))}}
\par
{\bkmkstart AAAAAAADBW}
{\bkmkend AAAAAAADBW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltable.c \'B5\'DA 71 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v hashstr\:ltable.c}
{\xe \v ltable.c\:hashstr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define hashstr( t,  str)\~ {\b hashpow2}(t, (str)->hash)}}
\par
{\bkmkstart AAAAAAADBX}
{\bkmkend AAAAAAADBX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltable.c \'B5\'DA 73 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v limitasasize\:ltable.c}
{\xe \v ltable.c\:limitasasize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define limitasasize( t)\~ {\b check_exp}({\b isrealasize}(t), t->alimit)}}
\par
{\bkmkstart AAAAAAADBY}
{\bkmkend AAAAAAADBY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltable.c \'B5\'DA 247 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v limitequalsasize\:ltable.c}
{\xe \v ltable.c\:limitequalsasize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define limitequalsasize( t)\~ ({\b isrealasize}(t) || {\b ispow2}((t)->alimit))}}
\par
{\bkmkstart AAAAAAADBZ}
{\bkmkend AAAAAAADBZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltable.c \'B5\'DA 203 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v ltable_c\:ltable.c}
{\xe \v ltable.c\:ltable_c}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ltable_c}}
\par
{\bkmkstart AAAAAAADCA}
{\bkmkend AAAAAAADCA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltable.c \'B5\'DA 7 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_CORE\:ltable.c}
{\xe \v ltable.c\:LUA_CORE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_CORE}}
\par
{\bkmkstart AAAAAAADCB}
{\bkmkend AAAAAAADCB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltable.c \'B5\'DA 8 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v MAXABITS\:ltable.c}
{\xe \v ltable.c\:MAXABITS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAXABITS\~ {\b cast_int}(sizeof(int) * CHAR_BIT - 1)}}
\par
{\bkmkstart AAAAAAADCC}
{\bkmkend AAAAAAADCC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltable.c \'B5\'DA 46 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v MAXASIZE\:ltable.c}
{\xe \v ltable.c\:MAXASIZE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAXASIZE\~ {\b luaM_limitN}(1u << {\b MAXABITS}, {\b TValue})}}
\par
{\bkmkstart AAAAAAADCD}
{\bkmkend AAAAAAADCD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltable.c \'B5\'DA 54 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v MAXHBITS\:ltable.c}
{\xe \v ltable.c\:MAXHBITS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAXHBITS\~ ({\b MAXABITS} - 1)}}
\par
{\bkmkstart AAAAAAADCE}
{\bkmkend AAAAAAADCE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltable.c \'B5\'DA 60 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v MAXHSIZE\:ltable.c}
{\xe \v ltable.c\:MAXHSIZE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAXHSIZE\~ {\b luaM_limitN}(1u << {\b MAXHBITS}, {\b Node})}}
\par
{\bkmkstart AAAAAAADCF}
{\bkmkend AAAAAAADCF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltable.c \'B5\'DA 68 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v arrayindex\:ltable.c}
{\xe \v ltable.c\:arrayindex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static unsigned int arrayindex ({\b lua_Integer}  {\i k}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADCG}
{\bkmkend AAAAAAADCG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltable.c \'B5\'DA 274 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v binsearch\:ltable.c}
{\xe \v ltable.c\:binsearch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static unsigned int binsearch (const {\b TValue} *  {\i array}, unsigned int  {\i i}, unsigned int  {\i j}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADCH}
{\bkmkend AAAAAAADCH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltable.c \'B5\'DA 822 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v computesizes\:ltable.c}
{\xe \v ltable.c\:computesizes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static unsigned int computesizes (unsigned int  {\i nums}[], unsigned int *  {\i pna}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADCI}
{\bkmkend AAAAAAADCI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltable.c \'B5\'DA 347 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v countint\:ltable.c}
{\xe \v ltable.c\:countint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int countint ({\b lua_Integer}  {\i key}, unsigned int *  {\i nums}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADCJ}
{\bkmkend AAAAAAADCJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltable.c \'B5\'DA 369 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v equalkey\:ltable.c}
{\xe \v ltable.c\:equalkey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int equalkey (const {\b TValue} *  {\i k1}, const {\b Node} *  {\i n2}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADCK}
{\bkmkend AAAAAAADCK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltable.c \'B5\'DA 176 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v exchangehashpart\:ltable.c}
{\xe \v ltable.c\:exchangehashpart}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void exchangehashpart ({\b Table} *  {\i t1}, {\b Table} *  {\i t2}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADCL}
{\bkmkend AAAAAAADCL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltable.c \'B5\'DA 483 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v findindex\:ltable.c}
{\xe \v ltable.c\:findindex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static unsigned int findindex ({\b lua_State} *  {\i L}, {\b Table} *  {\i t}, {\b TValue} *  {\i key}, unsigned int  {\i asize}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADCM}
{\bkmkend AAAAAAADCM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltable.c \'B5\'DA 287 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v freehash\:ltable.c}
{\xe \v ltable.c\:freehash}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void freehash ({\b lua_State} *  {\i L}, {\b Table} *  {\i t}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADCN}
{\bkmkend AAAAAAADCN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltable.c \'B5\'DA 327 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v getfreepos\:ltable.c}
{\xe \v ltable.c\:getfreepos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b Node}* getfreepos ({\b Table} *  {\i t}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADCO}
{\bkmkend AAAAAAADCO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltable.c \'B5\'DA 601 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v getgeneric\:ltable.c}
{\xe \v ltable.c\:getgeneric}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static const {\b TValue}* getgeneric ({\b Table} *  {\i t}, const {\b TValue} *  {\i key}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADCP}
{\bkmkend AAAAAAADCP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltable.c \'B5\'DA 255 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v hash_search\:ltable.c}
{\xe \v ltable.c\:hash_search}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b lua_Unsigned} hash_search ({\b Table} *  {\i t}, {\b lua_Unsigned}  {\i j}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADCQ}
{\bkmkend AAAAAAADCQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltable.c \'B5\'DA 797 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v ispow2realasize\:ltable.c}
{\xe \v ltable.c\:ispow2realasize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int ispow2realasize (const {\b Table} *  {\i t}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADCR}
{\bkmkend AAAAAAADCR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltable.c \'B5\'DA 235 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v l_hashfloat\:ltable.c}
{\xe \v ltable.c\:l_hashfloat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int l_hashfloat ({\b lua_Number}  {\i n}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADCS}
{\bkmkend AAAAAAADCS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltable.c \'B5\'DA 114 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaH_free\:ltable.c}
{\xe \v ltable.c\:luaH_free}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaH_free ({\b lua_State} *  {\i L}, {\b Table} *  {\i t})}}
\par
{\bkmkstart AAAAAAADCT}
{\bkmkend AAAAAAADCT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltable.c \'B5\'DA 594 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaH_get\:ltable.c}
{\xe \v ltable.c\:luaH_get}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b TValue}* luaH_get ({\b Table} *  {\i t}, const {\b TValue} *  {\i key})}}
\par
{\bkmkstart AAAAAAADCU}
{\bkmkend AAAAAAADCU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltable.c \'B5\'DA 741 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaH_getint\:ltable.c}
{\xe \v ltable.c\:luaH_getint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b TValue}* luaH_getint ({\b Table} *  {\i t}, {\b lua_Integer}  {\i key})}}
\par
{\bkmkstart AAAAAAADCV}
{\bkmkend AAAAAAADCV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltable.c \'B5\'DA 683 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaH_getn\:ltable.c}
{\xe \v ltable.c\:luaH_getn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lua_Unsigned} luaH_getn ({\b Table} *  {\i t})}}
\par
{\bkmkstart AAAAAAADCW}
{\bkmkend AAAAAAADCW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltable.c \'B5\'DA 865 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaH_getshortstr\:ltable.c}
{\xe \v ltable.c\:luaH_getshortstr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b TValue}* luaH_getshortstr ({\b Table} *  {\i t}, {\b TString} *  {\i key})}}
\par
{\bkmkstart AAAAAAADCX}
{\bkmkend AAAAAAADCX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltable.c \'B5\'DA 711 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaH_getstr\:ltable.c}
{\xe \v ltable.c\:luaH_getstr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b TValue}* luaH_getstr ({\b Table} *  {\i t}, {\b TString} *  {\i key})}}
\par
{\bkmkstart AAAAAAADCY}
{\bkmkend AAAAAAADCY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltable.c \'B5\'DA 727 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaH_new\:ltable.c}
{\xe \v ltable.c\:luaH_new}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Table}* luaH_new ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAADCZ}
{\bkmkend AAAAAAADCZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltable.c \'B5\'DA 582 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaH_newkey\:ltable.c}
{\xe \v ltable.c\:luaH_newkey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TValue}* luaH_newkey ({\b lua_State} *  {\i L}, {\b Table} *  {\i t}, const {\b TValue} *  {\i key})}}
\par
{\bkmkstart AAAAAAADDA}
{\bkmkend AAAAAAADDA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltable.c \'B5\'DA 621 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaH_next\:ltable.c}
{\xe \v ltable.c\:luaH_next}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int luaH_next ({\b lua_State} *  {\i L}, {\b Table} *  {\i t}, {\b StkId}  {\i key})}}
\par
{\bkmkstart AAAAAAADDB}
{\bkmkend AAAAAAADDB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltable.c \'B5\'DA 305 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaH_realasize\:ltable.c}
{\xe \v ltable.c\:luaH_realasize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} unsigned int luaH_realasize (const {\b Table} *  {\i t})}}
\par
{\bkmkstart AAAAAAADDC}
{\bkmkend AAAAAAADDC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltable.c \'B5\'DA 209 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaH_resize\:ltable.c}
{\xe \v ltable.c\:luaH_resize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaH_resize ({\b lua_State} *  {\i L}, {\b Table} *  {\i t}, unsigned int  {\i newasize}, unsigned int  {\i nhsize})}}
\par
{\bkmkstart AAAAAAADDD}
{\bkmkend AAAAAAADDD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltable.c \'B5\'DA 509 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaH_resizearray\:ltable.c}
{\xe \v ltable.c\:luaH_resizearray}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaH_resizearray ({\b lua_State} *  {\i L}, {\b Table} *  {\i t}, unsigned int  {\i nasize})}}
\par
{\bkmkstart AAAAAAADDE}
{\bkmkend AAAAAAADDE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltable.c \'B5\'DA 546 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaH_set\:ltable.c}
{\xe \v ltable.c\:luaH_set}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TValue}* luaH_set ({\b lua_State} *  {\i L}, {\b Table} *  {\i t}, const {\b TValue} *  {\i key})}}
\par
{\bkmkstart AAAAAAADDF}
{\bkmkend AAAAAAADDF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltable.c \'B5\'DA 762 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaH_setint\:ltable.c}
{\xe \v ltable.c\:luaH_setint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaH_setint ({\b lua_State} *  {\i L}, {\b Table} *  {\i t}, {\b lua_Integer}  {\i key}, {\b TValue} *  {\i value})}}
\par
{\bkmkstart AAAAAAADDG}
{\bkmkend AAAAAAADDG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltable.c \'B5\'DA 770 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v mainposition\:ltable.c}
{\xe \v ltable.c\:mainposition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b Node}* mainposition (const {\b Table} *  {\i t}, int  {\i ktt}, const {\b Value} *  {\i kvl}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADDH}
{\bkmkend AAAAAAADDH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltable.c \'B5\'DA 136 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v mainpositionTV\:ltable.c}
{\xe \v ltable.c\:mainpositionTV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b Node}* mainpositionTV (const {\b Table} *  {\i t}, const {\b TValue} *  {\i key}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADDI}
{\bkmkend AAAAAAADDI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltable.c \'B5\'DA 163 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v numusearray\:ltable.c}
{\xe \v ltable.c\:numusearray}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static unsigned int numusearray (const {\b Table} *  {\i t}, unsigned int *  {\i nums}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADDJ}
{\bkmkend AAAAAAADDJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltable.c \'B5\'DA 385 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v numusehash\:ltable.c}
{\xe \v ltable.c\:numusehash}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int numusehash (const {\b Table} *  {\i t}, unsigned int *  {\i nums}, unsigned int *  {\i pna}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADDK}
{\bkmkend AAAAAAADDK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltable.c \'B5\'DA 412 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v rehash\:ltable.c}
{\xe \v ltable.c\:rehash}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void rehash ({\b lua_State} *  {\i L}, {\b Table} *  {\i t}, const {\b TValue} *  {\i ek}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADDL}
{\bkmkend AAAAAAADDL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltable.c \'B5\'DA 554 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v reinsert\:ltable.c}
{\xe \v ltable.c\:reinsert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void reinsert ({\b lua_State} *  {\i L}, {\b Table} *  {\i ot}, {\b Table} *  {\i t}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADDM}
{\bkmkend AAAAAAADDM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltable.c \'B5\'DA 464 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v setlimittosize\:ltable.c}
{\xe \v ltable.c\:setlimittosize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static unsigned int setlimittosize ({\b Table} *  {\i t}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADDN}
{\bkmkend AAAAAAADDN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltable.c \'B5\'DA 240 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v setnodevector\:ltable.c}
{\xe \v ltable.c\:setnodevector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void setnodevector ({\b lua_State} *  {\i L}, {\b Table} *  {\i t}, unsigned int  {\i size}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADDO}
{\bkmkend AAAAAAADDO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltable.c \'B5\'DA 436 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v absentkey\:ltable.c}
{\xe \v ltable.c\:absentkey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b TValue} absentkey = \{{\b ABSTKEYCONSTANT}\}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAADDP}
{\bkmkend AAAAAAADDP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltable.c \'B5\'DA 96 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v dummynode_\:ltable.c}
{\xe \v ltable.c\:dummynode_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b Node} dummynode_{\f2 [static]}}}
\par
{\bkmkstart AAAAAAADDQ}
{\bkmkend AAAAAAADDQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'B3\'F5\'CA\'BC\'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{\par
  \{\{NULL\}, LUA_VEMPTY,  \par
   LUA_VNIL, 0, \{NULL\}\}  \par
\}\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE ltable.c \'B5\'DA 90 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/gitworkspace/lua/src/ltable.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v D:/gitworkspace/lua/src/ltable.h}
{\xe \v D:/gitworkspace/lua/src/ltable.h}
{\bkmkstart AAAAAAADDR}
{\bkmkend AAAAAAADDR}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "lobject.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b gnode}(t,  i)\~ (&(t)->node[i])\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b gval}(n)\~ (&(n)->i_val)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b gnext}(n)\~ ((n)->{\b u.next})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b invalidateTMcache}(t)\~ ((t)->flags = 0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b isdummy}(t)\~ ((t)->lastfree == NULL)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b allocsizenode}(t)\~ ({\b isdummy}(t) ? 0 : {\b sizenode}(t))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b nodefromval}(v)\~ {\b cast}({\b Node} *, (v))\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} const {\b TValue} * {\b luaH_getint} ({\b Table} *t, {\b lua_Integer} key)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaH_setint} ({\b lua_State} *L, {\b Table} *t, {\b lua_Integer} key, {\b TValue} *value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} const {\b TValue} * {\b luaH_getshortstr} ({\b Table} *t, {\b TString} *key)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} const {\b TValue} * {\b luaH_getstr} ({\b Table} *t, {\b TString} *key)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} const {\b TValue} * {\b luaH_get} ({\b Table} *t, const {\b TValue} *key)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} {\b TValue} * {\b luaH_newkey} ({\b lua_State} *L, {\b Table} *t, const {\b TValue} *key)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} {\b TValue} * {\b luaH_set} ({\b lua_State} *L, {\b Table} *t, const {\b TValue} *key)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} {\b Table} * {\b luaH_new} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaH_resize} ({\b lua_State} *L, {\b Table} *t, unsigned int nasize, unsigned int nhsize)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaH_resizearray} ({\b lua_State} *L, {\b Table} *t, unsigned int nasize)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaH_free} ({\b lua_State} *L, {\b Table} *t)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} int {\b luaH_next} ({\b lua_State} *L, {\b Table} *t, {\b StkId} key)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} {\b lua_Unsigned} {\b luaH_getn} ({\b Table} *t)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} unsigned int {\b luaH_realasize} (const {\b Table} *t)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v allocsizenode\:ltable.h}
{\xe \v ltable.h\:allocsizenode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define allocsizenode( t)\~ ({\b isdummy}(t) ? 0 : {\b sizenode}(t))}}
\par
{\bkmkstart AAAAAAADDS}
{\bkmkend AAAAAAADDS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltable.h \'B5\'DA 26 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v gnext\:ltable.h}
{\xe \v ltable.h\:gnext}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define gnext( n)\~ ((n)->{\b u.next})}}
\par
{\bkmkstart AAAAAAADDT}
{\bkmkend AAAAAAADDT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltable.h \'B5\'DA 15 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v gnode\:ltable.h}
{\xe \v ltable.h\:gnode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define gnode( t,  i)\~ (&(t)->node[i])}}
\par
{\bkmkstart AAAAAAADDU}
{\bkmkend AAAAAAADDU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltable.h \'B5\'DA 13 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v gval\:ltable.h}
{\xe \v ltable.h\:gval}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define gval( n)\~ (&(n)->i_val)}}
\par
{\bkmkstart AAAAAAADDV}
{\bkmkend AAAAAAADDV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltable.h \'B5\'DA 14 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v invalidateTMcache\:ltable.h}
{\xe \v ltable.h\:invalidateTMcache}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define invalidateTMcache( t)\~ ((t)->flags = 0)}}
\par
{\bkmkstart AAAAAAADDW}
{\bkmkend AAAAAAADDW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltable.h \'B5\'DA 18 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v isdummy\:ltable.h}
{\xe \v ltable.h\:isdummy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define isdummy( t)\~ ((t)->lastfree == NULL)}}
\par
{\bkmkstart AAAAAAADDX}
{\bkmkend AAAAAAADDX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltable.h \'B5\'DA 22 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v nodefromval\:ltable.h}
{\xe \v ltable.h\:nodefromval}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define nodefromval( v)\~ {\b cast}({\b Node} *, (v))}}
\par
{\bkmkstart AAAAAAADDY}
{\bkmkend AAAAAAADDY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltable.h \'B5\'DA 30 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v luaH_free\:ltable.h}
{\xe \v ltable.h\:luaH_free}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaH_free ({\b lua_State} *  {\i L}, {\b Table} *  {\i t})}}
\par
{\bkmkstart AAAAAAADDZ}
{\bkmkend AAAAAAADDZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltable.c \'B5\'DA 594 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaH_get\:ltable.h}
{\xe \v ltable.h\:luaH_get}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} const {\b TValue}* luaH_get ({\b Table} *  {\i t}, const {\b TValue} *  {\i key})}}
\par
{\bkmkstart AAAAAAADEA}
{\bkmkend AAAAAAADEA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltable.c \'B5\'DA 741 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaH_getint\:ltable.h}
{\xe \v ltable.h\:luaH_getint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} const {\b TValue}* luaH_getint ({\b Table} *  {\i t}, {\b lua_Integer}  {\i key})}}
\par
{\bkmkstart AAAAAAADEB}
{\bkmkend AAAAAAADEB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltable.c \'B5\'DA 683 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaH_getn\:ltable.h}
{\xe \v ltable.h\:luaH_getn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} {\b lua_Unsigned} luaH_getn ({\b Table} *  {\i t})}}
\par
{\bkmkstart AAAAAAADEC}
{\bkmkend AAAAAAADEC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltable.c \'B5\'DA 865 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaH_getshortstr\:ltable.h}
{\xe \v ltable.h\:luaH_getshortstr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} const {\b TValue}* luaH_getshortstr ({\b Table} *  {\i t}, {\b TString} *  {\i key})}}
\par
{\bkmkstart AAAAAAADED}
{\bkmkend AAAAAAADED}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltable.c \'B5\'DA 711 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaH_getstr\:ltable.h}
{\xe \v ltable.h\:luaH_getstr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} const {\b TValue}* luaH_getstr ({\b Table} *  {\i t}, {\b TString} *  {\i key})}}
\par
{\bkmkstart AAAAAAADEE}
{\bkmkend AAAAAAADEE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltable.c \'B5\'DA 727 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaH_new\:ltable.h}
{\xe \v ltable.h\:luaH_new}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} {\b Table}* luaH_new ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAADEF}
{\bkmkend AAAAAAADEF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltable.c \'B5\'DA 582 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaH_newkey\:ltable.h}
{\xe \v ltable.h\:luaH_newkey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} {\b TValue}* luaH_newkey ({\b lua_State} *  {\i L}, {\b Table} *  {\i t}, const {\b TValue} *  {\i key})}}
\par
{\bkmkstart AAAAAAADEG}
{\bkmkend AAAAAAADEG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltable.c \'B5\'DA 621 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaH_next\:ltable.h}
{\xe \v ltable.h\:luaH_next}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} int luaH_next ({\b lua_State} *  {\i L}, {\b Table} *  {\i t}, {\b StkId}  {\i key})}}
\par
{\bkmkstart AAAAAAADEH}
{\bkmkend AAAAAAADEH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltable.c \'B5\'DA 305 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaH_realasize\:ltable.h}
{\xe \v ltable.h\:luaH_realasize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} unsigned int luaH_realasize (const {\b Table} *  {\i t})}}
\par
{\bkmkstart AAAAAAADEI}
{\bkmkend AAAAAAADEI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltable.c \'B5\'DA 209 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaH_resize\:ltable.h}
{\xe \v ltable.h\:luaH_resize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaH_resize ({\b lua_State} *  {\i L}, {\b Table} *  {\i t}, unsigned int  {\i nasize}, unsigned int  {\i nhsize})}}
\par
{\bkmkstart AAAAAAADEJ}
{\bkmkend AAAAAAADEJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltable.c \'B5\'DA 509 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaH_resizearray\:ltable.h}
{\xe \v ltable.h\:luaH_resizearray}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaH_resizearray ({\b lua_State} *  {\i L}, {\b Table} *  {\i t}, unsigned int  {\i nasize})}}
\par
{\bkmkstart AAAAAAADEK}
{\bkmkend AAAAAAADEK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltable.c \'B5\'DA 546 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaH_set\:ltable.h}
{\xe \v ltable.h\:luaH_set}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} {\b TValue}* luaH_set ({\b lua_State} *  {\i L}, {\b Table} *  {\i t}, const {\b TValue} *  {\i key})}}
\par
{\bkmkstart AAAAAAADEL}
{\bkmkend AAAAAAADEL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltable.c \'B5\'DA 762 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaH_setint\:ltable.h}
{\xe \v ltable.h\:luaH_setint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaH_setint ({\b lua_State} *  {\i L}, {\b Table} *  {\i t}, {\b lua_Integer}  {\i key}, {\b TValue} *  {\i value})}}
\par
{\bkmkstart AAAAAAADEM}
{\bkmkend AAAAAAADEM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltable.c \'B5\'DA 770 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/gitworkspace/lua/src/ltablib.c \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v D:/gitworkspace/lua/src/ltablib.c}
{\xe \v D:/gitworkspace/lua/src/ltablib.c}
{\bkmkstart AAAAAAADEN}
{\bkmkend AAAAAAADEN}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "lprefix.h"}\par
{\f2 #include <limits.h>}\par
{\f2 #include <stddef.h>}\par
{\f2 #include <string.h>}\par
{\f2 #include "lua.h"}\par
{\f2 #include "lauxlib.h"}\par
{\f2 #include "lualib.h"}\par
{\f2 #include <time.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ltablib_c}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_LIB}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TAB_R}\~ 1			/* read */\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TAB_W}\~ 2			/* write */\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TAB_L}\~ 4			/* length */\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TAB_RW}\~ ({\b TAB_R} | {\b TAB_W})		/* read/write */\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b aux_getn}(L,  n,  w)\~ ({\b checktab}(L, n, (w) | {\b TAB_L}), {\b luaL_len}(L, n))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b sof}(e)\~ (sizeof(e) / sizeof(unsigned int))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RANLIMIT}\~ 100u\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'D0\'CD\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef unsigned int {\b IdxT}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b checkfield} ({\b lua_State} *L, const char *key, int n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b checktab} ({\b lua_State} *L, int arg, int what)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b tinsert} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b tremove} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b tmove} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b addfield} ({\b lua_State} *L, {\b luaL_Buffer} *b, {\b lua_Integer} i)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b tconcat} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b tpack} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b tunpack} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static unsigned int {\b l_randomizePivot} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b set2} ({\b lua_State} *L, {\b IdxT} i, {\b IdxT} j)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b sort_comp} ({\b lua_State} *L, int a, int b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b IdxT} {\b partition} ({\b lua_State} *L, {\b IdxT} lo, {\b IdxT} up)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b IdxT} {\b choosePivot} ({\b IdxT} lo, {\b IdxT} up, unsigned int rnd)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b auxsort} ({\b lua_State} *L, {\b IdxT} lo, {\b IdxT} up, unsigned int rnd)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b sort} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAMOD_API} int {\b luaopen_table} ({\b lua_State} *L)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const {\b luaL_Reg} {\b tab_funcs} []\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v aux_getn\:ltablib.c}
{\xe \v ltablib.c\:aux_getn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define aux_getn( L,  n,  w)\~ ({\b checktab}(L, n, (w) | {\b TAB_L}), {\b luaL_len}(L, n))}}
\par
{\bkmkstart AAAAAAADEO}
{\bkmkend AAAAAAADEO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltablib.c \'B5\'DA 33 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v ltablib_c\:ltablib.c}
{\xe \v ltablib.c\:ltablib_c}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ltablib_c}}
\par
{\bkmkstart AAAAAAADEP}
{\bkmkend AAAAAAADEP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltablib.c \'B5\'DA 7 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_LIB\:ltablib.c}
{\xe \v ltablib.c\:LUA_LIB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_LIB}}
\par
{\bkmkstart AAAAAAADEQ}
{\bkmkend AAAAAAADEQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltablib.c \'B5\'DA 8 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v RANLIMIT\:ltablib.c}
{\xe \v ltablib.c\:RANLIMIT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RANLIMIT\~ 100u}}
\par
{\bkmkstart AAAAAAADER}
{\bkmkend AAAAAAADER}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltablib.c \'B5\'DA 260 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v sof\:ltablib.c}
{\xe \v ltablib.c\:sof}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define sof( e)\~ (sizeof(e) / sizeof(unsigned int))}}
\par
{\bkmkstart AAAAAAADES}
{\bkmkend AAAAAAADES}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltablib.c \'B5\'DA 236 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v TAB_L\:ltablib.c}
{\xe \v ltablib.c\:TAB_L}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TAB_L\~ 4			/* length */}}
\par
{\bkmkstart AAAAAAADET}
{\bkmkend AAAAAAADET}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltablib.c \'B5\'DA 29 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v TAB_R\:ltablib.c}
{\xe \v ltablib.c\:TAB_R}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TAB_R\~ 1			/* read */}}
\par
{\bkmkstart AAAAAAADEU}
{\bkmkend AAAAAAADEU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltablib.c \'B5\'DA 27 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v TAB_RW\:ltablib.c}
{\xe \v ltablib.c\:TAB_RW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TAB_RW\~ ({\b TAB_R} | {\b TAB_W})		/* read/write */}}
\par
{\bkmkstart AAAAAAADEV}
{\bkmkend AAAAAAADEV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltablib.c \'B5\'DA 30 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v TAB_W\:ltablib.c}
{\xe \v ltablib.c\:TAB_W}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TAB_W\~ 2			/* write */}}
\par
{\bkmkstart AAAAAAADEW}
{\bkmkend AAAAAAADEW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltablib.c \'B5\'DA 28 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'D0\'CD\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v IdxT\:ltablib.c}
{\xe \v ltablib.c\:IdxT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef unsigned int {\b IdxT}}}
\par
{\bkmkstart AAAAAAADEX}
{\bkmkend AAAAAAADEX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltablib.c \'B5\'DA 222 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v addfield\:ltablib.c}
{\xe \v ltablib.c\:addfield}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void addfield ({\b lua_State} *  {\i L}, {\b luaL_Buffer} *  {\i b}, {\b lua_Integer}  {\i i}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADEY}
{\bkmkend AAAAAAADEY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltablib.c \'B5\'DA 146 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v auxsort\:ltablib.c}
{\xe \v ltablib.c\:auxsort}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void auxsort ({\b lua_State} *  {\i L}, {\b IdxT}  {\i lo}, {\b IdxT}  {\i up}, unsigned int  {\i rnd}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADEZ}
{\bkmkend AAAAAAADEZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltablib.c \'B5\'DA 343 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v checkfield\:ltablib.c}
{\xe \v ltablib.c\:checkfield}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int checkfield ({\b lua_State} *  {\i L}, const char *  {\i key}, int  {\i n}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADFA}
{\bkmkend AAAAAAADFA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltablib.c \'B5\'DA 36 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v checktab\:ltablib.c}
{\xe \v ltablib.c\:checktab}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void checktab ({\b lua_State} *  {\i L}, int  {\i arg}, int  {\i what}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADFB}
{\bkmkend AAAAAAADFB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltablib.c \'B5\'DA 46 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v choosePivot\:ltablib.c}
{\xe \v ltablib.c\:choosePivot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b IdxT} choosePivot ({\b IdxT}  {\i lo}, {\b IdxT}  {\i up}, unsigned int  {\i rnd}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADFC}
{\bkmkend AAAAAAADFC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltablib.c \'B5\'DA 332 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v l_randomizePivot\:ltablib.c}
{\xe \v ltablib.c\:l_randomizePivot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static unsigned int l_randomizePivot (void ){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADFD}
{\bkmkend AAAAAAADFD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltablib.c \'B5\'DA 244 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaopen_table\:ltablib.c}
{\xe \v ltablib.c\:luaopen_table}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAMOD_API} int luaopen_table ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAADFE}
{\bkmkend AAAAAAADFE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltablib.c \'B5\'DA 424 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v partition\:ltablib.c}
{\xe \v ltablib.c\:partition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b IdxT} partition ({\b lua_State} *  {\i L}, {\b IdxT}  {\i lo}, {\b IdxT}  {\i up}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADFF}
{\bkmkend AAAAAAADFF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltablib.c \'B5\'DA 296 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v set2\:ltablib.c}
{\xe \v ltablib.c\:set2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void set2 ({\b lua_State} *  {\i L}, {\b IdxT}  {\i i}, {\b IdxT}  {\i j}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADFG}
{\bkmkend AAAAAAADFG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltablib.c \'B5\'DA 263 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v sort\:ltablib.c}
{\xe \v ltablib.c\:sort}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int sort ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADFH}
{\bkmkend AAAAAAADFH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltablib.c \'B5\'DA 397 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v sort_comp\:ltablib.c}
{\xe \v ltablib.c\:sort_comp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int sort_comp ({\b lua_State} *  {\i L}, int  {\i a}, int  {\i b}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADFI}
{\bkmkend AAAAAAADFI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltablib.c \'B5\'DA 273 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v tconcat\:ltablib.c}
{\xe \v ltablib.c\:tconcat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int tconcat ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADFJ}
{\bkmkend AAAAAAADFJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltablib.c \'B5\'DA 155 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v tinsert\:ltablib.c}
{\xe \v ltablib.c\:tinsert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int tinsert ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADFK}
{\bkmkend AAAAAAADFK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltablib.c \'B5\'DA 61 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v tmove\:ltablib.c}
{\xe \v ltablib.c\:tmove}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int tmove ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADFL}
{\bkmkend AAAAAAADFL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltablib.c \'B5\'DA 114 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v tpack\:ltablib.c}
{\xe \v ltablib.c\:tpack}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int tpack ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADFM}
{\bkmkend AAAAAAADFM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltablib.c \'B5\'DA 180 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v tremove\:ltablib.c}
{\xe \v ltablib.c\:tremove}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int tremove ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADFN}
{\bkmkend AAAAAAADFN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltablib.c \'B5\'DA 90 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v tunpack\:ltablib.c}
{\xe \v ltablib.c\:tunpack}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int tunpack ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADFO}
{\bkmkend AAAAAAADFO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltablib.c \'B5\'DA 193 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v tab_funcs\:ltablib.c}
{\xe \v ltablib.c\:tab_funcs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b luaL_Reg} tab_funcs[]{\f2 [static]}}}
\par
{\bkmkstart AAAAAAADFP}
{\bkmkend AAAAAAADFP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'B3\'F5\'CA\'BC\'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{\par
  \{{\cf22 "concat"}, tconcat\},\par
  \{{\cf22 "insert"}, tinsert\},\par
  \{{\cf22 "pack"}, tpack\},\par
  \{{\cf22 "unpack"}, tunpack\},\par
  \{{\cf22 "remove"}, tremove\},\par
  \{{\cf22 "move"}, tmove\},\par
  \{{\cf22 "sort"}, sort\},\par
  \{NULL, NULL\}\par
\}\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE ltablib.c \'B5\'DA 412 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/gitworkspace/lua/src/ltm.c \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v D:/gitworkspace/lua/src/ltm.c}
{\xe \v D:/gitworkspace/lua/src/ltm.c}
{\bkmkstart AAAAAAADFQ}
{\bkmkend AAAAAAADFQ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "lprefix.h"}\par
{\f2 #include <string.h>}\par
{\f2 #include "lua.h"}\par
{\f2 #include "ldebug.h"}\par
{\f2 #include "ldo.h"}\par
{\f2 #include "lgc.h"}\par
{\f2 #include "lobject.h"}\par
{\f2 #include "lstate.h"}\par
{\f2 #include "lstring.h"}\par
{\f2 #include "ltable.h"}\par
{\f2 #include "ltm.h"}\par
{\f2 #include "lvm.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ltm_c}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_CORE}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaT_init} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b TValue} * {\b luaT_gettm} ({\b Table} *events, {\b TMS} event, {\b TString} *ename)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b TValue} * {\b luaT_gettmbyobj} ({\b lua_State} *L, const {\b TValue} *o, {\b TMS} event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b luaT_objtypename} ({\b lua_State} *L, const {\b TValue} *o)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaT_callTM} ({\b lua_State} *L, const {\b TValue} *f, const {\b TValue} *p1, const {\b TValue} *p2, const {\b TValue} *p3)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaT_callTMres} ({\b lua_State} *L, const {\b TValue} *f, const {\b TValue} *p1, const {\b TValue} *p2, {\b StkId} res)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b callbinTM} ({\b lua_State} *L, const {\b TValue} *p1, const {\b TValue} *p2, {\b StkId} res, {\b TMS} event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaT_trybinTM} ({\b lua_State} *L, const {\b TValue} *p1, const {\b TValue} *p2, {\b StkId} res, {\b TMS} event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaT_tryconcatTM} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaT_trybinassocTM} ({\b lua_State} *L, const {\b TValue} *p1, const {\b TValue} *p2, int flip, {\b StkId} res, {\b TMS} event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaT_trybiniTM} ({\b lua_State} *L, const {\b TValue} *p1, {\b lua_Integer} i2, int flip, {\b StkId} res, {\b TMS} event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b luaT_callorderTM} ({\b lua_State} *L, const {\b TValue} *p1, const {\b TValue} *p2, {\b TMS} event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b luaT_callorderiTM} ({\b lua_State} *L, const {\b TValue} *p1, int v2, int flip, int isfloat, {\b TMS} event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaT_adjustvarargs} ({\b lua_State} *L, int nfixparams, {\b CallInfo} *ci, const {\b Proto} *p)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaT_getvarargs} ({\b lua_State} *L, {\b CallInfo} *ci, {\b StkId} where, int wanted)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const char {\b udatatypename} [] = "userdata"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_DDEF} const char *const {\b luaT_typenames_} [{\b LUA_TOTALTYPES}]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v ltm_c\:ltm.c}
{\xe \v ltm.c\:ltm_c}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ltm_c}}
\par
{\bkmkstart AAAAAAADFR}
{\bkmkend AAAAAAADFR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltm.c \'B5\'DA 7 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_CORE\:ltm.c}
{\xe \v ltm.c\:LUA_CORE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_CORE}}
\par
{\bkmkstart AAAAAAADFS}
{\bkmkend AAAAAAADFS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltm.c \'B5\'DA 8 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v callbinTM\:ltm.c}
{\xe \v ltm.c\:callbinTM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int callbinTM ({\b lua_State} *  {\i L}, const {\b TValue} *  {\i p1}, const {\b TValue} *  {\i p2}, {\b StkId}  {\i res}, {\b TMS}  {\i event}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADFT}
{\bkmkend AAAAAAADFT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltm.c \'B5\'DA 137 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaT_adjustvarargs\:ltm.c}
{\xe \v ltm.c\:luaT_adjustvarargs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaT_adjustvarargs ({\b lua_State} *  {\i L}, int  {\i nfixparams}, {\b CallInfo} *  {\i ci}, const {\b Proto} *  {\i p})}}
\par
{\bkmkstart AAAAAAADFU}
{\bkmkend AAAAAAADFU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltm.c \'B5\'DA 237 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaT_callorderiTM\:ltm.c}
{\xe \v ltm.c\:luaT_callorderiTM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int luaT_callorderiTM ({\b lua_State} *  {\i L}, const {\b TValue} *  {\i p1}, int  {\i v2}, int  {\i flip}, int  {\i isfloat}, {\b TMS}  {\i event})}}
\par
{\bkmkstart AAAAAAADFV}
{\bkmkend AAAAAAADFV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltm.c \'B5\'DA 220 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaT_callorderTM\:ltm.c}
{\xe \v ltm.c\:luaT_callorderTM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int luaT_callorderTM ({\b lua_State} *  {\i L}, const {\b TValue} *  {\i p1}, const {\b TValue} *  {\i p2}, {\b TMS}  {\i event})}}
\par
{\bkmkstart AAAAAAADFW}
{\bkmkend AAAAAAADFW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltm.c \'B5\'DA 200 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaT_callTM\:ltm.c}
{\xe \v ltm.c\:luaT_callTM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaT_callTM ({\b lua_State} *  {\i L}, const {\b TValue} *  {\i f}, const {\b TValue} *  {\i p1}, const {\b TValue} *  {\i p2}, const {\b TValue} *  {\i p3})}}
\par
{\bkmkstart AAAAAAADFX}
{\bkmkend AAAAAAADFX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltm.c \'B5\'DA 103 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaT_callTMres\:ltm.c}
{\xe \v ltm.c\:luaT_callTMres}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaT_callTMres ({\b lua_State} *  {\i L}, const {\b TValue} *  {\i f}, const {\b TValue} *  {\i p1}, const {\b TValue} *  {\i p2}, {\b StkId}  {\i res})}}
\par
{\bkmkstart AAAAAAADFY}
{\bkmkend AAAAAAADFY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltm.c \'B5\'DA 119 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaT_gettm\:ltm.c}
{\xe \v ltm.c\:luaT_gettm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b TValue}* luaT_gettm ({\b Table} *  {\i events}, {\b TMS}  {\i event}, {\b TString} *  {\i ename})}}
\par
{\bkmkstart AAAAAAADFZ}
{\bkmkend AAAAAAADFZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltm.c \'B5\'DA 60 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaT_gettmbyobj\:ltm.c}
{\xe \v ltm.c\:luaT_gettmbyobj}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b TValue}* luaT_gettmbyobj ({\b lua_State} *  {\i L}, const {\b TValue} *  {\i o}, {\b TMS}  {\i event})}}
\par
{\bkmkstart AAAAAAADGA}
{\bkmkend AAAAAAADGA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltm.c \'B5\'DA 71 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaT_getvarargs\:ltm.c}
{\xe \v ltm.c\:luaT_getvarargs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaT_getvarargs ({\b lua_State} *  {\i L}, {\b CallInfo} *  {\i ci}, {\b StkId}  {\i where}, int  {\i wanted})}}
\par
{\bkmkstart AAAAAAADGB}
{\bkmkend AAAAAAADGB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltm.c \'B5\'DA 257 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaT_init\:ltm.c}
{\xe \v ltm.c\:luaT_init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaT_init ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAADGC}
{\bkmkend AAAAAAADGC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltm.c \'B5\'DA 38 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaT_objtypename\:ltm.c}
{\xe \v ltm.c\:luaT_objtypename}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* luaT_objtypename ({\b lua_State} *  {\i L}, const {\b TValue} *  {\i o})}}
\par
{\bkmkstart AAAAAAADGD}
{\bkmkend AAAAAAADGD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltm.c \'B5\'DA 91 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaT_trybinassocTM\:ltm.c}
{\xe \v ltm.c\:luaT_trybinassocTM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaT_trybinassocTM ({\b lua_State} *  {\i L}, const {\b TValue} *  {\i p1}, const {\b TValue} *  {\i p2}, int  {\i flip}, {\b StkId}  {\i res}, {\b TMS}  {\i event})}}
\par
{\bkmkstart AAAAAAADGE}
{\bkmkend AAAAAAADGE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltm.c \'B5\'DA 174 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaT_trybiniTM\:ltm.c}
{\xe \v ltm.c\:luaT_trybiniTM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaT_trybiniTM ({\b lua_State} *  {\i L}, const {\b TValue} *  {\i p1}, {\b lua_Integer}  {\i i2}, int  {\i flip}, {\b StkId}  {\i res}, {\b TMS}  {\i event})}}
\par
{\bkmkstart AAAAAAADGF}
{\bkmkend AAAAAAADGF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltm.c \'B5\'DA 183 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaT_trybinTM\:ltm.c}
{\xe \v ltm.c\:luaT_trybinTM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaT_trybinTM ({\b lua_State} *  {\i L}, const {\b TValue} *  {\i p1}, const {\b TValue} *  {\i p2}, {\b StkId}  {\i res}, {\b TMS}  {\i event})}}
\par
{\bkmkstart AAAAAAADGG}
{\bkmkend AAAAAAADGG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltm.c \'B5\'DA 148 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaT_tryconcatTM\:ltm.c}
{\xe \v ltm.c\:luaT_tryconcatTM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaT_tryconcatTM ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAADGH}
{\bkmkend AAAAAAADGH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltm.c \'B5\'DA 167 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v luaT_typenames_\:ltm.c}
{\xe \v ltm.c\:luaT_typenames_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_DDEF} const char* const luaT_typenames_[{\b LUA_TOTALTYPES}]}}
\par
{\bkmkstart AAAAAAADGI}
{\bkmkend AAAAAAADGI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'B3\'F5\'CA\'BC\'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{\par
  {\cf22 "no value"},\par
  {\cf22 "nil"}, {\cf22 "boolean"}, udatatypename, {\cf22 "number"},\par
  {\cf22 "string"}, {\cf22 "table"}, {\cf22 "function"}, udatatypename, {\cf22 "thread"},\par
  {\cf22 "upvalue"}, {\cf22 "proto"} \par
\}\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE ltm.c \'B5\'DA 30 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v udatatypename\:ltm.c}
{\xe \v ltm.c\:udatatypename}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char udatatypename[] = "userdata"{\f2 [static]}}}
\par
{\bkmkstart AAAAAAADGJ}
{\bkmkend AAAAAAADGJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltm.c \'B5\'DA 28 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/gitworkspace/lua/src/ltm.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v D:/gitworkspace/lua/src/ltm.h}
{\xe \v D:/gitworkspace/lua/src/ltm.h}
{\bkmkstart AAAAAAADGK}
{\bkmkend AAAAAAADGK}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "lobject.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b notm}(tm)\~ {\b ttisnil}(tm)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b gfasttm}(g,  et,  e)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b fasttm}(l,  et,  e)\~ {\b gfasttm}({\b G}(l), et, e)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ttypename}(x)\~ {\b luaT_typenames_}[(x) + 1]\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'B6\'BE\'D9\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b TMS} \{ {\b TM_INDEX}, 
{\b TM_NEWINDEX}, 
{\b TM_GC}, 
{\b TM_MODE}, 
{\b TM_LEN}, 
{\b TM_EQ}, 
{\b TM_ADD}, 
{\b TM_SUB}, 
{\b TM_MUL}, 
{\b TM_MOD}, 
{\b TM_POW}, 
{\b TM_DIV}, 
{\b TM_IDIV}, 
{\b TM_BAND}, 
{\b TM_BOR}, 
{\b TM_BXOR}, 
{\b TM_SHL}, 
{\b TM_SHR}, 
{\b TM_UNM}, 
{\b TM_BNOT}, 
{\b TM_LT}, 
{\b TM_LE}, 
{\b TM_CONCAT}, 
{\b TM_CALL}, 
{\b TM_CLOSE}, 
{\b TM_N}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} const char * {\b luaT_objtypename} ({\b lua_State} *L, const {\b TValue} *o)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} const {\b TValue} * {\b luaT_gettm} ({\b Table} *events, {\b TMS} event, {\b TString} *ename)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} const {\b TValue} * {\b luaT_gettmbyobj} ({\b lua_State} *L, const {\b TValue} *o, {\b TMS} event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaT_init} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaT_callTM} ({\b lua_State} *L, const {\b TValue} *f, const {\b TValue} *p1, const {\b TValue} *p2, const {\b TValue} *p3)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaT_callTMres} ({\b lua_State} *L, const {\b TValue} *f, const {\b TValue} *p1, const {\b TValue} *p2, {\b StkId} p3)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaT_trybinTM} ({\b lua_State} *L, const {\b TValue} *p1, const {\b TValue} *p2, {\b StkId} res, {\b TMS} event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaT_tryconcatTM} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaT_trybinassocTM} ({\b lua_State} *L, const {\b TValue} *p1, const {\b TValue} *p2, int inv, {\b StkId} res, {\b TMS} event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaT_trybiniTM} ({\b lua_State} *L, const {\b TValue} *p1, {\b lua_Integer} i2, int inv, {\b StkId} res, {\b TMS} event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} int {\b luaT_callorderTM} ({\b lua_State} *L, const {\b TValue} *p1, const {\b TValue} *p2, {\b TMS} event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} int {\b luaT_callorderiTM} ({\b lua_State} *L, const {\b TValue} *p1, int v2, int inv, int isfloat, {\b TMS} event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaT_adjustvarargs} ({\b lua_State} *L, int nfixparams, struct {\b CallInfo} *ci, const {\b Proto} *p)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaT_getvarargs} ({\b lua_State} *L, struct {\b CallInfo} *ci, {\b StkId} where, int wanted)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v fasttm\:ltm.h}
{\xe \v ltm.h\:fasttm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define fasttm( l,  et,  e)\~ {\b gfasttm}({\b G}(l), et, e)}}
\par
{\bkmkstart AAAAAAADGL}
{\bkmkend AAAAAAADGL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltm.h \'B5\'DA 58 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v gfasttm\:ltm.h}
{\xe \v ltm.h\:gfasttm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define gfasttm( g,  et,  e)}}
\par
{\bkmkstart AAAAAAADGM}
{\bkmkend AAAAAAADGM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   ((et) == NULL ? NULL : \\\par
  ((et)->flags & (1u<<(e))) ? NULL : luaT_gettm(et, e, (g)->tmname[e]))\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE ltm.h \'B5\'DA 55 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v notm\:ltm.h}
{\xe \v ltm.h\:notm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define notm( tm)\~ {\b ttisnil}(tm)}}
\par
{\bkmkstart AAAAAAADGN}
{\bkmkend AAAAAAADGN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltm.h \'B5\'DA 52 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v ttypename\:ltm.h}
{\xe \v ltm.h\:ttypename}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ttypename( x)\~ {\b luaT_typenames_}[(x) + 1]}}
\par
{\bkmkstart AAAAAAADGO}
{\bkmkend AAAAAAADGO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltm.h \'B5\'DA 60 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'B6\'BE\'D9\'C0\'E0\'D0\'CD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v TMS\:ltm.h}
{\xe \v ltm.h\:TMS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b TMS}}}
\par
{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C3\'B6\'BE\'D9\'D6\'B5:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v TM_INDEX\:ltm.h}
{\xe \v ltm.h\:TM_INDEX}
{\qr TM_INDEX{\bkmkstart AAAAAAADGQ}
{\bkmkend AAAAAAADGQ}
\cell }{\cell }{\row }
{\xe \v TM_NEWINDEX\:ltm.h}
{\xe \v ltm.h\:TM_NEWINDEX}
{\qr TM_NEWINDEX{\bkmkstart AAAAAAADGR}
{\bkmkend AAAAAAADGR}
\cell }{\cell }{\row }
{\xe \v TM_GC\:ltm.h}
{\xe \v ltm.h\:TM_GC}
{\qr TM_GC{\bkmkstart AAAAAAADGS}
{\bkmkend AAAAAAADGS}
\cell }{\cell }{\row }
{\xe \v TM_MODE\:ltm.h}
{\xe \v ltm.h\:TM_MODE}
{\qr TM_MODE{\bkmkstart AAAAAAADGT}
{\bkmkend AAAAAAADGT}
\cell }{\cell }{\row }
{\xe \v TM_LEN\:ltm.h}
{\xe \v ltm.h\:TM_LEN}
{\qr TM_LEN{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
\cell }{\cell }{\row }
{\xe \v TM_EQ\:ltm.h}
{\xe \v ltm.h\:TM_EQ}
{\qr TM_EQ{\bkmkstart AAAAAAADGV}
{\bkmkend AAAAAAADGV}
\cell }{\cell }{\row }
{\xe \v TM_ADD\:ltm.h}
{\xe \v ltm.h\:TM_ADD}
{\qr TM_ADD{\bkmkstart AAAAAAADGW}
{\bkmkend AAAAAAADGW}
\cell }{\cell }{\row }
{\xe \v TM_SUB\:ltm.h}
{\xe \v ltm.h\:TM_SUB}
{\qr TM_SUB{\bkmkstart AAAAAAADGX}
{\bkmkend AAAAAAADGX}
\cell }{\cell }{\row }
{\xe \v TM_MUL\:ltm.h}
{\xe \v ltm.h\:TM_MUL}
{\qr TM_MUL{\bkmkstart AAAAAAADGY}
{\bkmkend AAAAAAADGY}
\cell }{\cell }{\row }
{\xe \v TM_MOD\:ltm.h}
{\xe \v ltm.h\:TM_MOD}
{\qr TM_MOD{\bkmkstart AAAAAAADGZ}
{\bkmkend AAAAAAADGZ}
\cell }{\cell }{\row }
{\xe \v TM_POW\:ltm.h}
{\xe \v ltm.h\:TM_POW}
{\qr TM_POW{\bkmkstart AAAAAAADHA}
{\bkmkend AAAAAAADHA}
\cell }{\cell }{\row }
{\xe \v TM_DIV\:ltm.h}
{\xe \v ltm.h\:TM_DIV}
{\qr TM_DIV{\bkmkstart AAAAAAADHB}
{\bkmkend AAAAAAADHB}
\cell }{\cell }{\row }
{\xe \v TM_IDIV\:ltm.h}
{\xe \v ltm.h\:TM_IDIV}
{\qr TM_IDIV{\bkmkstart AAAAAAADHC}
{\bkmkend AAAAAAADHC}
\cell }{\cell }{\row }
{\xe \v TM_BAND\:ltm.h}
{\xe \v ltm.h\:TM_BAND}
{\qr TM_BAND{\bkmkstart AAAAAAADHD}
{\bkmkend AAAAAAADHD}
\cell }{\cell }{\row }
{\xe \v TM_BOR\:ltm.h}
{\xe \v ltm.h\:TM_BOR}
{\qr TM_BOR{\bkmkstart AAAAAAADHE}
{\bkmkend AAAAAAADHE}
\cell }{\cell }{\row }
{\xe \v TM_BXOR\:ltm.h}
{\xe \v ltm.h\:TM_BXOR}
{\qr TM_BXOR{\bkmkstart AAAAAAADHF}
{\bkmkend AAAAAAADHF}
\cell }{\cell }{\row }
{\xe \v TM_SHL\:ltm.h}
{\xe \v ltm.h\:TM_SHL}
{\qr TM_SHL{\bkmkstart AAAAAAADHG}
{\bkmkend AAAAAAADHG}
\cell }{\cell }{\row }
{\xe \v TM_SHR\:ltm.h}
{\xe \v ltm.h\:TM_SHR}
{\qr TM_SHR{\bkmkstart AAAAAAADHH}
{\bkmkend AAAAAAADHH}
\cell }{\cell }{\row }
{\xe \v TM_UNM\:ltm.h}
{\xe \v ltm.h\:TM_UNM}
{\qr TM_UNM{\bkmkstart AAAAAAADHI}
{\bkmkend AAAAAAADHI}
\cell }{\cell }{\row }
{\xe \v TM_BNOT\:ltm.h}
{\xe \v ltm.h\:TM_BNOT}
{\qr TM_BNOT{\bkmkstart AAAAAAADHJ}
{\bkmkend AAAAAAADHJ}
\cell }{\cell }{\row }
{\xe \v TM_LT\:ltm.h}
{\xe \v ltm.h\:TM_LT}
{\qr TM_LT{\bkmkstart AAAAAAADHK}
{\bkmkend AAAAAAADHK}
\cell }{\cell }{\row }
{\xe \v TM_LE\:ltm.h}
{\xe \v ltm.h\:TM_LE}
{\qr TM_LE{\bkmkstart AAAAAAADHL}
{\bkmkend AAAAAAADHL}
\cell }{\cell }{\row }
{\xe \v TM_CONCAT\:ltm.h}
{\xe \v ltm.h\:TM_CONCAT}
{\qr TM_CONCAT{\bkmkstart AAAAAAADHM}
{\bkmkend AAAAAAADHM}
\cell }{\cell }{\row }
{\xe \v TM_CALL\:ltm.h}
{\xe \v ltm.h\:TM_CALL}
{\qr TM_CALL{\bkmkstart AAAAAAADHN}
{\bkmkend AAAAAAADHN}
\cell }{\cell }{\row }
{\xe \v TM_CLOSE\:ltm.h}
{\xe \v ltm.h\:TM_CLOSE}
{\qr TM_CLOSE{\bkmkstart AAAAAAADHO}
{\bkmkend AAAAAAADHO}
\cell }{\cell }{\row }
{\xe \v TM_N\:ltm.h}
{\xe \v ltm.h\:TM_N}
{\qr TM_N{\bkmkstart AAAAAAADHP}
{\bkmkend AAAAAAADHP}
\cell }{\cell }{\row }
}
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltm.h \'B5\'DA 18 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v luaT_adjustvarargs\:ltm.h}
{\xe \v ltm.h\:luaT_adjustvarargs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaT_adjustvarargs ({\b lua_State} *  {\i L}, int  {\i nfixparams}, struct {\b CallInfo} *  {\i ci}, const {\b Proto} *  {\i p})}}
\par
{\bkmkstart AAAAAAADHQ}
{\bkmkend AAAAAAADHQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltm.c \'B5\'DA 237 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaT_callorderiTM\:ltm.h}
{\xe \v ltm.h\:luaT_callorderiTM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} int luaT_callorderiTM ({\b lua_State} *  {\i L}, const {\b TValue} *  {\i p1}, int  {\i v2}, int  {\i inv}, int  {\i isfloat}, {\b TMS}  {\i event})}}
\par
{\bkmkstart AAAAAAADHR}
{\bkmkend AAAAAAADHR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltm.c \'B5\'DA 220 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaT_callorderTM\:ltm.h}
{\xe \v ltm.h\:luaT_callorderTM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} int luaT_callorderTM ({\b lua_State} *  {\i L}, const {\b TValue} *  {\i p1}, const {\b TValue} *  {\i p2}, {\b TMS}  {\i event})}}
\par
{\bkmkstart AAAAAAADHS}
{\bkmkend AAAAAAADHS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltm.c \'B5\'DA 200 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaT_callTM\:ltm.h}
{\xe \v ltm.h\:luaT_callTM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaT_callTM ({\b lua_State} *  {\i L}, const {\b TValue} *  {\i f}, const {\b TValue} *  {\i p1}, const {\b TValue} *  {\i p2}, const {\b TValue} *  {\i p3})}}
\par
{\bkmkstart AAAAAAADHT}
{\bkmkend AAAAAAADHT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltm.c \'B5\'DA 103 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaT_callTMres\:ltm.h}
{\xe \v ltm.h\:luaT_callTMres}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaT_callTMres ({\b lua_State} *  {\i L}, const {\b TValue} *  {\i f}, const {\b TValue} *  {\i p1}, const {\b TValue} *  {\i p2}, {\b StkId}  {\i p3})}}
\par
{\bkmkstart AAAAAAADHU}
{\bkmkend AAAAAAADHU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltm.c \'B5\'DA 119 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaT_gettm\:ltm.h}
{\xe \v ltm.h\:luaT_gettm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} const {\b TValue}* luaT_gettm ({\b Table} *  {\i events}, {\b TMS}  {\i event}, {\b TString} *  {\i ename})}}
\par
{\bkmkstart AAAAAAADHV}
{\bkmkend AAAAAAADHV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltm.c \'B5\'DA 60 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaT_gettmbyobj\:ltm.h}
{\xe \v ltm.h\:luaT_gettmbyobj}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} const {\b TValue}* luaT_gettmbyobj ({\b lua_State} *  {\i L}, const {\b TValue} *  {\i o}, {\b TMS}  {\i event})}}
\par
{\bkmkstart AAAAAAADHW}
{\bkmkend AAAAAAADHW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltm.c \'B5\'DA 71 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaT_getvarargs\:ltm.h}
{\xe \v ltm.h\:luaT_getvarargs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaT_getvarargs ({\b lua_State} *  {\i L}, struct {\b CallInfo} *  {\i ci}, {\b StkId}  {\i where}, int  {\i wanted})}}
\par
{\bkmkstart AAAAAAADHX}
{\bkmkend AAAAAAADHX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltm.c \'B5\'DA 257 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaT_init\:ltm.h}
{\xe \v ltm.h\:luaT_init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaT_init ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAADHY}
{\bkmkend AAAAAAADHY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltm.c \'B5\'DA 38 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaT_objtypename\:ltm.h}
{\xe \v ltm.h\:luaT_objtypename}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} const char* luaT_objtypename ({\b lua_State} *  {\i L}, const {\b TValue} *  {\i o})}}
\par
{\bkmkstart AAAAAAADHZ}
{\bkmkend AAAAAAADHZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltm.c \'B5\'DA 91 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaT_trybinassocTM\:ltm.h}
{\xe \v ltm.h\:luaT_trybinassocTM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaT_trybinassocTM ({\b lua_State} *  {\i L}, const {\b TValue} *  {\i p1}, const {\b TValue} *  {\i p2}, int  {\i inv}, {\b StkId}  {\i res}, {\b TMS}  {\i event})}}
\par
{\bkmkstart AAAAAAADIA}
{\bkmkend AAAAAAADIA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltm.c \'B5\'DA 174 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaT_trybiniTM\:ltm.h}
{\xe \v ltm.h\:luaT_trybiniTM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaT_trybiniTM ({\b lua_State} *  {\i L}, const {\b TValue} *  {\i p1}, {\b lua_Integer}  {\i i2}, int  {\i inv}, {\b StkId}  {\i res}, {\b TMS}  {\i event})}}
\par
{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltm.c \'B5\'DA 183 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaT_trybinTM\:ltm.h}
{\xe \v ltm.h\:luaT_trybinTM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaT_trybinTM ({\b lua_State} *  {\i L}, const {\b TValue} *  {\i p1}, const {\b TValue} *  {\i p2}, {\b StkId}  {\i res}, {\b TMS}  {\i event})}}
\par
{\bkmkstart AAAAAAADIC}
{\bkmkend AAAAAAADIC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltm.c \'B5\'DA 148 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaT_tryconcatTM\:ltm.h}
{\xe \v ltm.h\:luaT_tryconcatTM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaT_tryconcatTM ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltm.c \'B5\'DA 167 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/gitworkspace/lua/src/lua.c \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v D:/gitworkspace/lua/src/lua.c}
{\xe \v D:/gitworkspace/lua/src/lua.c}
{\bkmkstart AAAAAAADIE}
{\bkmkend AAAAAAADIE}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "lprefix.h"}\par
{\f2 #include <stdio.h>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <string.h>}\par
{\f2 #include <signal.h>}\par
{\f2 #include "lua.h"}\par
{\f2 #include "lauxlib.h"}\par
{\f2 #include "lualib.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lua_c}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_PROGNAME}\~ "lua"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_INIT_VAR}\~ "LUA_INIT"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_INITVARVERSION}\~ {\b LUA_INIT_VAR} {\b LUA_VERSUFFIX}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b has_error}\~ 1	/* bad option */\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b has_i}\~ 2	/* -i */\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b has_v}\~ 4	/* -v */\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b has_e}\~ 8	/* -e */\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b has_E}\~ 16	/* -E */\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_PROMPT}\~ "> "\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_PROMPT2}\~ ">> "\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_MAXINPUT}\~ 512\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lua_stdin_is_tty}()\~ 1  /* assume stdin is a tty */\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lua_initreadline}(L)\~ ((void)L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lua_readline}(L,  b,  p)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lua_saveline}(L,  line)\~ \{ (void)L; (void)line; \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lua_freeline}(L,  b)\~ \{ (void)L; (void)b; \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EOFMARK}\~ "<eof>"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b marklen}\~ (sizeof({\b EOFMARK})/sizeof(char) - 1)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b lstop} ({\b lua_State} *L, {\b lua_Debug} *ar)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b laction} (int i)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b print_usage} (const char *badoption)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b l_message} (const char *pname, const char *msg)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b report} ({\b lua_State} *L, int status)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b msghandler} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b docall} ({\b lua_State} *L, int narg, int nres)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b print_version} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b createargtable} ({\b lua_State} *L, char **argv, int argc, int script)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b dochunk} ({\b lua_State} *L, int status)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b dofile} ({\b lua_State} *L, const char *name)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b dostring} ({\b lua_State} *L, const char *s, const char *name)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b dolibrary} ({\b lua_State} *L, const char *name)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b pushargs} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b handle_script} ({\b lua_State} *L, char **argv)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b collectargs} (char **argv, int *first)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b runargs} ({\b lua_State} *L, char **argv, int n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b handle_luainit} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const char * {\b get_prompt} ({\b lua_State} *L, int firstline)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b incomplete} ({\b lua_State} *L, int status)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b pushline} ({\b lua_State} *L, int firstline)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b addreturn} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b multiline} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b loadline} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b l_print} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b doREPL} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b pmain} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char **argv)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b lua_State} * {\b globalL} = NULL\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const char * {\b progname} = {\b LUA_PROGNAME}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v EOFMARK\:lua.c}
{\xe \v lua.c\:EOFMARK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EOFMARK\~ "<eof>"}}
\par
{\bkmkstart AAAAAAADIF}
{\bkmkend AAAAAAADIF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.c \'B5\'DA 430 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v has_e\:lua.c}
{\xe \v lua.c\:has_e}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define has_e\~ 8	/* -e */}}
\par
{\bkmkstart AAAAAAADIG}
{\bkmkend AAAAAAADIG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.c \'B5\'DA 238 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v has_E\:lua.c}
{\xe \v lua.c\:has_E}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define has_E\~ 16	/* -E */}}
\par
{\bkmkstart AAAAAAADIH}
{\bkmkend AAAAAAADIH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.c \'B5\'DA 239 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v has_error\:lua.c}
{\xe \v lua.c\:has_error}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define has_error\~ 1	/* bad option */}}
\par
{\bkmkstart AAAAAAADII}
{\bkmkend AAAAAAADII}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.c \'B5\'DA 235 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v has_i\:lua.c}
{\xe \v lua.c\:has_i}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define has_i\~ 2	/* -i */}}
\par
{\bkmkstart AAAAAAADIJ}
{\bkmkend AAAAAAADIJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.c \'B5\'DA 236 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v has_v\:lua.c}
{\xe \v lua.c\:has_v}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define has_v\~ 4	/* -v */}}
\par
{\bkmkstart AAAAAAADIK}
{\bkmkend AAAAAAADIK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.c \'B5\'DA 237 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_c\:lua.c}
{\xe \v lua.c\:lua_c}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lua_c}}
\par
{\bkmkstart AAAAAAADIL}
{\bkmkend AAAAAAADIL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.c \'B5\'DA 7 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_freeline\:lua.c}
{\xe \v lua.c\:lua_freeline}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lua_freeline( L,  b)\~ \{ (void)L; (void)b; \}}}
\par
{\bkmkstart AAAAAAADIM}
{\bkmkend AAAAAAADIM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.c \'B5\'DA 411 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_INIT_VAR\:lua.c}
{\xe \v lua.c\:LUA_INIT_VAR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_INIT_VAR\~ "LUA_INIT"}}
\par
{\bkmkstart AAAAAAADIN}
{\bkmkend AAAAAAADIN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.c \'B5\'DA 29 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_initreadline\:lua.c}
{\xe \v lua.c\:lua_initreadline}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lua_initreadline( L)\~ ((void)L)}}
\par
{\bkmkstart AAAAAAADIO}
{\bkmkend AAAAAAADIO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.c \'B5\'DA 406 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_INITVARVERSION\:lua.c}
{\xe \v lua.c\:LUA_INITVARVERSION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_INITVARVERSION\~ {\b LUA_INIT_VAR} {\b LUA_VERSUFFIX}}}
\par
{\bkmkstart AAAAAAADIP}
{\bkmkend AAAAAAADIP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.c \'B5\'DA 32 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_MAXINPUT\:lua.c}
{\xe \v lua.c\:LUA_MAXINPUT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_MAXINPUT\~ 512}}
\par
{\bkmkstart AAAAAAADIQ}
{\bkmkend AAAAAAADIQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.c \'B5\'DA 355 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_PROGNAME\:lua.c}
{\xe \v lua.c\:LUA_PROGNAME}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_PROGNAME\~ "lua"}}
\par
{\bkmkstart AAAAAAADIR}
{\bkmkend AAAAAAADIR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.c \'B5\'DA 25 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_PROMPT\:lua.c}
{\xe \v lua.c\:LUA_PROMPT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_PROMPT\~ "> "}}
\par
{\bkmkstart AAAAAAADIS}
{\bkmkend AAAAAAADIS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.c \'B5\'DA 350 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_PROMPT2\:lua.c}
{\xe \v lua.c\:LUA_PROMPT2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_PROMPT2\~ ">> "}}
\par
{\bkmkstart AAAAAAADIT}
{\bkmkend AAAAAAADIT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.c \'B5\'DA 351 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_readline\:lua.c}
{\xe \v lua.c\:lua_readline}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lua_readline( L,  b,  p)}}
\par
{\bkmkstart AAAAAAADIU}
{\bkmkend AAAAAAADIU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid         ((void)L, fputs(p, stdout), fflush(stdout),  {\cf20 /* show prompt */} \\\par
        fgets(b, LUA_MAXINPUT, stdin) != NULL)  {\cf20 /* get line */}\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.c \'B5\'DA 407 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_saveline\:lua.c}
{\xe \v lua.c\:lua_saveline}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lua_saveline( L,  line)\~ \{ (void)L; (void)line; \}}}
\par
{\bkmkstart AAAAAAADIV}
{\bkmkend AAAAAAADIV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.c \'B5\'DA 410 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_stdin_is_tty\:lua.c}
{\xe \v lua.c\:lua_stdin_is_tty}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lua_stdin_is_tty()\~ 1  /* assume stdin is a tty */}}
\par
{\bkmkstart AAAAAAADIW}
{\bkmkend AAAAAAADIW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.c \'B5\'DA 380 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v marklen\:lua.c}
{\xe \v lua.c\:marklen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define marklen\~ (sizeof({\b EOFMARK})/sizeof(char) - 1)}}
\par
{\bkmkstart AAAAAAADIX}
{\bkmkend AAAAAAADIX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.c \'B5\'DA 431 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v addreturn\:lua.c}
{\xe \v lua.c\:addreturn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int addreturn ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADIY}
{\bkmkend AAAAAAADIY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.c \'B5\'DA 480 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v collectargs\:lua.c}
{\xe \v lua.c\:collectargs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int collectargs (char **  {\i argv}, int *  {\i first}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADIZ}
{\bkmkend AAAAAAADIZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.c \'B5\'DA 248 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v createargtable\:lua.c}
{\xe \v lua.c\:createargtable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void createargtable ({\b lua_State} *  {\i L}, char **  {\i argv}, int  {\i argc}, int  {\i script}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADJA}
{\bkmkend AAAAAAADJA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.c \'B5\'DA 160 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v docall\:lua.c}
{\xe \v lua.c\:docall}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int docall ({\b lua_State} *  {\i L}, int  {\i narg}, int  {\i nres}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADJB}
{\bkmkend AAAAAAADJB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.c \'B5\'DA 132 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v dochunk\:lua.c}
{\xe \v lua.c\:dochunk}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int dochunk ({\b lua_State} *  {\i L}, int  {\i status}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADJC}
{\bkmkend AAAAAAADJC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.c \'B5\'DA 173 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v dofile\:lua.c}
{\xe \v lua.c\:dofile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int dofile ({\b lua_State} *  {\i L}, const char *  {\i name}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADJD}
{\bkmkend AAAAAAADJD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.c \'B5\'DA 179 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v dolibrary\:lua.c}
{\xe \v lua.c\:dolibrary}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int dolibrary ({\b lua_State} *  {\i L}, const char *  {\i name}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADJE}
{\bkmkend AAAAAAADJE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.c \'B5\'DA 193 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v doREPL\:lua.c}
{\xe \v lua.c\:doREPL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void doREPL ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADJF}
{\bkmkend AAAAAAADJF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.c \'B5\'DA 553 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v dostring\:lua.c}
{\xe \v lua.c\:dostring}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int dostring ({\b lua_State} *  {\i L}, const char *  {\i s}, const char *  {\i name}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADJG}
{\bkmkend AAAAAAADJG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.c \'B5\'DA 184 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v get_prompt\:lua.c}
{\xe \v lua.c\:get_prompt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static const char* get_prompt ({\b lua_State} *  {\i L}, int  {\i firstline}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADJH}
{\bkmkend AAAAAAADJH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.c \'B5\'DA 421 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v handle_luainit\:lua.c}
{\xe \v lua.c\:handle_luainit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int handle_luainit ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADJI}
{\bkmkend AAAAAAADJI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.c \'B5\'DA 328 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v handle_script\:lua.c}
{\xe \v lua.c\:handle_script}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int handle_script ({\b lua_State} *  {\i L}, char **  {\i argv}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADJJ}
{\bkmkend AAAAAAADJJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.c \'B5\'DA 220 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v incomplete\:lua.c}
{\xe \v lua.c\:incomplete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int incomplete ({\b lua_State} *  {\i L}, int  {\i status}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADJK}
{\bkmkend AAAAAAADJK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.c \'B5\'DA 439 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v l_message\:lua.c}
{\xe \v lua.c\:l_message}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void l_message (const char *  {\i pname}, const char *  {\i msg}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADJL}
{\bkmkend AAAAAAADJL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.c \'B5\'DA 89 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v l_print\:lua.c}
{\xe \v lua.c\:l_print}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void l_print ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADJM}
{\bkmkend AAAAAAADJM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.c \'B5\'DA 536 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v laction\:lua.c}
{\xe \v lua.c\:laction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void laction (int  {\i i}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADJN}
{\bkmkend AAAAAAADJN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.c \'B5\'DA 56 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v loadline\:lua.c}
{\xe \v lua.c\:loadline}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int loadline ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADJO}
{\bkmkend AAAAAAADJO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.c \'B5\'DA 520 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lstop\:lua.c}
{\xe \v lua.c\:lstop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void lstop ({\b lua_State} *  {\i L}, {\b lua_Debug} *  {\i ar}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADJP}
{\bkmkend AAAAAAADJP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.c \'B5\'DA 43 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v main\:lua.c}
{\xe \v lua.c\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int  {\i argc}, char **  {\i argv})}}
\par
{\bkmkstart AAAAAAADJQ}
{\bkmkend AAAAAAADJQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.c \'B5\'DA 619 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v msghandler\:lua.c}
{\xe \v lua.c\:msghandler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int msghandler ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADJR}
{\bkmkend AAAAAAADJR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.c \'B5\'DA 113 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v multiline\:lua.c}
{\xe \v lua.c\:multiline}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int multiline ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADJS}
{\bkmkend AAAAAAADJS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.c \'B5\'DA 498 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v pmain\:lua.c}
{\xe \v lua.c\:pmain}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int pmain ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADJT}
{\bkmkend AAAAAAADJT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.c \'B5\'DA 576 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v print_usage\:lua.c}
{\xe \v lua.c\:print_usage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void print_usage (const char *  {\i badoption}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADJU}
{\bkmkend AAAAAAADJU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.c \'B5\'DA 63 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v print_version\:lua.c}
{\xe \v lua.c\:print_version}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void print_version (void ){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADJV}
{\bkmkend AAAAAAADJV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.c \'B5\'DA 146 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v pushargs\:lua.c}
{\xe \v lua.c\:pushargs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int pushargs ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADJW}
{\bkmkend AAAAAAADJW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.c \'B5\'DA 207 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v pushline\:lua.c}
{\xe \v lua.c\:pushline}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int pushline ({\b lua_State} *  {\i L}, int  {\i firstline}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADJX}
{\bkmkend AAAAAAADJX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.c \'B5\'DA 455 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v report\:lua.c}
{\xe \v lua.c\:report}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int report ({\b lua_State} *  {\i L}, int  {\i status}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADJY}
{\bkmkend AAAAAAADJY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.c \'B5\'DA 100 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v runargs\:lua.c}
{\xe \v lua.c\:runargs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int runargs ({\b lua_State} *  {\i L}, char **  {\i argv}, int  {\i n}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADJZ}
{\bkmkend AAAAAAADJZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.c \'B5\'DA 302 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v globalL\:lua.c}
{\xe \v lua.c\:globalL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lua_State}* globalL = NULL{\f2 [static]}}}
\par
{\bkmkstart AAAAAAADKA}
{\bkmkend AAAAAAADKA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.c \'B5\'DA 35 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v progname\:lua.c}
{\xe \v lua.c\:progname}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* progname = {\b LUA_PROGNAME}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAADKB}
{\bkmkend AAAAAAADKB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.c \'B5\'DA 37 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/gitworkspace/lua/src/lua.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v D:/gitworkspace/lua/src/lua.h}
{\xe \v D:/gitworkspace/lua/src/lua.h}
{\bkmkstart AAAAAAADKC}
{\bkmkend AAAAAAADKC}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdarg.h>}\par
{\f2 #include <stddef.h>}\par
{\f2 #include "luaconf.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b lua_Debug}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_VERSION_MAJOR}\~ "5"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_VERSION_MINOR}\~ "4"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_VERSION_RELEASE}\~ "0"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_VERSION_NUM}\~ 504\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_VERSION_RELEASE_NUM}\~ ({\b LUA_VERSION_NUM} * 100 + 0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_VERSION}\~ "Lua " LUA_VERSION_MAJOR "." {\b LUA_VERSION_MINOR}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_RELEASE}\~ {\b LUA_VERSION} "." {\b LUA_VERSION_RELEASE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_COPYRIGHT}\~ {\b LUA_RELEASE} "  Copyright (C) 1994-2020 Lua.org, PUC-Rio"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_AUTHORS}\~ "R. Ierusalimschy, L. H. de Figueiredo, W. Celes"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_SIGNATURE}\~ "\\x1bLua"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_MULTRET}\~ (-1)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_REGISTRYINDEX}\~ (-{\b LUAI_MAXSTACK} - 1000)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lua_upvalueindex}(i)\~ ({\b LUA_REGISTRYINDEX} - (i))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_OK}\~ 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_YIELD}\~ 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_ERRRUN}\~ 2\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_ERRSYNTAX}\~ 3\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_ERRMEM}\~ 4\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_ERRERR}\~ 5\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_TNONE}\~ (-1)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_TNIL}\~ 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_TBOOLEAN}\~ 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_TLIGHTUSERDATA}\~ 2\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_TNUMBER}\~ 3\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_TSTRING}\~ 4\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_TTABLE}\~ 5\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_TFUNCTION}\~ 6\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_TUSERDATA}\~ 7\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_TTHREAD}\~ 8\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_NUMTYPES}\~ 9\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_MINSTACK}\~ 20\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_RIDX_MAINTHREAD}\~ 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_RIDX_GLOBALS}\~ 2\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_RIDX_LAST}\~ {\b LUA_RIDX_GLOBALS}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_OPADD}\~ 0	/* ORDER TM, ORDER OP */\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_OPSUB}\~ 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_OPMUL}\~ 2\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_OPMOD}\~ 3\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_OPPOW}\~ 4\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_OPDIV}\~ 5\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_OPIDIV}\~ 6\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_OPBAND}\~ 7\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_OPBOR}\~ 8\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_OPBXOR}\~ 9\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_OPSHL}\~ 10\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_OPSHR}\~ 11\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_OPUNM}\~ 12\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_OPBNOT}\~ 13\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_OPEQ}\~ 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_OPLT}\~ 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_OPLE}\~ 2\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lua_call}(L,  n,  r)\~ {\b lua_callk}(L, (n), (r), 0, NULL)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lua_pcall}(L,  n,  r,  f)\~ {\b lua_pcallk}(L, (n), (r), (f), 0, NULL)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lua_yield}(L,  n)\~ {\b lua_yieldk}(L, (n), 0, NULL)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_GCSTOP}\~ 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_GCRESTART}\~ 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_GCCOLLECT}\~ 2\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_GCCOUNT}\~ 3\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_GCCOUNTB}\~ 4\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_GCSTEP}\~ 5\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_GCSETPAUSE}\~ 6\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_GCSETSTEPMUL}\~ 7\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_GCISRUNNING}\~ 9\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_GCGEN}\~ 10\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_GCINC}\~ 11\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lua_getextraspace}(L)\~ ((void *)((char *)(L) - {\b LUA_EXTRASPACE}))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lua_tonumber}(L,  i)\~ {\b lua_tonumberx}(L,(i),NULL)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lua_tointeger}(L,  i)\~ {\b lua_tointegerx}(L,(i),NULL)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lua_pop}(L,  n)\~ {\b lua_settop}(L, -(n)-1)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lua_newtable}(L)\~ {\b lua_createtable}(L, 0, 0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lua_register}(L,  n,  f)\~ ({\b lua_pushcfunction}(L, (f)), {\b lua_setglobal}(L, (n)))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lua_pushcfunction}(L,  f)\~ {\b lua_pushcclosure}(L, (f), 0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lua_isfunction}(L,  n)\~ ({\b lua_type}(L, (n)) == {\b LUA_TFUNCTION})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lua_istable}(L,  n)\~ ({\b lua_type}(L, (n)) == {\b LUA_TTABLE})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lua_islightuserdata}(L,  n)\~ ({\b lua_type}(L, (n)) == {\b LUA_TLIGHTUSERDATA})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lua_isnil}(L,  n)\~ ({\b lua_type}(L, (n)) == {\b LUA_TNIL})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lua_isboolean}(L,  n)\~ ({\b lua_type}(L, (n)) == {\b LUA_TBOOLEAN})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lua_isthread}(L,  n)\~ ({\b lua_type}(L, (n)) == {\b LUA_TTHREAD})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lua_isnone}(L,  n)\~ ({\b lua_type}(L, (n)) == {\b LUA_TNONE})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lua_isnoneornil}(L,  n)\~ ({\b lua_type}(L, (n)) <= 0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lua_pushliteral}(L,  s)\~ {\b lua_pushstring}(L, "" s)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lua_pushglobaltable}(L)\~ 	((void){\b lua_rawgeti}(L, {\b LUA_REGISTRYINDEX}, {\b LUA_RIDX_GLOBALS}))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lua_tostring}(L,  i)\~ {\b lua_tolstring}(L, (i), NULL)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lua_insert}(L,  idx)\~ {\b lua_rotate}(L, (idx), 1)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lua_remove}(L,  idx)\~ ({\b lua_rotate}(L, (idx), -1), {\b lua_pop}(L, 1))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lua_replace}(L,  idx)\~ ({\b lua_copy}(L, -1, (idx)), {\b lua_pop}(L, 1))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lua_newuserdata}(L,  s)\~ {\b lua_newuserdatauv}(L,s,1)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lua_getuservalue}(L,  idx)\~ {\b lua_getiuservalue}(L,idx,1)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lua_setuservalue}(L,  idx)\~ {\b lua_setiuservalue}(L,idx,1)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_NUMTAGS}\~ {\b LUA_NUMTYPES}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_HOOKCALL}\~ 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_HOOKRET}\~ 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_HOOKLINE}\~ 2\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_HOOKCOUNT}\~ 3\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_HOOKTAILCALL}\~ 4\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_MASKCALL}\~ (1 << {\b LUA_HOOKCALL})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_MASKRET}\~ (1 << {\b LUA_HOOKRET})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_MASKLINE}\~ (1 << {\b LUA_HOOKLINE})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_MASKCOUNT}\~ (1 << {\b LUA_HOOKCOUNT})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'D0\'CD\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b lua_State} {\b lua_State}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef {\b LUA_NUMBER} {\b lua_Number}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef LUA_INTEGER {\b lua_Integer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef {\b LUA_UNSIGNED} {\b lua_Unsigned}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef {\b LUA_KCONTEXT} {\b lua_KContext}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef int(* {\b lua_CFunction}) ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef int(* {\b lua_KFunction}) ({\b lua_State} *L, int status, {\b lua_KContext} ctx)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef const char *(* {\b lua_Reader}) ({\b lua_State} *L, void *ud, size_t *sz)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef int(* {\b lua_Writer}) ({\b lua_State} *L, const void *p, size_t sz, void *ud)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef void *(* {\b lua_Alloc}) (void *ud, void *ptr, size_t osize, size_t nsize)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef void(* {\b lua_WarnFunction}) (void *ud, const char *msg, int tocont)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b lua_Debug} {\b lua_Debug}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef void(* {\b lua_Hook}) ({\b lua_State} *L, {\b lua_Debug} *ar)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} {\b lua_State} *() {\b lua_newstate} ({\b lua_Alloc} f, void *ud)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} void() {\b lua_close} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} {\b lua_State} *() {\b lua_newthread} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int() {\b lua_resetthread} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} {\b lua_CFunction}() {\b lua_atpanic} ({\b lua_State} *L, {\b lua_CFunction} panicf)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} {\b lua_Number}() {\b lua_version} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int() {\b lua_absindex} ({\b lua_State} *L, int idx)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int() {\b lua_gettop} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} void() {\b lua_settop} ({\b lua_State} *L, int idx)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} void() {\b lua_pushvalue} ({\b lua_State} *L, int idx)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} void() {\b lua_rotate} ({\b lua_State} *L, int idx, int n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} void() {\b lua_copy} ({\b lua_State} *L, int fromidx, int toidx)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int() {\b lua_checkstack} ({\b lua_State} *L, int n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} void() {\b lua_xmove} ({\b lua_State} *from, {\b lua_State} *to, int n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int() {\b lua_isnumber} ({\b lua_State} *L, int idx)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int() {\b lua_isstring} ({\b lua_State} *L, int idx)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int() {\b lua_iscfunction} ({\b lua_State} *L, int idx)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int() {\b lua_isinteger} ({\b lua_State} *L, int idx)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int() {\b lua_isuserdata} ({\b lua_State} *L, int idx)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int() {\b lua_type} ({\b lua_State} *L, int idx)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} const char *() {\b lua_typename} ({\b lua_State} *L, int tp)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} {\b lua_Number}() {\b lua_tonumberx} ({\b lua_State} *L, int idx, int *isnum)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} {\b lua_Integer}() {\b lua_tointegerx} ({\b lua_State} *L, int idx, int *isnum)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int() {\b lua_toboolean} ({\b lua_State} *L, int idx)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} const char *() {\b lua_tolstring} ({\b lua_State} *L, int idx, size_t *len)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} {\b lua_Unsigned}() {\b lua_rawlen} ({\b lua_State} *L, int idx)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} {\b lua_CFunction}() {\b lua_tocfunction} ({\b lua_State} *L, int idx)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} void *() {\b lua_touserdata} ({\b lua_State} *L, int idx)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} {\b lua_State} *() {\b lua_tothread} ({\b lua_State} *L, int idx)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} const void *() {\b lua_topointer} ({\b lua_State} *L, int idx)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} void() {\b lua_arith} ({\b lua_State} *L, int op)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int() {\b lua_rawequal} ({\b lua_State} *L, int idx1, int idx2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int() {\b lua_compare} ({\b lua_State} *L, int idx1, int idx2, int op)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} void() {\b lua_pushnil} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} void() {\b lua_pushnumber} ({\b lua_State} *L, {\b lua_Number} n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} void() {\b lua_pushinteger} ({\b lua_State} *L, {\b lua_Integer} n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} const char *() {\b lua_pushlstring} ({\b lua_State} *L, const char *s, size_t len)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} const char *() {\b lua_pushstring} ({\b lua_State} *L, const char *s)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} const char *() {\b lua_pushvfstring} ({\b lua_State} *L, const char *fmt, va_list argp)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} const char *() {\b lua_pushfstring} ({\b lua_State} *L, const char *fmt,...)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} void() {\b lua_pushcclosure} ({\b lua_State} *L, {\b lua_CFunction} fn, int n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} void() {\b lua_pushboolean} ({\b lua_State} *L, int b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} void() {\b lua_pushlightuserdata} ({\b lua_State} *L, void *p)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int() {\b lua_pushthread} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int() {\b lua_getglobal} ({\b lua_State} *L, const char *name)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int() {\b lua_gettable} ({\b lua_State} *L, int idx)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int() {\b lua_getfield} ({\b lua_State} *L, int idx, const char *k)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int() {\b lua_geti} ({\b lua_State} *L, int idx, {\b lua_Integer} n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int() {\b lua_rawget} ({\b lua_State} *L, int idx)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int() {\b lua_rawgeti} ({\b lua_State} *L, int idx, {\b lua_Integer} n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int() {\b lua_rawgetp} ({\b lua_State} *L, int idx, const void *p)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} void() {\b lua_createtable} ({\b lua_State} *L, int narr, int nrec)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} void *() {\b lua_newuserdatauv} ({\b lua_State} *L, size_t sz, int nuvalue)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int() {\b lua_getmetatable} ({\b lua_State} *L, int objindex)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int() {\b lua_getiuservalue} ({\b lua_State} *L, int idx, int n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} void() {\b lua_setglobal} ({\b lua_State} *L, const char *name)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} void() {\b lua_settable} ({\b lua_State} *L, int idx)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} void() {\b lua_setfield} ({\b lua_State} *L, int idx, const char *k)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} void() {\b lua_seti} ({\b lua_State} *L, int idx, {\b lua_Integer} n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} void() {\b lua_rawset} ({\b lua_State} *L, int idx)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} void() {\b lua_rawseti} ({\b lua_State} *L, int idx, {\b lua_Integer} n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} void() {\b lua_rawsetp} ({\b lua_State} *L, int idx, const void *p)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int() {\b lua_setmetatable} ({\b lua_State} *L, int objindex)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int() {\b lua_setiuservalue} ({\b lua_State} *L, int idx, int n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} void() {\b lua_callk} ({\b lua_State} *L, int nargs, int nresults, {\b lua_KContext} ctx, {\b lua_KFunction} k)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int() {\b lua_pcallk} ({\b lua_State} *L, int nargs, int nresults, int errfunc, {\b lua_KContext} ctx, {\b lua_KFunction} k)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int() {\b lua_load} ({\b lua_State} *L, {\b lua_Reader} {\b reader}, void *dt, const char *chunkname, const char *mode)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int() {\b lua_dump} ({\b lua_State} *L, {\b lua_Writer} {\b writer}, void *data, int strip)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int() {\b lua_yieldk} ({\b lua_State} *L, int nresults, {\b lua_KContext} ctx, {\b lua_KFunction} k)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int() {\b lua_resume} ({\b lua_State} *L, {\b lua_State} *from, int narg, int *nres)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int() {\b lua_status} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int() {\b lua_isyieldable} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} void() {\b lua_setwarnf} ({\b lua_State} *L, {\b lua_WarnFunction} f, void *ud)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} void() {\b lua_warning} ({\b lua_State} *L, const char *msg, int tocont)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int() {\b lua_gc} ({\b lua_State} *L, int what,...)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int() {\b lua_error} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int() {\b lua_next} ({\b lua_State} *L, int idx)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} void() {\b lua_concat} ({\b lua_State} *L, int n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} void() {\b lua_len} ({\b lua_State} *L, int idx)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} size_t() {\b lua_stringtonumber} ({\b lua_State} *L, const char *s)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} {\b lua_Alloc}() {\b lua_getallocf} ({\b lua_State} *L, void **ud)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} void() {\b lua_setallocf} ({\b lua_State} *L, {\b lua_Alloc} f, void *ud)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} void() {\b lua_toclose} ({\b lua_State} *L, int idx)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int() {\b lua_getstack} ({\b lua_State} *L, int level, {\b lua_Debug} *ar)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int() {\b lua_getinfo} ({\b lua_State} *L, const char *what, {\b lua_Debug} *ar)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} const char *() {\b lua_getlocal} ({\b lua_State} *L, const {\b lua_Debug} *ar, int n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} const char *() {\b lua_setlocal} ({\b lua_State} *L, const {\b lua_Debug} *ar, int n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} const char *() {\b lua_getupvalue} ({\b lua_State} *L, int funcindex, int n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} const char *() {\b lua_setupvalue} ({\b lua_State} *L, int funcindex, int n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} void *() {\b lua_upvalueid} ({\b lua_State} *L, int fidx, int n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} void() {\b lua_upvaluejoin} ({\b lua_State} *L, int fidx1, int n1, int fidx2, int n2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} void() {\b lua_sethook} ({\b lua_State} *L, {\b lua_Hook} func, int mask, int count)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} {\b lua_Hook}() {\b lua_gethook} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int() {\b lua_gethookmask} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int() {\b lua_gethookcount} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUA_API} int() {\b lua_setcstacklimit} ({\b lua_State} *L, unsigned int limit)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char {\b lua_ident} []\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v LUA_AUTHORS\:lua.h}
{\xe \v lua.h\:LUA_AUTHORS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_AUTHORS\~ "R. Ierusalimschy, L. H. de Figueiredo, W. Celes"}}
\par
{\bkmkstart AAAAAAADKD}
{\bkmkend AAAAAAADKD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 29 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_call\:lua.h}
{\xe \v lua.h\:lua_call}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lua_call( L,  n,  r)\~ {\b lua_callk}(L, (n), (r), 0, NULL)}}
\par
{\bkmkstart AAAAAAADKE}
{\bkmkend AAAAAAADKE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 283 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_COPYRIGHT\:lua.h}
{\xe \v lua.h\:LUA_COPYRIGHT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_COPYRIGHT\~ {\b LUA_RELEASE} "  Copyright (C) 1994-2020 Lua.org, PUC-Rio"}}
\par
{\bkmkstart AAAAAAADKF}
{\bkmkend AAAAAAADKF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 28 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_ERRERR\:lua.h}
{\xe \v lua.h\:LUA_ERRERR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_ERRERR\~ 5}}
\par
{\bkmkstart AAAAAAADKG}
{\bkmkend AAAAAAADKG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 54 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_ERRMEM\:lua.h}
{\xe \v lua.h\:LUA_ERRMEM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_ERRMEM\~ 4}}
\par
{\bkmkstart AAAAAAADKH}
{\bkmkend AAAAAAADKH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 53 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_ERRRUN\:lua.h}
{\xe \v lua.h\:LUA_ERRRUN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_ERRRUN\~ 2}}
\par
{\bkmkstart AAAAAAADKI}
{\bkmkend AAAAAAADKI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 51 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_ERRSYNTAX\:lua.h}
{\xe \v lua.h\:LUA_ERRSYNTAX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_ERRSYNTAX\~ 3}}
\par
{\bkmkstart AAAAAAADKJ}
{\bkmkend AAAAAAADKJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 52 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_GCCOLLECT\:lua.h}
{\xe \v lua.h\:LUA_GCCOLLECT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_GCCOLLECT\~ 2}}
\par
{\bkmkstart AAAAAAADKK}
{\bkmkend AAAAAAADKK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 321 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_GCCOUNT\:lua.h}
{\xe \v lua.h\:LUA_GCCOUNT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_GCCOUNT\~ 3}}
\par
{\bkmkstart AAAAAAADKL}
{\bkmkend AAAAAAADKL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 322 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_GCCOUNTB\:lua.h}
{\xe \v lua.h\:LUA_GCCOUNTB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_GCCOUNTB\~ 4}}
\par
{\bkmkstart AAAAAAADKM}
{\bkmkend AAAAAAADKM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 323 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_GCGEN\:lua.h}
{\xe \v lua.h\:LUA_GCGEN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_GCGEN\~ 10}}
\par
{\bkmkstart AAAAAAADKN}
{\bkmkend AAAAAAADKN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 328 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_GCINC\:lua.h}
{\xe \v lua.h\:LUA_GCINC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_GCINC\~ 11}}
\par
{\bkmkstart AAAAAAADKO}
{\bkmkend AAAAAAADKO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 329 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_GCISRUNNING\:lua.h}
{\xe \v lua.h\:LUA_GCISRUNNING}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_GCISRUNNING\~ 9}}
\par
{\bkmkstart AAAAAAADKP}
{\bkmkend AAAAAAADKP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 327 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_GCRESTART\:lua.h}
{\xe \v lua.h\:LUA_GCRESTART}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_GCRESTART\~ 1}}
\par
{\bkmkstart AAAAAAADKQ}
{\bkmkend AAAAAAADKQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 320 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_GCSETPAUSE\:lua.h}
{\xe \v lua.h\:LUA_GCSETPAUSE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_GCSETPAUSE\~ 6}}
\par
{\bkmkstart AAAAAAADKR}
{\bkmkend AAAAAAADKR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 325 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_GCSETSTEPMUL\:lua.h}
{\xe \v lua.h\:LUA_GCSETSTEPMUL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_GCSETSTEPMUL\~ 7}}
\par
{\bkmkstart AAAAAAADKS}
{\bkmkend AAAAAAADKS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 326 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_GCSTEP\:lua.h}
{\xe \v lua.h\:LUA_GCSTEP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_GCSTEP\~ 5}}
\par
{\bkmkstart AAAAAAADKT}
{\bkmkend AAAAAAADKT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 324 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_GCSTOP\:lua.h}
{\xe \v lua.h\:LUA_GCSTOP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_GCSTOP\~ 0}}
\par
{\bkmkstart AAAAAAADKU}
{\bkmkend AAAAAAADKU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 319 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_getextraspace\:lua.h}
{\xe \v lua.h\:lua_getextraspace}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lua_getextraspace( L)\~ ((void *)((char *)(L) - {\b LUA_EXTRASPACE}))}}
\par
{\bkmkstart AAAAAAADKV}
{\bkmkend AAAAAAADKV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 359 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_getuservalue\:lua.h}
{\xe \v lua.h\:lua_getuservalue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lua_getuservalue( L,  idx)\~ {\b lua_getiuservalue}(L,idx,1)}}
\par
{\bkmkstart AAAAAAADKW}
{\bkmkend AAAAAAADKW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 412 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_HOOKCALL\:lua.h}
{\xe \v lua.h\:LUA_HOOKCALL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_HOOKCALL\~ 0}}
\par
{\bkmkstart AAAAAAADKX}
{\bkmkend AAAAAAADKX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 429 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_HOOKCOUNT\:lua.h}
{\xe \v lua.h\:LUA_HOOKCOUNT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_HOOKCOUNT\~ 3}}
\par
{\bkmkstart AAAAAAADKY}
{\bkmkend AAAAAAADKY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 432 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_HOOKLINE\:lua.h}
{\xe \v lua.h\:LUA_HOOKLINE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_HOOKLINE\~ 2}}
\par
{\bkmkstart AAAAAAADKZ}
{\bkmkend AAAAAAADKZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 431 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_HOOKRET\:lua.h}
{\xe \v lua.h\:LUA_HOOKRET}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_HOOKRET\~ 1}}
\par
{\bkmkstart AAAAAAADLA}
{\bkmkend AAAAAAADLA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 430 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_HOOKTAILCALL\:lua.h}
{\xe \v lua.h\:LUA_HOOKTAILCALL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_HOOKTAILCALL\~ 4}}
\par
{\bkmkstart AAAAAAADLB}
{\bkmkend AAAAAAADLB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 433 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_insert\:lua.h}
{\xe \v lua.h\:lua_insert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lua_insert( L,  idx)\~ {\b lua_rotate}(L, (idx), 1)}}
\par
{\bkmkstart AAAAAAADLC}
{\bkmkend AAAAAAADLC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 389 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_isboolean\:lua.h}
{\xe \v lua.h\:lua_isboolean}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lua_isboolean( L,  n)\~ ({\b lua_type}(L, (n)) == {\b LUA_TBOOLEAN})}}
\par
{\bkmkstart AAAAAAADLD}
{\bkmkend AAAAAAADLD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 376 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_isfunction\:lua.h}
{\xe \v lua.h\:lua_isfunction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lua_isfunction( L,  n)\~ ({\b lua_type}(L, (n)) == {\b LUA_TFUNCTION})}}
\par
{\bkmkstart AAAAAAADLE}
{\bkmkend AAAAAAADLE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 372 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_islightuserdata\:lua.h}
{\xe \v lua.h\:lua_islightuserdata}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lua_islightuserdata( L,  n)\~ ({\b lua_type}(L, (n)) == {\b LUA_TLIGHTUSERDATA})}}
\par
{\bkmkstart AAAAAAADLF}
{\bkmkend AAAAAAADLF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 374 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_isnil\:lua.h}
{\xe \v lua.h\:lua_isnil}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lua_isnil( L,  n)\~ ({\b lua_type}(L, (n)) == {\b LUA_TNIL})}}
\par
{\bkmkstart AAAAAAADLG}
{\bkmkend AAAAAAADLG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 375 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_isnone\:lua.h}
{\xe \v lua.h\:lua_isnone}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lua_isnone( L,  n)\~ ({\b lua_type}(L, (n)) == {\b LUA_TNONE})}}
\par
{\bkmkstart AAAAAAADLH}
{\bkmkend AAAAAAADLH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 378 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_isnoneornil\:lua.h}
{\xe \v lua.h\:lua_isnoneornil}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lua_isnoneornil( L,  n)\~ ({\b lua_type}(L, (n)) <= 0)}}
\par
{\bkmkstart AAAAAAADLI}
{\bkmkend AAAAAAADLI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 379 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_istable\:lua.h}
{\xe \v lua.h\:lua_istable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lua_istable( L,  n)\~ ({\b lua_type}(L, (n)) == {\b LUA_TTABLE})}}
\par
{\bkmkstart AAAAAAADLJ}
{\bkmkend AAAAAAADLJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 373 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_isthread\:lua.h}
{\xe \v lua.h\:lua_isthread}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lua_isthread( L,  n)\~ ({\b lua_type}(L, (n)) == {\b LUA_TTHREAD})}}
\par
{\bkmkstart AAAAAAADLK}
{\bkmkend AAAAAAADLK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 377 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_MASKCALL\:lua.h}
{\xe \v lua.h\:LUA_MASKCALL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_MASKCALL\~ (1 << {\b LUA_HOOKCALL})}}
\par
{\bkmkstart AAAAAAADLL}
{\bkmkend AAAAAAADLL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 439 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_MASKCOUNT\:lua.h}
{\xe \v lua.h\:LUA_MASKCOUNT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_MASKCOUNT\~ (1 << {\b LUA_HOOKCOUNT})}}
\par
{\bkmkstart AAAAAAADLM}
{\bkmkend AAAAAAADLM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 442 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_MASKLINE\:lua.h}
{\xe \v lua.h\:LUA_MASKLINE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_MASKLINE\~ (1 << {\b LUA_HOOKLINE})}}
\par
{\bkmkstart AAAAAAADLN}
{\bkmkend AAAAAAADLN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 441 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_MASKRET\:lua.h}
{\xe \v lua.h\:LUA_MASKRET}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_MASKRET\~ (1 << {\b LUA_HOOKRET})}}
\par
{\bkmkstart AAAAAAADLO}
{\bkmkend AAAAAAADLO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 440 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_MINSTACK\:lua.h}
{\xe \v lua.h\:LUA_MINSTACK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_MINSTACK\~ 20}}
\par
{\bkmkstart AAAAAAADLP}
{\bkmkend AAAAAAADLP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 80 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_MULTRET\:lua.h}
{\xe \v lua.h\:LUA_MULTRET}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_MULTRET\~ (-1)}}
\par
{\bkmkstart AAAAAAADLQ}
{\bkmkend AAAAAAADLQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 36 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_newtable\:lua.h}
{\xe \v lua.h\:lua_newtable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lua_newtable( L)\~ {\b lua_createtable}(L, 0, 0)}}
\par
{\bkmkstart AAAAAAADLR}
{\bkmkend AAAAAAADLR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 366 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_newuserdata\:lua.h}
{\xe \v lua.h\:lua_newuserdata}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lua_newuserdata( L,  s)\~ {\b lua_newuserdatauv}(L,s,1)}}
\par
{\bkmkstart AAAAAAADLS}
{\bkmkend AAAAAAADLS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 411 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_NUMTAGS\:lua.h}
{\xe \v lua.h\:LUA_NUMTAGS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_NUMTAGS\~ {\b LUA_NUMTYPES}}}
\par
{\bkmkstart AAAAAAADLT}
{\bkmkend AAAAAAADLT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 415 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_NUMTYPES\:lua.h}
{\xe \v lua.h\:LUA_NUMTYPES}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_NUMTYPES\~ 9}}
\par
{\bkmkstart AAAAAAADLU}
{\bkmkend AAAAAAADLU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 75 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_OK\:lua.h}
{\xe \v lua.h\:LUA_OK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_OK\~ 0}}
\par
{\bkmkstart AAAAAAADLV}
{\bkmkend AAAAAAADLV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 49 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_OPADD\:lua.h}
{\xe \v lua.h\:LUA_OPADD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_OPADD\~ 0	/* ORDER TM, ORDER OP */}}
\par
{\bkmkstart AAAAAAADLW}
{\bkmkend AAAAAAADLW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 205 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_OPBAND\:lua.h}
{\xe \v lua.h\:LUA_OPBAND}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_OPBAND\~ 7}}
\par
{\bkmkstart AAAAAAADLX}
{\bkmkend AAAAAAADLX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 212 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_OPBNOT\:lua.h}
{\xe \v lua.h\:LUA_OPBNOT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_OPBNOT\~ 13}}
\par
{\bkmkstart AAAAAAADLY}
{\bkmkend AAAAAAADLY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 218 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_OPBOR\:lua.h}
{\xe \v lua.h\:LUA_OPBOR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_OPBOR\~ 8}}
\par
{\bkmkstart AAAAAAADLZ}
{\bkmkend AAAAAAADLZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 213 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_OPBXOR\:lua.h}
{\xe \v lua.h\:LUA_OPBXOR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_OPBXOR\~ 9}}
\par
{\bkmkstart AAAAAAADMA}
{\bkmkend AAAAAAADMA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 214 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_OPDIV\:lua.h}
{\xe \v lua.h\:LUA_OPDIV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_OPDIV\~ 5}}
\par
{\bkmkstart AAAAAAADMB}
{\bkmkend AAAAAAADMB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 210 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_OPEQ\:lua.h}
{\xe \v lua.h\:LUA_OPEQ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_OPEQ\~ 0}}
\par
{\bkmkstart AAAAAAADMC}
{\bkmkend AAAAAAADMC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 222 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_OPIDIV\:lua.h}
{\xe \v lua.h\:LUA_OPIDIV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_OPIDIV\~ 6}}
\par
{\bkmkstart AAAAAAADMD}
{\bkmkend AAAAAAADMD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 211 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_OPLE\:lua.h}
{\xe \v lua.h\:LUA_OPLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_OPLE\~ 2}}
\par
{\bkmkstart AAAAAAADME}
{\bkmkend AAAAAAADME}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 224 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_OPLT\:lua.h}
{\xe \v lua.h\:LUA_OPLT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_OPLT\~ 1}}
\par
{\bkmkstart AAAAAAADMF}
{\bkmkend AAAAAAADMF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 223 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_OPMOD\:lua.h}
{\xe \v lua.h\:LUA_OPMOD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_OPMOD\~ 3}}
\par
{\bkmkstart AAAAAAADMG}
{\bkmkend AAAAAAADMG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 208 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_OPMUL\:lua.h}
{\xe \v lua.h\:LUA_OPMUL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_OPMUL\~ 2}}
\par
{\bkmkstart AAAAAAADMH}
{\bkmkend AAAAAAADMH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 207 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_OPPOW\:lua.h}
{\xe \v lua.h\:LUA_OPPOW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_OPPOW\~ 4}}
\par
{\bkmkstart AAAAAAADMI}
{\bkmkend AAAAAAADMI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 209 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_OPSHL\:lua.h}
{\xe \v lua.h\:LUA_OPSHL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_OPSHL\~ 10}}
\par
{\bkmkstart AAAAAAADMJ}
{\bkmkend AAAAAAADMJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 215 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_OPSHR\:lua.h}
{\xe \v lua.h\:LUA_OPSHR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_OPSHR\~ 11}}
\par
{\bkmkstart AAAAAAADMK}
{\bkmkend AAAAAAADMK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 216 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_OPSUB\:lua.h}
{\xe \v lua.h\:LUA_OPSUB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_OPSUB\~ 1}}
\par
{\bkmkstart AAAAAAADML}
{\bkmkend AAAAAAADML}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 206 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_OPUNM\:lua.h}
{\xe \v lua.h\:LUA_OPUNM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_OPUNM\~ 12}}
\par
{\bkmkstart AAAAAAADMM}
{\bkmkend AAAAAAADMM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 217 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_pcall\:lua.h}
{\xe \v lua.h\:lua_pcall}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lua_pcall( L,  n,  r,  f)\~ {\b lua_pcallk}(L, (n), (r), (f), 0, NULL)}}
\par
{\bkmkstart AAAAAAADMN}
{\bkmkend AAAAAAADMN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 287 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_pop\:lua.h}
{\xe \v lua.h\:lua_pop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lua_pop( L,  n)\~ {\b lua_settop}(L, -(n)-1)}}
\par
{\bkmkstart AAAAAAADMO}
{\bkmkend AAAAAAADMO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 364 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_pushcfunction\:lua.h}
{\xe \v lua.h\:lua_pushcfunction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lua_pushcfunction( L,  f)\~ {\b lua_pushcclosure}(L, (f), 0)}}
\par
{\bkmkstart AAAAAAADMP}
{\bkmkend AAAAAAADMP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 370 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_pushglobaltable\:lua.h}
{\xe \v lua.h\:lua_pushglobaltable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lua_pushglobaltable( L)\~ 	((void){\b lua_rawgeti}(L, {\b LUA_REGISTRYINDEX}, {\b LUA_RIDX_GLOBALS}))}}
\par
{\bkmkstart AAAAAAADMQ}
{\bkmkend AAAAAAADMQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 383 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_pushliteral\:lua.h}
{\xe \v lua.h\:lua_pushliteral}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lua_pushliteral( L,  s)\~ {\b lua_pushstring}(L, "" s)}}
\par
{\bkmkstart AAAAAAADMR}
{\bkmkend AAAAAAADMR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 381 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_register\:lua.h}
{\xe \v lua.h\:lua_register}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lua_register( L,  n,  f)\~ ({\b lua_pushcfunction}(L, (f)), {\b lua_setglobal}(L, (n)))}}
\par
{\bkmkstart AAAAAAADMS}
{\bkmkend AAAAAAADMS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 368 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_REGISTRYINDEX\:lua.h}
{\xe \v lua.h\:LUA_REGISTRYINDEX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_REGISTRYINDEX\~ (-{\b LUAI_MAXSTACK} - 1000)}}
\par
{\bkmkstart AAAAAAADMT}
{\bkmkend AAAAAAADMT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 44 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_RELEASE\:lua.h}
{\xe \v lua.h\:LUA_RELEASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_RELEASE\~ {\b LUA_VERSION} "." {\b LUA_VERSION_RELEASE}}}
\par
{\bkmkstart AAAAAAADMU}
{\bkmkend AAAAAAADMU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 27 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_remove\:lua.h}
{\xe \v lua.h\:lua_remove}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lua_remove( L,  idx)\~ ({\b lua_rotate}(L, (idx), -1), {\b lua_pop}(L, 1))}}
\par
{\bkmkstart AAAAAAADMV}
{\bkmkend AAAAAAADMV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 391 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_replace\:lua.h}
{\xe \v lua.h\:lua_replace}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lua_replace( L,  idx)\~ ({\b lua_copy}(L, -1, (idx)), {\b lua_pop}(L, 1))}}
\par
{\bkmkstart AAAAAAADMW}
{\bkmkend AAAAAAADMW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 393 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_RIDX_GLOBALS\:lua.h}
{\xe \v lua.h\:LUA_RIDX_GLOBALS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_RIDX_GLOBALS\~ 2}}
\par
{\bkmkstart AAAAAAADMX}
{\bkmkend AAAAAAADMX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 85 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_RIDX_LAST\:lua.h}
{\xe \v lua.h\:LUA_RIDX_LAST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_RIDX_LAST\~ {\b LUA_RIDX_GLOBALS}}}
\par
{\bkmkstart AAAAAAADMY}
{\bkmkend AAAAAAADMY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 86 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_RIDX_MAINTHREAD\:lua.h}
{\xe \v lua.h\:LUA_RIDX_MAINTHREAD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_RIDX_MAINTHREAD\~ 1}}
\par
{\bkmkstart AAAAAAADMZ}
{\bkmkend AAAAAAADMZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 84 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_setuservalue\:lua.h}
{\xe \v lua.h\:lua_setuservalue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lua_setuservalue( L,  idx)\~ {\b lua_setiuservalue}(L,idx,1)}}
\par
{\bkmkstart AAAAAAADNA}
{\bkmkend AAAAAAADNA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 413 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_SIGNATURE\:lua.h}
{\xe \v lua.h\:LUA_SIGNATURE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_SIGNATURE\~ "\\x1bLua"}}
\par
{\bkmkstart AAAAAAADNB}
{\bkmkend AAAAAAADNB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 33 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_TBOOLEAN\:lua.h}
{\xe \v lua.h\:LUA_TBOOLEAN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_TBOOLEAN\~ 1}}
\par
{\bkmkstart AAAAAAADNC}
{\bkmkend AAAAAAADNC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 66 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_TFUNCTION\:lua.h}
{\xe \v lua.h\:LUA_TFUNCTION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_TFUNCTION\~ 6}}
\par
{\bkmkstart AAAAAAADND}
{\bkmkend AAAAAAADND}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 71 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_TLIGHTUSERDATA\:lua.h}
{\xe \v lua.h\:LUA_TLIGHTUSERDATA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_TLIGHTUSERDATA\~ 2}}
\par
{\bkmkstart AAAAAAADNE}
{\bkmkend AAAAAAADNE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 67 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_TNIL\:lua.h}
{\xe \v lua.h\:LUA_TNIL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_TNIL\~ 0}}
\par
{\bkmkstart AAAAAAADNF}
{\bkmkend AAAAAAADNF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 65 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_TNONE\:lua.h}
{\xe \v lua.h\:LUA_TNONE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_TNONE\~ (-1)}}
\par
{\bkmkstart AAAAAAADNG}
{\bkmkend AAAAAAADNG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 63 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_TNUMBER\:lua.h}
{\xe \v lua.h\:LUA_TNUMBER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_TNUMBER\~ 3}}
\par
{\bkmkstart AAAAAAADNH}
{\bkmkend AAAAAAADNH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 68 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_tointeger\:lua.h}
{\xe \v lua.h\:lua_tointeger}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lua_tointeger( L,  i)\~ {\b lua_tointegerx}(L,(i),NULL)}}
\par
{\bkmkstart AAAAAAADNI}
{\bkmkend AAAAAAADNI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 362 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_tonumber\:lua.h}
{\xe \v lua.h\:lua_tonumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lua_tonumber( L,  i)\~ {\b lua_tonumberx}(L,(i),NULL)}}
\par
{\bkmkstart AAAAAAADNJ}
{\bkmkend AAAAAAADNJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 361 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_tostring\:lua.h}
{\xe \v lua.h\:lua_tostring}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lua_tostring( L,  i)\~ {\b lua_tolstring}(L, (i), NULL)}}
\par
{\bkmkstart AAAAAAADNK}
{\bkmkend AAAAAAADNK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 386 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_TSTRING\:lua.h}
{\xe \v lua.h\:LUA_TSTRING}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_TSTRING\~ 4}}
\par
{\bkmkstart AAAAAAADNL}
{\bkmkend AAAAAAADNL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 69 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_TTABLE\:lua.h}
{\xe \v lua.h\:LUA_TTABLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_TTABLE\~ 5}}
\par
{\bkmkstart AAAAAAADNM}
{\bkmkend AAAAAAADNM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 70 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_TTHREAD\:lua.h}
{\xe \v lua.h\:LUA_TTHREAD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_TTHREAD\~ 8}}
\par
{\bkmkstart AAAAAAADNN}
{\bkmkend AAAAAAADNN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 73 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_TUSERDATA\:lua.h}
{\xe \v lua.h\:LUA_TUSERDATA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_TUSERDATA\~ 7}}
\par
{\bkmkstart AAAAAAADNO}
{\bkmkend AAAAAAADNO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 72 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_upvalueindex\:lua.h}
{\xe \v lua.h\:lua_upvalueindex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lua_upvalueindex( i)\~ ({\b LUA_REGISTRYINDEX} - (i))}}
\par
{\bkmkstart AAAAAAADNP}
{\bkmkend AAAAAAADNP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 45 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_VERSION\:lua.h}
{\xe \v lua.h\:LUA_VERSION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_VERSION\~ "Lua " LUA_VERSION_MAJOR "." {\b LUA_VERSION_MINOR}}}
\par
{\bkmkstart AAAAAAADNQ}
{\bkmkend AAAAAAADNQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 26 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_VERSION_MAJOR\:lua.h}
{\xe \v lua.h\:LUA_VERSION_MAJOR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_VERSION_MAJOR\~ "5"}}
\par
{\bkmkstart AAAAAAADNR}
{\bkmkend AAAAAAADNR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 19 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_VERSION_MINOR\:lua.h}
{\xe \v lua.h\:LUA_VERSION_MINOR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_VERSION_MINOR\~ "4"}}
\par
{\bkmkstart AAAAAAADNS}
{\bkmkend AAAAAAADNS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 20 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_VERSION_NUM\:lua.h}
{\xe \v lua.h\:LUA_VERSION_NUM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_VERSION_NUM\~ 504}}
\par
{\bkmkstart AAAAAAADNT}
{\bkmkend AAAAAAADNT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 23 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_VERSION_RELEASE\:lua.h}
{\xe \v lua.h\:LUA_VERSION_RELEASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_VERSION_RELEASE\~ "0"}}
\par
{\bkmkstart AAAAAAADNU}
{\bkmkend AAAAAAADNU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 21 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_VERSION_RELEASE_NUM\:lua.h}
{\xe \v lua.h\:LUA_VERSION_RELEASE_NUM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_VERSION_RELEASE_NUM\~ ({\b LUA_VERSION_NUM} * 100 + 0)}}
\par
{\bkmkstart AAAAAAADNV}
{\bkmkend AAAAAAADNV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 24 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_YIELD\:lua.h}
{\xe \v lua.h\:LUA_YIELD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_YIELD\~ 1}}
\par
{\bkmkstart AAAAAAADNW}
{\bkmkend AAAAAAADNW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 50 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_yield\:lua.h}
{\xe \v lua.h\:lua_yield}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lua_yield( L,  n)\~ {\b lua_yieldk}(L, (n), 0, NULL)}}
\par
{\bkmkstart AAAAAAADNX}
{\bkmkend AAAAAAADNX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 305 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'D0\'CD\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v lua_Alloc\:lua.h}
{\xe \v lua.h\:lua_Alloc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef void*(* lua_Alloc) (void *ud, void *ptr, size_t osize, size_t nsize)}}
\par
{\bkmkstart AAAAAAADNY}
{\bkmkend AAAAAAADNY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 125 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_CFunction\:lua.h}
{\xe \v lua.h\:lua_CFunction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef int(* lua_CFunction) ({\b lua_State} *L)}}
\par
{\bkmkstart AAAAAAADNZ}
{\bkmkend AAAAAAADNZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 106 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_Debug\:lua.h}
{\xe \v lua.h\:lua_Debug}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b lua_Debug} {\b lua_Debug}}}
\par
{\bkmkstart AAAAAAADOA}
{\bkmkend AAAAAAADOA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 350 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_Hook\:lua.h}
{\xe \v lua.h\:lua_Hook}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef void(* lua_Hook) ({\b lua_State} *L, {\b lua_Debug} *ar)}}
\par
{\bkmkstart AAAAAAADOB}
{\bkmkend AAAAAAADOB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 448 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_Integer\:lua.h}
{\xe \v lua.h\:lua_Integer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef LUA_INTEGER {\b lua_Integer}}}
\par
{\bkmkstart AAAAAAADOC}
{\bkmkend AAAAAAADOC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 94 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_KContext\:lua.h}
{\xe \v lua.h\:lua_KContext}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef {\b LUA_KCONTEXT} {\b lua_KContext}}}
\par
{\bkmkstart AAAAAAADOD}
{\bkmkend AAAAAAADOD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 100 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_KFunction\:lua.h}
{\xe \v lua.h\:lua_KFunction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef int(* lua_KFunction) ({\b lua_State} *L, int status, {\b lua_KContext} ctx)}}
\par
{\bkmkstart AAAAAAADOE}
{\bkmkend AAAAAAADOE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 111 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_Number\:lua.h}
{\xe \v lua.h\:lua_Number}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef {\b LUA_NUMBER} {\b lua_Number}}}
\par
{\bkmkstart AAAAAAADOF}
{\bkmkend AAAAAAADOF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 90 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_Reader\:lua.h}
{\xe \v lua.h\:lua_Reader}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef const char*(* lua_Reader) ({\b lua_State} *L, void *ud, size_t *sz)}}
\par
{\bkmkstart AAAAAAADOG}
{\bkmkend AAAAAAADOG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 117 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_State\:lua.h}
{\xe \v lua.h\:lua_State}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b lua_State} {\b lua_State}}}
\par
{\bkmkstart AAAAAAADOH}
{\bkmkend AAAAAAADOH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 1 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_Unsigned\:lua.h}
{\xe \v lua.h\:lua_Unsigned}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef {\b LUA_UNSIGNED} {\b lua_Unsigned}}}
\par
{\bkmkstart AAAAAAADOI}
{\bkmkend AAAAAAADOI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 97 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_WarnFunction\:lua.h}
{\xe \v lua.h\:lua_WarnFunction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef void(* lua_WarnFunction) (void *ud, const char *msg, int tocont)}}
\par
{\bkmkstart AAAAAAADOJ}
{\bkmkend AAAAAAADOJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 131 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_Writer\:lua.h}
{\xe \v lua.h\:lua_Writer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef int(* lua_Writer) ({\b lua_State} *L, const void *p, size_t sz, void *ud)}}
\par
{\bkmkstart AAAAAAADOK}
{\bkmkend AAAAAAADOK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lua.h \'B5\'DA 119 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v lua_absindex\:lua.h}
{\xe \v lua.h\:lua_absindex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int() lua_absindex ({\b lua_State} *  {\i L}, int  {\i idx})}}
\par
{\bkmkstart AAAAAAADOL}
{\bkmkend AAAAAAADOL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 160 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_arith\:lua.h}
{\xe \v lua.h\:lua_arith}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} void() lua_arith ({\b lua_State} *  {\i L}, int  {\i op})}}
\par
{\bkmkstart AAAAAAADOM}
{\bkmkend AAAAAAADOM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 308 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_atpanic\:lua.h}
{\xe \v lua.h\:lua_atpanic}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} {\b lua_CFunction}() lua_atpanic ({\b lua_State} *  {\i L}, {\b lua_CFunction}  {\i panicf})}}
\par
{\bkmkstart AAAAAAADON}
{\bkmkend AAAAAAADON}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 135 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_callk\:lua.h}
{\xe \v lua.h\:lua_callk}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} void() lua_callk ({\b lua_State} *  {\i L}, int  {\i nargs}, int  {\i nresults}, {\b lua_KContext}  {\i ctx}, {\b lua_KFunction}  {\i k})}}
\par
{\bkmkstart AAAAAAADOO}
{\bkmkend AAAAAAADOO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 963 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_checkstack\:lua.h}
{\xe \v lua.h\:lua_checkstack}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int() lua_checkstack ({\b lua_State} *  {\i L}, int  {\i n})}}
\par
{\bkmkstart AAAAAAADOP}
{\bkmkend AAAAAAADOP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 98 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_close\:lua.h}
{\xe \v lua.h\:lua_close}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} void() lua_close ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAADOQ}
{\bkmkend AAAAAAADOQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.c \'B5\'DA 438 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_compare\:lua.h}
{\xe \v lua.h\:lua_compare}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int() lua_compare ({\b lua_State} *  {\i L}, int  {\i idx1}, int  {\i idx2}, int  {\i op})}}
\par
{\bkmkstart AAAAAAADOR}
{\bkmkend AAAAAAADOR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 324 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_concat\:lua.h}
{\xe \v lua.h\:lua_concat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} void() lua_concat ({\b lua_State} *  {\i L}, int  {\i n})}}
\par
{\bkmkstart AAAAAAADOS}
{\bkmkend AAAAAAADOS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 1238 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_copy\:lua.h}
{\xe \v lua.h\:lua_copy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} void() lua_copy ({\b lua_State} *  {\i L}, int  {\i fromidx}, int  {\i toidx})}}
\par
{\bkmkstart AAAAAAADOT}
{\bkmkend AAAAAAADOT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 228 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_createtable\:lua.h}
{\xe \v lua.h\:lua_createtable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} void() lua_createtable ({\b lua_State} *  {\i L}, int  {\i narr}, int  {\i nrec})}}
\par
{\bkmkstart AAAAAAADOU}
{\bkmkend AAAAAAADOU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 721 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_dump\:lua.h}
{\xe \v lua.h\:lua_dump}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int() lua_dump ({\b lua_State} *  {\i L}, {\b lua_Writer}  {\i writer}, void *  {\i data}, int  {\i strip})}}
\par
{\bkmkstart AAAAAAADOV}
{\bkmkend AAAAAAADOV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 1070 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_error\:lua.h}
{\xe \v lua.h\:lua_error}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int() lua_error ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAADOW}
{\bkmkend AAAAAAADOW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 1196 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_gc\:lua.h}
{\xe \v lua.h\:lua_gc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int() lua_gc ({\b lua_State} *  {\i L}, int  {\i what},   {\i ...})}}
\par
{\bkmkstart AAAAAAADOX}
{\bkmkend AAAAAAADOX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 1093 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_getallocf\:lua.h}
{\xe \v lua.h\:lua_getallocf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} {\b lua_Alloc}() lua_getallocf ({\b lua_State} *  {\i L}, void **  {\i ud})}}
\par
{\bkmkstart AAAAAAADOY}
{\bkmkend AAAAAAADOY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 1264 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_getfield\:lua.h}
{\xe \v lua.h\:lua_getfield}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int() lua_getfield ({\b lua_State} *  {\i L}, int  {\i idx}, const char *  {\i k})}}
\par
{\bkmkstart AAAAAAADOZ}
{\bkmkend AAAAAAADOZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 648 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_getglobal\:lua.h}
{\xe \v lua.h\:lua_getglobal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int() lua_getglobal ({\b lua_State} *  {\i L}, const char *  {\i name})}}
\par
{\bkmkstart AAAAAAADPA}
{\bkmkend AAAAAAADPA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 626 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_gethook\:lua.h}
{\xe \v lua.h\:lua_gethook}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} {\b lua_Hook}() lua_gethook ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAADPB}
{\bkmkend AAAAAAADPB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldebug.c \'B5\'DA 153 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_gethookcount\:lua.h}
{\xe \v lua.h\:lua_gethookcount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int() lua_gethookcount ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAADPC}
{\bkmkend AAAAAAADPC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldebug.c \'B5\'DA 163 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_gethookmask\:lua.h}
{\xe \v lua.h\:lua_gethookmask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int() lua_gethookmask ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAADPD}
{\bkmkend AAAAAAADPD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldebug.c \'B5\'DA 158 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_geti\:lua.h}
{\xe \v lua.h\:lua_geti}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int() lua_geti ({\b lua_State} *  {\i L}, int  {\i idx}, {\b lua_Integer}  {\i n})}}
\par
{\bkmkstart AAAAAAADPE}
{\bkmkend AAAAAAADPE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 654 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_getinfo\:lua.h}
{\xe \v lua.h\:lua_getinfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int() lua_getinfo ({\b lua_State} *  {\i L}, const char *  {\i what}, {\b lua_Debug} *  {\i ar})}}
\par
{\bkmkstart AAAAAAADPF}
{\bkmkend AAAAAAADPF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldebug.c \'B5\'DA 390 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_getiuservalue\:lua.h}
{\xe \v lua.h\:lua_getiuservalue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int() lua_getiuservalue ({\b lua_State} *  {\i L}, int  {\i idx}, int  {\i n})}}
\par
{\bkmkstart AAAAAAADPG}
{\bkmkend AAAAAAADPG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 761 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_getlocal\:lua.h}
{\xe \v lua.h\:lua_getlocal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} const char*() lua_getlocal ({\b lua_State} *  {\i L}, const {\b lua_Debug} *  {\i ar}, int  {\i n})}}
\par
{\bkmkstart AAAAAAADPH}
{\bkmkend AAAAAAADPH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldebug.c \'B5\'DA 228 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_getmetatable\:lua.h}
{\xe \v lua.h\:lua_getmetatable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int() lua_getmetatable ({\b lua_State} *  {\i L}, int  {\i objindex})}}
\par
{\bkmkstart AAAAAAADPI}
{\bkmkend AAAAAAADPI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 734 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_getstack\:lua.h}
{\xe \v lua.h\:lua_getstack}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int() lua_getstack ({\b lua_State} *  {\i L}, int  {\i level}, {\b lua_Debug} *  {\i ar})}}
\par
{\bkmkstart AAAAAAADPJ}
{\bkmkend AAAAAAADPJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldebug.c \'B5\'DA 168 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_gettable\:lua.h}
{\xe \v lua.h\:lua_gettable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int() lua_gettable ({\b lua_State} *  {\i L}, int  {\i idx})}}
\par
{\bkmkstart AAAAAAADPK}
{\bkmkend AAAAAAADPK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 633 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_gettop\:lua.h}
{\xe \v lua.h\:lua_gettop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int() lua_gettop ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAADPL}
{\bkmkend AAAAAAADPL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 167 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_getupvalue\:lua.h}
{\xe \v lua.h\:lua_getupvalue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} const char*() lua_getupvalue ({\b lua_State} *  {\i L}, int  {\i funcindex}, int  {\i n})}}
\par
{\bkmkstart AAAAAAADPM}
{\bkmkend AAAAAAADPM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 1339 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_iscfunction\:lua.h}
{\xe \v lua.h\:lua_iscfunction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int() lua_iscfunction ({\b lua_State} *  {\i L}, int  {\i idx})}}
\par
{\bkmkstart AAAAAAADPN}
{\bkmkend AAAAAAADPN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 270 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_isinteger\:lua.h}
{\xe \v lua.h\:lua_isinteger}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int() lua_isinteger ({\b lua_State} *  {\i L}, int  {\i idx})}}
\par
{\bkmkstart AAAAAAADPO}
{\bkmkend AAAAAAADPO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 276 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_isnumber\:lua.h}
{\xe \v lua.h\:lua_isnumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int() lua_isnumber ({\b lua_State} *  {\i L}, int  {\i idx})}}
\par
{\bkmkstart AAAAAAADPP}
{\bkmkend AAAAAAADPP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 282 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_isstring\:lua.h}
{\xe \v lua.h\:lua_isstring}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int() lua_isstring ({\b lua_State} *  {\i L}, int  {\i idx})}}
\par
{\bkmkstart AAAAAAADPQ}
{\bkmkend AAAAAAADPQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 289 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_isuserdata\:lua.h}
{\xe \v lua.h\:lua_isuserdata}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int() lua_isuserdata ({\b lua_State} *  {\i L}, int  {\i idx})}}
\par
{\bkmkstart AAAAAAADPR}
{\bkmkend AAAAAAADPR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 295 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_isyieldable\:lua.h}
{\xe \v lua.h\:lua_isyieldable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int() lua_isyieldable ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAADPS}
{\bkmkend AAAAAAADPS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldo.c \'B5\'DA 702 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_len\:lua.h}
{\xe \v lua.h\:lua_len}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} void() lua_len ({\b lua_State} *  {\i L}, int  {\i idx})}}
\par
{\bkmkstart AAAAAAADPT}
{\bkmkend AAAAAAADPT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 1254 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_load\:lua.h}
{\xe \v lua.h\:lua_load}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int() lua_load ({\b lua_State} *  {\i L}, {\b lua_Reader}  {\i reader}, void *  {\i dt}, const char *  {\i chunkname}, const char *  {\i mode})}}
\par
{\bkmkstart AAAAAAADPU}
{\bkmkend AAAAAAADPU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 1046 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_newstate\:lua.h}
{\xe \v lua.h\:lua_newstate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} {\b lua_State}*() lua_newstate ({\b lua_Alloc}  {\i f}, void *  {\i ud})}}
\par
{\bkmkstart AAAAAAADPV}
{\bkmkend AAAAAAADPV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.c \'B5\'DA 383 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_newthread\:lua.h}
{\xe \v lua.h\:lua_newthread}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} {\b lua_State}*() lua_newthread ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAADPW}
{\bkmkend AAAAAAADPW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.c \'B5\'DA 320 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_newuserdatauv\:lua.h}
{\xe \v lua.h\:lua_newuserdatauv}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} void*() lua_newuserdatauv ({\b lua_State} *  {\i L}, size_t  {\i sz}, int  {\i nuvalue})}}
\par
{\bkmkstart AAAAAAADPX}
{\bkmkend AAAAAAADPX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 1298 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_next\:lua.h}
{\xe \v lua.h\:lua_next}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int() lua_next ({\b lua_State} *  {\i L}, int  {\i idx})}}
\par
{\bkmkstart AAAAAAADPY}
{\bkmkend AAAAAAADPY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 1205 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_pcallk\:lua.h}
{\xe \v lua.h\:lua_pcallk}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int() lua_pcallk ({\b lua_State} *  {\i L}, int  {\i nargs}, int  {\i nresults}, int  {\i errfunc}, {\b lua_KContext}  {\i ctx}, {\b lua_KFunction}  {\i k})}}
\par
{\bkmkstart AAAAAAADPZ}
{\bkmkend AAAAAAADPZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 1002 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_pushboolean\:lua.h}
{\xe \v lua.h\:lua_pushboolean}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} void() lua_pushboolean ({\b lua_State} *  {\i L}, int  {\i b})}}
\par
{\bkmkstart AAAAAAADQA}
{\bkmkend AAAAAAADQA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 575 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_pushcclosure\:lua.h}
{\xe \v lua.h\:lua_pushcclosure}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} void() lua_pushcclosure ({\b lua_State} *  {\i L}, {\b lua_CFunction}  {\i fn}, int  {\i n})}}
\par
{\bkmkstart AAAAAAADQB}
{\bkmkend AAAAAAADQB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 550 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_pushfstring\:lua.h}
{\xe \v lua.h\:lua_pushfstring}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} const char*() lua_pushfstring ({\b lua_State} *  {\i L}, const char *  {\i fmt},   {\i ...})}}
\par
{\bkmkstart AAAAAAADQC}
{\bkmkend AAAAAAADQC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 537 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_pushinteger\:lua.h}
{\xe \v lua.h\:lua_pushinteger}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} void() lua_pushinteger ({\b lua_State} *  {\i L}, {\b lua_Integer}  {\i n})}}
\par
{\bkmkstart AAAAAAADQD}
{\bkmkend AAAAAAADQD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 484 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_pushlightuserdata\:lua.h}
{\xe \v lua.h\:lua_pushlightuserdata}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} void() lua_pushlightuserdata ({\b lua_State} *  {\i L}, void *  {\i p})}}
\par
{\bkmkstart AAAAAAADQE}
{\bkmkend AAAAAAADQE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 586 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_pushlstring\:lua.h}
{\xe \v lua.h\:lua_pushlstring}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} const char*() lua_pushlstring ({\b lua_State} *  {\i L}, const char *  {\i s}, size_t  {\i len})}}
\par
{\bkmkstart AAAAAAADQF}
{\bkmkend AAAAAAADQF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 497 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_pushnil\:lua.h}
{\xe \v lua.h\:lua_pushnil}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} void() lua_pushnil ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAADQG}
{\bkmkend AAAAAAADQG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 468 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_pushnumber\:lua.h}
{\xe \v lua.h\:lua_pushnumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} void() lua_pushnumber ({\b lua_State} *  {\i L}, {\b lua_Number}  {\i n})}}
\par
{\bkmkstart AAAAAAADQH}
{\bkmkend AAAAAAADQH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 476 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_pushstring\:lua.h}
{\xe \v lua.h\:lua_pushstring}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} const char*() lua_pushstring ({\b lua_State} *  {\i L}, const char *  {\i s})}}
\par
{\bkmkstart AAAAAAADQI}
{\bkmkend AAAAAAADQI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 509 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_pushthread\:lua.h}
{\xe \v lua.h\:lua_pushthread}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int() lua_pushthread ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAADQJ}
{\bkmkend AAAAAAADQJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 594 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_pushvalue\:lua.h}
{\xe \v lua.h\:lua_pushvalue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} void() lua_pushvalue ({\b lua_State} *  {\i L}, int  {\i idx})}}
\par
{\bkmkstart AAAAAAADQK}
{\bkmkend AAAAAAADQK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 243 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_pushvfstring\:lua.h}
{\xe \v lua.h\:lua_pushvfstring}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} const char*() lua_pushvfstring ({\b lua_State} *  {\i L}, const char *  {\i fmt}, va_list  {\i argp})}}
\par
{\bkmkstart AAAAAAADQL}
{\bkmkend AAAAAAADQL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 526 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_rawequal\:lua.h}
{\xe \v lua.h\:lua_rawequal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int() lua_rawequal ({\b lua_State} *  {\i L}, int  {\i idx1}, int  {\i idx2})}}
\par
{\bkmkstart AAAAAAADQM}
{\bkmkend AAAAAAADQM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 301 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_rawget\:lua.h}
{\xe \v lua.h\:lua_rawget}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int() lua_rawget ({\b lua_State} *  {\i L}, int  {\i idx})}}
\par
{\bkmkstart AAAAAAADQN}
{\bkmkend AAAAAAADQN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 691 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_rawgeti\:lua.h}
{\xe \v lua.h\:lua_rawgeti}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int() lua_rawgeti ({\b lua_State} *  {\i L}, int  {\i idx}, {\b lua_Integer}  {\i n})}}
\par
{\bkmkstart AAAAAAADQO}
{\bkmkend AAAAAAADQO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 703 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_rawgetp\:lua.h}
{\xe \v lua.h\:lua_rawgetp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int() lua_rawgetp ({\b lua_State} *  {\i L}, int  {\i idx}, const void *  {\i p})}}
\par
{\bkmkstart AAAAAAADQP}
{\bkmkend AAAAAAADQP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 711 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_rawlen\:lua.h}
{\xe \v lua.h\:lua_rawlen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} {\b lua_Unsigned}() lua_rawlen ({\b lua_State} *  {\i L}, int  {\i idx})}}
\par
{\bkmkstart AAAAAAADQQ}
{\bkmkend AAAAAAADQQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 397 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_rawset\:lua.h}
{\xe \v lua.h\:lua_rawset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} void() lua_rawset ({\b lua_State} *  {\i L}, int  {\i idx})}}
\par
{\bkmkstart AAAAAAADQR}
{\bkmkend AAAAAAADQR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 869 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_rawseti\:lua.h}
{\xe \v lua.h\:lua_rawseti}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} void() lua_rawseti ({\b lua_State} *  {\i L}, int  {\i idx}, {\b lua_Integer}  {\i n})}}
\par
{\bkmkstart AAAAAAADQS}
{\bkmkend AAAAAAADQS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 881 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_rawsetp\:lua.h}
{\xe \v lua.h\:lua_rawsetp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} void() lua_rawsetp ({\b lua_State} *  {\i L}, int  {\i idx}, const void *  {\i p})}}
\par
{\bkmkstart AAAAAAADQT}
{\bkmkend AAAAAAADQT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 874 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_resetthread\:lua.h}
{\xe \v lua.h\:lua_resetthread}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int() lua_resetthread ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAADQU}
{\bkmkend AAAAAAADQU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.c \'B5\'DA 361 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_resume\:lua.h}
{\xe \v lua.h\:lua_resume}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int() lua_resume ({\b lua_State} *  {\i L}, {\b lua_State} *  {\i from}, int  {\i narg}, int *  {\i nres})}}
\par
{\bkmkstart AAAAAAADQV}
{\bkmkend AAAAAAADQV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldo.c \'B5\'DA 662 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_rotate\:lua.h}
{\xe \v lua.h\:lua_rotate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} void() lua_rotate ({\b lua_State} *  {\i L}, int  {\i idx}, int  {\i n})}}
\par
{\bkmkstart AAAAAAADQW}
{\bkmkend AAAAAAADQW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 214 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_setallocf\:lua.h}
{\xe \v lua.h\:lua_setallocf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} void() lua_setallocf ({\b lua_State} *  {\i L}, {\b lua_Alloc}  {\i f}, void *  {\i ud})}}
\par
{\bkmkstart AAAAAAADQX}
{\bkmkend AAAAAAADQX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 1274 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_setcstacklimit\:lua.h}
{\xe \v lua.h\:lua_setcstacklimit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int() lua_setcstacklimit ({\b lua_State} *  {\i L}, unsigned int  {\i limit})}}
\par
{\bkmkstart AAAAAAADQY}
{\bkmkend AAAAAAADQY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstate.c \'B5\'DA 99 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_setfield\:lua.h}
{\xe \v lua.h\:lua_setfield}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} void() lua_setfield ({\b lua_State} *  {\i L}, int  {\i idx}, const char *  {\i k})}}
\par
{\bkmkstart AAAAAAADQZ}
{\bkmkend AAAAAAADQZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 829 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_setglobal\:lua.h}
{\xe \v lua.h\:lua_setglobal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} void() lua_setglobal ({\b lua_State} *  {\i L}, const char *  {\i name})}}
\par
{\bkmkstart AAAAAAADRA}
{\bkmkend AAAAAAADRA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 806 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_sethook\:lua.h}
{\xe \v lua.h\:lua_sethook}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} void() lua_sethook ({\b lua_State} *  {\i L}, {\b lua_Hook}  {\i func}, int  {\i mask}, int  {\i count})}}
\par
{\bkmkstart AAAAAAADRB}
{\bkmkend AAAAAAADRB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldebug.c \'B5\'DA 137 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_seti\:lua.h}
{\xe \v lua.h\:lua_seti}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} void() lua_seti ({\b lua_State} *  {\i L}, int  {\i idx}, {\b lua_Integer}  {\i n})}}
\par
{\bkmkstart AAAAAAADRC}
{\bkmkend AAAAAAADRC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 835 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_setiuservalue\:lua.h}
{\xe \v lua.h\:lua_setiuservalue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int() lua_setiuservalue ({\b lua_State} *  {\i L}, int  {\i idx}, int  {\i n})}}
\par
{\bkmkstart AAAAAAADRD}
{\bkmkend AAAAAAADRD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 933 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_setlocal\:lua.h}
{\xe \v lua.h\:lua_setlocal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} const char*() lua_setlocal ({\b lua_State} *  {\i L}, const {\b lua_Debug} *  {\i ar}, int  {\i n})}}
\par
{\bkmkstart AAAAAAADRE}
{\bkmkend AAAAAAADRE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldebug.c \'B5\'DA 250 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_setmetatable\:lua.h}
{\xe \v lua.h\:lua_setmetatable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int() lua_setmetatable ({\b lua_State} *  {\i L}, int  {\i objindex})}}
\par
{\bkmkstart AAAAAAADRF}
{\bkmkend AAAAAAADRF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 893 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_settable\:lua.h}
{\xe \v lua.h\:lua_settable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} void() lua_settable ({\b lua_State} *  {\i L}, int  {\i idx})}}
\par
{\bkmkstart AAAAAAADRG}
{\bkmkend AAAAAAADRG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 813 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_settop\:lua.h}
{\xe \v lua.h\:lua_settop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} void() lua_settop ({\b lua_State} *  {\i L}, int  {\i idx})}}
\par
{\bkmkstart AAAAAAADRH}
{\bkmkend AAAAAAADRH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 172 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_setupvalue\:lua.h}
{\xe \v lua.h\:lua_setupvalue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} const char*() lua_setupvalue ({\b lua_State} *  {\i L}, int  {\i funcindex}, int  {\i n})}}
\par
{\bkmkstart AAAAAAADRI}
{\bkmkend AAAAAAADRI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 1353 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_setwarnf\:lua.h}
{\xe \v lua.h\:lua_setwarnf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} void() lua_setwarnf ({\b lua_State} *  {\i L}, {\b lua_WarnFunction}  {\i f}, void *  {\i ud})}}
\par
{\bkmkstart AAAAAAADRJ}
{\bkmkend AAAAAAADRJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 1282 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_status\:lua.h}
{\xe \v lua.h\:lua_status}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int() lua_status ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAADRK}
{\bkmkend AAAAAAADRK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 1085 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_stringtonumber\:lua.h}
{\xe \v lua.h\:lua_stringtonumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} size_t() lua_stringtonumber ({\b lua_State} *  {\i L}, const char *  {\i s})}}
\par
{\bkmkstart AAAAAAADRL}
{\bkmkend AAAAAAADRL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 344 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_toboolean\:lua.h}
{\xe \v lua.h\:lua_toboolean}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int() lua_toboolean ({\b lua_State} *  {\i L}, int  {\i idx})}}
\par
{\bkmkstart AAAAAAADRM}
{\bkmkend AAAAAAADRM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 372 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_tocfunction\:lua.h}
{\xe \v lua.h\:lua_tocfunction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} {\b lua_CFunction}() lua_tocfunction ({\b lua_State} *  {\i L}, int  {\i idx})}}
\par
{\bkmkstart AAAAAAADRN}
{\bkmkend AAAAAAADRN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 409 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_toclose\:lua.h}
{\xe \v lua.h\:lua_toclose}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} void() lua_toclose ({\b lua_State} *  {\i L}, int  {\i idx})}}
\par
{\bkmkstart AAAAAAADRO}
{\bkmkend AAAAAAADRO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 1222 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_tointegerx\:lua.h}
{\xe \v lua.h\:lua_tointegerx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} {\b lua_Integer}() lua_tointegerx ({\b lua_State} *  {\i L}, int  {\i idx}, int *  {\i isnum})}}
\par
{\bkmkstart AAAAAAADRP}
{\bkmkend AAAAAAADRP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 362 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_tolstring\:lua.h}
{\xe \v lua.h\:lua_tolstring}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} const char*() lua_tolstring ({\b lua_State} *  {\i L}, int  {\i idx}, size_t *  {\i len})}}
\par
{\bkmkstart AAAAAAADRQ}
{\bkmkend AAAAAAADRQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 378 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_tonumberx\:lua.h}
{\xe \v lua.h\:lua_tonumberx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} {\b lua_Number}() lua_tonumberx ({\b lua_State} *  {\i L}, int  {\i idx}, int *  {\i isnum})}}
\par
{\bkmkstart AAAAAAADRR}
{\bkmkend AAAAAAADRR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 352 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_topointer\:lua.h}
{\xe \v lua.h\:lua_topointer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} const void*() lua_topointer ({\b lua_State} *  {\i L}, int  {\i idx})}}
\par
{\bkmkstart AAAAAAADRS}
{\bkmkend AAAAAAADRS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 446 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_tothread\:lua.h}
{\xe \v lua.h\:lua_tothread}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} {\b lua_State}*() lua_tothread ({\b lua_State} *  {\i L}, int  {\i idx})}}
\par
{\bkmkstart AAAAAAADRT}
{\bkmkend AAAAAAADRT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 433 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_touserdata\:lua.h}
{\xe \v lua.h\:lua_touserdata}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} void*() lua_touserdata ({\b lua_State} *  {\i L}, int  {\i idx})}}
\par
{\bkmkstart AAAAAAADRU}
{\bkmkend AAAAAAADRU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 427 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_type\:lua.h}
{\xe \v lua.h\:lua_type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int() lua_type ({\b lua_State} *  {\i L}, int  {\i idx})}}
\par
{\bkmkstart AAAAAAADRV}
{\bkmkend AAAAAAADRV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 257 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_typename\:lua.h}
{\xe \v lua.h\:lua_typename}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} const char*() lua_typename ({\b lua_State} *  {\i L}, int  {\i tp})}}
\par
{\bkmkstart AAAAAAADRW}
{\bkmkend AAAAAAADRW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 263 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_upvalueid\:lua.h}
{\xe \v lua.h\:lua_upvalueid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} void*() lua_upvalueid ({\b lua_State} *  {\i L}, int  {\i fidx}, int  {\i n})}}
\par
{\bkmkstart AAAAAAADRX}
{\bkmkend AAAAAAADRX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 1383 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_upvaluejoin\:lua.h}
{\xe \v lua.h\:lua_upvaluejoin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} void() lua_upvaluejoin ({\b lua_State} *  {\i L}, int  {\i fidx1}, int  {\i n1}, int  {\i fidx2}, int  {\i n2})}}
\par
{\bkmkstart AAAAAAADRY}
{\bkmkend AAAAAAADRY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 1402 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_version\:lua.h}
{\xe \v lua.h\:lua_version}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} {\b lua_Number}() lua_version ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAADRZ}
{\bkmkend AAAAAAADRZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 145 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_warning\:lua.h}
{\xe \v lua.h\:lua_warning}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} void() lua_warning ({\b lua_State} *  {\i L}, const char *  {\i msg}, int  {\i tocont})}}
\par
{\bkmkstart AAAAAAADSA}
{\bkmkend AAAAAAADSA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 1290 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_xmove\:lua.h}
{\xe \v lua.h\:lua_xmove}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} void() lua_xmove ({\b lua_State} *  {\i from}, {\b lua_State} *  {\i to}, int  {\i n})}}
\par
{\bkmkstart AAAAAAADSB}
{\bkmkend AAAAAAADSB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 119 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_yieldk\:lua.h}
{\xe \v lua.h\:lua_yieldk}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUA_API} int() lua_yieldk ({\b lua_State} *  {\i L}, int  {\i nresults}, {\b lua_KContext}  {\i ctx}, {\b lua_KFunction}  {\i k})}}
\par
{\bkmkstart AAAAAAADSC}
{\bkmkend AAAAAAADSC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldo.c \'B5\'DA 707 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v lua_ident\:lua.h}
{\xe \v lua.h\:lua_ident}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char lua_ident[]{\f2 [extern]}}}
\par
{\bkmkstart AAAAAAADSD}
{\bkmkend AAAAAAADSD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lapi.c \'B5\'DA 35 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/gitworkspace/lua/src/lua.hpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v D:/gitworkspace/lua/src/lua.hpp}
{\xe \v D:/gitworkspace/lua/src/lua.hpp}
{\bkmkstart AAAAAAADSE}
{\bkmkend AAAAAAADSE}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "lua.h"}\par
{\f2 #include "lualib.h"}\par
{\f2 #include "lauxlib.h"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/gitworkspace/lua/src/luac.c \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v D:/gitworkspace/lua/src/luac.c}
{\xe \v D:/gitworkspace/lua/src/luac.c}
{\bkmkstart AAAAAAADSF}
{\bkmkend AAAAAAADSF}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "lprefix.h"}\par
{\f2 #include <ctype.h>}\par
{\f2 #include <errno.h>}\par
{\f2 #include <stdio.h>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <string.h>}\par
{\f2 #include "lua.h"}\par
{\f2 #include "lauxlib.h"}\par
{\f2 #include "ldebug.h"}\par
{\f2 #include "lobject.h"}\par
{\f2 #include "lopcodes.h"}\par
{\f2 #include "lopnames.h"}\par
{\f2 #include "lstate.h"}\par
{\f2 #include "lundump.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luac_c}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_CORE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luaU_print}\~ {\b PrintFunction}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PROGNAME}\~ "luac"		/* default program name */\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b OUTPUT}\~ {\b PROGNAME} ".out"	/* default {\b output} file */\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b IS}(s)\~ (strcmp(argv[i],s)==0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FUNCTION}\~ "(function()end)();"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b toproto}(L,  i)\~ {\b getproto}({\b s2v}(L->top+(i)))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b UPVALNAME}(x)\~ ((f->upvalues[x].name) ? {\b getstr}(f->upvalues[x].name) : "-")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b VOID}(p)\~ ((const void*)(p))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b eventname}(i)\~ ({\b getstr}({\b tmname}[i]))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b COMMENT}\~ "\\t; "\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EXTRAARG}\~ {\b GETARG_Ax}(code[pc+1])\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EXTRAARGC}\~ ({\b EXTRAARG}*({\b MAXARG_C}+1))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ISK}\~ (isk ? "k" : "")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SS}(x)\~ ((x==1)?"":"s")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b S}(x)\~ (int)(x),{\b SS}(x)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b PrintFunction} (const {\b Proto} *f, int full)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b fatal} (const char *message)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b cannot} (const char *what)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b usage} (const char *message)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b doargs} (int argc, char *argv[])\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const char * {\b reader} ({\b lua_State} *L, void *ud, size_t *size)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const {\b Proto} * {\b combine} ({\b lua_State} *L, int n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b writer} ({\b lua_State} *L, const void *p, size_t size, void *u)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b pmain} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char *argv[])\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b PrintString} (const {\b TString} *ts)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b PrintType} (const {\b Proto} *f, int i)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b PrintConstant} (const {\b Proto} *f, int i)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b PrintCode} (const {\b Proto} *f)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b PrintHeader} (const {\b Proto} *f)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b PrintDebug} (const {\b Proto} *f)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b listing} =0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b dumping} =1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b stripping} =0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static char {\b Output} [] =\{ {\b OUTPUT} \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const char * {\b output} ={\b Output}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const char * {\b progname} ={\b PROGNAME}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b TString} ** {\b tmname}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v COMMENT\:luac.c}
{\xe \v luac.c\:COMMENT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define COMMENT\~ "\\t; "}}
\par
{\bkmkstart AAAAAAADSG}
{\bkmkend AAAAAAADSG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luac.c \'B5\'DA 330 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v eventname\:luac.c}
{\xe \v luac.c\:eventname}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define eventname( i)\~ ({\b getstr}({\b tmname}[i]))}}
\par
{\bkmkstart AAAAAAADSH}
{\bkmkend AAAAAAADSH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luac.c \'B5\'DA 219 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v EXTRAARG\:luac.c}
{\xe \v luac.c\:EXTRAARG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EXTRAARG\~ {\b GETARG_Ax}(code[pc+1])}}
\par
{\bkmkstart AAAAAAADSI}
{\bkmkend AAAAAAADSI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luac.c \'B5\'DA 331 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v EXTRAARGC\:luac.c}
{\xe \v luac.c\:EXTRAARGC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EXTRAARGC\~ ({\b EXTRAARG}*({\b MAXARG_C}+1))}}
\par
{\bkmkstart AAAAAAADSJ}
{\bkmkend AAAAAAADSJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luac.c \'B5\'DA 332 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v FUNCTION\:luac.c}
{\xe \v luac.c\:FUNCTION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FUNCTION\~ "(function()end)();"}}
\par
{\bkmkstart AAAAAAADSK}
{\bkmkend AAAAAAADSK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luac.c \'B5\'DA 124 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v IS\:luac.c}
{\xe \v luac.c\:IS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define IS( s)\~ (strcmp(argv[i],s)==0)}}
\par
{\bkmkstart AAAAAAADSL}
{\bkmkend AAAAAAADSL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luac.c \'B5\'DA 74 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v ISK\:luac.c}
{\xe \v luac.c\:ISK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ISK\~ (isk ? "k" : "")}}
\par
{\bkmkstart AAAAAAADSM}
{\bkmkend AAAAAAADSM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luac.c \'B5\'DA 333 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_CORE\:luac.c}
{\xe \v luac.c\:LUA_CORE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_CORE}}
\par
{\bkmkstart AAAAAAADSN}
{\bkmkend AAAAAAADSN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luac.c \'B5\'DA 8 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luac_c\:luac.c}
{\xe \v luac.c\:luac_c}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luac_c}}
\par
{\bkmkstart AAAAAAADSO}
{\bkmkend AAAAAAADSO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luac.c \'B5\'DA 7 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaU_print\:luac.c}
{\xe \v luac.c\:luaU_print}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luaU_print\~ {\b PrintFunction}}}
\par
{\bkmkstart AAAAAAADSP}
{\bkmkend AAAAAAADSP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luac.c \'B5\'DA 29 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v OUTPUT\:luac.c}
{\xe \v luac.c\:OUTPUT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define OUTPUT\~ {\b PROGNAME} ".out"	/* default {\b output} file */}}
\par
{\bkmkstart AAAAAAADSQ}
{\bkmkend AAAAAAADSQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luac.c \'B5\'DA 32 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v PROGNAME\:luac.c}
{\xe \v luac.c\:PROGNAME}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PROGNAME\~ "luac"		/* default program name */}}
\par
{\bkmkstart AAAAAAADSR}
{\bkmkend AAAAAAADSR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luac.c \'B5\'DA 31 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v S\:luac.c}
{\xe \v luac.c\:S}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define S( x)\~ (int)(x),{\b SS}(x)}}
\par
{\bkmkstart AAAAAAADSS}
{\bkmkend AAAAAAADSS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luac.c \'B5\'DA 667 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v SS\:luac.c}
{\xe \v luac.c\:SS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SS( x)\~ ((x==1)?"":"s")}}
\par
{\bkmkstart AAAAAAADST}
{\bkmkend AAAAAAADST}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luac.c \'B5\'DA 666 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v toproto\:luac.c}
{\xe \v luac.c\:toproto}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define toproto( L,  i)\~ {\b getproto}({\b s2v}(L->top+(i)))}}
\par
{\bkmkstart AAAAAAADSU}
{\bkmkend AAAAAAADSU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luac.c \'B5\'DA 141 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v UPVALNAME\:luac.c}
{\xe \v luac.c\:UPVALNAME}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define UPVALNAME( x)\~ ((f->upvalues[x].name) ? {\b getstr}(f->upvalues[x].name) : "-")}}
\par
{\bkmkstart AAAAAAADSV}
{\bkmkend AAAAAAADSV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luac.c \'B5\'DA 217 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v VOID\:luac.c}
{\xe \v luac.c\:VOID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define VOID( p)\~ ((const void*)(p))}}
\par
{\bkmkstart AAAAAAADSW}
{\bkmkend AAAAAAADSW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luac.c \'B5\'DA 218 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v cannot\:luac.c}
{\xe \v luac.c\:cannot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void cannot (const char *  {\i what}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADSX}
{\bkmkend AAAAAAADSX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luac.c \'B5\'DA 48 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v combine\:luac.c}
{\xe \v luac.c\:combine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static const {\b Proto}* combine ({\b lua_State} *  {\i L}, int  {\i n}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADSY}
{\bkmkend AAAAAAADSY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luac.c \'B5\'DA 143 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v doargs\:luac.c}
{\xe \v luac.c\:doargs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int doargs (int  {\i argc}, char *  {\i argv}[]){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADSZ}
{\bkmkend AAAAAAADSZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luac.c \'B5\'DA 76 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v fatal\:luac.c}
{\xe \v luac.c\:fatal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void fatal (const char *  {\i message}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADTA}
{\bkmkend AAAAAAADTA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luac.c \'B5\'DA 42 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v main\:luac.c}
{\xe \v luac.c\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int  {\i argc}, char *  {\i argv}[])}}
\par
{\bkmkstart AAAAAAADTB}
{\bkmkend AAAAAAADTB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luac.c \'B5\'DA 197 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v pmain\:luac.c}
{\xe \v luac.c\:pmain}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int pmain ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADTC}
{\bkmkend AAAAAAADTC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luac.c \'B5\'DA 169 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v PrintCode\:luac.c}
{\xe \v luac.c\:PrintCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void PrintCode (const {\b Proto} *  {\i f}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADTD}
{\bkmkend AAAAAAADTD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luac.c \'B5\'DA 335 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v PrintConstant\:luac.c}
{\xe \v luac.c\:PrintConstant}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void PrintConstant (const {\b Proto} *  {\i f}, int  {\i i}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADTE}
{\bkmkend AAAAAAADTE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luac.c \'B5\'DA 295 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v PrintDebug\:luac.c}
{\xe \v luac.c\:PrintDebug}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void PrintDebug (const {\b Proto} *  {\i f}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADTF}
{\bkmkend AAAAAAADTF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luac.c \'B5\'DA 689 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v PrintFunction\:luac.c}
{\xe \v luac.c\:PrintFunction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void PrintFunction (const {\b Proto} *  {\i f}, int  {\i full}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADTG}
{\bkmkend AAAAAAADTG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luac.c \'B5\'DA 717 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v PrintHeader\:luac.c}
{\xe \v luac.c\:PrintHeader}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void PrintHeader (const {\b Proto} *  {\i f}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADTH}
{\bkmkend AAAAAAADTH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luac.c \'B5\'DA 669 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v PrintString\:luac.c}
{\xe \v luac.c\:PrintString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void PrintString (const {\b TString} *  {\i ts}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADTI}
{\bkmkend AAAAAAADTI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luac.c \'B5\'DA 221 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v PrintType\:luac.c}
{\xe \v luac.c\:PrintType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void PrintType (const {\b Proto} *  {\i f}, int  {\i i}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADTJ}
{\bkmkend AAAAAAADTJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luac.c \'B5\'DA 266 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v reader\:luac.c}
{\xe \v luac.c\:reader}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static const char* reader ({\b lua_State} *  {\i L}, void *  {\i ud}, size_t *  {\i size}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADTK}
{\bkmkend AAAAAAADTK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luac.c \'B5\'DA 126 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v usage\:luac.c}
{\xe \v luac.c\:usage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void usage (const char *  {\i message}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADTL}
{\bkmkend AAAAAAADTL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luac.c \'B5\'DA 54 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v writer\:luac.c}
{\xe \v luac.c\:writer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int writer ({\b lua_State} *  {\i L}, const void *  {\i p}, size_t  {\i size}, void *  {\i u}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADTM}
{\bkmkend AAAAAAADTM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luac.c \'B5\'DA 163 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v dumping\:luac.c}
{\xe \v luac.c\:dumping}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int dumping =1{\f2 [static]}}}
\par
{\bkmkstart AAAAAAADTN}
{\bkmkend AAAAAAADTN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luac.c \'B5\'DA 35 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v listing\:luac.c}
{\xe \v luac.c\:listing}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int listing =0{\f2 [static]}}}
\par
{\bkmkstart AAAAAAADTO}
{\bkmkend AAAAAAADTO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luac.c \'B5\'DA 34 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v Output\:luac.c}
{\xe \v luac.c\:Output}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char Output[] =\{ {\b OUTPUT} \}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAADTP}
{\bkmkend AAAAAAADTP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luac.c \'B5\'DA 37 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v output\:luac.c}
{\xe \v luac.c\:output}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* output ={\b Output}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAADTQ}
{\bkmkend AAAAAAADTQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luac.c \'B5\'DA 38 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v progname\:luac.c}
{\xe \v luac.c\:progname}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* progname ={\b PROGNAME}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAADTR}
{\bkmkend AAAAAAADTR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luac.c \'B5\'DA 39 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v stripping\:luac.c}
{\xe \v luac.c\:stripping}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int stripping =0{\f2 [static]}}}
\par
{\bkmkstart AAAAAAADTS}
{\bkmkend AAAAAAADTS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luac.c \'B5\'DA 36 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v tmname\:luac.c}
{\xe \v luac.c\:tmname}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TString}** tmname{\f2 [static]}}}
\par
{\bkmkstart AAAAAAADTT}
{\bkmkend AAAAAAADTT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luac.c \'B5\'DA 40 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/gitworkspace/lua/src/luaconf.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v D:/gitworkspace/lua/src/luaconf.h}
{\xe \v D:/gitworkspace/lua/src/luaconf.h}
{\bkmkstart AAAAAAADTU}
{\bkmkend AAAAAAADTU}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <limits.h>}\par
{\f2 #include <stddef.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUAI_MAXCSTACK}\~ 2000\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUAI_IS32INT}\~ ((UINT_MAX >> 30) >= 3)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_INT_INT}\~ 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_INT_LONG}\~ 2\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_INT_LONGLONG}\~ 3\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_FLOAT_FLOAT}\~ 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_FLOAT_DOUBLE}\~ 2\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_FLOAT_LONGDOUBLE}\~ 3\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_INT_TYPE}\~ {\b LUA_INT_LONGLONG}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_FLOAT_TYPE}\~ {\b LUA_FLOAT_DOUBLE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_PATH_SEP}\~ ";"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_PATH_MARK}\~ "?"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_EXEC_DIR}\~ "!"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_VDIR}\~ {\b LUA_VERSION_MAJOR} "." {\b LUA_VERSION_MINOR}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_ROOT}\~ "/usr/local/"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_LDIR}\~ {\b LUA_ROOT} "share/lua/" LUA_VDIR "/"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_CDIR}\~ {\b LUA_ROOT} "lib/lua/" LUA_VDIR "/"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_PATH_DEFAULT}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_CPATH_DEFAULT}\~ 		{\b LUA_CDIR}"?.so;" LUA_CDIR"loadall.so;" "./?.so"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_DIRSEP}\~ "/"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_API}\~ extern\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUALIB_API}\~ {\b LUA_API}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUAMOD_API}\~ {\b LUA_API}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUAI_FUNC}\~ extern\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUAI_DDEC}(dec)\~ {\b LUAI_FUNC} dec\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUAI_DDEF}\~ /* empty */\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b l_floor}(x)\~ ({\b l_mathop}(floor)(x))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lua_number2str}(s,  sz,  n)\~ 	{\b l_sprintf}((s), sz, {\b LUA_NUMBER_FMT}, ({\b LUAI_UACNUMBER})(n))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lua_numbertointeger}(n,  p)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_NUMBER}\~ double\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b l_floatatt}(n)\~ (DBL_##n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUAI_UACNUMBER}\~ double\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_NUMBER_FRMLEN}\~ ""\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_NUMBER_FMT}\~ "%.14g"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b l_mathop}(op)\~ op\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lua_str2number}(s,  p)\~ strtod((s), (p))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_INTEGER_FMT}\~ "%" LUA_INTEGER_FRMLEN "d"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUAI_UACINT}\~ LUA_INTEGER\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lua_integer2str}(s,  sz,  n)\~ 	{\b l_sprintf}((s), sz, {\b LUA_INTEGER_FMT}, ({\b LUAI_UACINT})(n))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_UNSIGNED}\~ unsigned {\b LUAI_UACINT}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_UNSIGNEDBITS}\~ (sizeof({\b LUA_UNSIGNED}) * CHAR_BIT)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b l_sprintf}(s,  sz,  f,  i)\~ snprintf(s,sz,f,i)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lua_strx2number}(s,  p)\~ {\b lua_str2number}(s,p)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lua_pointer2str}(buff,  sz,  p)\~ {\b l_sprintf}(buff,sz,"%p",p)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lua_number2strx}(L,  b,  sz,  f,  n)\~ 	((void)L, {\b l_sprintf}(b,sz,f,({\b LUAI_UACNUMBER})(n)))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_KCONTEXT}\~ ptrdiff_t\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lua_getlocaledecpoint}()\~ (localeconv()->decimal_point[0])\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUAI_MAXSTACK}\~ 15000\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_EXTRASPACE}\~ (sizeof(void *))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_IDSIZE}\~ 60\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUAL_BUFFERSIZE}\~ ((int)(16 * sizeof(void*) * sizeof({\b lua_Number})))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUAI_MAXALIGN}\~ {\b lua_Number} n; double u; void *s; {\b lua_Integer} i; long l\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v l_floatatt\:luaconf.h}
{\xe \v luaconf.h\:l_floatatt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define l_floatatt( n)\~ (DBL_##n)}}
\par
{\bkmkstart AAAAAAADTV}
{\bkmkend AAAAAAADTV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luaconf.h \'B5\'DA 471 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v l_floor\:luaconf.h}
{\xe \v luaconf.h\:l_floor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define l_floor( x)\~ ({\b l_mathop}(floor)(x))}}
\par
{\bkmkstart AAAAAAADTW}
{\bkmkend AAAAAAADTW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luaconf.h \'B5\'DA 414 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v l_mathop\:luaconf.h}
{\xe \v luaconf.h\:l_mathop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define l_mathop( op)\~ op}}
\par
{\bkmkstart AAAAAAADTX}
{\bkmkend AAAAAAADTX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luaconf.h \'B5\'DA 478 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v l_sprintf\:luaconf.h}
{\xe \v luaconf.h\:l_sprintf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define l_sprintf( s,  sz,  f,  i)\~ snprintf(s,sz,f,i)}}
\par
{\bkmkstart AAAAAAADTY}
{\bkmkend AAAAAAADTY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luaconf.h \'B5\'DA 600 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_API\:luaconf.h}
{\xe \v luaconf.h\:LUA_API}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_API\~ extern}}
\par
{\bkmkstart AAAAAAADTZ}
{\bkmkend AAAAAAADTZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luaconf.h \'B5\'DA 292 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_CDIR\:luaconf.h}
{\xe \v luaconf.h\:LUA_CDIR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_CDIR\~ {\b LUA_ROOT} "lib/lua/" LUA_VDIR "/"}}
\par
{\bkmkstart AAAAAAADUA}
{\bkmkend AAAAAAADUA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luaconf.h \'B5\'DA 232 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_CPATH_DEFAULT\:luaconf.h}
{\xe \v luaconf.h\:LUA_CPATH_DEFAULT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_CPATH_DEFAULT\~ 		{\b LUA_CDIR}"?.so;" LUA_CDIR"loadall.so;" "./?.so"}}
\par
{\bkmkstart AAAAAAADUB}
{\bkmkend AAAAAAADUB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luaconf.h \'B5\'DA 242 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_DIRSEP\:luaconf.h}
{\xe \v luaconf.h\:LUA_DIRSEP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_DIRSEP\~ "/"}}
\par
{\bkmkstart AAAAAAADUC}
{\bkmkend AAAAAAADUC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luaconf.h \'B5\'DA 259 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_EXEC_DIR\:luaconf.h}
{\xe \v luaconf.h\:LUA_EXEC_DIR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_EXEC_DIR\~ "!"}}
\par
{\bkmkstart AAAAAAADUD}
{\bkmkend AAAAAAADUD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luaconf.h \'B5\'DA 190 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_EXTRASPACE\:luaconf.h}
{\xe \v luaconf.h\:LUA_EXTRASPACE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_EXTRASPACE\~ (sizeof(void *))}}
\par
{\bkmkstart AAAAAAADUE}
{\bkmkend AAAAAAADUE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luaconf.h \'B5\'DA 735 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_FLOAT_DOUBLE\:luaconf.h}
{\xe \v luaconf.h\:LUA_FLOAT_DOUBLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_FLOAT_DOUBLE\~ 2}}
\par
{\bkmkstart AAAAAAADUF}
{\bkmkend AAAAAAADUF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luaconf.h \'B5\'DA 136 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_FLOAT_FLOAT\:luaconf.h}
{\xe \v luaconf.h\:LUA_FLOAT_FLOAT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_FLOAT_FLOAT\~ 1}}
\par
{\bkmkstart AAAAAAADUG}
{\bkmkend AAAAAAADUG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luaconf.h \'B5\'DA 135 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_FLOAT_LONGDOUBLE\:luaconf.h}
{\xe \v luaconf.h\:LUA_FLOAT_LONGDOUBLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_FLOAT_LONGDOUBLE\~ 3}}
\par
{\bkmkstart AAAAAAADUH}
{\bkmkend AAAAAAADUH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luaconf.h \'B5\'DA 137 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_FLOAT_TYPE\:luaconf.h}
{\xe \v luaconf.h\:LUA_FLOAT_TYPE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_FLOAT_TYPE\~ {\b LUA_FLOAT_DOUBLE}}}
\par
{\bkmkstart AAAAAAADUI}
{\bkmkend AAAAAAADUI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luaconf.h \'B5\'DA 168 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_getlocaledecpoint\:luaconf.h}
{\xe \v luaconf.h\:lua_getlocaledecpoint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lua_getlocaledecpoint()\~ (localeconv()->decimal_point[0])}}
\par
{\bkmkstart AAAAAAADUJ}
{\bkmkend AAAAAAADUJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luaconf.h \'B5\'DA 674 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_IDSIZE\:luaconf.h}
{\xe \v luaconf.h\:LUA_IDSIZE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_IDSIZE\~ 60}}
\par
{\bkmkstart AAAAAAADUK}
{\bkmkend AAAAAAADUK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luaconf.h \'B5\'DA 743 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_INT_INT\:luaconf.h}
{\xe \v luaconf.h\:LUA_INT_INT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_INT_INT\~ 1}}
\par
{\bkmkstart AAAAAAADUL}
{\bkmkend AAAAAAADUL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luaconf.h \'B5\'DA 130 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_INT_LONG\:luaconf.h}
{\xe \v luaconf.h\:LUA_INT_LONG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_INT_LONG\~ 2}}
\par
{\bkmkstart AAAAAAADUM}
{\bkmkend AAAAAAADUM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luaconf.h \'B5\'DA 131 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_INT_LONGLONG\:luaconf.h}
{\xe \v luaconf.h\:LUA_INT_LONGLONG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_INT_LONGLONG\~ 3}}
\par
{\bkmkstart AAAAAAADUN}
{\bkmkend AAAAAAADUN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luaconf.h \'B5\'DA 132 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_INT_TYPE\:luaconf.h}
{\xe \v luaconf.h\:LUA_INT_TYPE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_INT_TYPE\~ {\b LUA_INT_LONGLONG}}}
\par
{\bkmkstart AAAAAAADUO}
{\bkmkend AAAAAAADUO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luaconf.h \'B5\'DA 164 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_integer2str\:luaconf.h}
{\xe \v luaconf.h\:lua_integer2str}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lua_integer2str( s,  sz,  n)\~ 	{\b l_sprintf}((s), sz, {\b LUA_INTEGER_FMT}, ({\b LUAI_UACINT})(n))}}
\par
{\bkmkstart AAAAAAADUP}
{\bkmkend AAAAAAADUP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luaconf.h \'B5\'DA 513 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_INTEGER_FMT\:luaconf.h}
{\xe \v luaconf.h\:LUA_INTEGER_FMT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_INTEGER_FMT\~ "%" LUA_INTEGER_FRMLEN "d"}}
\par
{\bkmkstart AAAAAAADUQ}
{\bkmkend AAAAAAADUQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luaconf.h \'B5\'DA 509 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_KCONTEXT\:luaconf.h}
{\xe \v luaconf.h\:LUA_KCONTEXT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_KCONTEXT\~ ptrdiff_t}}
\par
{\bkmkstart AAAAAAADUR}
{\bkmkend AAAAAAADUR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luaconf.h \'B5\'DA 656 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_LDIR\:luaconf.h}
{\xe \v luaconf.h\:LUA_LDIR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_LDIR\~ {\b LUA_ROOT} "share/lua/" LUA_VDIR "/"}}
\par
{\bkmkstart AAAAAAADUS}
{\bkmkend AAAAAAADUS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luaconf.h \'B5\'DA 231 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_NUMBER\:luaconf.h}
{\xe \v luaconf.h\:LUA_NUMBER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_NUMBER\~ double}}
\par
{\bkmkstart AAAAAAADUT}
{\bkmkend AAAAAAADUT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luaconf.h \'B5\'DA 469 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_number2str\:luaconf.h}
{\xe \v luaconf.h\:lua_number2str}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lua_number2str( s,  sz,  n)\~ 	{\b l_sprintf}((s), sz, {\b LUA_NUMBER_FMT}, ({\b LUAI_UACNUMBER})(n))}}
\par
{\bkmkstart AAAAAAADUU}
{\bkmkend AAAAAAADUU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luaconf.h \'B5\'DA 416 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_number2strx\:luaconf.h}
{\xe \v luaconf.h\:lua_number2strx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lua_number2strx( L,  b,  sz,  f,  n)\~ 	((void)L, {\b l_sprintf}(b,sz,f,({\b LUAI_UACNUMBER})(n)))}}
\par
{\bkmkstart AAAAAAADUV}
{\bkmkend AAAAAAADUV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luaconf.h \'B5\'DA 631 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_NUMBER_FMT\:luaconf.h}
{\xe \v luaconf.h\:LUA_NUMBER_FMT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_NUMBER_FMT\~ "%.14g"}}
\par
{\bkmkstart AAAAAAADUW}
{\bkmkend AAAAAAADUW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luaconf.h \'B5\'DA 476 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_NUMBER_FRMLEN\:luaconf.h}
{\xe \v luaconf.h\:LUA_NUMBER_FRMLEN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_NUMBER_FRMLEN\~ ""}}
\par
{\bkmkstart AAAAAAADUX}
{\bkmkend AAAAAAADUX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luaconf.h \'B5\'DA 475 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_numbertointeger\:luaconf.h}
{\xe \v luaconf.h\:lua_numbertointeger}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lua_numbertointeger( n,  p)}}
\par
{\bkmkstart AAAAAAADUY}
{\bkmkend AAAAAAADUY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   ((n) >= (LUA_NUMBER)(LUA_MININTEGER) && \\\par
   (n) < -(LUA_NUMBER)(LUA_MININTEGER) && \\\par
      (*(p) = (LUA_INTEGER)(n), 1))\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE luaconf.h \'B5\'DA 428 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_PATH_DEFAULT\:luaconf.h}
{\xe \v luaconf.h\:LUA_PATH_DEFAULT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_PATH_DEFAULT}}
\par
{\bkmkstart AAAAAAADUZ}
{\bkmkend AAAAAAADUZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid         LUA_LDIR{\cf22 "?.lua;"}  LUA_LDIR{\cf22 "?/init.lua;"} \\\par
        LUA_CDIR{\cf22 "?.lua;"}  LUA_CDIR{\cf22 "?/init.lua;"} \\\par
        {\cf22 "./?.lua;"} {\cf22 "./?/init.lua"}\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE luaconf.h \'B5\'DA 235 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_PATH_MARK\:luaconf.h}
{\xe \v luaconf.h\:LUA_PATH_MARK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_PATH_MARK\~ "?"}}
\par
{\bkmkstart AAAAAAADVA}
{\bkmkend AAAAAAADVA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luaconf.h \'B5\'DA 189 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_PATH_SEP\:luaconf.h}
{\xe \v luaconf.h\:LUA_PATH_SEP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_PATH_SEP\~ ";"}}
\par
{\bkmkstart AAAAAAADVB}
{\bkmkend AAAAAAADVB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luaconf.h \'B5\'DA 188 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_pointer2str\:luaconf.h}
{\xe \v luaconf.h\:lua_pointer2str}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lua_pointer2str( buff,  sz,  p)\~ {\b l_sprintf}(buff,sz,"%p",p)}}
\par
{\bkmkstart AAAAAAADVC}
{\bkmkend AAAAAAADVC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luaconf.h \'B5\'DA 621 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_ROOT\:luaconf.h}
{\xe \v luaconf.h\:LUA_ROOT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_ROOT\~ "/usr/local/"}}
\par
{\bkmkstart AAAAAAADVD}
{\bkmkend AAAAAAADVD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luaconf.h \'B5\'DA 230 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_str2number\:luaconf.h}
{\xe \v luaconf.h\:lua_str2number}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lua_str2number( s,  p)\~ strtod((s), (p))}}
\par
{\bkmkstart AAAAAAADVE}
{\bkmkend AAAAAAADVE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luaconf.h \'B5\'DA 480 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lua_strx2number\:luaconf.h}
{\xe \v luaconf.h\:lua_strx2number}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lua_strx2number( s,  p)\~ {\b lua_str2number}(s,p)}}
\par
{\bkmkstart AAAAAAADVF}
{\bkmkend AAAAAAADVF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luaconf.h \'B5\'DA 613 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_UNSIGNED\:luaconf.h}
{\xe \v luaconf.h\:LUA_UNSIGNED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_UNSIGNED\~ unsigned {\b LUAI_UACINT}}}
\par
{\bkmkstart AAAAAAADVG}
{\bkmkend AAAAAAADVG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luaconf.h \'B5\'DA 520 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_UNSIGNEDBITS\:luaconf.h}
{\xe \v luaconf.h\:LUA_UNSIGNEDBITS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_UNSIGNEDBITS\~ (sizeof({\b LUA_UNSIGNED}) * CHAR_BIT)}}
\par
{\bkmkstart AAAAAAADVH}
{\bkmkend AAAAAAADVH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luaconf.h \'B5\'DA 523 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_VDIR\:luaconf.h}
{\xe \v luaconf.h\:LUA_VDIR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_VDIR\~ {\b LUA_VERSION_MAJOR} "." {\b LUA_VERSION_MINOR}}}
\par
{\bkmkstart AAAAAAADVI}
{\bkmkend AAAAAAADVI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luaconf.h \'B5\'DA 203 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUAI_DDEC\:luaconf.h}
{\xe \v luaconf.h\:LUAI_DDEC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUAI_DDEC( dec)\~ {\b LUAI_FUNC} dec}}
\par
{\bkmkstart AAAAAAADVJ}
{\bkmkend AAAAAAADVJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luaconf.h \'B5\'DA 325 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUAI_DDEF\:luaconf.h}
{\xe \v luaconf.h\:LUAI_DDEF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUAI_DDEF\~ /* empty */}}
\par
{\bkmkstart AAAAAAADVK}
{\bkmkend AAAAAAADVK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luaconf.h \'B5\'DA 326 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUAI_FUNC\:luaconf.h}
{\xe \v luaconf.h\:LUAI_FUNC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUAI_FUNC\~ extern}}
\par
{\bkmkstart AAAAAAADVL}
{\bkmkend AAAAAAADVL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luaconf.h \'B5\'DA 322 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUAI_IS32INT\:luaconf.h}
{\xe \v luaconf.h\:LUAI_IS32INT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUAI_IS32INT\~ ((UINT_MAX >> 30) >= 3)}}
\par
{\bkmkstart AAAAAAADVM}
{\bkmkend AAAAAAADVM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luaconf.h \'B5\'DA 91 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUAI_MAXALIGN\:luaconf.h}
{\xe \v luaconf.h\:LUAI_MAXALIGN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUAI_MAXALIGN\~ {\b lua_Number} n; double u; void *s; {\b lua_Integer} i; long l}}
\par
{\bkmkstart AAAAAAADVN}
{\bkmkend AAAAAAADVN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luaconf.h \'B5\'DA 756 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUAI_MAXCSTACK\:luaconf.h}
{\xe \v luaconf.h\:LUAI_MAXCSTACK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUAI_MAXCSTACK\~ 2000}}
\par
{\bkmkstart AAAAAAADVO}
{\bkmkend AAAAAAADVO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luaconf.h \'B5\'DA 50 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUAI_MAXSTACK\:luaconf.h}
{\xe \v luaconf.h\:LUAI_MAXSTACK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUAI_MAXSTACK\~ 15000}}
\par
{\bkmkstart AAAAAAADVP}
{\bkmkend AAAAAAADVP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luaconf.h \'B5\'DA 726 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUAI_UACINT\:luaconf.h}
{\xe \v luaconf.h\:LUAI_UACINT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUAI_UACINT\~ LUA_INTEGER}}
\par
{\bkmkstart AAAAAAADVQ}
{\bkmkend AAAAAAADVQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luaconf.h \'B5\'DA 511 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUAI_UACNUMBER\:luaconf.h}
{\xe \v luaconf.h\:LUAI_UACNUMBER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUAI_UACNUMBER\~ double}}
\par
{\bkmkstart AAAAAAADVR}
{\bkmkend AAAAAAADVR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luaconf.h \'B5\'DA 473 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUAL_BUFFERSIZE\:luaconf.h}
{\xe \v luaconf.h\:LUAL_BUFFERSIZE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUAL_BUFFERSIZE\~ ((int)(16 * sizeof(void*) * sizeof({\b lua_Number})))}}
\par
{\bkmkstart AAAAAAADVS}
{\bkmkend AAAAAAADVS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luaconf.h \'B5\'DA 749 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUALIB_API\:luaconf.h}
{\xe \v luaconf.h\:LUALIB_API}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUALIB_API\~ {\b LUA_API}}}
\par
{\bkmkstart AAAAAAADVT}
{\bkmkend AAAAAAADVT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luaconf.h \'B5\'DA 300 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUAMOD_API\:luaconf.h}
{\xe \v luaconf.h\:LUAMOD_API}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUAMOD_API\~ {\b LUA_API}}}
\par
{\bkmkstart AAAAAAADVU}
{\bkmkend AAAAAAADVU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE luaconf.h \'B5\'DA 301 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/gitworkspace/lua/src/lualib.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v D:/gitworkspace/lua/src/lualib.h}
{\xe \v D:/gitworkspace/lua/src/lualib.h}
{\bkmkstart AAAAAAADVV}
{\bkmkend AAAAAAADVV}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "lua.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_VERSUFFIX}\~ "_" LUA_VERSION_MAJOR "_" LUA_VERSION_MINOR\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_COLIBNAME}\~ "coroutine"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_TABLIBNAME}\~ "table"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_IOLIBNAME}\~ "io"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_OSLIBNAME}\~ "os"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_STRLIBNAME}\~ "string"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_UTF8LIBNAME}\~ "utf8"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_MATHLIBNAME}\~ "math"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_DBLIBNAME}\~ "debug"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_LOADLIBNAME}\~ "package"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lua_assert}(x)\~ ((void)0)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAMOD_API} int() {\b luaopen_base} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAMOD_API} int() {\b luaopen_coroutine} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAMOD_API} int() {\b luaopen_table} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAMOD_API} int() {\b luaopen_io} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAMOD_API} int() {\b luaopen_os} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAMOD_API} int() {\b luaopen_string} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAMOD_API} int() {\b luaopen_utf8} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAMOD_API} int() {\b luaopen_math} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAMOD_API} int() {\b luaopen_debug} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAMOD_API} int() {\b luaopen_package} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUALIB_API} void() {\b luaL_openlibs} ({\b lua_State} *L)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v lua_assert\:lualib.h}
{\xe \v lualib.h\:lua_assert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lua_assert( x)\~ ((void)0)}}
\par
{\bkmkstart AAAAAAADVW}
{\bkmkend AAAAAAADVW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lualib.h \'B5\'DA 54 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_COLIBNAME\:lualib.h}
{\xe \v lualib.h\:LUA_COLIBNAME}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_COLIBNAME\~ "coroutine"}}
\par
{\bkmkstart AAAAAAADVX}
{\bkmkend AAAAAAADVX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lualib.h \'B5\'DA 20 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_DBLIBNAME\:lualib.h}
{\xe \v lualib.h\:LUA_DBLIBNAME}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_DBLIBNAME\~ "debug"}}
\par
{\bkmkstart AAAAAAADVY}
{\bkmkend AAAAAAADVY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lualib.h \'B5\'DA 41 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_IOLIBNAME\:lualib.h}
{\xe \v lualib.h\:LUA_IOLIBNAME}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_IOLIBNAME\~ "io"}}
\par
{\bkmkstart AAAAAAADVZ}
{\bkmkend AAAAAAADVZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lualib.h \'B5\'DA 26 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_LOADLIBNAME\:lualib.h}
{\xe \v lualib.h\:LUA_LOADLIBNAME}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_LOADLIBNAME\~ "package"}}
\par
{\bkmkstart AAAAAAADWA}
{\bkmkend AAAAAAADWA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lualib.h \'B5\'DA 44 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_MATHLIBNAME\:lualib.h}
{\xe \v lualib.h\:LUA_MATHLIBNAME}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_MATHLIBNAME\~ "math"}}
\par
{\bkmkstart AAAAAAADWB}
{\bkmkend AAAAAAADWB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lualib.h \'B5\'DA 38 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_OSLIBNAME\:lualib.h}
{\xe \v lualib.h\:LUA_OSLIBNAME}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_OSLIBNAME\~ "os"}}
\par
{\bkmkstart AAAAAAADWC}
{\bkmkend AAAAAAADWC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lualib.h \'B5\'DA 29 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_STRLIBNAME\:lualib.h}
{\xe \v lualib.h\:LUA_STRLIBNAME}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_STRLIBNAME\~ "string"}}
\par
{\bkmkstart AAAAAAADWD}
{\bkmkend AAAAAAADWD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lualib.h \'B5\'DA 32 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_TABLIBNAME\:lualib.h}
{\xe \v lualib.h\:LUA_TABLIBNAME}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_TABLIBNAME\~ "table"}}
\par
{\bkmkstart AAAAAAADWE}
{\bkmkend AAAAAAADWE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lualib.h \'B5\'DA 23 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_UTF8LIBNAME\:lualib.h}
{\xe \v lualib.h\:LUA_UTF8LIBNAME}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_UTF8LIBNAME\~ "utf8"}}
\par
{\bkmkstart AAAAAAADWF}
{\bkmkend AAAAAAADWF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lualib.h \'B5\'DA 35 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_VERSUFFIX\:lualib.h}
{\xe \v lualib.h\:LUA_VERSUFFIX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_VERSUFFIX\~ "_" LUA_VERSION_MAJOR "_" LUA_VERSION_MINOR}}
\par
{\bkmkstart AAAAAAADWG}
{\bkmkend AAAAAAADWG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lualib.h \'B5\'DA 15 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v luaL_openlibs\:lualib.h}
{\xe \v lualib.h\:luaL_openlibs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUALIB_API} void() luaL_openlibs ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAADWH}
{\bkmkend AAAAAAADWH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE linit.c \'B5\'DA 57 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaopen_base\:lualib.h}
{\xe \v lualib.h\:luaopen_base}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAMOD_API} int() luaopen_base ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAADWI}
{\bkmkend AAAAAAADWI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lbaselib.c \'B5\'DA 515 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaopen_coroutine\:lualib.h}
{\xe \v lualib.h\:luaopen_coroutine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAMOD_API} int() luaopen_coroutine ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAADWJ}
{\bkmkend AAAAAAADWJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lcorolib.c \'B5\'DA 202 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaopen_debug\:lualib.h}
{\xe \v lualib.h\:luaopen_debug}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAMOD_API} int() luaopen_debug ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAADWK}
{\bkmkend AAAAAAADWK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldblib.c \'B5\'DA 473 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaopen_io\:lualib.h}
{\xe \v lualib.h\:luaopen_io}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAMOD_API} int() luaopen_io ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAADWL}
{\bkmkend AAAAAAADWL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE liolib.c \'B5\'DA 805 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaopen_math\:lualib.h}
{\xe \v lualib.h\:luaopen_math}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAMOD_API} int() luaopen_math ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAADWM}
{\bkmkend AAAAAAADWM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lmathlib.c \'B5\'DA 750 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaopen_os\:lualib.h}
{\xe \v lualib.h\:luaopen_os}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAMOD_API} int() luaopen_os ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAADWN}
{\bkmkend AAAAAAADWN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loslib.c \'B5\'DA 426 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaopen_package\:lualib.h}
{\xe \v lualib.h\:luaopen_package}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAMOD_API} int() luaopen_package ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAADWO}
{\bkmkend AAAAAAADWO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE loadlib.c \'B5\'DA 736 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaopen_string\:lualib.h}
{\xe \v lualib.h\:luaopen_string}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAMOD_API} int() luaopen_string ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAADWP}
{\bkmkend AAAAAAADWP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lstrlib.c \'B5\'DA 1800 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaopen_table\:lualib.h}
{\xe \v lualib.h\:luaopen_table}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAMOD_API} int() luaopen_table ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAADWQ}
{\bkmkend AAAAAAADWQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ltablib.c \'B5\'DA 424 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaopen_utf8\:lualib.h}
{\xe \v lualib.h\:luaopen_utf8}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAMOD_API} int() luaopen_utf8 ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAADWR}
{\bkmkend AAAAAAADWR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lutf8lib.c \'B5\'DA 283 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/gitworkspace/lua/src/lundump.c \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v D:/gitworkspace/lua/src/lundump.c}
{\xe \v D:/gitworkspace/lua/src/lundump.c}
{\bkmkstart AAAAAAADWS}
{\bkmkend AAAAAAADWS}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "lprefix.h"}\par
{\f2 #include <limits.h>}\par
{\f2 #include <string.h>}\par
{\f2 #include "lua.h"}\par
{\f2 #include "ldebug.h"}\par
{\f2 #include "ldo.h"}\par
{\f2 #include "lfunc.h"}\par
{\f2 #include "lmem.h"}\par
{\f2 #include "lobject.h"}\par
{\f2 #include "lstring.h"}\par
{\f2 #include "lundump.h"}\par
{\f2 #include "lzio.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LoadState}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lundump_c}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_CORE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luai_verifycode}(L,  f)\~ /* empty */\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b loadVector}({\b S},  b,  n)\~ {\b loadBlock}({\b S},b,(n)*sizeof((b)[0]))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b loadVar}({\b S},  x)\~ {\b loadVector}({\b S},&x,1)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b checksize}({\b S},  t)\~ {\b fchecksize}({\b S},sizeof(t),#t)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b l_noret} {\b error} ({\b LoadState} *{\b S}, const char *why)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b loadBlock} ({\b LoadState} *{\b S}, void *b, size_t size)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b lu_byte} {\b loadByte} ({\b LoadState} *{\b S})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static size_t {\b loadUnsigned} ({\b LoadState} *{\b S}, size_t limit)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static size_t {\b loadSize} ({\b LoadState} *{\b S})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b loadInt} ({\b LoadState} *{\b S})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b lua_Number} {\b loadNumber} ({\b LoadState} *{\b S})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b lua_Integer} {\b loadInteger} ({\b LoadState} *{\b S})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b TString} * {\b loadStringN} ({\b LoadState} *{\b S}, {\b Proto} *p)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b TString} * {\b loadString} ({\b LoadState} *{\b S}, {\b Proto} *p)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b loadCode} ({\b LoadState} *{\b S}, {\b Proto} *f)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b loadFunction} ({\b LoadState} *{\b S}, {\b Proto} *f, {\b TString} *psource)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b loadConstants} ({\b LoadState} *{\b S}, {\b Proto} *f)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b loadProtos} ({\b LoadState} *{\b S}, {\b Proto} *f)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b loadUpvalues} ({\b LoadState} *{\b S}, {\b Proto} *f)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b loadDebug} ({\b LoadState} *{\b S}, {\b Proto} *f)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b checkliteral} ({\b LoadState} *{\b S}, const char *s, const char *msg)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b fchecksize} ({\b LoadState} *{\b S}, size_t size, const char *tname)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b checkHeader} ({\b LoadState} *{\b S})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LClosure} * {\b luaU_undump} ({\b lua_State} *L, {\b ZIO} *Z, const char *name)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v checksize\:lundump.c}
{\xe \v lundump.c\:checksize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define checksize( {\b S},  t)\~ {\b fchecksize}({\b S},sizeof(t),#t)}}
\par
{\bkmkstart AAAAAAADWT}
{\bkmkend AAAAAAADWT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lundump.c \'B5\'DA 278 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v loadVar\:lundump.c}
{\xe \v lundump.c\:loadVar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define loadVar( {\b S},  x)\~ {\b loadVector}({\b S},&x,1)}}
\par
{\bkmkstart AAAAAAADWU}
{\bkmkend AAAAAAADWU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lundump.c \'B5\'DA 58 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v loadVector\:lundump.c}
{\xe \v lundump.c\:loadVector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define loadVector( {\b S},  b,  n)\~ {\b loadBlock}({\b S},b,(n)*sizeof((b)[0]))}}
\par
{\bkmkstart AAAAAAADWV}
{\bkmkend AAAAAAADWV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lundump.c \'B5\'DA 50 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_CORE\:lundump.c}
{\xe \v lundump.c\:LUA_CORE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_CORE}}
\par
{\bkmkstart AAAAAAADWW}
{\bkmkend AAAAAAADWW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lundump.c \'B5\'DA 8 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luai_verifycode\:lundump.c}
{\xe \v lundump.c\:luai_verifycode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luai_verifycode( L,  f)\~ /* empty */}}
\par
{\bkmkstart AAAAAAADWX}
{\bkmkend AAAAAAADWX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lundump.c \'B5\'DA 29 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lundump_c\:lundump.c}
{\xe \v lundump.c\:lundump_c}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lundump_c}}
\par
{\bkmkstart AAAAAAADWY}
{\bkmkend AAAAAAADWY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lundump.c \'B5\'DA 7 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v checkHeader\:lundump.c}
{\xe \v lundump.c\:checkHeader}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void checkHeader ({\b LoadState} *  {\i S}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADWZ}
{\bkmkend AAAAAAADWZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lundump.c \'B5\'DA 280 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v checkliteral\:lundump.c}
{\xe \v lundump.c\:checkliteral}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void checkliteral ({\b LoadState} *  {\i S}, const char *  {\i s}, const char *  {\i msg}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADXA}
{\bkmkend AAAAAAADXA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lundump.c \'B5\'DA 263 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v error\:lundump.c}
{\xe \v lundump.c\:error}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b l_noret} error ({\b LoadState} *  {\i S}, const char *  {\i why}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADXB}
{\bkmkend AAAAAAADXB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lundump.c \'B5\'DA 40 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v fchecksize\:lundump.c}
{\xe \v lundump.c\:fchecksize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void fchecksize ({\b LoadState} *  {\i S}, size_t  {\i size}, const char *  {\i tname}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADXC}
{\bkmkend AAAAAAADXC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lundump.c \'B5\'DA 272 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v loadBlock\:lundump.c}
{\xe \v lundump.c\:loadBlock}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void loadBlock ({\b LoadState} *  {\i S}, void *  {\i b}, size_t  {\i size}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADXD}
{\bkmkend AAAAAAADXD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lundump.c \'B5\'DA 52 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v loadByte\:lundump.c}
{\xe \v lundump.c\:loadByte}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b lu_byte} loadByte ({\b LoadState} *  {\i S}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADXE}
{\bkmkend AAAAAAADXE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lundump.c \'B5\'DA 61 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v loadCode\:lundump.c}
{\xe \v lundump.c\:loadCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void loadCode ({\b LoadState} *  {\i S}, {\b Proto} *  {\i f}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADXF}
{\bkmkend AAAAAAADXF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lundump.c \'B5\'DA 141 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v loadConstants\:lundump.c}
{\xe \v lundump.c\:loadConstants}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void loadConstants ({\b LoadState} *  {\i S}, {\b Proto} *  {\i f}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADXG}
{\bkmkend AAAAAAADXG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lundump.c \'B5\'DA 152 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v loadDebug\:lundump.c}
{\xe \v lundump.c\:loadDebug}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void loadDebug ({\b LoadState} *  {\i S}, {\b Proto} *  {\i f}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADXH}
{\bkmkend AAAAAAADXH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lundump.c \'B5\'DA 217 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v loadFunction\:lundump.c}
{\xe \v lundump.c\:loadFunction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void loadFunction ({\b LoadState} *  {\i S}, {\b Proto} *  {\i f}, {\b TString} *  {\i psource}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADXI}
{\bkmkend AAAAAAADXI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lundump.c \'B5\'DA 246 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v loadInt\:lundump.c}
{\xe \v lundump.c\:loadInt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int loadInt ({\b LoadState} *  {\i S}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADXJ}
{\bkmkend AAAAAAADXJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lundump.c \'B5\'DA 88 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v loadInteger\:lundump.c}
{\xe \v lundump.c\:loadInteger}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b lua_Integer} loadInteger ({\b LoadState} *  {\i S}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADXK}
{\bkmkend AAAAAAADXK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lundump.c \'B5\'DA 100 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v loadNumber\:lundump.c}
{\xe \v lundump.c\:loadNumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b lua_Number} loadNumber ({\b LoadState} *  {\i S}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADXL}
{\bkmkend AAAAAAADXL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lundump.c \'B5\'DA 93 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v loadProtos\:lundump.c}
{\xe \v lundump.c\:loadProtos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void loadProtos ({\b LoadState} *  {\i S}, {\b Proto} *  {\i f}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADXM}
{\bkmkend AAAAAAADXM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lundump.c \'B5\'DA 188 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v loadSize\:lundump.c}
{\xe \v lundump.c\:loadSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static size_t loadSize ({\b LoadState} *  {\i S}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADXN}
{\bkmkend AAAAAAADXN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lundump.c \'B5\'DA 83 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v loadString\:lundump.c}
{\xe \v lundump.c\:loadString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b TString}* loadString ({\b LoadState} *  {\i S}, {\b Proto} *  {\i p}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADXO}
{\bkmkend AAAAAAADXO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lundump.c \'B5\'DA 133 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v loadStringN\:lundump.c}
{\xe \v lundump.c\:loadStringN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b TString}* loadStringN ({\b LoadState} *  {\i S}, {\b Proto} *  {\i p}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADXP}
{\bkmkend AAAAAAADXP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lundump.c \'B5\'DA 110 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v loadUnsigned\:lundump.c}
{\xe \v lundump.c\:loadUnsigned}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static size_t loadUnsigned ({\b LoadState} *  {\i S}, size_t  {\i limit}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADXQ}
{\bkmkend AAAAAAADXQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lundump.c \'B5\'DA 69 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v loadUpvalues\:lundump.c}
{\xe \v lundump.c\:loadUpvalues}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void loadUpvalues ({\b LoadState} *  {\i S}, {\b Proto} *  {\i f}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADXR}
{\bkmkend AAAAAAADXR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lundump.c \'B5\'DA 203 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaU_undump\:lundump.c}
{\xe \v lundump.c\:luaU_undump}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LClosure}* luaU_undump ({\b lua_State} *  {\i L}, {\b ZIO} *  {\i Z}, const char *  {\i name})}}
\par
{\bkmkstart AAAAAAADXS}
{\bkmkend AAAAAAADXS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lundump.c \'B5\'DA 301 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/gitworkspace/lua/src/lundump.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v D:/gitworkspace/lua/src/lundump.h}
{\xe \v D:/gitworkspace/lua/src/lundump.h}
{\bkmkstart AAAAAAADXT}
{\bkmkend AAAAAAADXT}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "llimits.h"}\par
{\f2 #include "lobject.h"}\par
{\f2 #include "lzio.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUAC_DATA}\~ "\\x19\\x93\\r\\n\\x1a\\n"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUAC_INT}\~ 0x5678\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUAC_NUM}\~ {\b cast_num}(370.5)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MYINT}(s)\~ (s[0]-'0')  /* assume one-{\b digit} numerals */\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUAC_VERSION}\~ ({\b MYINT}({\b LUA_VERSION_MAJOR})*16+{\b MYINT}({\b LUA_VERSION_MINOR}))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUAC_FORMAT}\~ 0	/* this is the official format */\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} {\b LClosure} * {\b luaU_undump} ({\b lua_State} *L, {\b ZIO} *Z, const char *name)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} int {\b luaU_dump} ({\b lua_State} *L, const {\b Proto} *f, {\b lua_Writer} w, void *data, int strip)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v LUAC_DATA\:lundump.h}
{\xe \v lundump.h\:LUAC_DATA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUAC_DATA\~ "\\x19\\x93\\r\\n\\x1a\\n"}}
\par
{\bkmkstart AAAAAAADXU}
{\bkmkend AAAAAAADXU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lundump.h \'B5\'DA 16 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUAC_FORMAT\:lundump.h}
{\xe \v lundump.h\:LUAC_FORMAT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUAC_FORMAT\~ 0	/* this is the official format */}}
\par
{\bkmkstart AAAAAAADXV}
{\bkmkend AAAAAAADXV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lundump.h \'B5\'DA 27 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUAC_INT\:lundump.h}
{\xe \v lundump.h\:LUAC_INT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUAC_INT\~ 0x5678}}
\par
{\bkmkstart AAAAAAADXW}
{\bkmkend AAAAAAADXW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lundump.h \'B5\'DA 18 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUAC_NUM\:lundump.h}
{\xe \v lundump.h\:LUAC_NUM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUAC_NUM\~ {\b cast_num}(370.5)}}
\par
{\bkmkstart AAAAAAADXX}
{\bkmkend AAAAAAADXX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lundump.h \'B5\'DA 19 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUAC_VERSION\:lundump.h}
{\xe \v lundump.h\:LUAC_VERSION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUAC_VERSION\~ ({\b MYINT}({\b LUA_VERSION_MAJOR})*16+{\b MYINT}({\b LUA_VERSION_MINOR}))}}
\par
{\bkmkstart AAAAAAADXY}
{\bkmkend AAAAAAADXY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lundump.h \'B5\'DA 25 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v MYINT\:lundump.h}
{\xe \v lundump.h\:MYINT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MYINT( s)\~ (s[0]-'0')  /* assume one-{\b digit} numerals */}}
\par
{\bkmkstart AAAAAAADXZ}
{\bkmkend AAAAAAADXZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lundump.h \'B5\'DA 24 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v luaU_dump\:lundump.h}
{\xe \v lundump.h\:luaU_dump}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} int luaU_dump ({\b lua_State} *  {\i L}, const {\b Proto} *  {\i f}, {\b lua_Writer}  {\i w}, void *  {\i data}, int  {\i strip})}}
\par
{\bkmkstart AAAAAAADYA}
{\bkmkend AAAAAAADYA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE ldump.c \'B5\'DA 213 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaU_undump\:lundump.h}
{\xe \v lundump.h\:luaU_undump}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} {\b LClosure}* luaU_undump ({\b lua_State} *  {\i L}, {\b ZIO} *  {\i Z}, const char *  {\i name})}}
\par
{\bkmkstart AAAAAAADYB}
{\bkmkend AAAAAAADYB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lundump.c \'B5\'DA 301 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/gitworkspace/lua/src/lutf8lib.c \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v D:/gitworkspace/lua/src/lutf8lib.c}
{\xe \v D:/gitworkspace/lua/src/lutf8lib.c}
{\bkmkstart AAAAAAADYC}
{\bkmkend AAAAAAADYC}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "lprefix.h"}\par
{\f2 #include <assert.h>}\par
{\f2 #include <limits.h>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <string.h>}\par
{\f2 #include "lua.h"}\par
{\f2 #include "lauxlib.h"}\par
{\f2 #include "lualib.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lutf8lib_c}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_LIB}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAXUNICODE}\~ 0x10FFFFu\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAXUTF}\~ 0x7FFFFFFFu\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b iscont}(p)\~ ((*(p) & 0xC0) == 0x80)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b UTF8PATT}\~ "[\\0-\\x7F\\xC2-\\xFD][\\x80-\\xBF]*"\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'D0\'CD\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef unsigned long {\b utfint}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b lua_Integer} {\b u_posrelat} ({\b lua_Integer} pos, size_t len)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const char * {\b utf8_decode} (const char *s, {\b utfint} *val, int strict)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b utflen} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b codepoint} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b pushutfchar} ({\b lua_State} *L, int arg)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b utfchar} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b byteoffset} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b iter_aux} ({\b lua_State} *L, int strict)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b iter_auxstrict} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b iter_auxlax} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b iter_codes} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAMOD_API} int {\b luaopen_utf8} ({\b lua_State} *L)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const {\b luaL_Reg} {\b funcs} []\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v iscont\:lutf8lib.c}
{\xe \v lutf8lib.c\:iscont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define iscont( p)\~ ((*(p) & 0xC0) == 0x80)}}
\par
{\bkmkstart AAAAAAADYD}
{\bkmkend AAAAAAADYD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lutf8lib.c \'B5\'DA 38 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_LIB\:lutf8lib.c}
{\xe \v lutf8lib.c\:LUA_LIB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_LIB}}
\par
{\bkmkstart AAAAAAADYE}
{\bkmkend AAAAAAADYE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lutf8lib.c \'B5\'DA 8 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lutf8lib_c\:lutf8lib.c}
{\xe \v lutf8lib.c\:lutf8lib_c}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lutf8lib_c}}
\par
{\bkmkstart AAAAAAADYF}
{\bkmkend AAAAAAADYF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lutf8lib.c \'B5\'DA 7 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v MAXUNICODE\:lutf8lib.c}
{\xe \v lutf8lib.c\:MAXUNICODE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAXUNICODE\~ 0x10FFFFu}}
\par
{\bkmkstart AAAAAAADYG}
{\bkmkend AAAAAAADYG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lutf8lib.c \'B5\'DA 24 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v MAXUTF\:lutf8lib.c}
{\xe \v lutf8lib.c\:MAXUTF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAXUTF\~ 0x7FFFFFFFu}}
\par
{\bkmkstart AAAAAAADYH}
{\bkmkend AAAAAAADYH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lutf8lib.c \'B5\'DA 26 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v UTF8PATT\:lutf8lib.c}
{\xe \v lutf8lib.c\:UTF8PATT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define UTF8PATT\~ "[\\0-\\x7F\\xC2-\\xFD][\\x80-\\xBF]*"}}
\par
{\bkmkstart AAAAAAADYI}
{\bkmkend AAAAAAADYI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lutf8lib.c \'B5\'DA 268 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'D0\'CD\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v utfint\:lutf8lib.c}
{\xe \v lutf8lib.c\:utfint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef unsigned long {\b utfint}}}
\par
{\bkmkstart AAAAAAADYJ}
{\bkmkend AAAAAAADYJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lutf8lib.c \'B5\'DA 34 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v byteoffset\:lutf8lib.c}
{\xe \v lutf8lib.c\:byteoffset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int byteoffset ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADYK}
{\bkmkend AAAAAAADYK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lutf8lib.c \'B5\'DA 183 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v codepoint\:lutf8lib.c}
{\xe \v lutf8lib.c\:codepoint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int codepoint ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADYL}
{\bkmkend AAAAAAADYL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lutf8lib.c \'B5\'DA 122 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v iter_aux\:lutf8lib.c}
{\xe \v lutf8lib.c\:iter_aux}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int iter_aux ({\b lua_State} *  {\i L}, int  {\i strict}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADYM}
{\bkmkend AAAAAAADYM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lutf8lib.c \'B5\'DA 224 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v iter_auxlax\:lutf8lib.c}
{\xe \v lutf8lib.c\:iter_auxlax}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int iter_auxlax ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADYN}
{\bkmkend AAAAAAADYN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lutf8lib.c \'B5\'DA 252 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v iter_auxstrict\:lutf8lib.c}
{\xe \v lutf8lib.c\:iter_auxstrict}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int iter_auxstrict ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADYO}
{\bkmkend AAAAAAADYO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lutf8lib.c \'B5\'DA 248 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v iter_codes\:lutf8lib.c}
{\xe \v lutf8lib.c\:iter_codes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int iter_codes ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADYP}
{\bkmkend AAAAAAADYP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lutf8lib.c \'B5\'DA 257 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaopen_utf8\:lutf8lib.c}
{\xe \v lutf8lib.c\:luaopen_utf8}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAMOD_API} int luaopen_utf8 ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAADYQ}
{\bkmkend AAAAAAADYQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lutf8lib.c \'B5\'DA 283 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v pushutfchar\:lutf8lib.c}
{\xe \v lutf8lib.c\:pushutfchar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void pushutfchar ({\b lua_State} *  {\i L}, int  {\i arg}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADYR}
{\bkmkend AAAAAAADYR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lutf8lib.c \'B5\'DA 151 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v u_posrelat\:lutf8lib.c}
{\xe \v lutf8lib.c\:u_posrelat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b lua_Integer} u_posrelat ({\b lua_Integer}  {\i pos}, size_t  {\i len}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADYS}
{\bkmkend AAAAAAADYS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lutf8lib.c \'B5\'DA 43 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v utf8_decode\:lutf8lib.c}
{\xe \v lutf8lib.c\:utf8_decode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static const char* utf8_decode (const char *  {\i s}, {\b utfint} *  {\i val}, int  {\i strict}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADYT}
{\bkmkend AAAAAAADYT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lutf8lib.c \'B5\'DA 57 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v utfchar\:lutf8lib.c}
{\xe \v lutf8lib.c\:utfchar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int utfchar ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADYU}
{\bkmkend AAAAAAADYU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lutf8lib.c \'B5\'DA 161 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v utflen\:lutf8lib.c}
{\xe \v lutf8lib.c\:utflen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int utflen ({\b lua_State} *  {\i L}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADYV}
{\bkmkend AAAAAAADYV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lutf8lib.c \'B5\'DA 92 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v funcs\:lutf8lib.c}
{\xe \v lutf8lib.c\:funcs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b luaL_Reg} funcs[]{\f2 [static]}}}
\par
{\bkmkstart AAAAAAADYW}
{\bkmkend AAAAAAADYW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'B3\'F5\'CA\'BC\'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{\par
  \{{\cf22 "offset"}, byteoffset\},\par
  \{{\cf22 "codepoint"}, codepoint\},\par
  \{{\cf22 "char"}, utfchar\},\par
  \{{\cf22 "len"}, utflen\},\par
  \{{\cf22 "codes"}, iter_codes\},\par
  \par
  \{{\cf22 "charpattern"}, NULL\},\par
  \{NULL, NULL\}\par
\}\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE lutf8lib.c \'B5\'DA 271 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/gitworkspace/lua/src/lvm.c \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v D:/gitworkspace/lua/src/lvm.c}
{\xe \v D:/gitworkspace/lua/src/lvm.c}
{\bkmkstart AAAAAAADYX}
{\bkmkend AAAAAAADYX}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "lprefix.h"}\par
{\f2 #include <float.h>}\par
{\f2 #include <limits.h>}\par
{\f2 #include <math.h>}\par
{\f2 #include <stdio.h>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <string.h>}\par
{\f2 #include "lua.h"}\par
{\f2 #include "ldebug.h"}\par
{\f2 #include "ldo.h"}\par
{\f2 #include "lfunc.h"}\par
{\f2 #include "lgc.h"}\par
{\f2 #include "lobject.h"}\par
{\f2 #include "lopcodes.h"}\par
{\f2 #include "lstate.h"}\par
{\f2 #include "lstring.h"}\par
{\f2 #include "ltable.h"}\par
{\f2 #include "ltm.h"}\par
{\f2 #include "lvm.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lvm_c}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_CORE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_USE_JUMPTABLE}\~ 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAXTAGLOOP}\~ 2000\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b NBM}\~ ({\b l_floatatt}(MANT_DIG))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b l_intfitsf}(i)\~ 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b tostring}(L,  o)\~ 	({\b ttisstring}(o) || ({\b cvt2str}(o) && ({\b luaO_tostring}(L, o), 1)))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b isemptystr}(o)\~ ({\b ttisshrstring}(o) && {\b tsvalue}(o)->shrlen == 0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b NBITS}\~ {\b cast_int}(sizeof({\b lua_Integer}) * CHAR_BIT)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luaV_shiftr}(x,  y)\~ {\b luaV_shiftl}(x,-(y))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b l_addi}(L,  a,  b)\~ {\b intop}(+, a, b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b l_subi}(L,  a,  b)\~ {\b intop}(-, a, b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b l_muli}(L,  a,  b)\~ {\b intop}(*, a, b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b l_band}(a,  b)\~ {\b intop}(&, a, b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b l_bor}(a,  b)\~ {\b intop}(|, a, b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b l_bxor}(a,  b)\~ {\b intop}(^, a, b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b l_lti}(a,  b)\~ (a < b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b l_lei}(a,  b)\~ (a <= b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b l_gti}(a,  b)\~ (a > b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b l_gei}(a,  b)\~ (a >= b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b op_arithI}(L,  iop,  fop)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b op_arithf_aux}(L,  v1,  v2,  fop)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b op_arithf}(L,  fop)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b op_arithfK}(L,  fop)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b op_arith_aux}(L,  v1,  v2,  iop,  fop)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b op_arith}(L,  iop,  fop)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b op_arithK}(L,  iop,  fop)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b op_bitwiseK}(L,  op)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b op_bitwise}(L,  op)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b op_order}(L,  opi,  opn,  other)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b op_orderI}(L,  opi,  opf,  inv,  tm)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RA}(i)\~ (base+{\b GETARG_A}(i))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RB}(i)\~ (base+{\b GETARG_B}(i))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b vRB}(i)\~ {\b s2v}({\b RB}(i))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b KB}(i)\~ (k+{\b GETARG_B}(i))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RC}(i)\~ (base+{\b GETARG_C}(i))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b vRC}(i)\~ {\b s2v}({\b RC}(i))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b KC}(i)\~ (k+{\b GETARG_C}(i))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RKC}(i)\~ (({\b TESTARG_k}(i)) ? k + {\b GETARG_C}(i) : {\b s2v}(base + {\b GETARG_C}(i)))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b updatetrap}(ci)\~ (trap = ci->u.l.trap)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b updatebase}(ci)\~ (base = ci->func + 1)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b updatestack}(ci)\~ \{ if (trap) \{ {\b updatebase}(ci); ra = {\b RA}(i); \} \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b dojump}(ci,  i,  e)\~ \{ pc += {\b GETARG_sJ}(i) + e; {\b updatetrap}(ci); \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b donextjump}(ci)\~ \{ {\b Instruction} ni = *pc; {\b dojump}(ci, ni, 1); \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b docondjump}()\~ if ({\b cond} != {\b GETARG_k}(i)) pc++; else {\b donextjump}(ci);\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b savepc}(L)\~ (ci->u.l.savedpc = pc)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b savestate}(L,  ci)\~ ({\b savepc}(L), L->top = ci->top)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b Protect}(exp)\~ ({\b savestate}(L,ci), (exp), {\b updatetrap}(ci))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ProtectNT}(exp)\~ ({\b savepc}(L), (exp), {\b updatetrap}(ci))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b halfProtect}(exp)\~ ({\b savestate}(L,ci), (exp))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b halfProtectNT}(exp)\~ ({\b savepc}(L), (exp))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b checkGC}(L,  c)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b vmfetch}()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b vmdispatch}(o)\~ switch(o)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b vmcase}(l)\~ case l:\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b vmbreak}\~ break\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b l_strton} (const {\b TValue} *obj, {\b TValue} *result)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b luaV_tonumber_} (const {\b TValue} *obj, {\b lua_Number} *n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b luaV_flttointeger} ({\b lua_Number} n, {\b lua_Integer} *p, {\b F2Imod} mode)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b luaV_tointegerns} (const {\b TValue} *obj, {\b lua_Integer} *p, {\b F2Imod} mode)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b luaV_tointeger} (const {\b TValue} *obj, {\b lua_Integer} *p, {\b F2Imod} mode)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b forlimit} ({\b lua_State} *L, {\b lua_Integer} init, const {\b TValue} *lim, {\b lua_Integer} *p, {\b lua_Integer} step)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b forprep} ({\b lua_State} *L, {\b StkId} ra)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b floatforloop} ({\b StkId} ra)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaV_finishget} ({\b lua_State} *L, const {\b TValue} *t, {\b TValue} *key, {\b StkId} val, const {\b TValue} *slot)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaV_finishset} ({\b lua_State} *L, const {\b TValue} *t, {\b TValue} *key, {\b TValue} *val, const {\b TValue} *slot)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b l_strcmp} (const {\b TString} *ls, const {\b TString} *rs)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b LTintfloat} ({\b lua_Integer} i, {\b lua_Number} f)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b LEintfloat} ({\b lua_Integer} i, {\b lua_Number} f)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b LTfloatint} ({\b lua_Number} f, {\b lua_Integer} i)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b LEfloatint} ({\b lua_Number} f, {\b lua_Integer} i)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b LTnum} (const {\b TValue} *l, const {\b TValue} *r)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b LEnum} (const {\b TValue} *l, const {\b TValue} *r)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b lessthanothers} ({\b lua_State} *L, const {\b TValue} *l, const {\b TValue} *r)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b luaV_lessthan} ({\b lua_State} *L, const {\b TValue} *l, const {\b TValue} *r)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b lessequalothers} ({\b lua_State} *L, const {\b TValue} *l, const {\b TValue} *r)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b luaV_lessequal} ({\b lua_State} *L, const {\b TValue} *l, const {\b TValue} *r)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b luaV_equalobj} ({\b lua_State} *L, const {\b TValue} *t1, const {\b TValue} *t2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b copy2buff} ({\b StkId} top, int n, char *buff)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaV_concat} ({\b lua_State} *L, int total)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaV_objlen} ({\b lua_State} *L, {\b StkId} ra, const {\b TValue} *rb)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b lua_Integer} {\b luaV_idiv} ({\b lua_State} *L, {\b lua_Integer} m, {\b lua_Integer} n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b lua_Integer} {\b luaV_mod} ({\b lua_State} *L, {\b lua_Integer} m, {\b lua_Integer} n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b lua_Number} {\b luaV_modf} ({\b lua_State} *L, {\b lua_Number} m, {\b lua_Number} n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b lua_Integer} {\b luaV_shiftl} ({\b lua_Integer} x, {\b lua_Integer} y)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b pushclosure} ({\b lua_State} *L, {\b Proto} *p, {\b UpVal} **encup, {\b StkId} base, {\b StkId} ra)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaV_finishOp} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaV_execute} ({\b lua_State} *L, {\b CallInfo} *ci)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v checkGC\:lvm.c}
{\xe \v lvm.c\:checkGC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define checkGC( L,  c)}}
\par
{\bkmkstart AAAAAAADYY}
{\bkmkend AAAAAAADYY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     \{ luaC_condGC(L, L->top = (c),  {\cf20 /* limit of live values */} \\\par
                         updatetrap(ci)); \\\par
           luai_threadyield(L); \}\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 1106 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v docondjump\:lvm.c}
{\xe \v lvm.c\:docondjump}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define docondjump()\~ if ({\b cond} != {\b GETARG_k}(i)) pc++; else {\b donextjump}(ci);}}
\par
{\bkmkstart AAAAAAADYZ}
{\bkmkend AAAAAAADYZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 1070 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v dojump\:lvm.c}
{\xe \v lvm.c\:dojump}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define dojump( ci,  i,  e)\~ \{ pc += {\b GETARG_sJ}(i) + e; {\b updatetrap}(ci); \}}}
\par
{\bkmkstart AAAAAAADZA}
{\bkmkend AAAAAAADZA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 1059 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v donextjump\:lvm.c}
{\xe \v lvm.c\:donextjump}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define donextjump( ci)\~ \{ {\b Instruction} ni = *pc; {\b dojump}(ci, ni, 1); \}}}
\par
{\bkmkstart AAAAAAADZB}
{\bkmkend AAAAAAADZB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 1063 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v halfProtect\:lvm.c}
{\xe \v lvm.c\:halfProtect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define halfProtect( exp)\~ ({\b savestate}(L,ci), (exp))}}
\par
{\bkmkstart AAAAAAADZC}
{\bkmkend AAAAAAADZC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 1100 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v halfProtectNT\:lvm.c}
{\xe \v lvm.c\:halfProtectNT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define halfProtectNT( exp)\~ ({\b savepc}(L), (exp))}}
\par
{\bkmkstart AAAAAAADZD}
{\bkmkend AAAAAAADZD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 1103 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v isemptystr\:lvm.c}
{\xe \v lvm.c\:isemptystr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define isemptystr( o)\~ ({\b ttisshrstring}(o) && {\b tsvalue}(o)->shrlen == 0)}}
\par
{\bkmkstart AAAAAAADZE}
{\bkmkend AAAAAAADZE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 619 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v KB\:lvm.c}
{\xe \v lvm.c\:KB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define KB( i)\~ (k+{\b GETARG_B}(i))}}
\par
{\bkmkstart AAAAAAADZF}
{\bkmkend AAAAAAADZF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 1039 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v KC\:lvm.c}
{\xe \v lvm.c\:KC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define KC( i)\~ (k+{\b GETARG_C}(i))}}
\par
{\bkmkstart AAAAAAADZG}
{\bkmkend AAAAAAADZG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 1042 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v l_addi\:lvm.c}
{\xe \v lvm.c\:l_addi}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define l_addi( L,  a,  b)\~ {\b intop}(+, a, b)}}
\par
{\bkmkstart AAAAAAADZH}
{\bkmkend AAAAAAADZH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 868 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v l_band\:lvm.c}
{\xe \v lvm.c\:l_band}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define l_band( a,  b)\~ {\b intop}(&, a, b)}}
\par
{\bkmkstart AAAAAAADZI}
{\bkmkend AAAAAAADZI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 871 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v l_bor\:lvm.c}
{\xe \v lvm.c\:l_bor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define l_bor( a,  b)\~ {\b intop}(|, a, b)}}
\par
{\bkmkstart AAAAAAADZJ}
{\bkmkend AAAAAAADZJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 872 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v l_bxor\:lvm.c}
{\xe \v lvm.c\:l_bxor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define l_bxor( a,  b)\~ {\b intop}(^, a, b)}}
\par
{\bkmkstart AAAAAAADZK}
{\bkmkend AAAAAAADZK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 873 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v l_gei\:lvm.c}
{\xe \v lvm.c\:l_gei}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define l_gei( a,  b)\~ (a >= b)}}
\par
{\bkmkstart AAAAAAADZL}
{\bkmkend AAAAAAADZL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 878 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v l_gti\:lvm.c}
{\xe \v lvm.c\:l_gti}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define l_gti( a,  b)\~ (a > b)}}
\par
{\bkmkstart AAAAAAADZM}
{\bkmkend AAAAAAADZM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 877 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v l_intfitsf\:lvm.c}
{\xe \v lvm.c\:l_intfitsf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define l_intfitsf( i)\~ 1}}
\par
{\bkmkstart AAAAAAADZN}
{\bkmkend AAAAAAADZN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 78 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v l_lei\:lvm.c}
{\xe \v lvm.c\:l_lei}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define l_lei( a,  b)\~ (a <= b)}}
\par
{\bkmkstart AAAAAAADZO}
{\bkmkend AAAAAAADZO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 876 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v l_lti\:lvm.c}
{\xe \v lvm.c\:l_lti}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define l_lti( a,  b)\~ (a < b)}}
\par
{\bkmkstart AAAAAAADZP}
{\bkmkend AAAAAAADZP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 875 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v l_muli\:lvm.c}
{\xe \v lvm.c\:l_muli}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define l_muli( L,  a,  b)\~ {\b intop}(*, a, b)}}
\par
{\bkmkstart AAAAAAADZQ}
{\bkmkend AAAAAAADZQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 870 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v l_subi\:lvm.c}
{\xe \v lvm.c\:l_subi}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define l_subi( L,  a,  b)\~ {\b intop}(-, a, b)}}
\par
{\bkmkstart AAAAAAADZR}
{\bkmkend AAAAAAADZR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 869 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_CORE\:lvm.c}
{\xe \v lvm.c\:LUA_CORE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_CORE}}
\par
{\bkmkstart AAAAAAADZS}
{\bkmkend AAAAAAADZS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 8 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_USE_JUMPTABLE\:lvm.c}
{\xe \v lvm.c\:LUA_USE_JUMPTABLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_USE_JUMPTABLE\~ 0}}
\par
{\bkmkstart AAAAAAADZT}
{\bkmkend AAAAAAADZT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 42 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaV_shiftr\:lvm.c}
{\xe \v lvm.c\:luaV_shiftr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luaV_shiftr( x,  y)\~ {\b luaV_shiftl}(x,-(y))}}
\par
{\bkmkstart AAAAAAADZU}
{\bkmkend AAAAAAADZU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 766 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lvm_c\:lvm.c}
{\xe \v lvm.c\:lvm_c}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lvm_c}}
\par
{\bkmkstart AAAAAAADZV}
{\bkmkend AAAAAAADZV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 7 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v MAXTAGLOOP\:lvm.c}
{\xe \v lvm.c\:MAXTAGLOOP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAXTAGLOOP\~ 2000}}
\par
{\bkmkstart AAAAAAADZW}
{\bkmkend AAAAAAADZW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 49 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v NBITS\:lvm.c}
{\xe \v lvm.c\:NBITS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define NBITS\~ {\b cast_int}(sizeof({\b lua_Integer}) * CHAR_BIT)}}
\par
{\bkmkstart AAAAAAADZX}
{\bkmkend AAAAAAADZX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 761 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v NBM\:lvm.c}
{\xe \v lvm.c\:NBM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define NBM\~ ({\b l_floatatt}(MANT_DIG))}}
\par
{\bkmkstart AAAAAAADZY}
{\bkmkend AAAAAAADZY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 58 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v op_arith\:lvm.c}
{\xe \v lvm.c\:op_arith}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define op_arith( L,  iop,  fop)}}
\par
{\bkmkstart AAAAAAADZZ}
{\bkmkend AAAAAAADZZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   \{  \\\par
  TValue *v1 = vRB(i);  \\\par
  TValue *v2 = vRC(i);  \\\par
  op_arith_aux(L, v1, v2, iop, fop); \}\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 942 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v op_arith_aux\:lvm.c}
{\xe \v lvm.c\:op_arith_aux}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define op_arith_aux( L,  v1,  v2,  iop,  fop)}}
\par
{\bkmkstart AAAAAAAEAA}
{\bkmkend AAAAAAAEAA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   \{  \\\par
  if (ttisinteger(v1) && ttisinteger(v2)) \{  \\\par
    lua_Integer i1 = ivalue(v1); lua_Integer i2 = ivalue(v2);  \\\par
    pc++; setivalue(s2v(ra), iop(L, i1, i2));  \\\par
  \}  \\\par
  else op_arithf_aux(L, v1, v2, fop); \}\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 931 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v op_arithf\:lvm.c}
{\xe \v lvm.c\:op_arithf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define op_arithf( L,  fop)}}
\par
{\bkmkstart AAAAAAAEAB}
{\bkmkend AAAAAAAEAB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   \{  \\\par
  TValue *v1 = vRB(i);  \\\par
  TValue *v2 = vRC(i);  \\\par
  op_arithf_aux(L, v1, v2, fop); \}\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 913 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v op_arithf_aux\:lvm.c}
{\xe \v lvm.c\:op_arithf_aux}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define op_arithf_aux( L,  v1,  v2,  fop)}}
\par
{\bkmkstart AAAAAAAEAC}
{\bkmkend AAAAAAAEAC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   \{  \\\par
  lua_Number n1; lua_Number n2;  \\\par
  if (tonumberns(v1, n1) && tonumberns(v2, n2)) \{  \\\par
    pc++; setfltvalue(s2v(ra), fop(L, n1, n2));  \\\par
  \}\}\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 903 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v op_arithfK\:lvm.c}
{\xe \v lvm.c\:op_arithfK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define op_arithfK( L,  fop)}}
\par
{\bkmkstart AAAAAAAEAD}
{\bkmkend AAAAAAAEAD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   \{  \\\par
  TValue *v1 = vRB(i);  \\\par
  TValue *v2 = KC(i);  \\\par
  op_arithf_aux(L, v1, v2, fop); \}\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 922 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v op_arithI\:lvm.c}
{\xe \v lvm.c\:op_arithI}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define op_arithI( L,  iop,  fop)}}
\par
{\bkmkstart AAAAAAAEAE}
{\bkmkend AAAAAAAEAE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   \{  \\\par
  TValue *v1 = vRB(i);  \\\par
  int imm = GETARG_sC(i);  \\\par
  if (ttisinteger(v1)) \{  \\\par
    lua_Integer iv1 = ivalue(v1);  \\\par
    pc++; setivalue(s2v(ra), iop(L, iv1, imm));  \\\par
  \}  \\\par
  else {\cf19 if} (ttisfloat(v1)) \{  \\\par
    lua_Number nb = fltvalue(v1);  \\\par
    lua_Number fimm = cast_num(imm);  \\\par
    pc++; setfltvalue(s2v(ra), fop(L, nb, fimm)); \\\par
  \}\}\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 885 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v op_arithK\:lvm.c}
{\xe \v lvm.c\:op_arithK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define op_arithK( L,  iop,  fop)}}
\par
{\bkmkstart AAAAAAAEAF}
{\bkmkend AAAAAAAEAF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   \{  \\\par
  TValue *v1 = vRB(i);  \\\par
  TValue *v2 = KC(i);  \\\par
  op_arith_aux(L, v1, v2, iop, fop); \}\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 951 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v op_bitwise\:lvm.c}
{\xe \v lvm.c\:op_bitwise}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define op_bitwise( L,  op)}}
\par
{\bkmkstart AAAAAAAEAG}
{\bkmkend AAAAAAAEAG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   \{  \\\par
  TValue *v1 = vRB(i);  \\\par
  TValue *v2 = vRC(i);  \\\par
  lua_Integer i1; lua_Integer i2;  \\\par
  if (tointegerns(v1, &i1) && tointegerns(v2, &i2)) \{  \\\par
    pc++; setivalue(s2v(ra), op(i1, i2));  \\\par
  \}\}\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 973 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v op_bitwiseK\:lvm.c}
{\xe \v lvm.c\:op_bitwiseK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define op_bitwiseK( L,  op)}}
\par
{\bkmkstart AAAAAAAEAH}
{\bkmkend AAAAAAAEAH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   \{  \\\par
  TValue *v1 = vRB(i);  \\\par
  TValue *v2 = KC(i);  \\\par
  lua_Integer i1;  \\\par
  lua_Integer i2 = ivalue(v2);  \\\par
  if (tointegerns(v1, &i1)) \{  \\\par
    pc++; setivalue(s2v(ra), op(i1, i2));  \\\par
  \}\}\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 960 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v op_order\:lvm.c}
{\xe \v lvm.c\:op_order}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define op_order( L,  opi,  opn,  other)}}
\par
{\bkmkstart AAAAAAAEAI}
{\bkmkend AAAAAAAEAI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid         \{  \\\par
        int cond;  \\\par
        TValue *rb = vRB(i);  \\\par
        if (ttisinteger(s2v(ra)) && ttisinteger(rb)) \{  \\\par
          lua_Integer ia = ivalue(s2v(ra));  \\\par
          lua_Integer ib = ivalue(rb);  \\\par
          cond = opi(ia, ib);  \\\par
        \}  \\\par
        else {\cf19 if} (ttisnumber(s2v(ra)) && ttisnumber(rb))  \\\par
          cond = opn(s2v(ra), rb);  \\\par
        else  \\\par
          Protect(cond = other(L, s2v(ra), rb));  \\\par
        docondjump(); \}\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 987 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v op_orderI\:lvm.c}
{\xe \v lvm.c\:op_orderI}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define op_orderI( L,  opi,  opf,  inv,  tm)}}
\par
{\bkmkstart AAAAAAAEAJ}
{\bkmkend AAAAAAAEAJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid         \{  \\\par
        int cond;  \\\par
        int im = GETARG_sB(i);  \\\par
        if (ttisinteger(s2v(ra)))  \\\par
          cond = opi(ivalue(s2v(ra)), im);  \\\par
        else {\cf19 if} (ttisfloat(s2v(ra))) \{  \\\par
          lua_Number fa = fltvalue(s2v(ra));  \\\par
          lua_Number fim = cast_num(im);  \\\par
          cond = opf(fa, fim);  \\\par
        \}  \\\par
        else \{  \\\par
          int isf = GETARG_C(i);  \\\par
          Protect(cond = luaT_callorderiTM(L, s2v(ra), im, inv, isf, tm));  \\\par
        \}  \\\par
        docondjump(); \}\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 1006 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v Protect\:lvm.c}
{\xe \v lvm.c\:Protect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define Protect( exp)\~ ({\b savestate}(L,ci), (exp), {\b updatetrap}(ci))}}
\par
{\bkmkstart AAAAAAAEAK}
{\bkmkend AAAAAAAEAK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 1090 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v ProtectNT\:lvm.c}
{\xe \v lvm.c\:ProtectNT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ProtectNT( exp)\~ ({\b savepc}(L), (exp), {\b updatetrap}(ci))}}
\par
{\bkmkstart AAAAAAAEAL}
{\bkmkend AAAAAAAEAL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 1093 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v RA\:lvm.c}
{\xe \v lvm.c\:RA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RA( i)\~ (base+{\b GETARG_A}(i))}}
\par
{\bkmkstart AAAAAAAEAM}
{\bkmkend AAAAAAAEAM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 1036 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v RB\:lvm.c}
{\xe \v lvm.c\:RB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RB( i)\~ (base+{\b GETARG_B}(i))}}
\par
{\bkmkstart AAAAAAAEAN}
{\bkmkend AAAAAAAEAN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 1037 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v RC\:lvm.c}
{\xe \v lvm.c\:RC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RC( i)\~ (base+{\b GETARG_C}(i))}}
\par
{\bkmkstart AAAAAAAEAO}
{\bkmkend AAAAAAAEAO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 1040 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v RKC\:lvm.c}
{\xe \v lvm.c\:RKC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RKC( i)\~ (({\b TESTARG_k}(i)) ? k + {\b GETARG_C}(i) : {\b s2v}(base + {\b GETARG_C}(i)))}}
\par
{\bkmkstart AAAAAAAEAP}
{\bkmkend AAAAAAAEAP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 1043 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v savepc\:lvm.c}
{\xe \v lvm.c\:savepc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define savepc( L)\~ (ci->u.l.savedpc = pc)}}
\par
{\bkmkstart AAAAAAAEAQ}
{\bkmkend AAAAAAAEAQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 1076 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v savestate\:lvm.c}
{\xe \v lvm.c\:savestate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define savestate( L,  ci)\~ ({\b savepc}(L), L->top = ci->top)}}
\par
{\bkmkstart AAAAAAAEAR}
{\bkmkend AAAAAAAEAR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 1083 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v tostring\:lvm.c}
{\xe \v lvm.c\:tostring}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define tostring( L,  o)\~ 	({\b ttisstring}(o) || ({\b cvt2str}(o) && ({\b luaO_tostring}(L, o), 1)))}}
\par
{\bkmkstart AAAAAAAEAS}
{\bkmkend AAAAAAAEAS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 616 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v updatebase\:lvm.c}
{\xe \v lvm.c\:updatebase}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define updatebase( ci)\~ (base = ci->func + 1)}}
\par
{\bkmkstart AAAAAAAEAT}
{\bkmkend AAAAAAAEAT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 1049 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v updatestack\:lvm.c}
{\xe \v lvm.c\:updatestack}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define updatestack( ci)\~ \{ if (trap) \{ {\b updatebase}(ci); ra = {\b RA}(i); \} \}}}
\par
{\bkmkstart AAAAAAAEAU}
{\bkmkend AAAAAAAEAU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 1052 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v updatetrap\:lvm.c}
{\xe \v lvm.c\:updatetrap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define updatetrap( ci)\~ (trap = ci->u.l.trap)}}
\par
{\bkmkstart AAAAAAAEAV}
{\bkmkend AAAAAAAEAV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 1047 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v vmbreak\:lvm.c}
{\xe \v lvm.c\:vmbreak}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define vmbreak\~ break}}
\par
{\bkmkstart AAAAAAAEAW}
{\bkmkend AAAAAAAEAW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 1124 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v vmcase\:lvm.c}
{\xe \v lvm.c\:vmcase}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define vmcase( l)\~ case l:}}
\par
{\bkmkstart AAAAAAAEAX}
{\bkmkend AAAAAAAEAX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 1123 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v vmdispatch\:lvm.c}
{\xe \v lvm.c\:vmdispatch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define vmdispatch( o)\~ switch(o)}}
\par
{\bkmkstart AAAAAAAEAY}
{\bkmkend AAAAAAAEAY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 1122 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v vmfetch\:lvm.c}
{\xe \v lvm.c\:vmfetch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define vmfetch()}}
\par
{\bkmkstart AAAAAAAEAZ}
{\bkmkend AAAAAAAEAZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   \{ \\\par
  if (trap) \{  {\cf20 /* stack reallocation or hooks? */} \\\par
    trap = luaG_traceexec(L, pc);  {\cf20 /* handle hooks */} \\\par
    updatebase(ci);  {\cf20 /* correct stack */} \\\par
  \} \\\par
  i = *(pc++); \\\par
  ra = RA(i); {\cf20 /* WARNING: any stack reallocation invalidates 'ra' */} \\\par
\}\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 1113 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v vRB\:lvm.c}
{\xe \v lvm.c\:vRB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define vRB( i)\~ {\b s2v}({\b RB}(i))}}
\par
{\bkmkstart AAAAAAAEBA}
{\bkmkend AAAAAAAEBA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 1038 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v vRC\:lvm.c}
{\xe \v lvm.c\:vRC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define vRC( i)\~ {\b s2v}({\b RC}(i))}}
\par
{\bkmkstart AAAAAAAEBB}
{\bkmkend AAAAAAAEBB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 1041 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v copy2buff\:lvm.c}
{\xe \v lvm.c\:copy2buff}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void copy2buff ({\b StkId}  {\i top}, int  {\i n}, char *  {\i buff}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEBC}
{\bkmkend AAAAAAAEBC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 622 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v floatforloop\:lvm.c}
{\xe \v lvm.c\:floatforloop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int floatforloop ({\b StkId}  {\i ra}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEBD}
{\bkmkend AAAAAAAEBD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 266 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v forlimit\:lvm.c}
{\xe \v lvm.c\:forlimit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int forlimit ({\b lua_State} *  {\i L}, {\b lua_Integer}  {\i init}, const {\b TValue} *  {\i lim}, {\b lua_Integer} *  {\i p}, {\b lua_Integer}  {\i step}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEBE}
{\bkmkend AAAAAAAEBE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 176 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v forprep\:lvm.c}
{\xe \v lvm.c\:forprep}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int forprep ({\b lua_State} *  {\i L}, {\b StkId}  {\i ra}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEBF}
{\bkmkend AAAAAAAEBF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 206 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v l_strcmp\:lvm.c}
{\xe \v lvm.c\:l_strcmp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int l_strcmp (const {\b TString} *  {\i ls}, const {\b TString} *  {\i rs}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEBG}
{\bkmkend AAAAAAAEBG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 378 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v l_strton\:lvm.c}
{\xe \v lvm.c\:l_strton}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int l_strton (const {\b TValue} *  {\i obj}, {\b TValue} *  {\i result}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEBH}
{\bkmkend AAAAAAAEBH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 90 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LEfloatint\:lvm.c}
{\xe \v lvm.c\:LEfloatint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int LEfloatint ({\b lua_Number}  {\i f}, {\b lua_Integer}  {\i i}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEBI}
{\bkmkend AAAAAAAEBI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 463 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LEintfloat\:lvm.c}
{\xe \v lvm.c\:LEintfloat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int LEintfloat ({\b lua_Integer}  {\i i}, {\b lua_Number}  {\i f}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEBJ}
{\bkmkend AAAAAAAEBJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 429 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LEnum\:lvm.c}
{\xe \v lvm.c\:LEnum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int LEnum (const {\b TValue} *  {\i l}, const {\b TValue} *  {\i r}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEBK}
{\bkmkend AAAAAAAEBK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 501 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lessequalothers\:lvm.c}
{\xe \v lvm.c\:lessequalothers}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int lessequalothers ({\b lua_State} *  {\i L}, const {\b TValue} *  {\i l}, const {\b TValue} *  {\i r}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEBL}
{\bkmkend AAAAAAAEBL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 545 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lessthanothers\:lvm.c}
{\xe \v lvm.c\:lessthanothers}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int lessthanothers ({\b lua_State} *  {\i L}, const {\b TValue} *  {\i l}, const {\b TValue} *  {\i r}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEBM}
{\bkmkend AAAAAAAEBM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 523 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LTfloatint\:lvm.c}
{\xe \v lvm.c\:LTfloatint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int LTfloatint ({\b lua_Number}  {\i f}, {\b lua_Integer}  {\i i}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEBN}
{\bkmkend AAAAAAAEBN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 446 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LTintfloat\:lvm.c}
{\xe \v lvm.c\:LTintfloat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int LTintfloat ({\b lua_Integer}  {\i i}, {\b lua_Number}  {\i f}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEBO}
{\bkmkend AAAAAAAEBO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 412 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LTnum\:lvm.c}
{\xe \v lvm.c\:LTnum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static int LTnum (const {\b TValue} *  {\i l}, const {\b TValue} *  {\i r}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEBP}
{\bkmkend AAAAAAAEBP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 479 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaV_concat\:lvm.c}
{\xe \v lvm.c\:luaV_concat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaV_concat ({\b lua_State} *  {\i L}, int  {\i total})}}
\par
{\bkmkstart AAAAAAAEBQ}
{\bkmkend AAAAAAAEBQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 636 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaV_equalobj\:lvm.c}
{\xe \v lvm.c\:luaV_equalobj}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int luaV_equalobj ({\b lua_State} *  {\i L}, const {\b TValue} *  {\i t1}, const {\b TValue} *  {\i t2})}}
\par
{\bkmkstart AAAAAAAEBR}
{\bkmkend AAAAAAAEBR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 568 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaV_execute\:lvm.c}
{\xe \v lvm.c\:luaV_execute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaV_execute ({\b lua_State} *  {\i L}, {\b CallInfo} *  {\i ci})}}
\par
{\bkmkstart AAAAAAAEBS}
{\bkmkend AAAAAAAEBS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 1127 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaV_finishget\:lvm.c}
{\xe \v lvm.c\:luaV_finishget}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaV_finishget ({\b lua_State} *  {\i L}, const {\b TValue} *  {\i t}, {\b TValue} *  {\i key}, {\b StkId}  {\i val}, const {\b TValue} *  {\i slot})}}
\par
{\bkmkstart AAAAAAAEBT}
{\bkmkend AAAAAAAEBT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 287 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaV_finishOp\:lvm.c}
{\xe \v lvm.c\:luaV_finishOp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaV_finishOp ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAAEBU}
{\bkmkend AAAAAAAEBU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 805 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaV_finishset\:lvm.c}
{\xe \v lvm.c\:luaV_finishset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaV_finishset ({\b lua_State} *  {\i L}, const {\b TValue} *  {\i t}, {\b TValue} *  {\i key}, {\b TValue} *  {\i val}, const {\b TValue} *  {\i slot})}}
\par
{\bkmkstart AAAAAAAEBV}
{\bkmkend AAAAAAAEBV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 330 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaV_flttointeger\:lvm.c}
{\xe \v lvm.c\:luaV_flttointeger}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int luaV_flttointeger ({\b lua_Number}  {\i n}, {\b lua_Integer} *  {\i p}, {\b F2Imod}  {\i mode})}}
\par
{\bkmkstart AAAAAAAEBW}
{\bkmkend AAAAAAAEBW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 121 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaV_idiv\:lvm.c}
{\xe \v lvm.c\:luaV_idiv}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lua_Integer} luaV_idiv ({\b lua_State} *  {\i L}, {\b lua_Integer}  {\i m}, {\b lua_Integer}  {\i n})}}
\par
{\bkmkstart AAAAAAAEBX}
{\bkmkend AAAAAAAEBX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 715 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaV_lessequal\:lvm.c}
{\xe \v lvm.c\:luaV_lessequal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int luaV_lessequal ({\b lua_State} *  {\i L}, const {\b TValue} *  {\i l}, const {\b TValue} *  {\i r})}}
\par
{\bkmkstart AAAAAAAEBY}
{\bkmkend AAAAAAAEBY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 557 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaV_lessthan\:lvm.c}
{\xe \v lvm.c\:luaV_lessthan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int luaV_lessthan ({\b lua_State} *  {\i L}, const {\b TValue} *  {\i l}, const {\b TValue} *  {\i r})}}
\par
{\bkmkstart AAAAAAAEBZ}
{\bkmkend AAAAAAAEBZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 535 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaV_mod\:lvm.c}
{\xe \v lvm.c\:luaV_mod}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lua_Integer} luaV_mod ({\b lua_State} *  {\i L}, {\b lua_Integer}  {\i m}, {\b lua_Integer}  {\i n})}}
\par
{\bkmkstart AAAAAAAECA}
{\bkmkend AAAAAAAECA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 735 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaV_modf\:lvm.c}
{\xe \v lvm.c\:luaV_modf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lua_Number} luaV_modf ({\b lua_State} *  {\i L}, {\b lua_Number}  {\i m}, {\b lua_Number}  {\i n})}}
\par
{\bkmkstart AAAAAAAECB}
{\bkmkend AAAAAAAECB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 753 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaV_objlen\:lvm.c}
{\xe \v lvm.c\:luaV_objlen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaV_objlen ({\b lua_State} *  {\i L}, {\b StkId}  {\i ra}, const {\b TValue} *  {\i rb})}}
\par
{\bkmkstart AAAAAAAECC}
{\bkmkend AAAAAAAECC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 680 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaV_shiftl\:lvm.c}
{\xe \v lvm.c\:luaV_shiftl}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b lua_Integer} luaV_shiftl ({\b lua_Integer}  {\i x}, {\b lua_Integer}  {\i y})}}
\par
{\bkmkstart AAAAAAAECD}
{\bkmkend AAAAAAAECD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 768 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaV_tointeger\:lvm.c}
{\xe \v lvm.c\:luaV_tointeger}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int luaV_tointeger (const {\b TValue} *  {\i obj}, {\b lua_Integer} *  {\i p}, {\b F2Imod}  {\i mode})}}
\par
{\bkmkstart AAAAAAAECE}
{\bkmkend AAAAAAAECE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 152 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaV_tointegerns\:lvm.c}
{\xe \v lvm.c\:luaV_tointegerns}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int luaV_tointegerns (const {\b TValue} *  {\i obj}, {\b lua_Integer} *  {\i p}, {\b F2Imod}  {\i mode})}}
\par
{\bkmkstart AAAAAAAECF}
{\bkmkend AAAAAAAECF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 137 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaV_tonumber_\:lvm.c}
{\xe \v lvm.c\:luaV_tonumber_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int luaV_tonumber_ (const {\b TValue} *  {\i obj}, {\b lua_Number} *  {\i n})}}
\par
{\bkmkstart AAAAAAAECG}
{\bkmkend AAAAAAAECG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 103 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v pushclosure\:lvm.c}
{\xe \v lvm.c\:pushclosure}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void pushclosure ({\b lua_State} *  {\i L}, {\b Proto} *  {\i p}, {\b UpVal} **  {\i encup}, {\b StkId}  {\i base}, {\b StkId}  {\i ra}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAECH}
{\bkmkend AAAAAAAECH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 784 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/gitworkspace/lua/src/lvm.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v D:/gitworkspace/lua/src/lvm.h}
{\xe \v D:/gitworkspace/lua/src/lvm.h}
{\bkmkstart AAAAAAAECI}
{\bkmkend AAAAAAAECI}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "ldo.h"}\par
{\f2 #include "lobject.h"}\par
{\f2 #include "ltm.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b cvt2str}(o)\~ {\b ttisnumber}(o)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b cvt2num}(o)\~ {\b ttisstring}(o)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_FLOORN2I}\~ {\b F2Ieq}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b tonumber}(o,  n)\~ 	({\b ttisfloat}(o) ? (*(n) = {\b fltvalue}(o), 1) : {\b luaV_tonumber_}(o,n))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b tonumberns}(o,  n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b tointeger}(o,  i)\~   ({\b ttisinteger}(o) ? (*(i) = {\b ivalue}(o), 1) : {\b luaV_tointeger}(o,i,{\b LUA_FLOORN2I}))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b tointegerns}(o,  i)\~   ({\b ttisinteger}(o) ? (*(i) = {\b ivalue}(o), 1) : {\b luaV_tointegerns}(o,i,{\b LUA_FLOORN2I}))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b intop}(op,  v1,  v2)\~ {\b l_castU2S}({\b l_castS2U}(v1) op {\b l_castS2U}(v2))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luaV_rawequalobj}(t1,  t2)\~ {\b luaV_equalobj}(NULL,t1,t2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luaV_fastget}(L,  t,  k,  slot,  f)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luaV_fastgeti}(L,  t,  k,  slot)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luaV_finishfastset}(L,  t,  slot,  v)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'B6\'BE\'D9\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b F2Imod} \{ {\b F2Ieq}, 
{\b F2Ifloor}, 
{\b F2Iceil}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} int {\b luaV_equalobj} ({\b lua_State} *L, const {\b TValue} *t1, const {\b TValue} *t2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} int {\b luaV_lessthan} ({\b lua_State} *L, const {\b TValue} *l, const {\b TValue} *r)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} int {\b luaV_lessequal} ({\b lua_State} *L, const {\b TValue} *l, const {\b TValue} *r)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} int {\b luaV_tonumber_} (const {\b TValue} *obj, {\b lua_Number} *n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} int {\b luaV_tointeger} (const {\b TValue} *obj, {\b lua_Integer} *p, {\b F2Imod} mode)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} int {\b luaV_tointegerns} (const {\b TValue} *obj, {\b lua_Integer} *p, {\b F2Imod} mode)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} int {\b luaV_flttointeger} ({\b lua_Number} n, {\b lua_Integer} *p, {\b F2Imod} mode)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaV_finishget} ({\b lua_State} *L, const {\b TValue} *t, {\b TValue} *key, {\b StkId} val, const {\b TValue} *slot)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaV_finishset} ({\b lua_State} *L, const {\b TValue} *t, {\b TValue} *key, {\b TValue} *val, const {\b TValue} *slot)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaV_finishOp} ({\b lua_State} *L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaV_execute} ({\b lua_State} *L, {\b CallInfo} *ci)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaV_concat} ({\b lua_State} *L, int total)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} {\b lua_Integer} {\b luaV_idiv} ({\b lua_State} *L, {\b lua_Integer} x, {\b lua_Integer} y)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} {\b lua_Integer} {\b luaV_mod} ({\b lua_State} *L, {\b lua_Integer} x, {\b lua_Integer} y)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} {\b lua_Number} {\b luaV_modf} ({\b lua_State} *L, {\b lua_Number} x, {\b lua_Number} y)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} {\b lua_Integer} {\b luaV_shiftl} ({\b lua_Integer} x, {\b lua_Integer} y)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaV_objlen} ({\b lua_State} *L, {\b StkId} ra, const {\b TValue} *rb)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v cvt2num\:lvm.h}
{\xe \v lvm.h\:cvt2num}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define cvt2num( o)\~ {\b ttisstring}(o)}}
\par
{\bkmkstart AAAAAAAECJ}
{\bkmkend AAAAAAAECJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.h \'B5\'DA 24 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v cvt2str\:lvm.h}
{\xe \v lvm.h\:cvt2str}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define cvt2str( o)\~ {\b ttisnumber}(o)}}
\par
{\bkmkstart AAAAAAAECK}
{\bkmkend AAAAAAAECK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.h \'B5\'DA 17 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v intop\:lvm.h}
{\xe \v lvm.h\:intop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define intop( op,  v1,  v2)\~ {\b l_castU2S}({\b l_castS2U}(v1) op {\b l_castS2U}(v2))}}
\par
{\bkmkstart AAAAAAAECL}
{\bkmkend AAAAAAAECL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.h \'B5\'DA 71 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v LUA_FLOORN2I\:lvm.h}
{\xe \v lvm.h\:LUA_FLOORN2I}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_FLOORN2I\~ {\b F2Ieq}}}
\par
{\bkmkstart AAAAAAAECM}
{\bkmkend AAAAAAAECM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.h \'B5\'DA 36 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaV_fastget\:lvm.h}
{\xe \v lvm.h\:luaV_fastget}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luaV_fastget( L,  t,  k,  slot,  f)}}
\par
{\bkmkstart AAAAAAAECN}
{\bkmkend AAAAAAAECN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   (!ttistable(t)  \\\par
   ? (slot = NULL, 0)  {\cf20 /* not a table; 'slot' is NULL and result is 0 */}  \\\par
   : (slot = f(hvalue(t), k),  {\cf20 /* else, do raw access */}  \\\par
      !isempty(slot)))  {\cf20 /* result not empty? */}\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.h \'B5\'DA 83 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaV_fastgeti\:lvm.h}
{\xe \v lvm.h\:luaV_fastgeti}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luaV_fastgeti( L,  t,  k,  slot)}}
\par
{\bkmkstart AAAAAAAECO}
{\bkmkend AAAAAAAECO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   (!ttistable(t)  \\\par
   ? (slot = NULL, 0)  {\cf20 /* not a table; 'slot' is NULL and result is 0 */}  \\\par
   : (slot = (l_castS2U(k) - 1u < hvalue(t)->alimit) \\\par
              ? &hvalue(t)->array[k - 1] : luaH_getint(hvalue(t), k), \\\par
      !isempty(slot)))  {\cf20 /* result not empty? */}\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.h \'B5\'DA 94 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaV_finishfastset\:lvm.h}
{\xe \v lvm.h\:luaV_finishfastset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luaV_finishfastset( L,  t,  slot,  v)}}
\par
{\bkmkstart AAAAAAAECP}
{\bkmkend AAAAAAAECP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     \{ setobj2t(L, cast(TValue *,slot), v); \\\par
      luaC_barrierback(L, gcvalue(t), v); \}\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.h \'B5\'DA 106 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaV_rawequalobj\:lvm.h}
{\xe \v lvm.h\:luaV_rawequalobj}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luaV_rawequalobj( t1,  t2)\~ {\b luaV_equalobj}(NULL,t1,t2)}}
\par
{\bkmkstart AAAAAAAECQ}
{\bkmkend AAAAAAAECQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.h \'B5\'DA 73 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v tointeger\:lvm.h}
{\xe \v lvm.h\:tointeger}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define tointeger( o,  i)\~   ({\b ttisinteger}(o) ? (*(i) = {\b ivalue}(o), 1) : {\b luaV_tointeger}(o,i,{\b LUA_FLOORN2I}))}}
\par
{\bkmkstart AAAAAAAECR}
{\bkmkend AAAAAAAECR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.h \'B5\'DA 62 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v tointegerns\:lvm.h}
{\xe \v lvm.h\:tointegerns}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define tointegerns( o,  i)\~   ({\b ttisinteger}(o) ? (*(i) = {\b ivalue}(o), 1) : {\b luaV_tointegerns}(o,i,{\b LUA_FLOORN2I}))}}
\par
{\bkmkstart AAAAAAAECS}
{\bkmkend AAAAAAAECS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.h \'B5\'DA 67 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v tonumber\:lvm.h}
{\xe \v lvm.h\:tonumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define tonumber( o,  n)\~ 	({\b ttisfloat}(o) ? (*(n) = {\b fltvalue}(o), 1) : {\b luaV_tonumber_}(o,n))}}
\par
{\bkmkstart AAAAAAAECT}
{\bkmkend AAAAAAAECT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.h \'B5\'DA 51 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v tonumberns\:lvm.h}
{\xe \v lvm.h\:tonumberns}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define tonumberns( o,  n)}}
\par
{\bkmkstart AAAAAAAECU}
{\bkmkend AAAAAAAECU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     (ttisfloat(o) ? ((n) = fltvalue(o), 1) : \\\par
    (ttisinteger(o) ? ((n) = cast_num(ivalue(o)), 1) : 0))\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.h \'B5\'DA 56 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'B6\'BE\'D9\'C0\'E0\'D0\'CD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v F2Imod\:lvm.h}
{\xe \v lvm.h\:F2Imod}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b F2Imod}}}
\par
{\bkmkstart AAAAAAAECV}
{\bkmkend AAAAAAAECV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C3\'B6\'BE\'D9\'D6\'B5:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v F2Ieq\:lvm.h}
{\xe \v lvm.h\:F2Ieq}
{\qr F2Ieq{\bkmkstart AAAAAAAECW}
{\bkmkend AAAAAAAECW}
\cell }{\cell }{\row }
{\xe \v F2Ifloor\:lvm.h}
{\xe \v lvm.h\:F2Ifloor}
{\qr F2Ifloor{\bkmkstart AAAAAAAECX}
{\bkmkend AAAAAAAECX}
\cell }{\cell }{\row }
{\xe \v F2Iceil\:lvm.h}
{\xe \v lvm.h\:F2Iceil}
{\qr F2Iceil{\bkmkstart AAAAAAAECY}
{\bkmkend AAAAAAAECY}
\cell }{\cell }{\row }
}
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.h \'B5\'DA 43 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v luaV_concat\:lvm.h}
{\xe \v lvm.h\:luaV_concat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaV_concat ({\b lua_State} *  {\i L}, int  {\i total})}}
\par
{\bkmkstart AAAAAAAECZ}
{\bkmkend AAAAAAAECZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 636 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaV_equalobj\:lvm.h}
{\xe \v lvm.h\:luaV_equalobj}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} int luaV_equalobj ({\b lua_State} *  {\i L}, const {\b TValue} *  {\i t1}, const {\b TValue} *  {\i t2})}}
\par
{\bkmkstart AAAAAAAEDA}
{\bkmkend AAAAAAAEDA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 568 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaV_execute\:lvm.h}
{\xe \v lvm.h\:luaV_execute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaV_execute ({\b lua_State} *  {\i L}, {\b CallInfo} *  {\i ci})}}
\par
{\bkmkstart AAAAAAAEDB}
{\bkmkend AAAAAAAEDB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 1127 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaV_finishget\:lvm.h}
{\xe \v lvm.h\:luaV_finishget}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaV_finishget ({\b lua_State} *  {\i L}, const {\b TValue} *  {\i t}, {\b TValue} *  {\i key}, {\b StkId}  {\i val}, const {\b TValue} *  {\i slot})}}
\par
{\bkmkstart AAAAAAAEDC}
{\bkmkend AAAAAAAEDC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 287 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaV_finishOp\:lvm.h}
{\xe \v lvm.h\:luaV_finishOp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaV_finishOp ({\b lua_State} *  {\i L})}}
\par
{\bkmkstart AAAAAAAEDD}
{\bkmkend AAAAAAAEDD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 805 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaV_finishset\:lvm.h}
{\xe \v lvm.h\:luaV_finishset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaV_finishset ({\b lua_State} *  {\i L}, const {\b TValue} *  {\i t}, {\b TValue} *  {\i key}, {\b TValue} *  {\i val}, const {\b TValue} *  {\i slot})}}
\par
{\bkmkstart AAAAAAAEDE}
{\bkmkend AAAAAAAEDE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 330 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaV_flttointeger\:lvm.h}
{\xe \v lvm.h\:luaV_flttointeger}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} int luaV_flttointeger ({\b lua_Number}  {\i n}, {\b lua_Integer} *  {\i p}, {\b F2Imod}  {\i mode})}}
\par
{\bkmkstart AAAAAAAEDF}
{\bkmkend AAAAAAAEDF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 121 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaV_idiv\:lvm.h}
{\xe \v lvm.h\:luaV_idiv}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} {\b lua_Integer} luaV_idiv ({\b lua_State} *  {\i L}, {\b lua_Integer}  {\i x}, {\b lua_Integer}  {\i y})}}
\par
{\bkmkstart AAAAAAAEDG}
{\bkmkend AAAAAAAEDG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 715 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaV_lessequal\:lvm.h}
{\xe \v lvm.h\:luaV_lessequal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} int luaV_lessequal ({\b lua_State} *  {\i L}, const {\b TValue} *  {\i l}, const {\b TValue} *  {\i r})}}
\par
{\bkmkstart AAAAAAAEDH}
{\bkmkend AAAAAAAEDH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 557 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaV_lessthan\:lvm.h}
{\xe \v lvm.h\:luaV_lessthan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} int luaV_lessthan ({\b lua_State} *  {\i L}, const {\b TValue} *  {\i l}, const {\b TValue} *  {\i r})}}
\par
{\bkmkstart AAAAAAAEDI}
{\bkmkend AAAAAAAEDI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 535 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaV_mod\:lvm.h}
{\xe \v lvm.h\:luaV_mod}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} {\b lua_Integer} luaV_mod ({\b lua_State} *  {\i L}, {\b lua_Integer}  {\i x}, {\b lua_Integer}  {\i y})}}
\par
{\bkmkstart AAAAAAAEDJ}
{\bkmkend AAAAAAAEDJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 735 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaV_modf\:lvm.h}
{\xe \v lvm.h\:luaV_modf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} {\b lua_Number} luaV_modf ({\b lua_State} *  {\i L}, {\b lua_Number}  {\i x}, {\b lua_Number}  {\i y})}}
\par
{\bkmkstart AAAAAAAEDK}
{\bkmkend AAAAAAAEDK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 753 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaV_objlen\:lvm.h}
{\xe \v lvm.h\:luaV_objlen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaV_objlen ({\b lua_State} *  {\i L}, {\b StkId}  {\i ra}, const {\b TValue} *  {\i rb})}}
\par
{\bkmkstart AAAAAAAEDL}
{\bkmkend AAAAAAAEDL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 680 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaV_shiftl\:lvm.h}
{\xe \v lvm.h\:luaV_shiftl}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} {\b lua_Integer} luaV_shiftl ({\b lua_Integer}  {\i x}, {\b lua_Integer}  {\i y})}}
\par
{\bkmkstart AAAAAAAEDM}
{\bkmkend AAAAAAAEDM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 768 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaV_tointeger\:lvm.h}
{\xe \v lvm.h\:luaV_tointeger}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} int luaV_tointeger (const {\b TValue} *  {\i obj}, {\b lua_Integer} *  {\i p}, {\b F2Imod}  {\i mode})}}
\par
{\bkmkstart AAAAAAAEDN}
{\bkmkend AAAAAAAEDN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 152 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaV_tointegerns\:lvm.h}
{\xe \v lvm.h\:luaV_tointegerns}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} int luaV_tointegerns (const {\b TValue} *  {\i obj}, {\b lua_Integer} *  {\i p}, {\b F2Imod}  {\i mode})}}
\par
{\bkmkstart AAAAAAAEDO}
{\bkmkend AAAAAAAEDO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 137 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaV_tonumber_\:lvm.h}
{\xe \v lvm.h\:luaV_tonumber_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} int luaV_tonumber_ (const {\b TValue} *  {\i obj}, {\b lua_Number} *  {\i n})}}
\par
{\bkmkstart AAAAAAAEDP}
{\bkmkend AAAAAAAEDP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lvm.c \'B5\'DA 103 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/gitworkspace/lua/src/lzio.c \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v D:/gitworkspace/lua/src/lzio.c}
{\xe \v D:/gitworkspace/lua/src/lzio.c}
{\bkmkstart AAAAAAAEDQ}
{\bkmkend AAAAAAAEDQ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "lprefix.h"}\par
{\f2 #include <string.h>}\par
{\f2 #include "lua.h"}\par
{\f2 #include "llimits.h"}\par
{\f2 #include "lmem.h"}\par
{\f2 #include "lstate.h"}\par
{\f2 #include "lzio.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b lzio_c}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LUA_CORE}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b luaZ_fill} ({\b ZIO} *z)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b luaZ_init} ({\b lua_State} *L, {\b ZIO} *z, {\b lua_Reader} {\b reader}, void *data)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
size_t {\b luaZ_read} ({\b ZIO} *z, void *b, size_t n)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v LUA_CORE\:lzio.c}
{\xe \v lzio.c\:LUA_CORE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LUA_CORE}}
\par
{\bkmkstart AAAAAAAEDR}
{\bkmkend AAAAAAAEDR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lzio.c \'B5\'DA 8 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v lzio_c\:lzio.c}
{\xe \v lzio.c\:lzio_c}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define lzio_c}}
\par
{\bkmkstart AAAAAAAEDS}
{\bkmkend AAAAAAAEDS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lzio.c \'B5\'DA 7 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v luaZ_fill\:lzio.c}
{\xe \v lzio.c\:luaZ_fill}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int luaZ_fill ({\b ZIO} *  {\i z})}}
\par
{\bkmkstart AAAAAAAEDT}
{\bkmkend AAAAAAAEDT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lzio.c \'B5\'DA 23 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaZ_init\:lzio.c}
{\xe \v lzio.c\:luaZ_init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void luaZ_init ({\b lua_State} *  {\i L}, {\b ZIO} *  {\i z}, {\b lua_Reader}  {\i reader}, void *  {\i data})}}
\par
{\bkmkstart AAAAAAAEDU}
{\bkmkend AAAAAAAEDU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lzio.c \'B5\'DA 38 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaZ_read\:lzio.c}
{\xe \v lzio.c\:luaZ_read}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
size_t luaZ_read ({\b ZIO} *  {\i z}, void *  {\i b}, size_t  {\i n})}}
\par
{\bkmkstart AAAAAAAEDV}
{\bkmkend AAAAAAAEDV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lzio.c \'B5\'DA 48 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
D:/gitworkspace/lua/src/lzio.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v D:/gitworkspace/lua/src/lzio.h}
{\xe \v D:/gitworkspace/lua/src/lzio.h}
{\bkmkstart AAAAAAAEDW}
{\bkmkend AAAAAAAEDW}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "lua.h"}\par
{\f2 #include "lmem.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BD\'E1\'B9\'B9\'CC\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Mbuffer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Zio}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EOZ}\~ (-1)			/* end of stream */\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b zgetc}(z)\~ (((z)->n--)>0 ?  {\b cast_uchar}(*(z)->p++) : {\b luaZ_fill}(z))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luaZ_initbuffer}(L,  buff)\~ ((buff)->buffer = NULL, (buff)->buffsize = 0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luaZ_buffer}(buff)\~ ((buff)->buffer)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luaZ_sizebuffer}(buff)\~ ((buff)->buffsize)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luaZ_bufflen}(buff)\~ ((buff)->n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luaZ_buffremove}(buff,  i)\~ ((buff)->n -= (i))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luaZ_resetbuffer}(buff)\~ ((buff)->n = 0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luaZ_resizebuffer}(L,  buff,  size)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b luaZ_freebuffer}(L,  buff)\~ {\b luaZ_resizebuffer}(L, buff, 0)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'D0\'CD\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b Zio} {\b ZIO}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b Mbuffer} {\b Mbuffer}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} void {\b luaZ_init} ({\b lua_State} *L, {\b ZIO} *z, {\b lua_Reader} {\b reader}, void *data)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} size_t {\b luaZ_read} ({\b ZIO} *z, void *b, size_t n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LUAI_FUNC} int {\b luaZ_fill} ({\b ZIO} *z)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v EOZ\:lzio.h}
{\xe \v lzio.h\:EOZ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EOZ\~ (-1)			/* end of stream */}}
\par
{\bkmkstart AAAAAAAEDX}
{\bkmkend AAAAAAAEDX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lzio.h \'B5\'DA 16 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaZ_buffer\:lzio.h}
{\xe \v lzio.h\:luaZ_buffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luaZ_buffer( buff)\~ ((buff)->buffer)}}
\par
{\bkmkstart AAAAAAAEDY}
{\bkmkend AAAAAAAEDY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lzio.h \'B5\'DA 31 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaZ_bufflen\:lzio.h}
{\xe \v lzio.h\:luaZ_bufflen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luaZ_bufflen( buff)\~ ((buff)->n)}}
\par
{\bkmkstart AAAAAAAEDZ}
{\bkmkend AAAAAAAEDZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lzio.h \'B5\'DA 33 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaZ_buffremove\:lzio.h}
{\xe \v lzio.h\:luaZ_buffremove}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luaZ_buffremove( buff,  i)\~ ((buff)->n -= (i))}}
\par
{\bkmkstart AAAAAAAEEA}
{\bkmkend AAAAAAAEEA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lzio.h \'B5\'DA 35 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaZ_freebuffer\:lzio.h}
{\xe \v lzio.h\:luaZ_freebuffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luaZ_freebuffer( L,  buff)\~ {\b luaZ_resizebuffer}(L, buff, 0)}}
\par
{\bkmkstart AAAAAAAEEB}
{\bkmkend AAAAAAAEEB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lzio.h \'B5\'DA 44 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaZ_initbuffer\:lzio.h}
{\xe \v lzio.h\:luaZ_initbuffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luaZ_initbuffer( L,  buff)\~ ((buff)->buffer = NULL, (buff)->buffsize = 0)}}
\par
{\bkmkstart AAAAAAAEEC}
{\bkmkend AAAAAAAEEC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lzio.h \'B5\'DA 29 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaZ_resetbuffer\:lzio.h}
{\xe \v lzio.h\:luaZ_resetbuffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luaZ_resetbuffer( buff)\~ ((buff)->n = 0)}}
\par
{\bkmkstart AAAAAAAEED}
{\bkmkend AAAAAAAEED}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lzio.h \'B5\'DA 36 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaZ_resizebuffer\:lzio.h}
{\xe \v lzio.h\:luaZ_resizebuffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luaZ_resizebuffer( L,  buff,  size)}}
\par
{\bkmkstart AAAAAAAEEE}
{\bkmkend AAAAAAAEEE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     ((buff)->buffer = luaM_reallocvchar(L, (buff)->buffer, \\\par
                (buff)->buffsize, size), \\\par
    (buff)->buffsize = size)\par
}
{
\'D4\'DA\'CE\'C4\'BC\'FE lzio.h \'B5\'DA 39 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaZ_sizebuffer\:lzio.h}
{\xe \v lzio.h\:luaZ_sizebuffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define luaZ_sizebuffer( buff)\~ ((buff)->buffsize)}}
\par
{\bkmkstart AAAAAAAEEF}
{\bkmkend AAAAAAAEEF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lzio.h \'B5\'DA 32 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v zgetc\:lzio.h}
{\xe \v lzio.h\:zgetc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define zgetc( z)\~ (((z)->n--)>0 ?  {\b cast_uchar}(*(z)->p++) : {\b luaZ_fill}(z))}}
\par
{\bkmkstart AAAAAAAEEG}
{\bkmkend AAAAAAAEEG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lzio.h \'B5\'DA 20 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'D0\'CD\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v Mbuffer\:lzio.h}
{\xe \v lzio.h\:Mbuffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b Mbuffer} {\b Mbuffer}}}
\par
{\bkmkstart AAAAAAAEEH}
{\bkmkend AAAAAAAEEH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ZIO\:lzio.h}
{\xe \v lzio.h\:ZIO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b Zio} {\b ZIO}}}
\par
{\bkmkstart AAAAAAAEEI}
{\bkmkend AAAAAAAEEI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lzio.h \'B5\'DA 1 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v luaZ_fill\:lzio.h}
{\xe \v lzio.h\:luaZ_fill}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} int luaZ_fill ({\b ZIO} *  {\i z})}}
\par
{\bkmkstart AAAAAAAEEJ}
{\bkmkend AAAAAAAEEJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lzio.c \'B5\'DA 23 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaZ_init\:lzio.h}
{\xe \v lzio.h\:luaZ_init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} void luaZ_init ({\b lua_State} *  {\i L}, {\b ZIO} *  {\i z}, {\b lua_Reader}  {\i reader}, void *  {\i data})}}
\par
{\bkmkstart AAAAAAAEEK}
{\bkmkend AAAAAAAEEK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lzio.c \'B5\'DA 38 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}
{\xe \v luaZ_read\:lzio.h}
{\xe \v lzio.h\:luaZ_read}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LUAI_FUNC} size_t luaZ_read ({\b ZIO} *  {\i z}, void *  {\i b}, size_t  {\i n})}}
\par
{\bkmkstart AAAAAAAEEL}
{\bkmkend AAAAAAAEEL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA\'CE\'C4\'BC\'FE lzio.c \'B5\'DA 48 \'D0\'D0\'B6\'A8\'D2\'E5.}\par
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \'CB\'F7\'D2\'FD\par 
\pard\plain 
{\tc \v \'CB\'F7\'D2\'FD}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}