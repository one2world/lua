<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_lmathlib_8c_source" xml:lang="zh">
<title>D:/gitworkspace/lua/lmathlib.c</title>
<programlisting>00001 <emphasis role="comment">/*</emphasis>
00002 <emphasis role="comment">**&#32;$Id:&#32;lmathlib.c&#32;$</emphasis>
00003 <emphasis role="comment">**&#32;Standard&#32;mathematical&#32;library</emphasis>
00004 <emphasis role="comment">**&#32;See&#32;Copyright&#32;Notice&#32;in&#32;lua.h</emphasis>
00005 <emphasis role="comment">*/</emphasis>
00006 
<anchor xml:id="_lmathlib_8c_source_1l00007"/><link linkend="_lmathlib_8c_1a758ac163994ce1fb9a74163e4d468db3">00007</link> <emphasis role="preprocessor">#define&#32;lmathlib_c</emphasis>
<anchor xml:id="_lmathlib_8c_source_1l00008"/><link linkend="_lmathlib_8c_1a884b19ad6094d6238c4072a8064aeb12">00008</link> <emphasis role="preprocessor">#define&#32;LUA_LIB</emphasis>
00009 
00010 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_lprefix_8h">lprefix.h</link>&quot;</emphasis>
00011 
00012 
00013 <emphasis role="preprocessor">#include&#32;&lt;float.h&gt;</emphasis>
00014 <emphasis role="preprocessor">#include&#32;&lt;limits.h&gt;</emphasis>
00015 <emphasis role="preprocessor">#include&#32;&lt;math.h&gt;</emphasis>
00016 <emphasis role="preprocessor">#include&#32;&lt;stdlib.h&gt;</emphasis>
00017 <emphasis role="preprocessor">#include&#32;&lt;time.h&gt;</emphasis>
00018 
00019 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_lua_8h">lua.h</link>&quot;</emphasis>
00020 
00021 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_lauxlib_8h">lauxlib.h</link>&quot;</emphasis>
00022 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_lualib_8h">lualib.h</link>&quot;</emphasis>
00023 
00024 
00025 <emphasis role="preprocessor">#undef&#32;PI</emphasis>
<anchor xml:id="_lmathlib_8c_source_1l00026"/><link linkend="_lmathlib_8c_1a598a3330b3c21701223ee0ca14316eca">00026</link> <emphasis role="preprocessor">#define&#32;PI&#32;&#32;(l_mathop(3.141592653589793238462643383279502884))</emphasis>
00027 
00028 
<anchor xml:id="_lmathlib_8c_source_1l00029"/><link linkend="_lmathlib_8c_1a9545dd3926974393ff34e33a108df628">00029</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lmathlib_8c_1a9545dd3926974393ff34e33a108df628">math_abs</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L)&#32;{
00030 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lapi_8c_1aba53e83eb1fff94b5ed96203bb52d8ae">lua_isinteger</link>(L,&#32;1))&#32;{
00031 &#32;&#32;&#32;&#32;<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;<link linkend="_struct_dyndata_1a76f11d9a0a47b94f72c2d0e77fb32240">n</link>&#32;=&#32;<link linkend="_lua_8h_1a1365e48377a3b567e9d88423b2a6345c">lua_tointeger</link>(L,&#32;1);
00032 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_struct_dyndata_1a76f11d9a0a47b94f72c2d0e77fb32240">n</link>&#32;&lt;&#32;0)&#32;<link linkend="_struct_dyndata_1a76f11d9a0a47b94f72c2d0e77fb32240">n</link>&#32;=&#32;(<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>)(0u&#32;-&#32;(<link linkend="_lua_8h_1a2357bdcd9af1aaef0a6895a9c3b7eccf">lua_Unsigned</link>)<link linkend="_struct_dyndata_1a76f11d9a0a47b94f72c2d0e77fb32240">n</link>);
00033 &#32;&#32;&#32;&#32;<link linkend="_lapi_8c_1adcec46ff05dfee9a3c4c05828b40c213">lua_pushinteger</link>(L,&#32;<link linkend="_struct_dyndata_1a76f11d9a0a47b94f72c2d0e77fb32240">n</link>);
00034 &#32;&#32;}
00035 &#32;&#32;<emphasis role="keywordflow">else</emphasis>
00036 &#32;&#32;&#32;&#32;<link linkend="_lapi_8c_1a328625a03fbb5548f27b1af10f109f6a">lua_pushnumber</link>(L,&#32;<link linkend="_luaconf_8h_1a919f548d82dc9a0681dd0ba8996d986d">l_mathop</link>(fabs)(<link linkend="_lauxlib_8c_1a9f2c941bb5eb7d3a7746f35c4fe3cced">luaL_checknumber</link>(L,&#32;1)));
00037 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
00038 }
00039 
<anchor xml:id="_lmathlib_8c_source_1l00040"/><link linkend="_lmathlib_8c_1adb460e2b01df47afcaa823ecc1846a24">00040</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lmathlib_8c_1adb460e2b01df47afcaa823ecc1846a24">math_sin</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L)&#32;{
00041 &#32;&#32;<link linkend="_lapi_8c_1a328625a03fbb5548f27b1af10f109f6a">lua_pushnumber</link>(L,&#32;<link linkend="_luaconf_8h_1a919f548d82dc9a0681dd0ba8996d986d">l_mathop</link>(sin)(<link linkend="_lauxlib_8c_1a9f2c941bb5eb7d3a7746f35c4fe3cced">luaL_checknumber</link>(L,&#32;1)));
00042 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
00043 }
00044 
<anchor xml:id="_lmathlib_8c_source_1l00045"/><link linkend="_lmathlib_8c_1a5db2cf8c6e7a331d7daf259f305e057c">00045</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lmathlib_8c_1a5db2cf8c6e7a331d7daf259f305e057c">math_cos</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L)&#32;{
00046 &#32;&#32;<link linkend="_lapi_8c_1a328625a03fbb5548f27b1af10f109f6a">lua_pushnumber</link>(L,&#32;<link linkend="_luaconf_8h_1a919f548d82dc9a0681dd0ba8996d986d">l_mathop</link>(cos)(<link linkend="_lauxlib_8c_1a9f2c941bb5eb7d3a7746f35c4fe3cced">luaL_checknumber</link>(L,&#32;1)));
00047 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
00048 }
00049 
<anchor xml:id="_lmathlib_8c_source_1l00050"/><link linkend="_lmathlib_8c_1a06bc9b8c610e00759bb99c3db6128f18">00050</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lmathlib_8c_1a06bc9b8c610e00759bb99c3db6128f18">math_tan</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L)&#32;{
00051 &#32;&#32;<link linkend="_lapi_8c_1a328625a03fbb5548f27b1af10f109f6a">lua_pushnumber</link>(L,&#32;<link linkend="_luaconf_8h_1a919f548d82dc9a0681dd0ba8996d986d">l_mathop</link>(tan)(<link linkend="_lauxlib_8c_1a9f2c941bb5eb7d3a7746f35c4fe3cced">luaL_checknumber</link>(L,&#32;1)));
00052 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
00053 }
00054 
<anchor xml:id="_lmathlib_8c_source_1l00055"/><link linkend="_lmathlib_8c_1aa44ea66108bb38acbe5c8cb2ce6de33f">00055</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lmathlib_8c_1aa44ea66108bb38acbe5c8cb2ce6de33f">math_asin</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L)&#32;{
00056 &#32;&#32;<link linkend="_lapi_8c_1a328625a03fbb5548f27b1af10f109f6a">lua_pushnumber</link>(L,&#32;<link linkend="_luaconf_8h_1a919f548d82dc9a0681dd0ba8996d986d">l_mathop</link>(asin)(<link linkend="_lauxlib_8c_1a9f2c941bb5eb7d3a7746f35c4fe3cced">luaL_checknumber</link>(L,&#32;1)));
00057 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
00058 }
00059 
<anchor xml:id="_lmathlib_8c_source_1l00060"/><link linkend="_lmathlib_8c_1a9f983fa3cca14d69429cebc95be4fab1">00060</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lmathlib_8c_1a9f983fa3cca14d69429cebc95be4fab1">math_acos</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L)&#32;{
00061 &#32;&#32;<link linkend="_lapi_8c_1a328625a03fbb5548f27b1af10f109f6a">lua_pushnumber</link>(L,&#32;<link linkend="_luaconf_8h_1a919f548d82dc9a0681dd0ba8996d986d">l_mathop</link>(acos)(<link linkend="_lauxlib_8c_1a9f2c941bb5eb7d3a7746f35c4fe3cced">luaL_checknumber</link>(L,&#32;1)));
00062 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
00063 }
00064 
<anchor xml:id="_lmathlib_8c_source_1l00065"/><link linkend="_lmathlib_8c_1a70217d6c0312477f3e257a584518424c">00065</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lmathlib_8c_1a70217d6c0312477f3e257a584518424c">math_atan</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L)&#32;{
00066 &#32;&#32;<link linkend="_lua_8h_1af0a6ed3b852d680769cfc410a0672172">lua_Number</link>&#32;y&#32;=&#32;<link linkend="_lauxlib_8c_1a9f2c941bb5eb7d3a7746f35c4fe3cced">luaL_checknumber</link>(L,&#32;1);
00067 &#32;&#32;<link linkend="_lua_8h_1af0a6ed3b852d680769cfc410a0672172">lua_Number</link>&#32;x&#32;=&#32;<link linkend="_lauxlib_8c_1afa696696945ee6215c0033656ee64e97">luaL_optnumber</link>(L,&#32;2,&#32;1);
00068 &#32;&#32;<link linkend="_lapi_8c_1a328625a03fbb5548f27b1af10f109f6a">lua_pushnumber</link>(L,&#32;<link linkend="_luaconf_8h_1a919f548d82dc9a0681dd0ba8996d986d">l_mathop</link>(atan2)(y,&#32;x));
00069 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
00070 }
00071 
00072 
<anchor xml:id="_lmathlib_8c_source_1l00073"/><link linkend="_lmathlib_8c_1a7604de8e5daca6d7576a9ee940a3f479">00073</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lmathlib_8c_1a7604de8e5daca6d7576a9ee940a3f479">math_toint</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L)&#32;{
00074 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;valid;
00075 &#32;&#32;<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;<link linkend="_struct_dyndata_1a76f11d9a0a47b94f72c2d0e77fb32240">n</link>&#32;=&#32;<link linkend="_lapi_8c_1af81c9a68425546e1f8c6354728c95170">lua_tointegerx</link>(L,&#32;1,&#32;&amp;valid);
00076 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(valid)
00077 &#32;&#32;&#32;&#32;<link linkend="_lapi_8c_1adcec46ff05dfee9a3c4c05828b40c213">lua_pushinteger</link>(L,&#32;<link linkend="_struct_dyndata_1a76f11d9a0a47b94f72c2d0e77fb32240">n</link>);
00078 &#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00079 &#32;&#32;&#32;&#32;<link linkend="_lauxlib_8c_1a8ebfe706b773eaaf50283e6583d4642e">luaL_checkany</link>(L,&#32;1);
00080 &#32;&#32;&#32;&#32;<link linkend="_lauxlib_8h_1a8666135f7a1412f5eaa14857aec279f0">luaL_pushfail</link>(L);&#32;&#32;<emphasis role="comment">/*&#32;value&#32;is&#32;not&#32;convertible&#32;to&#32;integer&#32;*/</emphasis>
00081 &#32;&#32;}
00082 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
00083 }
00084 
00085 
<anchor xml:id="_lmathlib_8c_source_1l00086"/><link linkend="_lmathlib_8c_1aa43eb6808ce1bad1f4f1416475e38e13">00086</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_lmathlib_8c_1aa43eb6808ce1bad1f4f1416475e38e13">pushnumint</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<link linkend="_lua_8h_1af0a6ed3b852d680769cfc410a0672172">lua_Number</link>&#32;d)&#32;{
00087 &#32;&#32;<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;<link linkend="_struct_dyndata_1a76f11d9a0a47b94f72c2d0e77fb32240">n</link>;
00088 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_luaconf_8h_1a4b0d24a7a90003778668e2d01831bb88">lua_numbertointeger</link>(d,&#32;&amp;<link linkend="_struct_dyndata_1a76f11d9a0a47b94f72c2d0e77fb32240">n</link>))&#32;&#32;<emphasis role="comment">/*&#32;does&#32;&apos;d&apos;&#32;fit&#32;in&#32;an&#32;integer?&#32;*/</emphasis>
00089 &#32;&#32;&#32;&#32;<link linkend="_lapi_8c_1adcec46ff05dfee9a3c4c05828b40c213">lua_pushinteger</link>(L,&#32;<link linkend="_struct_dyndata_1a76f11d9a0a47b94f72c2d0e77fb32240">n</link>);&#32;&#32;<emphasis role="comment">/*&#32;result&#32;is&#32;integer&#32;*/</emphasis>
00090 &#32;&#32;<emphasis role="keywordflow">else</emphasis>
00091 &#32;&#32;&#32;&#32;<link linkend="_lapi_8c_1a328625a03fbb5548f27b1af10f109f6a">lua_pushnumber</link>(L,&#32;d);&#32;&#32;<emphasis role="comment">/*&#32;result&#32;is&#32;float&#32;*/</emphasis>
00092 }
00093 
00094 
<anchor xml:id="_lmathlib_8c_source_1l00095"/><link linkend="_lmathlib_8c_1aa063dcd93e924af13c5e311f89b18d03">00095</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lmathlib_8c_1aa063dcd93e924af13c5e311f89b18d03">math_floor</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L)&#32;{
00096 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lapi_8c_1aba53e83eb1fff94b5ed96203bb52d8ae">lua_isinteger</link>(L,&#32;1))
00097 &#32;&#32;&#32;&#32;<link linkend="_lapi_8c_1adaa30f0d34786144c94644039d1d1b6e">lua_settop</link>(L,&#32;1);&#32;&#32;<emphasis role="comment">/*&#32;integer&#32;is&#32;its&#32;own&#32;floor&#32;*/</emphasis>
00098 &#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00099 &#32;&#32;&#32;&#32;<link linkend="_lua_8h_1af0a6ed3b852d680769cfc410a0672172">lua_Number</link>&#32;d&#32;=&#32;<link linkend="_luaconf_8h_1a919f548d82dc9a0681dd0ba8996d986d">l_mathop</link>(floor)(<link linkend="_lauxlib_8c_1a9f2c941bb5eb7d3a7746f35c4fe3cced">luaL_checknumber</link>(L,&#32;1));
00100 &#32;&#32;&#32;&#32;<link linkend="_lmathlib_8c_1aa43eb6808ce1bad1f4f1416475e38e13">pushnumint</link>(L,&#32;d);
00101 &#32;&#32;}
00102 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
00103 }
00104 
00105 
<anchor xml:id="_lmathlib_8c_source_1l00106"/><link linkend="_lmathlib_8c_1ae4f0dc771c626a9badef237db9d433da">00106</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lmathlib_8c_1ae4f0dc771c626a9badef237db9d433da">math_ceil</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L)&#32;{
00107 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lapi_8c_1aba53e83eb1fff94b5ed96203bb52d8ae">lua_isinteger</link>(L,&#32;1))
00108 &#32;&#32;&#32;&#32;<link linkend="_lapi_8c_1adaa30f0d34786144c94644039d1d1b6e">lua_settop</link>(L,&#32;1);&#32;&#32;<emphasis role="comment">/*&#32;integer&#32;is&#32;its&#32;own&#32;ceil&#32;*/</emphasis>
00109 &#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00110 &#32;&#32;&#32;&#32;<link linkend="_lua_8h_1af0a6ed3b852d680769cfc410a0672172">lua_Number</link>&#32;d&#32;=&#32;<link linkend="_luaconf_8h_1a919f548d82dc9a0681dd0ba8996d986d">l_mathop</link>(ceil)(<link linkend="_lauxlib_8c_1a9f2c941bb5eb7d3a7746f35c4fe3cced">luaL_checknumber</link>(L,&#32;1));
00111 &#32;&#32;&#32;&#32;<link linkend="_lmathlib_8c_1aa43eb6808ce1bad1f4f1416475e38e13">pushnumint</link>(L,&#32;d);
00112 &#32;&#32;}
00113 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
00114 }
00115 
00116 
<anchor xml:id="_lmathlib_8c_source_1l00117"/><link linkend="_lmathlib_8c_1a25b3f7d30cf85b8248a72de20049564e">00117</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lmathlib_8c_1a25b3f7d30cf85b8248a72de20049564e">math_fmod</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L)&#32;{
00118 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lapi_8c_1aba53e83eb1fff94b5ed96203bb52d8ae">lua_isinteger</link>(L,&#32;1)&#32;&amp;&amp;&#32;<link linkend="_lapi_8c_1aba53e83eb1fff94b5ed96203bb52d8ae">lua_isinteger</link>(L,&#32;2))&#32;{
00119 &#32;&#32;&#32;&#32;<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;d&#32;=&#32;<link linkend="_lua_8h_1a1365e48377a3b567e9d88423b2a6345c">lua_tointeger</link>(L,&#32;2);
00120 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((<link linkend="_lua_8h_1a2357bdcd9af1aaef0a6895a9c3b7eccf">lua_Unsigned</link>)d&#32;+&#32;1u&#32;&lt;=&#32;1u)&#32;{&#32;&#32;<emphasis role="comment">/*&#32;special&#32;cases:&#32;-1&#32;or&#32;0&#32;*/</emphasis>
00121 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lauxlib_8h_1a48ce6cd86a7448e97f258097a7abc44d">luaL_argcheck</link>(L,&#32;d&#32;!=&#32;0,&#32;2,&#32;<emphasis role="stringliteral">&quot;zero&quot;</emphasis>);
00122 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lapi_8c_1adcec46ff05dfee9a3c4c05828b40c213">lua_pushinteger</link>(L,&#32;0);&#32;&#32;<emphasis role="comment">/*&#32;avoid&#32;overflow&#32;with&#32;0x80000...&#32;/&#32;-1&#32;*/</emphasis>
00123 &#32;&#32;&#32;&#32;}
00124 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
00125 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lapi_8c_1adcec46ff05dfee9a3c4c05828b40c213">lua_pushinteger</link>(L,&#32;<link linkend="_lua_8h_1a1365e48377a3b567e9d88423b2a6345c">lua_tointeger</link>(L,&#32;1)&#32;%&#32;d);
00126 &#32;&#32;}
00127 &#32;&#32;<emphasis role="keywordflow">else</emphasis>
00128 &#32;&#32;&#32;&#32;<link linkend="_lapi_8c_1a328625a03fbb5548f27b1af10f109f6a">lua_pushnumber</link>(L,&#32;<link linkend="_luaconf_8h_1a919f548d82dc9a0681dd0ba8996d986d">l_mathop</link>(fmod)(<link linkend="_lauxlib_8c_1a9f2c941bb5eb7d3a7746f35c4fe3cced">luaL_checknumber</link>(L,&#32;1),
00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lauxlib_8c_1a9f2c941bb5eb7d3a7746f35c4fe3cced">luaL_checknumber</link>(L,&#32;2)));
00130 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
00131 }
00132 
00133 
00134 <emphasis role="comment">/*</emphasis>
00135 <emphasis role="comment">**&#32;next&#32;function&#32;does&#32;not&#32;use&#32;&apos;modf&apos;,&#32;avoiding&#32;problems&#32;with&#32;&apos;double*&apos;</emphasis>
00136 <emphasis role="comment">**&#32;(which&#32;is&#32;not&#32;compatible&#32;with&#32;&apos;float*&apos;)&#32;when&#32;lua_Number&#32;is&#32;not</emphasis>
00137 <emphasis role="comment">**&#32;&apos;double&apos;.</emphasis>
00138 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lmathlib_8c_source_1l00139"/><link linkend="_lmathlib_8c_1adff369706deb34be360be3103f31d4c4">00139</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lmathlib_8c_1adff369706deb34be360be3103f31d4c4">math_modf</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L)&#32;{
00140 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lapi_8c_1aba53e83eb1fff94b5ed96203bb52d8ae">lua_isinteger</link>(L&#32;,1))&#32;{
00141 &#32;&#32;&#32;&#32;<link linkend="_lapi_8c_1adaa30f0d34786144c94644039d1d1b6e">lua_settop</link>(L,&#32;1);&#32;&#32;<emphasis role="comment">/*&#32;number&#32;is&#32;its&#32;own&#32;integer&#32;part&#32;*/</emphasis>
00142 &#32;&#32;&#32;&#32;<link linkend="_lapi_8c_1a328625a03fbb5548f27b1af10f109f6a">lua_pushnumber</link>(L,&#32;0);&#32;&#32;<emphasis role="comment">/*&#32;no&#32;fractional&#32;part&#32;*/</emphasis>
00143 &#32;&#32;}
00144 &#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00145 &#32;&#32;&#32;&#32;<link linkend="_lua_8h_1af0a6ed3b852d680769cfc410a0672172">lua_Number</link>&#32;<link linkend="_struct_dyndata_1a76f11d9a0a47b94f72c2d0e77fb32240">n</link>&#32;=&#32;<link linkend="_lauxlib_8c_1a9f2c941bb5eb7d3a7746f35c4fe3cced">luaL_checknumber</link>(L,&#32;1);
00146 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;integer&#32;part&#32;(rounds&#32;toward&#32;zero)&#32;*/</emphasis>
00147 &#32;&#32;&#32;&#32;<link linkend="_lua_8h_1af0a6ed3b852d680769cfc410a0672172">lua_Number</link>&#32;ip&#32;=&#32;(<link linkend="_struct_dyndata_1a76f11d9a0a47b94f72c2d0e77fb32240">n</link>&#32;&lt;&#32;0)&#32;?&#32;<link linkend="_luaconf_8h_1a919f548d82dc9a0681dd0ba8996d986d">l_mathop</link>(ceil)(<link linkend="_struct_dyndata_1a76f11d9a0a47b94f72c2d0e77fb32240">n</link>)&#32;:&#32;<link linkend="_luaconf_8h_1a919f548d82dc9a0681dd0ba8996d986d">l_mathop</link>(floor)(<link linkend="_struct_dyndata_1a76f11d9a0a47b94f72c2d0e77fb32240">n</link>);
00148 &#32;&#32;&#32;&#32;<link linkend="_lmathlib_8c_1aa43eb6808ce1bad1f4f1416475e38e13">pushnumint</link>(L,&#32;ip);
00149 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;fractional&#32;part&#32;(test&#32;needed&#32;for&#32;inf/-inf)&#32;*/</emphasis>
00150 &#32;&#32;&#32;&#32;<link linkend="_lapi_8c_1a328625a03fbb5548f27b1af10f109f6a">lua_pushnumber</link>(L,&#32;(<link linkend="_struct_dyndata_1a76f11d9a0a47b94f72c2d0e77fb32240">n</link>&#32;==&#32;ip)&#32;?&#32;<link linkend="_luaconf_8h_1a919f548d82dc9a0681dd0ba8996d986d">l_mathop</link>(0.0)&#32;:&#32;(<link linkend="_struct_dyndata_1a76f11d9a0a47b94f72c2d0e77fb32240">n</link>&#32;-&#32;ip));
00151 &#32;&#32;}
00152 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;2;
00153 }
00154 
00155 
<anchor xml:id="_lmathlib_8c_source_1l00156"/><link linkend="_lmathlib_8c_1a8f4c386bafe8ae7269476ed3ed94d1d8">00156</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lmathlib_8c_1a8f4c386bafe8ae7269476ed3ed94d1d8">math_sqrt</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L)&#32;{
00157 &#32;&#32;<link linkend="_lapi_8c_1a328625a03fbb5548f27b1af10f109f6a">lua_pushnumber</link>(L,&#32;<link linkend="_luaconf_8h_1a919f548d82dc9a0681dd0ba8996d986d">l_mathop</link>(sqrt)(<link linkend="_lauxlib_8c_1a9f2c941bb5eb7d3a7746f35c4fe3cced">luaL_checknumber</link>(L,&#32;1)));
00158 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
00159 }
00160 
00161 
<anchor xml:id="_lmathlib_8c_source_1l00162"/><link linkend="_lmathlib_8c_1a5d62cc09bee44198af9cb2023a50d972">00162</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lmathlib_8c_1a5d62cc09bee44198af9cb2023a50d972">math_ult</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L)&#32;{
00163 &#32;&#32;<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;a&#32;=&#32;<link linkend="_lauxlib_8c_1aa15bea412c49bfdee1f3dbff096ce7d2">luaL_checkinteger</link>(L,&#32;1);
00164 &#32;&#32;<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;b&#32;=&#32;<link linkend="_lauxlib_8c_1aa15bea412c49bfdee1f3dbff096ce7d2">luaL_checkinteger</link>(L,&#32;2);
00165 &#32;&#32;<link linkend="_lapi_8c_1a56bbb7479265e38da2e2596e6ec25faa">lua_pushboolean</link>(L,&#32;(<link linkend="_lua_8h_1a2357bdcd9af1aaef0a6895a9c3b7eccf">lua_Unsigned</link>)a&#32;&lt;&#32;(<link linkend="_lua_8h_1a2357bdcd9af1aaef0a6895a9c3b7eccf">lua_Unsigned</link>)b);
00166 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
00167 }
00168 
<anchor xml:id="_lmathlib_8c_source_1l00169"/><link linkend="_lmathlib_8c_1a7cb92978495484adbfc9d0cb0ace2cc2">00169</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lmathlib_8c_1a7cb92978495484adbfc9d0cb0ace2cc2">math_log</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L)&#32;{
00170 &#32;&#32;<link linkend="_lua_8h_1af0a6ed3b852d680769cfc410a0672172">lua_Number</link>&#32;x&#32;=&#32;<link linkend="_lauxlib_8c_1a9f2c941bb5eb7d3a7746f35c4fe3cced">luaL_checknumber</link>(L,&#32;1);
00171 &#32;&#32;<link linkend="_lua_8h_1af0a6ed3b852d680769cfc410a0672172">lua_Number</link>&#32;res;
00172 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lua_8h_1af51702bb75a31bb4a279953ee386d533">lua_isnoneornil</link>(L,&#32;2))
00173 &#32;&#32;&#32;&#32;res&#32;=&#32;<link linkend="_luaconf_8h_1a919f548d82dc9a0681dd0ba8996d986d">l_mathop</link>(log)(x);
00174 &#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00175 &#32;&#32;&#32;&#32;<link linkend="_lua_8h_1af0a6ed3b852d680769cfc410a0672172">lua_Number</link>&#32;base&#32;=&#32;<link linkend="_lauxlib_8c_1a9f2c941bb5eb7d3a7746f35c4fe3cced">luaL_checknumber</link>(L,&#32;2);
00176 <emphasis role="preprocessor">#if&#32;!defined(LUA_USE_C89)</emphasis>
00177 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(base&#32;==&#32;<link linkend="_luaconf_8h_1a919f548d82dc9a0681dd0ba8996d986d">l_mathop</link>(2.0))
00178 &#32;&#32;&#32;&#32;&#32;&#32;res&#32;=&#32;<link linkend="_luaconf_8h_1a919f548d82dc9a0681dd0ba8996d986d">l_mathop</link>(log2)(x);&#32;<emphasis role="keywordflow">else</emphasis>
00179 <emphasis role="preprocessor">#endif</emphasis>
00180 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(base&#32;==&#32;<link linkend="_luaconf_8h_1a919f548d82dc9a0681dd0ba8996d986d">l_mathop</link>(10.0))
00181 &#32;&#32;&#32;&#32;&#32;&#32;res&#32;=&#32;<link linkend="_luaconf_8h_1a919f548d82dc9a0681dd0ba8996d986d">l_mathop</link>(log10)(x);
00182 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
00183 &#32;&#32;&#32;&#32;&#32;&#32;res&#32;=&#32;<link linkend="_luaconf_8h_1a919f548d82dc9a0681dd0ba8996d986d">l_mathop</link>(log)(x)/<link linkend="_luaconf_8h_1a919f548d82dc9a0681dd0ba8996d986d">l_mathop</link>(log)(base);
00184 &#32;&#32;}
00185 &#32;&#32;<link linkend="_lapi_8c_1a328625a03fbb5548f27b1af10f109f6a">lua_pushnumber</link>(L,&#32;res);
00186 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
00187 }
00188 
<anchor xml:id="_lmathlib_8c_source_1l00189"/><link linkend="_lmathlib_8c_1a7c971c680cdad8e4e833f8a3db9d065d">00189</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lmathlib_8c_1a7c971c680cdad8e4e833f8a3db9d065d">math_exp</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L)&#32;{
00190 &#32;&#32;<link linkend="_lapi_8c_1a328625a03fbb5548f27b1af10f109f6a">lua_pushnumber</link>(L,&#32;<link linkend="_luaconf_8h_1a919f548d82dc9a0681dd0ba8996d986d">l_mathop</link>(exp)(<link linkend="_lauxlib_8c_1a9f2c941bb5eb7d3a7746f35c4fe3cced">luaL_checknumber</link>(L,&#32;1)));
00191 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
00192 }
00193 
<anchor xml:id="_lmathlib_8c_source_1l00194"/><link linkend="_lmathlib_8c_1ad9bd03062009a4aba15739a1630b2a25">00194</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lmathlib_8c_1ad9bd03062009a4aba15739a1630b2a25">math_deg</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L)&#32;{
00195 &#32;&#32;<link linkend="_lapi_8c_1a328625a03fbb5548f27b1af10f109f6a">lua_pushnumber</link>(L,&#32;<link linkend="_lauxlib_8c_1a9f2c941bb5eb7d3a7746f35c4fe3cced">luaL_checknumber</link>(L,&#32;1)&#32;*&#32;(<link linkend="_luaconf_8h_1a919f548d82dc9a0681dd0ba8996d986d">l_mathop</link>(180.0)&#32;/&#32;<link linkend="_lmathlib_8c_1a598a3330b3c21701223ee0ca14316eca">PI</link>));
00196 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
00197 }
00198 
<anchor xml:id="_lmathlib_8c_source_1l00199"/><link linkend="_lmathlib_8c_1a5d8eec19cea59d1ce1012a705f70dc8d">00199</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lmathlib_8c_1a5d8eec19cea59d1ce1012a705f70dc8d">math_rad</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L)&#32;{
00200 &#32;&#32;<link linkend="_lapi_8c_1a328625a03fbb5548f27b1af10f109f6a">lua_pushnumber</link>(L,&#32;<link linkend="_lauxlib_8c_1a9f2c941bb5eb7d3a7746f35c4fe3cced">luaL_checknumber</link>(L,&#32;1)&#32;*&#32;(<link linkend="_lmathlib_8c_1a598a3330b3c21701223ee0ca14316eca">PI</link>&#32;/&#32;<link linkend="_luaconf_8h_1a919f548d82dc9a0681dd0ba8996d986d">l_mathop</link>(180.0)));
00201 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
00202 }
00203 
00204 
<anchor xml:id="_lmathlib_8c_source_1l00205"/><link linkend="_lmathlib_8c_1ab0a14d784b5fe2f30062e88a635db320">00205</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lmathlib_8c_1ab0a14d784b5fe2f30062e88a635db320">math_min</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L)&#32;{
00206 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_struct_dyndata_1a76f11d9a0a47b94f72c2d0e77fb32240">n</link>&#32;=&#32;<link linkend="_lapi_8c_1afbb08ecb69421875494105d4de68e5bf">lua_gettop</link>(L);&#32;&#32;<emphasis role="comment">/*&#32;number&#32;of&#32;arguments&#32;*/</emphasis>
00207 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;imin&#32;=&#32;1;&#32;&#32;<emphasis role="comment">/*&#32;index&#32;of&#32;current&#32;minimum&#32;value&#32;*/</emphasis>
00208 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
00209 &#32;&#32;<link linkend="_lauxlib_8h_1a48ce6cd86a7448e97f258097a7abc44d">luaL_argcheck</link>(L,&#32;<link linkend="_struct_dyndata_1a76f11d9a0a47b94f72c2d0e77fb32240">n</link>&#32;&gt;=&#32;1,&#32;1,&#32;<emphasis role="stringliteral">&quot;value&#32;expected&quot;</emphasis>);
00210 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;2;&#32;i&#32;&lt;=&#32;<link linkend="_struct_dyndata_1a76f11d9a0a47b94f72c2d0e77fb32240">n</link>;&#32;i++)&#32;{
00211 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lapi_8c_1a5fbae51f515549d4657d0efc676defee">lua_compare</link>(L,&#32;i,&#32;imin,&#32;<link linkend="_lua_8h_1a0386da34771797273cad6b7a4b2ce53e">LUA_OPLT</link>))
00212 &#32;&#32;&#32;&#32;&#32;&#32;imin&#32;=&#32;i;
00213 &#32;&#32;}
00214 &#32;&#32;<link linkend="_lapi_8c_1a602f61a9b583d69dc1c72c8970bd65e8">lua_pushvalue</link>(L,&#32;imin);
00215 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
00216 }
00217 
00218 
<anchor xml:id="_lmathlib_8c_source_1l00219"/><link linkend="_lmathlib_8c_1a03e3b76e515f5535122c2026a9e8f445">00219</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lmathlib_8c_1a03e3b76e515f5535122c2026a9e8f445">math_max</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L)&#32;{
00220 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_struct_dyndata_1a76f11d9a0a47b94f72c2d0e77fb32240">n</link>&#32;=&#32;<link linkend="_lapi_8c_1afbb08ecb69421875494105d4de68e5bf">lua_gettop</link>(L);&#32;&#32;<emphasis role="comment">/*&#32;number&#32;of&#32;arguments&#32;*/</emphasis>
00221 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;imax&#32;=&#32;1;&#32;&#32;<emphasis role="comment">/*&#32;index&#32;of&#32;current&#32;maximum&#32;value&#32;*/</emphasis>
00222 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
00223 &#32;&#32;<link linkend="_lauxlib_8h_1a48ce6cd86a7448e97f258097a7abc44d">luaL_argcheck</link>(L,&#32;<link linkend="_struct_dyndata_1a76f11d9a0a47b94f72c2d0e77fb32240">n</link>&#32;&gt;=&#32;1,&#32;1,&#32;<emphasis role="stringliteral">&quot;value&#32;expected&quot;</emphasis>);
00224 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;2;&#32;i&#32;&lt;=&#32;<link linkend="_struct_dyndata_1a76f11d9a0a47b94f72c2d0e77fb32240">n</link>;&#32;i++)&#32;{
00225 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lapi_8c_1a5fbae51f515549d4657d0efc676defee">lua_compare</link>(L,&#32;imax,&#32;i,&#32;<link linkend="_lua_8h_1a0386da34771797273cad6b7a4b2ce53e">LUA_OPLT</link>))
00226 &#32;&#32;&#32;&#32;&#32;&#32;imax&#32;=&#32;i;
00227 &#32;&#32;}
00228 &#32;&#32;<link linkend="_lapi_8c_1a602f61a9b583d69dc1c72c8970bd65e8">lua_pushvalue</link>(L,&#32;imax);
00229 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
00230 }
00231 
00232 
<anchor xml:id="_lmathlib_8c_source_1l00233"/><link linkend="_lmathlib_8c_1af58a749fbaa6093fab0db96dcfd822a7">00233</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lmathlib_8c_1af58a749fbaa6093fab0db96dcfd822a7">math_type</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L)&#32;{
00234 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lapi_8c_1a652b273947f0656686f998d8e90cd3ea">lua_type</link>(L,&#32;1)&#32;==&#32;<link linkend="_lua_8h_1a7f62ecb240cb38da9c8a53b41fe21ed9">LUA_TNUMBER</link>)
00235 &#32;&#32;&#32;&#32;<link linkend="_lapi_8c_1a771d300f2e64b2197d1df9bf31660ebf">lua_pushstring</link>(L,&#32;(<link linkend="_lapi_8c_1aba53e83eb1fff94b5ed96203bb52d8ae">lua_isinteger</link>(L,&#32;1))&#32;?&#32;<emphasis role="stringliteral">&quot;integer&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;float&quot;</emphasis>);
00236 &#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00237 &#32;&#32;&#32;&#32;<link linkend="_lauxlib_8c_1a8ebfe706b773eaaf50283e6583d4642e">luaL_checkany</link>(L,&#32;1);
00238 &#32;&#32;&#32;&#32;<link linkend="_lauxlib_8h_1a8666135f7a1412f5eaa14857aec279f0">luaL_pushfail</link>(L);
00239 &#32;&#32;}
00240 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
00241 }
00242 
00243 
00244 
00245 <emphasis role="comment">/*</emphasis>
00246 <emphasis role="comment">**&#32;{==================================================================</emphasis>
00247 <emphasis role="comment">**&#32;Pseudo-Random&#32;Number&#32;Generator&#32;based&#32;on&#32;&apos;xoshiro256**&apos;.</emphasis>
00248 <emphasis role="comment">**&#32;===================================================================</emphasis>
00249 <emphasis role="comment">*/</emphasis>
00250 
00251 <emphasis role="comment">/*&#32;number&#32;of&#32;binary&#32;digits&#32;in&#32;the&#32;mantissa&#32;of&#32;a&#32;float&#32;*/</emphasis>
<anchor xml:id="_lmathlib_8c_source_1l00252"/><link linkend="_lmathlib_8c_1a0282a980b31306aa7d94e9e6ad975837">00252</link> <emphasis role="preprocessor">#define&#32;FIGS&#32;&#32;&#32;&#32;l_floatatt(MANT_DIG)</emphasis>
00253 
00254 <emphasis role="preprocessor">#if&#32;FIGS&#32;&gt;&#32;64</emphasis>
00255 <emphasis role="comment">/*&#32;there&#32;are&#32;only&#32;64&#32;random&#32;bits;&#32;use&#32;them&#32;all&#32;*/</emphasis>
00256 <emphasis role="preprocessor">#undef&#32;FIGS</emphasis>
00257 <emphasis role="preprocessor">#define&#32;FIGS&#32;&#32;&#32;&#32;64</emphasis>
00258 <emphasis role="preprocessor">#endif</emphasis>
00259 
00260 
00261 <emphasis role="comment">/*</emphasis>
00262 <emphasis role="comment">**&#32;LUA_RAND32&#32;forces&#32;the&#32;use&#32;of&#32;32-bit&#32;integers&#32;in&#32;the&#32;implementation</emphasis>
00263 <emphasis role="comment">**&#32;of&#32;the&#32;PRN&#32;generator&#32;(mainly&#32;for&#32;testing).</emphasis>
00264 <emphasis role="comment">*/</emphasis>
00265 <emphasis role="preprocessor">#if&#32;!defined(LUA_RAND32)&#32;&amp;&amp;&#32;!defined(Rand64)</emphasis>
00266 
00267 <emphasis role="comment">/*&#32;try&#32;to&#32;find&#32;an&#32;integer&#32;type&#32;with&#32;at&#32;least&#32;64&#32;bits&#32;*/</emphasis>
00268 
00269 <emphasis role="preprocessor">#if&#32;(ULONG_MAX&#32;&gt;&gt;&#32;31&#32;&gt;&gt;&#32;31)&#32;&gt;=&#32;3</emphasis>
00270 
00271 <emphasis role="comment">/*&#32;&apos;long&apos;&#32;has&#32;at&#32;least&#32;64&#32;bits&#32;*/</emphasis>
00272 <emphasis role="preprocessor">#define&#32;Rand64&#32;&#32;&#32;&#32;&#32;&#32;unsigned&#32;long</emphasis>
00273 
00274 <emphasis role="preprocessor">#elif&#32;!defined(LUA_USE_C89)&#32;&amp;&amp;&#32;defined(LLONG_MAX)</emphasis>
00275 
00276 <emphasis role="comment">/*&#32;there&#32;is&#32;a&#32;&apos;long&#32;long&apos;&#32;type&#32;(which&#32;must&#32;have&#32;at&#32;least&#32;64&#32;bits)&#32;*/</emphasis>
00277 <emphasis role="preprocessor">#define&#32;Rand64&#32;&#32;&#32;&#32;&#32;&#32;unsigned&#32;long&#32;long</emphasis>
00278 
00279 <emphasis role="preprocessor">#elif&#32;(LUA_MAXUNSIGNED&#32;&gt;&gt;&#32;31&#32;&gt;&gt;&#32;31)&#32;&gt;=&#32;3</emphasis>
00280 
00281 <emphasis role="comment">/*&#32;&apos;lua_Integer&apos;&#32;has&#32;at&#32;least&#32;64&#32;bits&#32;*/</emphasis>
00282 <emphasis role="preprocessor">#define&#32;Rand64&#32;&#32;&#32;&#32;&#32;&#32;lua_Unsigned</emphasis>
00283 
00284 <emphasis role="preprocessor">#endif</emphasis>
00285 
00286 <emphasis role="preprocessor">#endif</emphasis>
00287 
00288 
00289 <emphasis role="preprocessor">#if&#32;defined(Rand64)&#32;&#32;</emphasis><emphasis role="comment">/*&#32;{&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
00290 
00291 <emphasis role="comment">/*</emphasis>
00292 <emphasis role="comment">**&#32;Standard&#32;implementation,&#32;using&#32;64-bit&#32;integers.</emphasis>
00293 <emphasis role="comment">**&#32;If&#32;&apos;Rand64&apos;&#32;has&#32;more&#32;than&#32;64&#32;bits,&#32;the&#32;extra&#32;bits&#32;do&#32;not&#32;interfere</emphasis>
00294 <emphasis role="comment">**&#32;with&#32;the&#32;64&#32;initial&#32;bits,&#32;except&#32;in&#32;a&#32;right&#32;shift.&#32;Moreover,&#32;the</emphasis>
00295 <emphasis role="comment">**&#32;final&#32;result&#32;has&#32;to&#32;discard&#32;the&#32;extra&#32;bits.</emphasis>
00296 <emphasis role="comment">*/</emphasis>
00297 
00298 <emphasis role="comment">/*&#32;avoid&#32;using&#32;extra&#32;bits&#32;when&#32;needed&#32;*/</emphasis>
00299 <emphasis role="preprocessor">#define&#32;trim64(x)&#32;&#32;&#32;((x)&#32;&amp;&#32;0xffffffffffffffffu)</emphasis>
00300 
00301 
00302 <emphasis role="comment">/*&#32;rotate&#32;left&#32;&apos;x&apos;&#32;by&#32;&apos;n&apos;&#32;bits&#32;*/</emphasis>
00303 <emphasis role="keyword">static</emphasis>&#32;<link linkend="_struct_rand64">Rand64</link>&#32;<link linkend="_lmathlib_8c_1af6d2c0cbed4c44224dc80230279c1b5d">rotl</link>&#32;(<link linkend="_struct_rand64">Rand64</link>&#32;x,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_struct_dyndata_1a76f11d9a0a47b94f72c2d0e77fb32240">n</link>)&#32;{
00304 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(x&#32;&lt;&lt;&#32;<link linkend="_struct_dyndata_1a76f11d9a0a47b94f72c2d0e77fb32240">n</link>)&#32;|&#32;(trim64(x)&#32;&gt;&gt;&#32;(64&#32;-&#32;<link linkend="_struct_dyndata_1a76f11d9a0a47b94f72c2d0e77fb32240">n</link>));
00305 }
00306 
00307 <emphasis role="keyword">static</emphasis>&#32;<link linkend="_struct_rand64">Rand64</link>&#32;<link linkend="_lmathlib_8c_1ac01956e1f85c57f7781d256db3d76886">nextrand</link>&#32;(<link linkend="_struct_rand64">Rand64</link>&#32;*state)&#32;{
00308 &#32;&#32;<link linkend="_struct_rand64">Rand64</link>&#32;state0&#32;=&#32;state[0];
00309 &#32;&#32;<link linkend="_struct_rand64">Rand64</link>&#32;state1&#32;=&#32;state[1];
00310 &#32;&#32;<link linkend="_struct_rand64">Rand64</link>&#32;state2&#32;=&#32;state[2]&#32;^&#32;state0;
00311 &#32;&#32;<link linkend="_struct_rand64">Rand64</link>&#32;state3&#32;=&#32;state[3]&#32;^&#32;state1;
00312 &#32;&#32;<link linkend="_struct_rand64">Rand64</link>&#32;res&#32;=&#32;<link linkend="_lmathlib_8c_1af6d2c0cbed4c44224dc80230279c1b5d">rotl</link>(state1&#32;*&#32;5,&#32;7)&#32;*&#32;9;
00313 &#32;&#32;state[0]&#32;=&#32;state0&#32;^&#32;state3;
00314 &#32;&#32;state[1]&#32;=&#32;state1&#32;^&#32;state2;
00315 &#32;&#32;state[2]&#32;=&#32;state2&#32;^&#32;(state1&#32;&lt;&lt;&#32;17);
00316 &#32;&#32;state[3]&#32;=&#32;<link linkend="_lmathlib_8c_1af6d2c0cbed4c44224dc80230279c1b5d">rotl</link>(state3,&#32;45);
00317 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;res;
00318 }
00319 
00320 
00321 <emphasis role="comment">/*&#32;must&#32;take&#32;care&#32;to&#32;not&#32;shift&#32;stuff&#32;by&#32;more&#32;than&#32;63&#32;slots&#32;*/</emphasis>
00322 
00323 
00324 <emphasis role="comment">/*</emphasis>
00325 <emphasis role="comment">**&#32;Convert&#32;bits&#32;from&#32;a&#32;random&#32;integer&#32;into&#32;a&#32;float&#32;in&#32;the</emphasis>
00326 <emphasis role="comment">**&#32;interval&#32;[0,1),&#32;getting&#32;the&#32;higher&#32;FIG&#32;bits&#32;from&#32;the</emphasis>
00327 <emphasis role="comment">**&#32;random&#32;unsigned&#32;integer&#32;and&#32;converting&#32;that&#32;to&#32;a&#32;float.</emphasis>
00328 <emphasis role="comment">*/</emphasis>
00329 
00330 <emphasis role="comment">/*&#32;must&#32;throw&#32;out&#32;the&#32;extra&#32;(64&#32;-&#32;FIGS)&#32;bits&#32;*/</emphasis>
00331 <emphasis role="preprocessor">#define&#32;shift64_FIG&#32;(64&#32;-&#32;FIGS)</emphasis>
00332 
00333 <emphasis role="comment">/*&#32;to&#32;scale&#32;to&#32;[0,&#32;1),&#32;multiply&#32;by&#32;scaleFIG&#32;=&#32;2^(-FIGS)&#32;*/</emphasis>
00334 <emphasis role="preprocessor">#define&#32;scaleFIG&#32;&#32;&#32;&#32;(l_mathop(0.5)&#32;/&#32;((Rand64)1&#32;&lt;&lt;&#32;(FIGS&#32;-&#32;1)))</emphasis>
00335 
00336 <emphasis role="keyword">static</emphasis>&#32;<link linkend="_lua_8h_1af0a6ed3b852d680769cfc410a0672172">lua_Number</link>&#32;<link linkend="_lmathlib_8c_1a1f845b41defc9503d3090923b15d79ed">I2d</link>&#32;(<link linkend="_struct_rand64">Rand64</link>&#32;x)&#32;{
00337 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="_lua_8h_1af0a6ed3b852d680769cfc410a0672172">lua_Number</link>)(trim64(x)&#32;&gt;&gt;&#32;shift64_FIG)&#32;*&#32;<link linkend="_lmathlib_8c_1af9acb4963a9c1f6a8e60d4b1e8b76184">scaleFIG</link>;
00338 }
00339 
00340 <emphasis role="comment">/*&#32;convert&#32;a&#32;&apos;Rand64&apos;&#32;to&#32;a&#32;&apos;lua_Unsigned&apos;&#32;*/</emphasis>
00341 <emphasis role="preprocessor">#define&#32;I2UInt(x)&#32;&#32;&#32;((lua_Unsigned)trim64(x))</emphasis>
00342 
00343 <emphasis role="comment">/*&#32;convert&#32;a&#32;&apos;lua_Unsigned&apos;&#32;to&#32;a&#32;&apos;Rand64&apos;&#32;*/</emphasis>
00344 <emphasis role="preprocessor">#define&#32;Int2I(x)&#32;&#32;&#32;&#32;((Rand64)(x))</emphasis>
00345 
00346 
00347 <emphasis role="preprocessor">#else&#32;&#32;&#32;</emphasis><emphasis role="comment">/*&#32;no&#32;&apos;Rand64&apos;&#32;&#32;&#32;}{&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
00348 
00349 <emphasis role="comment">/*&#32;get&#32;an&#32;integer&#32;with&#32;at&#32;least&#32;32&#32;bits&#32;*/</emphasis>
00350 <emphasis role="preprocessor">#if&#32;LUAI_IS32INT</emphasis>
00351 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lmathlib_8c_1aa8f942b3f89c99f2fbde3c4361b7c615">lu_int32</link>;
00352 <emphasis role="preprocessor">#else</emphasis>
<anchor xml:id="_lmathlib_8c_source_1l00353"/><link linkend="_lmathlib_8c_1aa8f942b3f89c99f2fbde3c4361b7c615">00353</link> <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<link linkend="_lmathlib_8c_1aa8f942b3f89c99f2fbde3c4361b7c615">lu_int32</link>;
00354 <emphasis role="preprocessor">#endif</emphasis>
00355 
00356 
00357 <emphasis role="comment">/*</emphasis>
00358 <emphasis role="comment">**&#32;Use&#32;two&#32;32-bit&#32;integers&#32;to&#32;represent&#32;a&#32;64-bit&#32;quantity.</emphasis>
00359 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lmathlib_8c_source_1l00360"/><link linkend="_struct_rand64">00360</link> <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_rand64">Rand64</link>&#32;{
<anchor xml:id="_lmathlib_8c_source_1l00361"/><link linkend="_struct_rand64_1a059a60cb7cf2a79c595fddd51327de0e">00361</link> &#32;&#32;<link linkend="_lmathlib_8c_1aa8f942b3f89c99f2fbde3c4361b7c615">lu_int32</link>&#32;<link linkend="_struct_rand64_1a059a60cb7cf2a79c595fddd51327de0e">h</link>;&#32;&#32;<emphasis role="comment">/*&#32;higher&#32;half&#32;*/</emphasis>
<anchor xml:id="_lmathlib_8c_source_1l00362"/><link linkend="_struct_rand64_1a3498285273bab2d6af3cf31f8475ceef">00362</link> &#32;&#32;<link linkend="_lmathlib_8c_1aa8f942b3f89c99f2fbde3c4361b7c615">lu_int32</link>&#32;<link linkend="_struct_rand64_1a3498285273bab2d6af3cf31f8475ceef">l</link>;&#32;&#32;<emphasis role="comment">/*&#32;lower&#32;half&#32;*/</emphasis>
<anchor xml:id="_lmathlib_8c_source_1l00363"/><link linkend="_lmathlib_8c_1ac514b2d1475b8c2e91f0b3a1f46d0f34">00363</link> }&#32;<link linkend="_lmathlib_8c_1ac514b2d1475b8c2e91f0b3a1f46d0f34">Rand64</link>;
00364 
00365 
00366 <emphasis role="comment">/*</emphasis>
00367 <emphasis role="comment">**&#32;If&#32;&apos;lu_int32&apos;&#32;has&#32;more&#32;than&#32;32&#32;bits,&#32;the&#32;extra&#32;bits&#32;do&#32;not&#32;interfere</emphasis>
00368 <emphasis role="comment">**&#32;with&#32;the&#32;32&#32;initial&#32;bits,&#32;except&#32;in&#32;a&#32;right&#32;shift&#32;and&#32;comparisons.</emphasis>
00369 <emphasis role="comment">**&#32;Moreover,&#32;the&#32;final&#32;result&#32;has&#32;to&#32;discard&#32;the&#32;extra&#32;bits.</emphasis>
00370 <emphasis role="comment">*/</emphasis>
00371 
00372 <emphasis role="comment">/*&#32;avoid&#32;using&#32;extra&#32;bits&#32;when&#32;needed&#32;*/</emphasis>
<anchor xml:id="_lmathlib_8c_source_1l00373"/><link linkend="_lmathlib_8c_1a4d4f48045002686d9d2b361148c98db5">00373</link> <emphasis role="preprocessor">#define&#32;trim32(x)&#32;&#32;&#32;((x)&#32;&amp;&#32;0xffffffffu)</emphasis>
00374 
00375 
00376 <emphasis role="comment">/*</emphasis>
00377 <emphasis role="comment">**&#32;basic&#32;operations&#32;on&#32;&apos;Rand64&apos;&#32;values</emphasis>
00378 <emphasis role="comment">*/</emphasis>
00379 
00380 <emphasis role="comment">/*&#32;build&#32;a&#32;new&#32;Rand64&#32;value&#32;*/</emphasis>
<anchor xml:id="_lmathlib_8c_source_1l00381"/><link linkend="_lmathlib_8c_1a43beb45c0b29c5e7a866b193d6b8c546">00381</link> <emphasis role="keyword">static</emphasis>&#32;<link linkend="_struct_rand64">Rand64</link>&#32;<link linkend="_lmathlib_8c_1a43beb45c0b29c5e7a866b193d6b8c546">packI</link>&#32;(<link linkend="_lmathlib_8c_1aa8f942b3f89c99f2fbde3c4361b7c615">lu_int32</link>&#32;h,&#32;<link linkend="_lmathlib_8c_1aa8f942b3f89c99f2fbde3c4361b7c615">lu_int32</link>&#32;l)&#32;{
00382 &#32;&#32;<link linkend="_struct_rand64">Rand64</link>&#32;result;
00383 &#32;&#32;result.<link linkend="_struct_rand64_1a059a60cb7cf2a79c595fddd51327de0e">h</link>&#32;=&#32;h;
00384 &#32;&#32;result.<link linkend="_struct_rand64_1a3498285273bab2d6af3cf31f8475ceef">l</link>&#32;=&#32;l;
00385 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;result;
00386 }
00387 
00388 <emphasis role="comment">/*&#32;return&#32;i&#32;&lt;&lt;&#32;n&#32;*/</emphasis>
<anchor xml:id="_lmathlib_8c_source_1l00389"/><link linkend="_lmathlib_8c_1a5fe860c78def6ac52bd99153df082c3e">00389</link> <emphasis role="keyword">static</emphasis>&#32;<link linkend="_struct_rand64">Rand64</link>&#32;<link linkend="_lmathlib_8c_1a5fe860c78def6ac52bd99153df082c3e">Ishl</link>&#32;(<link linkend="_struct_rand64">Rand64</link>&#32;i,&#32;<emphasis role="keywordtype">int</emphasis>&#32;n)&#32;{
00390 &#32;&#32;<link linkend="_llimits_8h_1a5978f5fda715bd80e845df1e16ad7780">lua_assert</link>(n&#32;&gt;&#32;0&#32;&amp;&amp;&#32;n&#32;&lt;&#32;32);
00391 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_lmathlib_8c_1a43beb45c0b29c5e7a866b193d6b8c546">packI</link>((i.<link linkend="_struct_rand64_1a059a60cb7cf2a79c595fddd51327de0e">h</link>&#32;&lt;&lt;&#32;n)&#32;|&#32;(<link linkend="_lmathlib_8c_1a4d4f48045002686d9d2b361148c98db5">trim32</link>(i.<link linkend="_struct_rand64_1a3498285273bab2d6af3cf31f8475ceef">l</link>)&#32;&gt;&gt;&#32;(32&#32;-&#32;n)),&#32;i.<link linkend="_struct_rand64_1a3498285273bab2d6af3cf31f8475ceef">l</link>&#32;&lt;&lt;&#32;n);
00392 }
00393 
00394 <emphasis role="comment">/*&#32;i1&#32;^=&#32;i2&#32;*/</emphasis>
<anchor xml:id="_lmathlib_8c_source_1l00395"/><link linkend="_lmathlib_8c_1ac269f9bd785360abe156ba7c7cc67e21">00395</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_lmathlib_8c_1ac269f9bd785360abe156ba7c7cc67e21">Ixor</link>&#32;(<link linkend="_struct_rand64">Rand64</link>&#32;*i1,&#32;<link linkend="_struct_rand64">Rand64</link>&#32;i2)&#32;{
00396 &#32;&#32;i1-&gt;<link linkend="_struct_rand64_1a059a60cb7cf2a79c595fddd51327de0e">h</link>&#32;^=&#32;i2.<link linkend="_struct_rand64_1a059a60cb7cf2a79c595fddd51327de0e">h</link>;
00397 &#32;&#32;i1-&gt;<link linkend="_struct_rand64_1a3498285273bab2d6af3cf31f8475ceef">l</link>&#32;^=&#32;i2.<link linkend="_struct_rand64_1a3498285273bab2d6af3cf31f8475ceef">l</link>;
00398 }
00399 
00400 <emphasis role="comment">/*&#32;return&#32;i1&#32;+&#32;i2&#32;*/</emphasis>
<anchor xml:id="_lmathlib_8c_source_1l00401"/><link linkend="_lmathlib_8c_1a0f8118bb9ab66c0fee78e5bf183d436f">00401</link> <emphasis role="keyword">static</emphasis>&#32;<link linkend="_struct_rand64">Rand64</link>&#32;<link linkend="_lmathlib_8c_1a0f8118bb9ab66c0fee78e5bf183d436f">Iadd</link>&#32;(<link linkend="_struct_rand64">Rand64</link>&#32;i1,&#32;<link linkend="_struct_rand64">Rand64</link>&#32;i2)&#32;{
00402 &#32;&#32;<link linkend="_struct_rand64">Rand64</link>&#32;result&#32;=&#32;<link linkend="_lmathlib_8c_1a43beb45c0b29c5e7a866b193d6b8c546">packI</link>(i1.<link linkend="_struct_rand64_1a059a60cb7cf2a79c595fddd51327de0e">h</link>&#32;+&#32;i2.<link linkend="_struct_rand64_1a059a60cb7cf2a79c595fddd51327de0e">h</link>,&#32;i1.<link linkend="_struct_rand64_1a3498285273bab2d6af3cf31f8475ceef">l</link>&#32;+&#32;i2.<link linkend="_struct_rand64_1a3498285273bab2d6af3cf31f8475ceef">l</link>);
00403 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lmathlib_8c_1a4d4f48045002686d9d2b361148c98db5">trim32</link>(result.<link linkend="_struct_rand64_1a3498285273bab2d6af3cf31f8475ceef">l</link>)&#32;&lt;&#32;<link linkend="_lmathlib_8c_1a4d4f48045002686d9d2b361148c98db5">trim32</link>(i1.<link linkend="_struct_rand64_1a3498285273bab2d6af3cf31f8475ceef">l</link>))&#32;&#32;<emphasis role="comment">/*&#32;carry?&#32;*/</emphasis>
00404 &#32;&#32;&#32;&#32;result.<link linkend="_struct_rand64_1a059a60cb7cf2a79c595fddd51327de0e">h</link>++;
00405 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;result;
00406 }
00407 
00408 <emphasis role="comment">/*&#32;return&#32;i&#32;*&#32;5&#32;*/</emphasis>
<anchor xml:id="_lmathlib_8c_source_1l00409"/><link linkend="_lmathlib_8c_1a4708082c07e59916317e3baf2204504a">00409</link> <emphasis role="keyword">static</emphasis>&#32;<link linkend="_struct_rand64">Rand64</link>&#32;<link linkend="_lmathlib_8c_1a4708082c07e59916317e3baf2204504a">times5</link>&#32;(<link linkend="_struct_rand64">Rand64</link>&#32;i)&#32;{
00410 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_lmathlib_8c_1a0f8118bb9ab66c0fee78e5bf183d436f">Iadd</link>(<link linkend="_lmathlib_8c_1a5fe860c78def6ac52bd99153df082c3e">Ishl</link>(i,&#32;2),&#32;i);&#32;&#32;<emphasis role="comment">/*&#32;i&#32;*&#32;5&#32;==&#32;(i&#32;&lt;&lt;&#32;2)&#32;+&#32;i&#32;*/</emphasis>
00411 }
00412 
00413 <emphasis role="comment">/*&#32;return&#32;i&#32;*&#32;9&#32;*/</emphasis>
<anchor xml:id="_lmathlib_8c_source_1l00414"/><link linkend="_lmathlib_8c_1a8276cb06bf824ed1d39fa2f3f0db6968">00414</link> <emphasis role="keyword">static</emphasis>&#32;<link linkend="_struct_rand64">Rand64</link>&#32;<link linkend="_lmathlib_8c_1a8276cb06bf824ed1d39fa2f3f0db6968">times9</link>&#32;(<link linkend="_struct_rand64">Rand64</link>&#32;i)&#32;{
00415 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_lmathlib_8c_1a0f8118bb9ab66c0fee78e5bf183d436f">Iadd</link>(<link linkend="_lmathlib_8c_1a5fe860c78def6ac52bd99153df082c3e">Ishl</link>(i,&#32;3),&#32;i);&#32;&#32;<emphasis role="comment">/*&#32;i&#32;*&#32;9&#32;==&#32;(i&#32;&lt;&lt;&#32;3)&#32;+&#32;i&#32;*/</emphasis>
00416 }
00417 
00418 <emphasis role="comment">/*&#32;return&#32;&apos;i&apos;&#32;rotated&#32;left&#32;&apos;n&apos;&#32;bits&#32;*/</emphasis>
<anchor xml:id="_lmathlib_8c_source_1l00419"/><link linkend="_lmathlib_8c_1af6d2c0cbed4c44224dc80230279c1b5d">00419</link> <emphasis role="keyword">static</emphasis>&#32;<link linkend="_struct_rand64">Rand64</link>&#32;<link linkend="_lmathlib_8c_1af6d2c0cbed4c44224dc80230279c1b5d">rotl</link>&#32;(<link linkend="_struct_rand64">Rand64</link>&#32;i,&#32;<emphasis role="keywordtype">int</emphasis>&#32;n)&#32;{
00420 &#32;&#32;<link linkend="_llimits_8h_1a5978f5fda715bd80e845df1e16ad7780">lua_assert</link>(n&#32;&gt;&#32;0&#32;&amp;&amp;&#32;n&#32;&lt;&#32;32);
00421 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_lmathlib_8c_1a43beb45c0b29c5e7a866b193d6b8c546">packI</link>((i.<link linkend="_struct_rand64_1a059a60cb7cf2a79c595fddd51327de0e">h</link>&#32;&lt;&lt;&#32;n)&#32;|&#32;(<link linkend="_lmathlib_8c_1a4d4f48045002686d9d2b361148c98db5">trim32</link>(i.<link linkend="_struct_rand64_1a3498285273bab2d6af3cf31f8475ceef">l</link>)&#32;&gt;&gt;&#32;(32&#32;-&#32;n)),
00422 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="_lmathlib_8c_1a4d4f48045002686d9d2b361148c98db5">trim32</link>(i.<link linkend="_struct_rand64_1a059a60cb7cf2a79c595fddd51327de0e">h</link>)&#32;&gt;&gt;&#32;(32&#32;-&#32;n))&#32;|&#32;(i.<link linkend="_struct_rand64_1a3498285273bab2d6af3cf31f8475ceef">l</link>&#32;&lt;&lt;&#32;n));
00423 }
00424 
00425 <emphasis role="comment">/*&#32;for&#32;offsets&#32;larger&#32;than&#32;32,&#32;rotate&#32;right&#32;by&#32;64&#32;-&#32;offset&#32;*/</emphasis>
<anchor xml:id="_lmathlib_8c_source_1l00426"/><link linkend="_lmathlib_8c_1a0a2a1bbd027f6e376a7043e2bdab7870">00426</link> <emphasis role="keyword">static</emphasis>&#32;<link linkend="_struct_rand64">Rand64</link>&#32;<link linkend="_lmathlib_8c_1a0a2a1bbd027f6e376a7043e2bdab7870">rotl1</link>&#32;(<link linkend="_struct_rand64">Rand64</link>&#32;i,&#32;<emphasis role="keywordtype">int</emphasis>&#32;n)&#32;{
00427 &#32;&#32;<link linkend="_llimits_8h_1a5978f5fda715bd80e845df1e16ad7780">lua_assert</link>(n&#32;&gt;&#32;32&#32;&amp;&amp;&#32;n&#32;&lt;&#32;64);
00428 &#32;&#32;n&#32;=&#32;64&#32;-&#32;n;
00429 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_lmathlib_8c_1a43beb45c0b29c5e7a866b193d6b8c546">packI</link>((<link linkend="_lmathlib_8c_1a4d4f48045002686d9d2b361148c98db5">trim32</link>(i.<link linkend="_struct_rand64_1a059a60cb7cf2a79c595fddd51327de0e">h</link>)&#32;&gt;&gt;&#32;n)&#32;|&#32;(i.<link linkend="_struct_rand64_1a3498285273bab2d6af3cf31f8475ceef">l</link>&#32;&lt;&lt;&#32;(32&#32;-&#32;n)),
00430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(i.<link linkend="_struct_rand64_1a059a60cb7cf2a79c595fddd51327de0e">h</link>&#32;&lt;&lt;&#32;(32&#32;-&#32;n))&#32;|&#32;(<link linkend="_lmathlib_8c_1a4d4f48045002686d9d2b361148c98db5">trim32</link>(i.<link linkend="_struct_rand64_1a3498285273bab2d6af3cf31f8475ceef">l</link>)&#32;&gt;&gt;&#32;n));
00431 }
00432 
00433 <emphasis role="comment">/*</emphasis>
00434 <emphasis role="comment">**&#32;implementation&#32;of&#32;&apos;xoshiro256**&apos;&#32;algorithm&#32;on&#32;&apos;Rand64&apos;&#32;values</emphasis>
00435 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lmathlib_8c_source_1l00436"/><link linkend="_lmathlib_8c_1ac01956e1f85c57f7781d256db3d76886">00436</link> <emphasis role="keyword">static</emphasis>&#32;<link linkend="_struct_rand64">Rand64</link>&#32;<link linkend="_lmathlib_8c_1ac01956e1f85c57f7781d256db3d76886">nextrand</link>&#32;(<link linkend="_struct_rand64">Rand64</link>&#32;*state)&#32;{
00437 &#32;&#32;<link linkend="_struct_rand64">Rand64</link>&#32;res&#32;=&#32;<link linkend="_lmathlib_8c_1a8276cb06bf824ed1d39fa2f3f0db6968">times9</link>(<link linkend="_lmathlib_8c_1af6d2c0cbed4c44224dc80230279c1b5d">rotl</link>(<link linkend="_lmathlib_8c_1a4708082c07e59916317e3baf2204504a">times5</link>(state[1]),&#32;7));
00438 &#32;&#32;<link linkend="_struct_rand64">Rand64</link>&#32;t&#32;=&#32;<link linkend="_lmathlib_8c_1a5fe860c78def6ac52bd99153df082c3e">Ishl</link>(state[1],&#32;17);
00439 &#32;&#32;<link linkend="_lmathlib_8c_1ac269f9bd785360abe156ba7c7cc67e21">Ixor</link>(&amp;state[2],&#32;state[0]);
00440 &#32;&#32;<link linkend="_lmathlib_8c_1ac269f9bd785360abe156ba7c7cc67e21">Ixor</link>(&amp;state[3],&#32;state[1]);
00441 &#32;&#32;<link linkend="_lmathlib_8c_1ac269f9bd785360abe156ba7c7cc67e21">Ixor</link>(&amp;state[1],&#32;state[2]);
00442 &#32;&#32;<link linkend="_lmathlib_8c_1ac269f9bd785360abe156ba7c7cc67e21">Ixor</link>(&amp;state[0],&#32;state[3]);
00443 &#32;&#32;<link linkend="_lmathlib_8c_1ac269f9bd785360abe156ba7c7cc67e21">Ixor</link>(&amp;state[2],&#32;t);
00444 &#32;&#32;state[3]&#32;=&#32;<link linkend="_lmathlib_8c_1a0a2a1bbd027f6e376a7043e2bdab7870">rotl1</link>(state[3],&#32;45);
00445 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;res;
00446 }
00447 
00448 
00449 <emphasis role="comment">/*</emphasis>
00450 <emphasis role="comment">**&#32;Converts&#32;a&#32;&apos;Rand64&apos;&#32;into&#32;a&#32;float.</emphasis>
00451 <emphasis role="comment">*/</emphasis>
00452 
00453 <emphasis role="comment">/*&#32;an&#32;unsigned&#32;1&#32;with&#32;proper&#32;type&#32;*/</emphasis>
<anchor xml:id="_lmathlib_8c_source_1l00454"/><link linkend="_lmathlib_8c_1a37c87c7e103e67064c02ce86e5c00215">00454</link> <emphasis role="preprocessor">#define&#32;UONE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((lu_int32)1)</emphasis>
00455 
00456 
00457 <emphasis role="preprocessor">#if&#32;FIGS&#32;&lt;=&#32;32</emphasis>
00458 
00459 <emphasis role="comment">/*&#32;2^(-FIGS)&#32;*/</emphasis>
<anchor xml:id="_lmathlib_8c_source_1l00460"/><link linkend="_lmathlib_8c_1af9acb4963a9c1f6a8e60d4b1e8b76184">00460</link> <emphasis role="preprocessor">#define&#32;scaleFIG&#32;&#32;&#32;&#32;&#32;&#32;&#32;(l_mathop(0.5)&#32;/&#32;(UONE&#32;&lt;&lt;&#32;(FIGS&#32;-&#32;1)))</emphasis>
00461 
00462 <emphasis role="comment">/*</emphasis>
00463 <emphasis role="comment">**&#32;get&#32;up&#32;to&#32;32&#32;bits&#32;from&#32;higher&#32;half,&#32;shifting&#32;right&#32;to</emphasis>
00464 <emphasis role="comment">**&#32;throw&#32;out&#32;the&#32;extra&#32;bits.</emphasis>
00465 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lmathlib_8c_source_1l00466"/><link linkend="_lmathlib_8c_1a1f845b41defc9503d3090923b15d79ed">00466</link> <emphasis role="keyword">static</emphasis>&#32;<link linkend="_lua_8h_1af0a6ed3b852d680769cfc410a0672172">lua_Number</link>&#32;<link linkend="_lmathlib_8c_1a1f845b41defc9503d3090923b15d79ed">I2d</link>&#32;(<link linkend="_struct_rand64">Rand64</link>&#32;x)&#32;{
00467 &#32;&#32;<link linkend="_lua_8h_1af0a6ed3b852d680769cfc410a0672172">lua_Number</link>&#32;h&#32;=&#32;(<link linkend="_lua_8h_1af0a6ed3b852d680769cfc410a0672172">lua_Number</link>)(<link linkend="_lmathlib_8c_1a4d4f48045002686d9d2b361148c98db5">trim32</link>(x.<link linkend="_struct_rand64_1a059a60cb7cf2a79c595fddd51327de0e">h</link>)&#32;&gt;&gt;&#32;(32&#32;-&#32;<link linkend="_lmathlib_8c_1a0282a980b31306aa7d94e9e6ad975837">FIGS</link>));
00468 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;h&#32;*&#32;<link linkend="_lmathlib_8c_1af9acb4963a9c1f6a8e60d4b1e8b76184">scaleFIG</link>;
00469 }
00470 
00471 <emphasis role="preprocessor">#else&#32;&#32;&#32;</emphasis><emphasis role="comment">/*&#32;32&#32;&lt;&#32;FIGS&#32;&lt;=&#32;64&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
00472 
00473 <emphasis role="comment">/*&#32;must&#32;take&#32;care&#32;to&#32;not&#32;shift&#32;stuff&#32;by&#32;more&#32;than&#32;31&#32;slots&#32;*/</emphasis>
00474 
00475 <emphasis role="comment">/*&#32;2^(-FIGS)&#32;=&#32;1.0&#32;/&#32;2^30&#32;/&#32;2^3&#32;/&#32;2^(FIGS-33)&#32;*/</emphasis>
00476 <emphasis role="preprocessor">#define&#32;scaleFIG&#32;&#32;\</emphasis>
00477 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;((lua_Number)1.0&#32;/&#32;(UONE&#32;&lt;&lt;&#32;30)&#32;/&#32;8.0&#32;/&#32;(UONE&#32;&lt;&lt;&#32;(FIGS&#32;-&#32;33)))</emphasis>
00478 
00479 <emphasis role="comment">/*</emphasis>
00480 <emphasis role="comment">**&#32;use&#32;FIGS&#32;-&#32;32&#32;bits&#32;from&#32;lower&#32;half,&#32;throwing&#32;out&#32;the&#32;other</emphasis>
00481 <emphasis role="comment">**&#32;(32&#32;-&#32;(FIGS&#32;-&#32;32))&#32;=&#32;(64&#32;-&#32;FIGS)&#32;bits</emphasis>
00482 <emphasis role="comment">*/</emphasis>
00483 <emphasis role="preprocessor">#define&#32;shiftLOW&#32;&#32;&#32;&#32;(64&#32;-&#32;FIGS)</emphasis>
00484 
00485 <emphasis role="comment">/*</emphasis>
00486 <emphasis role="comment">**&#32;higher&#32;32&#32;bits&#32;go&#32;after&#32;those&#32;(FIGS&#32;-&#32;32)&#32;bits:&#32;shiftHI&#32;=&#32;2^(FIGS&#32;-&#32;32)</emphasis>
00487 <emphasis role="comment">*/</emphasis>
00488 <emphasis role="preprocessor">#define&#32;shiftHI&#32;&#32;&#32;&#32;&#32;((lua_Number)(UONE&#32;&lt;&lt;&#32;(FIGS&#32;-&#32;33))&#32;*&#32;2.0)</emphasis>
00489 
00490 
00491 <emphasis role="keyword">static</emphasis>&#32;<link linkend="_lua_8h_1af0a6ed3b852d680769cfc410a0672172">lua_Number</link>&#32;<link linkend="_lmathlib_8c_1a1f845b41defc9503d3090923b15d79ed">I2d</link>&#32;(<link linkend="_struct_rand64">Rand64</link>&#32;x)&#32;{
00492 &#32;&#32;<link linkend="_lua_8h_1af0a6ed3b852d680769cfc410a0672172">lua_Number</link>&#32;h&#32;=&#32;(<link linkend="_lua_8h_1af0a6ed3b852d680769cfc410a0672172">lua_Number</link>)<link linkend="_lmathlib_8c_1a4d4f48045002686d9d2b361148c98db5">trim32</link>(x.<link linkend="_struct_rand64_1a059a60cb7cf2a79c595fddd51327de0e">h</link>)&#32;*&#32;shiftHI;
00493 &#32;&#32;<link linkend="_lua_8h_1af0a6ed3b852d680769cfc410a0672172">lua_Number</link>&#32;l&#32;=&#32;(<link linkend="_lua_8h_1af0a6ed3b852d680769cfc410a0672172">lua_Number</link>)(<link linkend="_lmathlib_8c_1a4d4f48045002686d9d2b361148c98db5">trim32</link>(x.<link linkend="_struct_rand64_1a3498285273bab2d6af3cf31f8475ceef">l</link>)&#32;&gt;&gt;&#32;shiftLOW);
00494 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(h&#32;+&#32;l)&#32;*&#32;<link linkend="_lmathlib_8c_1af9acb4963a9c1f6a8e60d4b1e8b76184">scaleFIG</link>;
00495 }
00496 
00497 <emphasis role="preprocessor">#endif</emphasis>
00498 
00499 
00500 <emphasis role="comment">/*&#32;convert&#32;a&#32;&apos;Rand64&apos;&#32;to&#32;a&#32;&apos;lua_Unsigned&apos;&#32;*/</emphasis>
<anchor xml:id="_lmathlib_8c_source_1l00501"/><link linkend="_lmathlib_8c_1a00b4573721dbfd08d584b34a7e1722db">00501</link> <emphasis role="keyword">static</emphasis>&#32;<link linkend="_lua_8h_1a2357bdcd9af1aaef0a6895a9c3b7eccf">lua_Unsigned</link>&#32;<link linkend="_lmathlib_8c_1a00b4573721dbfd08d584b34a7e1722db">I2UInt</link>&#32;(<link linkend="_struct_rand64">Rand64</link>&#32;x)&#32;{
00502 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;((<link linkend="_lua_8h_1a2357bdcd9af1aaef0a6895a9c3b7eccf">lua_Unsigned</link>)<link linkend="_lmathlib_8c_1a4d4f48045002686d9d2b361148c98db5">trim32</link>(x.<link linkend="_struct_rand64_1a059a60cb7cf2a79c595fddd51327de0e">h</link>)&#32;&lt;&lt;&#32;31&#32;&lt;&lt;&#32;1)&#32;|&#32;(<link linkend="_lua_8h_1a2357bdcd9af1aaef0a6895a9c3b7eccf">lua_Unsigned</link>)<link linkend="_lmathlib_8c_1a4d4f48045002686d9d2b361148c98db5">trim32</link>(x.<link linkend="_struct_rand64_1a3498285273bab2d6af3cf31f8475ceef">l</link>);
00503 }
00504 
00505 <emphasis role="comment">/*&#32;convert&#32;a&#32;&apos;lua_Unsigned&apos;&#32;to&#32;a&#32;&apos;Rand64&apos;&#32;*/</emphasis>
<anchor xml:id="_lmathlib_8c_source_1l00506"/><link linkend="_lmathlib_8c_1aedfbc1eb34c86571439b5d3d36d9361e">00506</link> <emphasis role="keyword">static</emphasis>&#32;<link linkend="_struct_rand64">Rand64</link>&#32;<link linkend="_lmathlib_8c_1aedfbc1eb34c86571439b5d3d36d9361e">Int2I</link>&#32;(<link linkend="_lua_8h_1a2357bdcd9af1aaef0a6895a9c3b7eccf">lua_Unsigned</link>&#32;n)&#32;{
00507 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_lmathlib_8c_1a43beb45c0b29c5e7a866b193d6b8c546">packI</link>((<link linkend="_lmathlib_8c_1aa8f942b3f89c99f2fbde3c4361b7c615">lu_int32</link>)(n&#32;&gt;&gt;&#32;31&#32;&gt;&gt;&#32;1),&#32;(<link linkend="_lmathlib_8c_1aa8f942b3f89c99f2fbde3c4361b7c615">lu_int32</link>)n);
00508 }
00509 
00510 <emphasis role="preprocessor">#endif&#32;&#32;</emphasis><emphasis role="comment">/*&#32;}&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
00511 
00512 
00513 <emphasis role="comment">/*</emphasis>
00514 <emphasis role="comment">**&#32;A&#32;state&#32;uses&#32;four&#32;&apos;Rand64&apos;&#32;values.</emphasis>
00515 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lmathlib_8c_source_1l00516"/><link linkend="_struct_ran_state">00516</link> <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis>{
<anchor xml:id="_lmathlib_8c_source_1l00517"/><link linkend="_struct_ran_state_1a581249763f56c4468d0b00532c071d11">00517</link> &#32;&#32;<link linkend="_struct_rand64">Rand64</link>&#32;s[4];
00518 }&#32;<link linkend="_struct_ran_state">RanState</link>;
00519 
00520 
00521 <emphasis role="comment">/*</emphasis>
00522 <emphasis role="comment">**&#32;Project&#32;the&#32;random&#32;integer&#32;&apos;ran&apos;&#32;into&#32;the&#32;interval&#32;[0,&#32;n].</emphasis>
00523 <emphasis role="comment">**&#32;Because&#32;&apos;ran&apos;&#32;has&#32;2^B&#32;possible&#32;values,&#32;the&#32;projection&#32;can&#32;only&#32;be</emphasis>
00524 <emphasis role="comment">**&#32;uniform&#32;when&#32;the&#32;size&#32;of&#32;the&#32;interval&#32;is&#32;a&#32;power&#32;of&#32;2&#32;(exact</emphasis>
00525 <emphasis role="comment">**&#32;division).&#32;Otherwise,&#32;to&#32;get&#32;a&#32;uniform&#32;projection&#32;into&#32;[0,&#32;n],&#32;we</emphasis>
00526 <emphasis role="comment">**&#32;first&#32;compute&#32;&apos;lim&apos;,&#32;the&#32;smallest&#32;Mersenne&#32;number&#32;not&#32;smaller&#32;than</emphasis>
00527 <emphasis role="comment">**&#32;&apos;n&apos;.&#32;We&#32;then&#32;project&#32;&apos;ran&apos;&#32;into&#32;the&#32;interval&#32;[0,&#32;lim].&#32;&#32;If&#32;the&#32;result</emphasis>
00528 <emphasis role="comment">**&#32;is&#32;inside&#32;[0,&#32;n],&#32;we&#32;are&#32;done.&#32;Otherwise,&#32;we&#32;try&#32;with&#32;another&#32;&apos;ran&apos;,</emphasis>
00529 <emphasis role="comment">**&#32;until&#32;we&#32;have&#32;a&#32;result&#32;inside&#32;the&#32;interval.</emphasis>
00530 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lmathlib_8c_source_1l00531"/><link linkend="_lmathlib_8c_1a13ece5b7fa9dd48246430a48dec238b1">00531</link> <emphasis role="keyword">static</emphasis>&#32;<link linkend="_lua_8h_1a2357bdcd9af1aaef0a6895a9c3b7eccf">lua_Unsigned</link>&#32;<link linkend="_lmathlib_8c_1a13ece5b7fa9dd48246430a48dec238b1">project</link>&#32;(<link linkend="_lua_8h_1a2357bdcd9af1aaef0a6895a9c3b7eccf">lua_Unsigned</link>&#32;ran,&#32;<link linkend="_lua_8h_1a2357bdcd9af1aaef0a6895a9c3b7eccf">lua_Unsigned</link>&#32;n,
00532 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_ran_state">RanState</link>&#32;*state)&#32;{
00533 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((n&#32;&amp;&#32;(n&#32;+&#32;1))&#32;==&#32;0)&#32;&#32;<emphasis role="comment">/*&#32;is&#32;&apos;n&#32;+&#32;1&apos;&#32;a&#32;power&#32;of&#32;2?&#32;*/</emphasis>
00534 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ran&#32;&amp;&#32;n;&#32;&#32;<emphasis role="comment">/*&#32;no&#32;bias&#32;*/</emphasis>
00535 &#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00536 &#32;&#32;&#32;&#32;<link linkend="_lua_8h_1a2357bdcd9af1aaef0a6895a9c3b7eccf">lua_Unsigned</link>&#32;lim&#32;=&#32;n;
00537 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;compute&#32;the&#32;smallest&#32;(2^b&#32;-&#32;1)&#32;not&#32;smaller&#32;than&#32;&apos;n&apos;&#32;*/</emphasis>
00538 &#32;&#32;&#32;&#32;lim&#32;|=&#32;(lim&#32;&gt;&gt;&#32;1);
00539 &#32;&#32;&#32;&#32;lim&#32;|=&#32;(lim&#32;&gt;&gt;&#32;2);
00540 &#32;&#32;&#32;&#32;lim&#32;|=&#32;(lim&#32;&gt;&gt;&#32;4);
00541 &#32;&#32;&#32;&#32;lim&#32;|=&#32;(lim&#32;&gt;&gt;&#32;8);
00542 &#32;&#32;&#32;&#32;lim&#32;|=&#32;(lim&#32;&gt;&gt;&#32;16);
00543 <emphasis role="preprocessor">#if&#32;(LUA_MAXUNSIGNED&#32;&gt;&gt;&#32;31)&#32;&gt;=&#32;3</emphasis>
00544 &#32;&#32;&#32;&#32;lim&#32;|=&#32;(lim&#32;&gt;&gt;&#32;32);&#32;&#32;<emphasis role="comment">/*&#32;integer&#32;type&#32;has&#32;more&#32;than&#32;32&#32;bits&#32;*/</emphasis>
00545 <emphasis role="preprocessor">#endif</emphasis>
00546 &#32;&#32;&#32;&#32;<link linkend="_llimits_8h_1a5978f5fda715bd80e845df1e16ad7780">lua_assert</link>((lim&#32;&amp;&#32;(lim&#32;+&#32;1))&#32;==&#32;0&#32;&#32;<emphasis role="comment">/*&#32;&apos;lim&#32;+&#32;1&apos;&#32;is&#32;a&#32;power&#32;of&#32;2,&#32;*/</emphasis>
00547 &#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;lim&#32;&gt;=&#32;n&#32;&#32;<emphasis role="comment">/*&#32;not&#32;smaller&#32;than&#32;&apos;n&apos;,&#32;*/</emphasis>
00548 &#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;(lim&#32;&gt;&gt;&#32;1)&#32;&lt;&#32;n);&#32;&#32;<emphasis role="comment">/*&#32;and&#32;it&#32;is&#32;the&#32;smallest&#32;one&#32;*/</emphasis>
00549 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;((ran&#32;&amp;=&#32;lim)&#32;&gt;&#32;n)&#32;&#32;<emphasis role="comment">/*&#32;project&#32;&apos;ran&apos;&#32;into&#32;[0..lim]&#32;*/</emphasis>
00550 &#32;&#32;&#32;&#32;&#32;&#32;ran&#32;=&#32;<link linkend="_lmathlib_8c_1a00b4573721dbfd08d584b34a7e1722db">I2UInt</link>(<link linkend="_lmathlib_8c_1ac01956e1f85c57f7781d256db3d76886">nextrand</link>(state-&gt;<link linkend="_struct_ran_state_1a581249763f56c4468d0b00532c071d11">s</link>));&#32;&#32;<emphasis role="comment">/*&#32;not&#32;inside&#32;[0..n]?&#32;try&#32;again&#32;*/</emphasis>
00551 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ran;
00552 &#32;&#32;}
00553 }
00554 
00555 
<anchor xml:id="_lmathlib_8c_source_1l00556"/><link linkend="_lmathlib_8c_1aa3ad02d4204d21d35a0825281915fb22">00556</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lmathlib_8c_1aa3ad02d4204d21d35a0825281915fb22">math_random</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L)&#32;{
00557 &#32;&#32;<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;low,&#32;up;
00558 &#32;&#32;<link linkend="_lua_8h_1a2357bdcd9af1aaef0a6895a9c3b7eccf">lua_Unsigned</link>&#32;p;
00559 &#32;&#32;<link linkend="_struct_ran_state">RanState</link>&#32;*state&#32;=&#32;(<link linkend="_struct_ran_state">RanState</link>&#32;*)<link linkend="_lapi_8c_1a0444ddf13e5618bca969e4b3b47bc0cc">lua_touserdata</link>(L,&#32;<link linkend="_lua_8h_1ac3aa6665c25070f282c9827ec919fe6a">lua_upvalueindex</link>(1));
00560 &#32;&#32;<link linkend="_struct_rand64">Rand64</link>&#32;rv&#32;=&#32;<link linkend="_lmathlib_8c_1ac01956e1f85c57f7781d256db3d76886">nextrand</link>(state-&gt;<link linkend="_struct_ran_state_1a581249763f56c4468d0b00532c071d11">s</link>);&#32;&#32;<emphasis role="comment">/*&#32;next&#32;pseudo-random&#32;value&#32;*/</emphasis>
00561 &#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(<link linkend="_lapi_8c_1afbb08ecb69421875494105d4de68e5bf">lua_gettop</link>(L))&#32;{&#32;&#32;<emphasis role="comment">/*&#32;check&#32;number&#32;of&#32;arguments&#32;*/</emphasis>
00562 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;0:&#32;{&#32;&#32;<emphasis role="comment">/*&#32;no&#32;arguments&#32;*/</emphasis>
00563 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lapi_8c_1a328625a03fbb5548f27b1af10f109f6a">lua_pushnumber</link>(L,&#32;<link linkend="_lmathlib_8c_1a1f845b41defc9503d3090923b15d79ed">I2d</link>(rv));&#32;&#32;<emphasis role="comment">/*&#32;float&#32;between&#32;0&#32;and&#32;1&#32;*/</emphasis>
00564 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
00565 &#32;&#32;&#32;&#32;}
00566 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;1:&#32;{&#32;&#32;<emphasis role="comment">/*&#32;only&#32;upper&#32;limit&#32;*/</emphasis>
00567 &#32;&#32;&#32;&#32;&#32;&#32;low&#32;=&#32;1;
00568 &#32;&#32;&#32;&#32;&#32;&#32;up&#32;=&#32;<link linkend="_lauxlib_8c_1aa15bea412c49bfdee1f3dbff096ce7d2">luaL_checkinteger</link>(L,&#32;1);
00569 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(up&#32;==&#32;0)&#32;{&#32;&#32;<emphasis role="comment">/*&#32;single&#32;0&#32;as&#32;argument?&#32;*/</emphasis>
00570 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lapi_8c_1adcec46ff05dfee9a3c4c05828b40c213">lua_pushinteger</link>(L,&#32;<link linkend="_lmathlib_8c_1a00b4573721dbfd08d584b34a7e1722db">I2UInt</link>(rv));&#32;&#32;<emphasis role="comment">/*&#32;full&#32;random&#32;integer&#32;*/</emphasis>
00571 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
00572 &#32;&#32;&#32;&#32;&#32;&#32;}
00573 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00574 &#32;&#32;&#32;&#32;}
00575 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;2:&#32;{&#32;&#32;<emphasis role="comment">/*&#32;lower&#32;and&#32;upper&#32;limits&#32;*/</emphasis>
00576 &#32;&#32;&#32;&#32;&#32;&#32;low&#32;=&#32;<link linkend="_lauxlib_8c_1aa15bea412c49bfdee1f3dbff096ce7d2">luaL_checkinteger</link>(L,&#32;1);
00577 &#32;&#32;&#32;&#32;&#32;&#32;up&#32;=&#32;<link linkend="_lauxlib_8c_1aa15bea412c49bfdee1f3dbff096ce7d2">luaL_checkinteger</link>(L,&#32;2);
00578 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00579 &#32;&#32;&#32;&#32;}
00580 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_lauxlib_8c_1a6c51d83d29244779392551388913e08a">luaL_error</link>(L,&#32;<emphasis role="stringliteral">&quot;wrong&#32;number&#32;of&#32;arguments&quot;</emphasis>);
00581 &#32;&#32;}
00582 &#32;&#32;<emphasis role="comment">/*&#32;random&#32;integer&#32;in&#32;the&#32;interval&#32;[low,&#32;up]&#32;*/</emphasis>
00583 &#32;&#32;<link linkend="_lauxlib_8h_1a48ce6cd86a7448e97f258097a7abc44d">luaL_argcheck</link>(L,&#32;low&#32;&lt;=&#32;up,&#32;1,&#32;<emphasis role="stringliteral">&quot;interval&#32;is&#32;empty&quot;</emphasis>);
00584 &#32;&#32;<emphasis role="comment">/*&#32;project&#32;random&#32;integer&#32;into&#32;the&#32;interval&#32;[0,&#32;up&#32;-&#32;low]&#32;*/</emphasis>
00585 &#32;&#32;p&#32;=&#32;<link linkend="_lmathlib_8c_1a13ece5b7fa9dd48246430a48dec238b1">project</link>(<link linkend="_lmathlib_8c_1a00b4573721dbfd08d584b34a7e1722db">I2UInt</link>(rv),&#32;(<link linkend="_lua_8h_1a2357bdcd9af1aaef0a6895a9c3b7eccf">lua_Unsigned</link>)up&#32;-&#32;(<link linkend="_lua_8h_1a2357bdcd9af1aaef0a6895a9c3b7eccf">lua_Unsigned</link>)low,&#32;state);
00586 &#32;&#32;<link linkend="_lapi_8c_1adcec46ff05dfee9a3c4c05828b40c213">lua_pushinteger</link>(L,&#32;p&#32;+&#32;(<link linkend="_lua_8h_1a2357bdcd9af1aaef0a6895a9c3b7eccf">lua_Unsigned</link>)low);
00587 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
00588 }
00589 
00590 
<anchor xml:id="_lmathlib_8c_source_1l00591"/><link linkend="_lmathlib_8c_1a4e708776ec48b6fb6d7239a8754900e1">00591</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_lmathlib_8c_1a4e708776ec48b6fb6d7239a8754900e1">setseed</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<link linkend="_struct_rand64">Rand64</link>&#32;*state,
00592 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lua_8h_1a2357bdcd9af1aaef0a6895a9c3b7eccf">lua_Unsigned</link>&#32;n1,&#32;<link linkend="_lua_8h_1a2357bdcd9af1aaef0a6895a9c3b7eccf">lua_Unsigned</link>&#32;n2)&#32;{
00593 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
00594 &#32;&#32;state[0]&#32;=&#32;<link linkend="_lmathlib_8c_1aedfbc1eb34c86571439b5d3d36d9361e">Int2I</link>(n1);
00595 &#32;&#32;state[1]&#32;=&#32;<link linkend="_lmathlib_8c_1aedfbc1eb34c86571439b5d3d36d9361e">Int2I</link>(0xff);&#32;&#32;<emphasis role="comment">/*&#32;avoid&#32;a&#32;zero&#32;state&#32;*/</emphasis>
00596 &#32;&#32;state[2]&#32;=&#32;<link linkend="_lmathlib_8c_1aedfbc1eb34c86571439b5d3d36d9361e">Int2I</link>(n2);
00597 &#32;&#32;state[3]&#32;=&#32;<link linkend="_lmathlib_8c_1aedfbc1eb34c86571439b5d3d36d9361e">Int2I</link>(0);
00598 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;16;&#32;i++)
00599 &#32;&#32;&#32;&#32;<link linkend="_lmathlib_8c_1ac01956e1f85c57f7781d256db3d76886">nextrand</link>(state);&#32;&#32;<emphasis role="comment">/*&#32;discard&#32;initial&#32;values&#32;to&#32;&quot;spread&quot;&#32;seed&#32;*/</emphasis>
00600 &#32;&#32;<link linkend="_lapi_8c_1adcec46ff05dfee9a3c4c05828b40c213">lua_pushinteger</link>(L,&#32;n1);
00601 &#32;&#32;<link linkend="_lapi_8c_1adcec46ff05dfee9a3c4c05828b40c213">lua_pushinteger</link>(L,&#32;n2);
00602 }
00603 
00604 
00605 <emphasis role="comment">/*</emphasis>
00606 <emphasis role="comment">**&#32;Set&#32;a&#32;&quot;random&quot;&#32;seed.&#32;To&#32;get&#32;some&#32;randomness,&#32;use&#32;the&#32;current&#32;time</emphasis>
00607 <emphasis role="comment">**&#32;and&#32;the&#32;address&#32;of&#32;&apos;L&apos;&#32;(in&#32;case&#32;the&#32;machine&#32;does&#32;address&#32;space&#32;layout</emphasis>
00608 <emphasis role="comment">**&#32;randomization).</emphasis>
00609 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lmathlib_8c_source_1l00610"/><link linkend="_lmathlib_8c_1aaeea41eadd14e3f30fe6814cc94891c5">00610</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_lmathlib_8c_1aaeea41eadd14e3f30fe6814cc94891c5">randseed</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<link linkend="_struct_ran_state">RanState</link>&#32;*state)&#32;{
00611 &#32;&#32;<link linkend="_lua_8h_1a2357bdcd9af1aaef0a6895a9c3b7eccf">lua_Unsigned</link>&#32;seed1&#32;=&#32;(<link linkend="_lua_8h_1a2357bdcd9af1aaef0a6895a9c3b7eccf">lua_Unsigned</link>)time(NULL);
00612 &#32;&#32;<link linkend="_lua_8h_1a2357bdcd9af1aaef0a6895a9c3b7eccf">lua_Unsigned</link>&#32;seed2&#32;=&#32;(<link linkend="_lua_8h_1a2357bdcd9af1aaef0a6895a9c3b7eccf">lua_Unsigned</link>)(<emphasis role="keywordtype">size_t</emphasis>)L;
00613 &#32;&#32;<link linkend="_lmathlib_8c_1a4e708776ec48b6fb6d7239a8754900e1">setseed</link>(L,&#32;state-&gt;<link linkend="_struct_ran_state_1a581249763f56c4468d0b00532c071d11">s</link>,&#32;seed1,&#32;seed2);
00614 }
00615 
00616 
<anchor xml:id="_lmathlib_8c_source_1l00617"/><link linkend="_lmathlib_8c_1a55540667178ac717a1c6283b58b00ce7">00617</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lmathlib_8c_1a55540667178ac717a1c6283b58b00ce7">math_randomseed</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L)&#32;{
00618 &#32;&#32;<link linkend="_struct_ran_state">RanState</link>&#32;*state&#32;=&#32;(<link linkend="_struct_ran_state">RanState</link>&#32;*)<link linkend="_lapi_8c_1a0444ddf13e5618bca969e4b3b47bc0cc">lua_touserdata</link>(L,&#32;<link linkend="_lua_8h_1ac3aa6665c25070f282c9827ec919fe6a">lua_upvalueindex</link>(1));
00619 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lua_8h_1ad054300429f1094d3692313abc733ddf">lua_isnone</link>(L,&#32;1))&#32;{
00620 &#32;&#32;&#32;&#32;<link linkend="_lmathlib_8c_1aaeea41eadd14e3f30fe6814cc94891c5">randseed</link>(L,&#32;state);
00621 &#32;&#32;}
00622 &#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00623 &#32;&#32;&#32;&#32;<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;n1&#32;=&#32;<link linkend="_lauxlib_8c_1aa15bea412c49bfdee1f3dbff096ce7d2">luaL_checkinteger</link>(L,&#32;1);
00624 &#32;&#32;&#32;&#32;<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;n2&#32;=&#32;<link linkend="_lauxlib_8c_1ab10ff110a5ba19b4385947de7834ee3c">luaL_optinteger</link>(L,&#32;2,&#32;0);
00625 &#32;&#32;&#32;&#32;<link linkend="_lmathlib_8c_1a4e708776ec48b6fb6d7239a8754900e1">setseed</link>(L,&#32;state-&gt;<link linkend="_struct_ran_state_1a581249763f56c4468d0b00532c071d11">s</link>,&#32;n1,&#32;n2);
00626 &#32;&#32;}
00627 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;2;&#32;&#32;<emphasis role="comment">/*&#32;return&#32;seeds&#32;*/</emphasis>
00628 }
00629 
00630 
<anchor xml:id="_lmathlib_8c_source_1l00631"/><link linkend="_lmathlib_8c_1a866900ee1a7dd674b2c58e52d18b0a4e">00631</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structlua_l___reg">luaL_Reg</link>&#32;<link linkend="_lmathlib_8c_1a866900ee1a7dd674b2c58e52d18b0a4e">randfuncs</link>[]&#32;=&#32;{
00632 &#32;&#32;{<emphasis role="stringliteral">&quot;random&quot;</emphasis>,&#32;<link linkend="_lmathlib_8c_1aa3ad02d4204d21d35a0825281915fb22">math_random</link>},
00633 &#32;&#32;{<emphasis role="stringliteral">&quot;randomseed&quot;</emphasis>,&#32;<link linkend="_lmathlib_8c_1a55540667178ac717a1c6283b58b00ce7">math_randomseed</link>},
00634 &#32;&#32;{NULL,&#32;NULL}
00635 };
00636 
00637 
00638 <emphasis role="comment">/*</emphasis>
00639 <emphasis role="comment">**&#32;Register&#32;the&#32;random&#32;functions&#32;and&#32;initialize&#32;their&#32;state.</emphasis>
00640 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lmathlib_8c_source_1l00641"/><link linkend="_lmathlib_8c_1aec3434532c7149fc0d3fff7ac86e6fbb">00641</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_lmathlib_8c_1aec3434532c7149fc0d3fff7ac86e6fbb">setrandfunc</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L)&#32;{
00642 &#32;&#32;<link linkend="_struct_ran_state">RanState</link>&#32;*state&#32;=&#32;(<link linkend="_struct_ran_state">RanState</link>&#32;*)<link linkend="_lapi_8c_1a9c09a58b86c71e997d7ccabb67f18c12">lua_newuserdatauv</link>(L,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_struct_ran_state">RanState</link>),&#32;0);
00643 &#32;&#32;<link linkend="_lmathlib_8c_1aaeea41eadd14e3f30fe6814cc94891c5">randseed</link>(L,&#32;state);&#32;&#32;<emphasis role="comment">/*&#32;initialize&#32;with&#32;a&#32;&quot;random&quot;&#32;seed&#32;*/</emphasis>
00644 &#32;&#32;<link linkend="_lua_8h_1abb8eae2164badeafdb037bc1e03cc822">lua_pop</link>(L,&#32;2);&#32;&#32;<emphasis role="comment">/*&#32;remove&#32;pushed&#32;seeds&#32;*/</emphasis>
00645 &#32;&#32;<link linkend="_lauxlib_8c_1a4cab22d0cb403fa6b94f2542f4303096">luaL_setfuncs</link>(L,&#32;<link linkend="_lmathlib_8c_1a866900ee1a7dd674b2c58e52d18b0a4e">randfuncs</link>,&#32;1);
00646 }
00647 
00648 <emphasis role="comment">/*&#32;}==================================================================&#32;*/</emphasis>
00649 
00650 
00651 <emphasis role="comment">/*</emphasis>
00652 <emphasis role="comment">**&#32;{==================================================================</emphasis>
00653 <emphasis role="comment">**&#32;Deprecated&#32;functions&#32;(for&#32;compatibility&#32;only)</emphasis>
00654 <emphasis role="comment">**&#32;===================================================================</emphasis>
00655 <emphasis role="comment">*/</emphasis>
00656 <emphasis role="preprocessor">#if&#32;defined(LUA_COMPAT_MATHLIB)</emphasis>
00657 
00658 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;math_cosh&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L)&#32;{
00659 &#32;&#32;<link linkend="_lapi_8c_1a328625a03fbb5548f27b1af10f109f6a">lua_pushnumber</link>(L,&#32;<link linkend="_luaconf_8h_1a919f548d82dc9a0681dd0ba8996d986d">l_mathop</link>(cosh)(<link linkend="_lauxlib_8c_1a9f2c941bb5eb7d3a7746f35c4fe3cced">luaL_checknumber</link>(L,&#32;1)));
00660 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
00661 }
00662 
00663 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;math_sinh&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L)&#32;{
00664 &#32;&#32;<link linkend="_lapi_8c_1a328625a03fbb5548f27b1af10f109f6a">lua_pushnumber</link>(L,&#32;<link linkend="_luaconf_8h_1a919f548d82dc9a0681dd0ba8996d986d">l_mathop</link>(sinh)(<link linkend="_lauxlib_8c_1a9f2c941bb5eb7d3a7746f35c4fe3cced">luaL_checknumber</link>(L,&#32;1)));
00665 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
00666 }
00667 
00668 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;math_tanh&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L)&#32;{
00669 &#32;&#32;<link linkend="_lapi_8c_1a328625a03fbb5548f27b1af10f109f6a">lua_pushnumber</link>(L,&#32;<link linkend="_luaconf_8h_1a919f548d82dc9a0681dd0ba8996d986d">l_mathop</link>(tanh)(<link linkend="_lauxlib_8c_1a9f2c941bb5eb7d3a7746f35c4fe3cced">luaL_checknumber</link>(L,&#32;1)));
00670 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
00671 }
00672 
00673 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;math_pow&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L)&#32;{
00674 &#32;&#32;<link linkend="_lua_8h_1af0a6ed3b852d680769cfc410a0672172">lua_Number</link>&#32;x&#32;=&#32;<link linkend="_lauxlib_8c_1a9f2c941bb5eb7d3a7746f35c4fe3cced">luaL_checknumber</link>(L,&#32;1);
00675 &#32;&#32;<link linkend="_lua_8h_1af0a6ed3b852d680769cfc410a0672172">lua_Number</link>&#32;y&#32;=&#32;<link linkend="_lauxlib_8c_1a9f2c941bb5eb7d3a7746f35c4fe3cced">luaL_checknumber</link>(L,&#32;2);
00676 &#32;&#32;<link linkend="_lapi_8c_1a328625a03fbb5548f27b1af10f109f6a">lua_pushnumber</link>(L,&#32;<link linkend="_luaconf_8h_1a919f548d82dc9a0681dd0ba8996d986d">l_mathop</link>(pow)(x,&#32;y));
00677 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
00678 }
00679 
00680 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;math_frexp&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L)&#32;{
00681 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;e;
00682 &#32;&#32;<link linkend="_lapi_8c_1a328625a03fbb5548f27b1af10f109f6a">lua_pushnumber</link>(L,&#32;<link linkend="_luaconf_8h_1a919f548d82dc9a0681dd0ba8996d986d">l_mathop</link>(frexp)(<link linkend="_lauxlib_8c_1a9f2c941bb5eb7d3a7746f35c4fe3cced">luaL_checknumber</link>(L,&#32;1),&#32;&amp;e));
00683 &#32;&#32;<link linkend="_lapi_8c_1adcec46ff05dfee9a3c4c05828b40c213">lua_pushinteger</link>(L,&#32;e);
00684 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;2;
00685 }
00686 
00687 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;math_ldexp&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L)&#32;{
00688 &#32;&#32;<link linkend="_lua_8h_1af0a6ed3b852d680769cfc410a0672172">lua_Number</link>&#32;x&#32;=&#32;<link linkend="_lauxlib_8c_1a9f2c941bb5eb7d3a7746f35c4fe3cced">luaL_checknumber</link>(L,&#32;1);
00689 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;ep&#32;=&#32;(int)<link linkend="_lauxlib_8c_1aa15bea412c49bfdee1f3dbff096ce7d2">luaL_checkinteger</link>(L,&#32;2);
00690 &#32;&#32;<link linkend="_lapi_8c_1a328625a03fbb5548f27b1af10f109f6a">lua_pushnumber</link>(L,&#32;<link linkend="_luaconf_8h_1a919f548d82dc9a0681dd0ba8996d986d">l_mathop</link>(ldexp)(x,&#32;ep));
00691 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
00692 }
00693 
00694 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;math_log10&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L)&#32;{
00695 &#32;&#32;<link linkend="_lapi_8c_1a328625a03fbb5548f27b1af10f109f6a">lua_pushnumber</link>(L,&#32;<link linkend="_luaconf_8h_1a919f548d82dc9a0681dd0ba8996d986d">l_mathop</link>(log10)(<link linkend="_lauxlib_8c_1a9f2c941bb5eb7d3a7746f35c4fe3cced">luaL_checknumber</link>(L,&#32;1)));
00696 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
00697 }
00698 
00699 <emphasis role="preprocessor">#endif</emphasis>
00700 <emphasis role="comment">/*&#32;}==================================================================&#32;*/</emphasis>
00701 
00702 
00703 
<anchor xml:id="_lmathlib_8c_source_1l00704"/><link linkend="_lmathlib_8c_1ac80ca653775abeb66123337a10874983">00704</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structlua_l___reg">luaL_Reg</link>&#32;<link linkend="_lmathlib_8c_1ac80ca653775abeb66123337a10874983">mathlib</link>[]&#32;=&#32;{
00705 &#32;&#32;{<emphasis role="stringliteral">&quot;abs&quot;</emphasis>,&#32;&#32;&#32;<link linkend="_lmathlib_8c_1a9545dd3926974393ff34e33a108df628">math_abs</link>},
00706 &#32;&#32;{<emphasis role="stringliteral">&quot;acos&quot;</emphasis>,&#32;&#32;<link linkend="_lmathlib_8c_1a9f983fa3cca14d69429cebc95be4fab1">math_acos</link>},
00707 &#32;&#32;{<emphasis role="stringliteral">&quot;asin&quot;</emphasis>,&#32;&#32;<link linkend="_lmathlib_8c_1aa44ea66108bb38acbe5c8cb2ce6de33f">math_asin</link>},
00708 &#32;&#32;{<emphasis role="stringliteral">&quot;atan&quot;</emphasis>,&#32;&#32;<link linkend="_lmathlib_8c_1a70217d6c0312477f3e257a584518424c">math_atan</link>},
00709 &#32;&#32;{<emphasis role="stringliteral">&quot;ceil&quot;</emphasis>,&#32;&#32;<link linkend="_lmathlib_8c_1ae4f0dc771c626a9badef237db9d433da">math_ceil</link>},
00710 &#32;&#32;{<emphasis role="stringliteral">&quot;cos&quot;</emphasis>,&#32;&#32;&#32;<link linkend="_lmathlib_8c_1a5db2cf8c6e7a331d7daf259f305e057c">math_cos</link>},
00711 &#32;&#32;{<emphasis role="stringliteral">&quot;deg&quot;</emphasis>,&#32;&#32;&#32;<link linkend="_lmathlib_8c_1ad9bd03062009a4aba15739a1630b2a25">math_deg</link>},
00712 &#32;&#32;{<emphasis role="stringliteral">&quot;exp&quot;</emphasis>,&#32;&#32;&#32;<link linkend="_lmathlib_8c_1a7c971c680cdad8e4e833f8a3db9d065d">math_exp</link>},
00713 &#32;&#32;{<emphasis role="stringliteral">&quot;tointeger&quot;</emphasis>,&#32;<link linkend="_lmathlib_8c_1a7604de8e5daca6d7576a9ee940a3f479">math_toint</link>},
00714 &#32;&#32;{<emphasis role="stringliteral">&quot;floor&quot;</emphasis>,&#32;<link linkend="_lmathlib_8c_1aa063dcd93e924af13c5e311f89b18d03">math_floor</link>},
00715 &#32;&#32;{<emphasis role="stringliteral">&quot;fmod&quot;</emphasis>,&#32;&#32;&#32;<link linkend="_lmathlib_8c_1a25b3f7d30cf85b8248a72de20049564e">math_fmod</link>},
00716 &#32;&#32;{<emphasis role="stringliteral">&quot;ult&quot;</emphasis>,&#32;&#32;&#32;<link linkend="_lmathlib_8c_1a5d62cc09bee44198af9cb2023a50d972">math_ult</link>},
00717 &#32;&#32;{<emphasis role="stringliteral">&quot;log&quot;</emphasis>,&#32;&#32;&#32;<link linkend="_lmathlib_8c_1a7cb92978495484adbfc9d0cb0ace2cc2">math_log</link>},
00718 &#32;&#32;{<emphasis role="stringliteral">&quot;max&quot;</emphasis>,&#32;&#32;&#32;<link linkend="_lmathlib_8c_1a03e3b76e515f5535122c2026a9e8f445">math_max</link>},
00719 &#32;&#32;{<emphasis role="stringliteral">&quot;min&quot;</emphasis>,&#32;&#32;&#32;<link linkend="_lmathlib_8c_1ab0a14d784b5fe2f30062e88a635db320">math_min</link>},
00720 &#32;&#32;{<emphasis role="stringliteral">&quot;modf&quot;</emphasis>,&#32;&#32;&#32;<link linkend="_lmathlib_8c_1adff369706deb34be360be3103f31d4c4">math_modf</link>},
00721 &#32;&#32;{<emphasis role="stringliteral">&quot;rad&quot;</emphasis>,&#32;&#32;&#32;<link linkend="_lmathlib_8c_1a5d8eec19cea59d1ce1012a705f70dc8d">math_rad</link>},
00722 &#32;&#32;{<emphasis role="stringliteral">&quot;sin&quot;</emphasis>,&#32;&#32;&#32;<link linkend="_lmathlib_8c_1adb460e2b01df47afcaa823ecc1846a24">math_sin</link>},
00723 &#32;&#32;{<emphasis role="stringliteral">&quot;sqrt&quot;</emphasis>,&#32;&#32;<link linkend="_lmathlib_8c_1a8f4c386bafe8ae7269476ed3ed94d1d8">math_sqrt</link>},
00724 &#32;&#32;{<emphasis role="stringliteral">&quot;tan&quot;</emphasis>,&#32;&#32;&#32;<link linkend="_lmathlib_8c_1a06bc9b8c610e00759bb99c3db6128f18">math_tan</link>},
00725 &#32;&#32;{<emphasis role="stringliteral">&quot;type&quot;</emphasis>,&#32;<link linkend="_lmathlib_8c_1af58a749fbaa6093fab0db96dcfd822a7">math_type</link>},
00726 <emphasis role="preprocessor">#if&#32;defined(LUA_COMPAT_MATHLIB)</emphasis>
00727 &#32;&#32;{<emphasis role="stringliteral">&quot;atan2&quot;</emphasis>,&#32;<link linkend="_lmathlib_8c_1a70217d6c0312477f3e257a584518424c">math_atan</link>},
00728 &#32;&#32;{<emphasis role="stringliteral">&quot;cosh&quot;</emphasis>,&#32;&#32;&#32;math_cosh},
00729 &#32;&#32;{<emphasis role="stringliteral">&quot;sinh&quot;</emphasis>,&#32;&#32;&#32;math_sinh},
00730 &#32;&#32;{<emphasis role="stringliteral">&quot;tanh&quot;</emphasis>,&#32;&#32;&#32;math_tanh},
00731 &#32;&#32;{<emphasis role="stringliteral">&quot;pow&quot;</emphasis>,&#32;&#32;&#32;math_pow},
00732 &#32;&#32;{<emphasis role="stringliteral">&quot;frexp&quot;</emphasis>,&#32;math_frexp},
00733 &#32;&#32;{<emphasis role="stringliteral">&quot;ldexp&quot;</emphasis>,&#32;math_ldexp},
00734 &#32;&#32;{<emphasis role="stringliteral">&quot;log10&quot;</emphasis>,&#32;math_log10},
00735 <emphasis role="preprocessor">#endif</emphasis>
00736 &#32;&#32;<emphasis role="comment">/*&#32;placeholders&#32;*/</emphasis>
00737 &#32;&#32;{<emphasis role="stringliteral">&quot;random&quot;</emphasis>,&#32;NULL},
00738 &#32;&#32;{<emphasis role="stringliteral">&quot;randomseed&quot;</emphasis>,&#32;NULL},
00739 &#32;&#32;{<emphasis role="stringliteral">&quot;pi&quot;</emphasis>,&#32;NULL},
00740 &#32;&#32;{<emphasis role="stringliteral">&quot;huge&quot;</emphasis>,&#32;NULL},
00741 &#32;&#32;{<emphasis role="stringliteral">&quot;maxinteger&quot;</emphasis>,&#32;NULL},
00742 &#32;&#32;{<emphasis role="stringliteral">&quot;mininteger&quot;</emphasis>,&#32;NULL},
00743 &#32;&#32;{NULL,&#32;NULL}
00744 };
00745 
00746 
00747 <emphasis role="comment">/*</emphasis>
00748 <emphasis role="comment">**&#32;Open&#32;math&#32;library</emphasis>
00749 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lmathlib_8c_source_1l00750"/><link linkend="_lualib_8h_1ad9a992586e14f1dd04f4983b8740605a">00750</link> <link linkend="_luaconf_8h_1a8e877216dd2f0cf9a68255b494f82f50">LUAMOD_API</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lmathlib_8c_1a78cbff06fd4d59cf3d7525fa6cc196ba">luaopen_math</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L)&#32;{
00751 &#32;&#32;<link linkend="_lauxlib_8h_1a5088ff720ec66200d83eb78467b77239">luaL_newlib</link>(L,&#32;<link linkend="_lmathlib_8c_1ac80ca653775abeb66123337a10874983">mathlib</link>);
00752 &#32;&#32;<link linkend="_lapi_8c_1a328625a03fbb5548f27b1af10f109f6a">lua_pushnumber</link>(L,&#32;<link linkend="_lmathlib_8c_1a598a3330b3c21701223ee0ca14316eca">PI</link>);
00753 &#32;&#32;<link linkend="_lapi_8c_1a3f2f542ee6728d82e51b1c302f9606df">lua_setfield</link>(L,&#32;-2,&#32;<emphasis role="stringliteral">&quot;pi&quot;</emphasis>);
00754 &#32;&#32;<link linkend="_lapi_8c_1a328625a03fbb5548f27b1af10f109f6a">lua_pushnumber</link>(L,&#32;(<link linkend="_lua_8h_1af0a6ed3b852d680769cfc410a0672172">lua_Number</link>)HUGE_VAL);
00755 &#32;&#32;<link linkend="_lapi_8c_1a3f2f542ee6728d82e51b1c302f9606df">lua_setfield</link>(L,&#32;-2,&#32;<emphasis role="stringliteral">&quot;huge&quot;</emphasis>);
00756 &#32;&#32;<link linkend="_lapi_8c_1adcec46ff05dfee9a3c4c05828b40c213">lua_pushinteger</link>(L,&#32;LUA_MAXINTEGER);
00757 &#32;&#32;<link linkend="_lapi_8c_1a3f2f542ee6728d82e51b1c302f9606df">lua_setfield</link>(L,&#32;-2,&#32;<emphasis role="stringliteral">&quot;maxinteger&quot;</emphasis>);
00758 &#32;&#32;<link linkend="_lapi_8c_1adcec46ff05dfee9a3c4c05828b40c213">lua_pushinteger</link>(L,&#32;LUA_MININTEGER);
00759 &#32;&#32;<link linkend="_lapi_8c_1a3f2f542ee6728d82e51b1c302f9606df">lua_setfield</link>(L,&#32;-2,&#32;<emphasis role="stringliteral">&quot;mininteger&quot;</emphasis>);
00760 &#32;&#32;<link linkend="_lmathlib_8c_1aec3434532c7149fc0d3fff7ac86e6fbb">setrandfunc</link>(L);
00761 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
00762 }
00763 
</programlisting></section>
