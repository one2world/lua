<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_lundump_8c_source" xml:lang="zh">
<title>D:/gitworkspace/lua/lundump.c</title>
<programlisting>00001 <emphasis role="comment">/*</emphasis>
00002 <emphasis role="comment">**&#32;$Id:&#32;lundump.c&#32;$</emphasis>
00003 <emphasis role="comment">**&#32;load&#32;precompiled&#32;Lua&#32;chunks</emphasis>
00004 <emphasis role="comment">**&#32;See&#32;Copyright&#32;Notice&#32;in&#32;lua.h</emphasis>
00005 <emphasis role="comment">*/</emphasis>
00006 
<anchor xml:id="_lundump_8c_source_1l00007"/><link linkend="_lundump_8c_1aa480de4ebd1ff43b613879e98ab2bcd8">00007</link> <emphasis role="preprocessor">#define&#32;lundump_c</emphasis>
<anchor xml:id="_lundump_8c_source_1l00008"/><link linkend="_lundump_8c_1abf0b3947b59218777a8e928a10be205b">00008</link> <emphasis role="preprocessor">#define&#32;LUA_CORE</emphasis>
00009 
00010 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_lprefix_8h">lprefix.h</link>&quot;</emphasis>
00011 
00012 
00013 <emphasis role="preprocessor">#include&#32;&lt;limits.h&gt;</emphasis>
00014 <emphasis role="preprocessor">#include&#32;&lt;string.h&gt;</emphasis>
00015 
00016 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_lua_8h">lua.h</link>&quot;</emphasis>
00017 
00018 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_ldebug_8h">ldebug.h</link>&quot;</emphasis>
00019 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_ldo_8h">ldo.h</link>&quot;</emphasis>
00020 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_lfunc_8h">lfunc.h</link>&quot;</emphasis>
00021 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_lmem_8h">lmem.h</link>&quot;</emphasis>
00022 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_lobject_8h">lobject.h</link>&quot;</emphasis>
00023 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_lstring_8h">lstring.h</link>&quot;</emphasis>
00024 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_lundump_8h">lundump.h</link>&quot;</emphasis>
00025 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_lzio_8h">lzio.h</link>&quot;</emphasis>
00026 
00027 
00028 <emphasis role="preprocessor">#if&#32;!defined(luai_verifycode)</emphasis>
<anchor xml:id="_lundump_8c_source_1l00029"/><link linkend="_lundump_8c_1ac24baf04a83a58a79d218599dc7474c7">00029</link> <emphasis role="preprocessor">#define&#32;luai_verifycode(L,f)&#32;&#32;</emphasis><emphasis role="comment">/*&#32;empty&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
00030 <emphasis role="preprocessor">#endif</emphasis>
00031 
00032 
<anchor xml:id="_lundump_8c_source_1l00033"/><link linkend="_struct_load_state">00033</link> <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis>{
<anchor xml:id="_lundump_8c_source_1l00034"/><link linkend="_struct_load_state_1a62f94dfc0036bec0c14106c2f15caf3e">00034</link> &#32;&#32;<link linkend="_structlua___state">lua_State</link>&#32;*<link linkend="_struct_load_state_1a62f94dfc0036bec0c14106c2f15caf3e">L</link>;
<anchor xml:id="_lundump_8c_source_1l00035"/><link linkend="_struct_load_state_1a251c439823e4e9214aa61d423da8de90">00035</link> &#32;&#32;<link linkend="_struct_zio">ZIO</link>&#32;*<link linkend="_struct_load_state_1a251c439823e4e9214aa61d423da8de90">Z</link>;
<anchor xml:id="_lundump_8c_source_1l00036"/><link linkend="_struct_load_state_1a8f8f80d37794cde9472343e4487ba3eb">00036</link> &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="_struct_load_state_1a8f8f80d37794cde9472343e4487ba3eb">name</link>;
00037 }&#32;<link linkend="_struct_load_state">LoadState</link>;
00038 
00039 
<anchor xml:id="_lundump_8c_source_1l00040"/><link linkend="_lundump_8c_1a4359a67dfcb96fbedf2becab47365599">00040</link> <emphasis role="keyword">static</emphasis>&#32;<link linkend="_llimits_8h_1a9f743fcc9a5278cb9ee10355f09f7302">l_noret</link>&#32;<link linkend="_lundump_8c_1a4359a67dfcb96fbedf2becab47365599">error</link>&#32;(<link linkend="_struct_load_state">LoadState</link>&#32;*S,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*why)&#32;{
00041 &#32;&#32;<link linkend="_lobject_8c_1a8e224db7123c74d695076a96d1bfda61">luaO_pushfstring</link>(S-&gt;<link linkend="_struct_load_state_1a62f94dfc0036bec0c14106c2f15caf3e">L</link>,&#32;<emphasis role="stringliteral">&quot;%s:&#32;bad&#32;binary&#32;format&#32;(%s)&quot;</emphasis>,&#32;S-&gt;<link linkend="_struct_load_state_1a8f8f80d37794cde9472343e4487ba3eb">name</link>,&#32;why);
00042 &#32;&#32;<link linkend="_ldo_8c_1a2b46d9db5b9ca3d5402a0c2ac640a6b0">luaD_throw</link>(S-&gt;<link linkend="_struct_load_state_1a62f94dfc0036bec0c14106c2f15caf3e">L</link>,&#32;<link linkend="_lua_8h_1a779d4c0fc1c9da41b7d983646267e11f">LUA_ERRSYNTAX</link>);
00043 }
00044 
00045 
00046 <emphasis role="comment">/*</emphasis>
00047 <emphasis role="comment">**&#32;All&#32;high-level&#32;loads&#32;go&#32;through&#32;loadVector;&#32;you&#32;can&#32;change&#32;it&#32;to</emphasis>
00048 <emphasis role="comment">**&#32;adapt&#32;to&#32;the&#32;endianness&#32;of&#32;the&#32;input</emphasis>
00049 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lundump_8c_source_1l00050"/><link linkend="_lundump_8c_1ac2c6d25be53702eb5dac5a27feec260e">00050</link> <emphasis role="preprocessor">#define&#32;loadVector(S,b,n)&#32;&#32;&#32;loadBlock(S,b,(n)*sizeof((b)[0]))</emphasis>
00051 
<anchor xml:id="_lundump_8c_source_1l00052"/><link linkend="_lundump_8c_1a4670431cdf12dffe51a41446256a537f">00052</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_lundump_8c_1a4670431cdf12dffe51a41446256a537f">loadBlock</link>&#32;(<link linkend="_struct_load_state">LoadState</link>&#32;*S,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*b,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;size)&#32;{
00053 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lzio_8c_1a8f724436a986edc42726b43aded0759a">luaZ_read</link>(S-&gt;<link linkend="_struct_load_state_1a251c439823e4e9214aa61d423da8de90">Z</link>,&#32;b,&#32;size)&#32;!=&#32;0)
00054 &#32;&#32;&#32;&#32;<link linkend="_lundump_8c_1a4359a67dfcb96fbedf2becab47365599">error</link>(S,&#32;<emphasis role="stringliteral">&quot;truncated&#32;chunk&quot;</emphasis>);
00055 }
00056 
00057 
<anchor xml:id="_lundump_8c_source_1l00058"/><link linkend="_lundump_8c_1ab1d6f5039e26f72694ca2e711b21a232">00058</link> <emphasis role="preprocessor">#define&#32;loadVar(S,x)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;loadVector(S,&amp;x,1)</emphasis>
00059 
00060 
<anchor xml:id="_lundump_8c_source_1l00061"/><link linkend="_lundump_8c_1a42ccd2fdd0830eda677e6b0b4bb5ec5a">00061</link> <emphasis role="keyword">static</emphasis>&#32;<link linkend="_llimits_8h_1ae1fe9ac10d9803bd1d7bdf30b18bad68">lu_byte</link>&#32;<link linkend="_lundump_8c_1a42ccd2fdd0830eda677e6b0b4bb5ec5a">loadByte</link>&#32;(<link linkend="_struct_load_state">LoadState</link>&#32;*S)&#32;{
00062 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;b&#32;=&#32;<link linkend="_lzio_8h_1aecca8ea1e6dc0c97b458f77c0e3491de">zgetc</link>(S-&gt;<link linkend="_struct_load_state_1a251c439823e4e9214aa61d423da8de90">Z</link>);
00063 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(b&#32;==&#32;<link linkend="_lzio_8h_1a8341bdc72db5a2f045e18440f9523008">EOZ</link>)
00064 &#32;&#32;&#32;&#32;<link linkend="_lundump_8c_1a4359a67dfcb96fbedf2becab47365599">error</link>(S,&#32;<emphasis role="stringliteral">&quot;truncated&#32;chunk&quot;</emphasis>);
00065 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_llimits_8h_1a596f5b6e992f53a5a4e5732083448dd4">cast_byte</link>(b);
00066 }
00067 
00068 
<anchor xml:id="_lundump_8c_source_1l00069"/><link linkend="_lundump_8c_1aeba7bac26dc16767005aba9c51d6210c">00069</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_lundump_8c_1aeba7bac26dc16767005aba9c51d6210c">loadUnsigned</link>&#32;(<link linkend="_struct_load_state">LoadState</link>&#32;*S,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;limit)&#32;{
00070 &#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;x&#32;=&#32;0;
00071 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;b;
00072 &#32;&#32;limit&#32;&gt;&gt;=&#32;7;
00073 &#32;&#32;<emphasis role="keywordflow">do</emphasis>&#32;{
00074 &#32;&#32;&#32;&#32;b&#32;=&#32;<link linkend="_lundump_8c_1a42ccd2fdd0830eda677e6b0b4bb5ec5a">loadByte</link>(S);
00075 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(x&#32;&gt;=&#32;limit)
00076 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lundump_8c_1a4359a67dfcb96fbedf2becab47365599">error</link>(S,&#32;<emphasis role="stringliteral">&quot;integer&#32;overflow&quot;</emphasis>);
00077 &#32;&#32;&#32;&#32;x&#32;=&#32;(x&#32;&lt;&lt;&#32;7)&#32;|&#32;(b&#32;&amp;&#32;0x7f);
00078 &#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>&#32;((b&#32;&amp;&#32;0x80)&#32;==&#32;0);
00079 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;x;
00080 }
00081 
00082 
<anchor xml:id="_lundump_8c_source_1l00083"/><link linkend="_lundump_8c_1adb3e45444a299e4974bf48f8c4bfde15">00083</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_lundump_8c_1adb3e45444a299e4974bf48f8c4bfde15">loadSize</link>&#32;(<link linkend="_struct_load_state">LoadState</link>&#32;*S)&#32;{
00084 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_lundump_8c_1aeba7bac26dc16767005aba9c51d6210c">loadUnsigned</link>(S,&#32;~(<emphasis role="keywordtype">size_t</emphasis>)0);
00085 }
00086 
00087 
<anchor xml:id="_lundump_8c_source_1l00088"/><link linkend="_lundump_8c_1abc34d9e099b17660e4eaf21b2039ef03">00088</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lundump_8c_1abc34d9e099b17660e4eaf21b2039ef03">loadInt</link>&#32;(<link linkend="_struct_load_state">LoadState</link>&#32;*S)&#32;{
00089 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_llimits_8h_1a37a9e2c4b53433d34bad0f12a1500c08">cast_int</link>(<link linkend="_lundump_8c_1aeba7bac26dc16767005aba9c51d6210c">loadUnsigned</link>(S,&#32;INT_MAX));
00090 }
00091 
00092 
<anchor xml:id="_lundump_8c_source_1l00093"/><link linkend="_lundump_8c_1abc39c54e4b51ab039f8b8f90f45b3d19">00093</link> <emphasis role="keyword">static</emphasis>&#32;<link linkend="_lua_8h_1af0a6ed3b852d680769cfc410a0672172">lua_Number</link>&#32;<link linkend="_lundump_8c_1abc39c54e4b51ab039f8b8f90f45b3d19">loadNumber</link>&#32;(<link linkend="_struct_load_state">LoadState</link>&#32;*S)&#32;{
00094 &#32;&#32;<link linkend="_lua_8h_1af0a6ed3b852d680769cfc410a0672172">lua_Number</link>&#32;x;
00095 &#32;&#32;<link linkend="_lundump_8c_1ab1d6f5039e26f72694ca2e711b21a232">loadVar</link>(S,&#32;x);
00096 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;x;
00097 }
00098 
00099 
<anchor xml:id="_lundump_8c_source_1l00100"/><link linkend="_lundump_8c_1a47c3697d53ebc451a28687215007e69e">00100</link> <emphasis role="keyword">static</emphasis>&#32;<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;<link linkend="_lundump_8c_1a47c3697d53ebc451a28687215007e69e">loadInteger</link>&#32;(<link linkend="_struct_load_state">LoadState</link>&#32;*S)&#32;{
00101 &#32;&#32;<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;x;
00102 &#32;&#32;<link linkend="_lundump_8c_1ab1d6f5039e26f72694ca2e711b21a232">loadVar</link>(S,&#32;x);
00103 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;x;
00104 }
00105 
00106 
00107 <emphasis role="comment">/*</emphasis>
00108 <emphasis role="comment">**&#32;Load&#32;a&#32;nullable&#32;string&#32;into&#32;prototype&#32;&apos;p&apos;.</emphasis>
00109 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lundump_8c_source_1l00110"/><link linkend="_lundump_8c_1a809187a6bdb823c33bbbde30a17eca54">00110</link> <emphasis role="keyword">static</emphasis>&#32;<link linkend="_struct_t_string">TString</link>&#32;*<link linkend="_lundump_8c_1a809187a6bdb823c33bbbde30a17eca54">loadStringN</link>&#32;(<link linkend="_struct_load_state">LoadState</link>&#32;*S,&#32;<link linkend="_struct_proto">Proto</link>&#32;*p)&#32;{
00111 &#32;&#32;<link linkend="_structlua___state">lua_State</link>&#32;*L&#32;=&#32;S-&gt;<link linkend="_struct_load_state_1a62f94dfc0036bec0c14106c2f15caf3e">L</link>;
00112 &#32;&#32;<link linkend="_struct_t_string">TString</link>&#32;*ts;
00113 &#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;size&#32;=&#32;<link linkend="_lundump_8c_1adb3e45444a299e4974bf48f8c4bfde15">loadSize</link>(S);
00114 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(size&#32;==&#32;0)&#32;&#32;<emphasis role="comment">/*&#32;no&#32;string?&#32;*/</emphasis>
00115 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;NULL;
00116 &#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(--size&#32;&lt;=&#32;<link linkend="_llimits_8h_1a54fe4797308d6b24bf84fa0129a155bd">LUAI_MAXSHORTLEN</link>)&#32;{&#32;&#32;<emphasis role="comment">/*&#32;short&#32;string?&#32;*/</emphasis>
00117 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;buff[<link linkend="_llimits_8h_1a54fe4797308d6b24bf84fa0129a155bd">LUAI_MAXSHORTLEN</link>];
00118 &#32;&#32;&#32;&#32;<link linkend="_lundump_8c_1ac2c6d25be53702eb5dac5a27feec260e">loadVector</link>(S,&#32;buff,&#32;size);&#32;&#32;<emphasis role="comment">/*&#32;load&#32;string&#32;into&#32;buffer&#32;*/</emphasis>
00119 &#32;&#32;&#32;&#32;ts&#32;=&#32;<link linkend="_lstring_8c_1ab41fb084ce3ea5e2779f6659ccc2484d">luaS_newlstr</link>(L,&#32;buff,&#32;size);&#32;&#32;<emphasis role="comment">/*&#32;create&#32;string&#32;*/</emphasis>
00120 &#32;&#32;}
00121 &#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{&#32;&#32;<emphasis role="comment">/*&#32;long&#32;string&#32;*/</emphasis>
00122 &#32;&#32;&#32;&#32;ts&#32;=&#32;<link linkend="_lstring_8c_1a8790c7d6e706f935dd6e9eefd068921c">luaS_createlngstrobj</link>(L,&#32;size);&#32;&#32;<emphasis role="comment">/*&#32;create&#32;string&#32;*/</emphasis>
00123 &#32;&#32;&#32;&#32;<link linkend="_lobject_8h_1aa60b4c3bb90063dcaa2f90e77d4a61f6">setsvalue2s</link>(L,&#32;L-&gt;<link linkend="_structlua___state_1afeb5dbe379fc406b35fe5f8a5fcfc5d7">top</link>,&#32;ts);&#32;&#32;<emphasis role="comment">/*&#32;anchor&#32;it&#32;(&apos;loadVector&apos;&#32;can&#32;GC)&#32;*/</emphasis>
00124 &#32;&#32;&#32;&#32;<link linkend="_ldo_8c_1a4dd006aa3210fdc854d0441e2a98c9af">luaD_inctop</link>(L);
00125 &#32;&#32;&#32;&#32;<link linkend="_lundump_8c_1ac2c6d25be53702eb5dac5a27feec260e">loadVector</link>(S,&#32;<link linkend="_lobject_8h_1acb05d3ab238923581a9c629b8e11a6ac">getstr</link>(ts),&#32;size);&#32;&#32;<emphasis role="comment">/*&#32;load&#32;directly&#32;in&#32;final&#32;place&#32;*/</emphasis>
00126 &#32;&#32;&#32;&#32;L-&gt;<link linkend="_structlua___state_1afeb5dbe379fc406b35fe5f8a5fcfc5d7">top</link>--;&#32;&#32;<emphasis role="comment">/*&#32;pop&#32;string&#32;*/</emphasis>
00127 &#32;&#32;}
00128 &#32;&#32;<link linkend="_lgc_8h_1a90ac4f3c7085a418025edcc7215e8983">luaC_objbarrier</link>(L,&#32;p,&#32;ts);
00129 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ts;
00130 }
00131 
00132 
00133 <emphasis role="comment">/*</emphasis>
00134 <emphasis role="comment">**&#32;Load&#32;a&#32;non-nullable&#32;string&#32;into&#32;prototype&#32;&apos;p&apos;.</emphasis>
00135 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lundump_8c_source_1l00136"/><link linkend="_lundump_8c_1adf82f91f2291f1cea44f0f28646d6ad5">00136</link> <emphasis role="keyword">static</emphasis>&#32;<link linkend="_struct_t_string">TString</link>&#32;*<link linkend="_lundump_8c_1adf82f91f2291f1cea44f0f28646d6ad5">loadString</link>&#32;(<link linkend="_struct_load_state">LoadState</link>&#32;*S,&#32;<link linkend="_struct_proto">Proto</link>&#32;*p)&#32;{
00137 &#32;&#32;<link linkend="_struct_t_string">TString</link>&#32;*st&#32;=&#32;<link linkend="_lundump_8c_1a809187a6bdb823c33bbbde30a17eca54">loadStringN</link>(S,&#32;p);
00138 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(st&#32;==&#32;NULL)
00139 &#32;&#32;&#32;&#32;<link linkend="_lundump_8c_1a4359a67dfcb96fbedf2becab47365599">error</link>(S,&#32;<emphasis role="stringliteral">&quot;bad&#32;format&#32;for&#32;constant&#32;string&quot;</emphasis>);
00140 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;st;
00141 }
00142 
00143 
<anchor xml:id="_lundump_8c_source_1l00144"/><link linkend="_lundump_8c_1acd554fb4ba9399a7a48919de12daa53f">00144</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_lundump_8c_1acd554fb4ba9399a7a48919de12daa53f">loadCode</link>&#32;(<link linkend="_struct_load_state">LoadState</link>&#32;*S,&#32;<link linkend="_struct_proto">Proto</link>&#32;*f)&#32;{
00145 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;n&#32;=&#32;<link linkend="_lundump_8c_1abc34d9e099b17660e4eaf21b2039ef03">loadInt</link>(S);
00146 &#32;&#32;f-&gt;<link linkend="_struct_proto_1a744e03861a6c76b7eeef213b73419ec7">code</link>&#32;=&#32;<link linkend="_lmem_8h_1ab223744a0660c0aa48e388ca51466839">luaM_newvectorchecked</link>(S-&gt;<link linkend="_struct_load_state_1a62f94dfc0036bec0c14106c2f15caf3e">L</link>,&#32;n,&#32;<link linkend="_llimits_8h_1aa81d2e7f7263ef29946852d4966a192e">Instruction</link>);
00147 &#32;&#32;f-&gt;<link linkend="_struct_proto_1aa3cefdf204c272e3a1a3aa8bc12f4e3e">sizecode</link>&#32;=&#32;n;
00148 &#32;&#32;<link linkend="_lundump_8c_1ac2c6d25be53702eb5dac5a27feec260e">loadVector</link>(S,&#32;f-&gt;<link linkend="_struct_proto_1a744e03861a6c76b7eeef213b73419ec7">code</link>,&#32;n);
00149 }
00150 
00151 
00152 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_lundump_8c_1a894435708ede05d12c7e81033dae380f">loadFunction</link>(<link linkend="_struct_load_state">LoadState</link>&#32;*S,&#32;<link linkend="_struct_proto">Proto</link>&#32;*f,&#32;<link linkend="_struct_t_string">TString</link>&#32;*psource);
00153 
00154 
<anchor xml:id="_lundump_8c_source_1l00155"/><link linkend="_lundump_8c_1a4a169ad6d9eefbca97c3a62641d65e48">00155</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_lundump_8c_1a4a169ad6d9eefbca97c3a62641d65e48">loadConstants</link>&#32;(<link linkend="_struct_load_state">LoadState</link>&#32;*S,&#32;<link linkend="_struct_proto">Proto</link>&#32;*f)&#32;{
00156 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
00157 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;n&#32;=&#32;<link linkend="_lundump_8c_1abc34d9e099b17660e4eaf21b2039ef03">loadInt</link>(S);
00158 &#32;&#32;f-&gt;<link linkend="_struct_proto_1a5287370e219b50fe677549b4aafdc81d">k</link>&#32;=&#32;<link linkend="_lmem_8h_1ab223744a0660c0aa48e388ca51466839">luaM_newvectorchecked</link>(S-&gt;<link linkend="_struct_load_state_1a62f94dfc0036bec0c14106c2f15caf3e">L</link>,&#32;n,&#32;<link linkend="_struct_t_value">TValue</link>);
00159 &#32;&#32;f-&gt;<link linkend="_struct_proto_1a207b8b69ed4d393dd3c20925febd29e4">sizek</link>&#32;=&#32;n;
00160 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;n;&#32;i++)
00161 &#32;&#32;&#32;&#32;<link linkend="_lobject_8h_1ad9034def7bbc1965ec3d714d84620b07">setnilvalue</link>(&amp;f-&gt;<link linkend="_struct_proto_1a5287370e219b50fe677549b4aafdc81d">k</link>[i]);
00162 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;n;&#32;i++)&#32;{
00163 &#32;&#32;&#32;&#32;<link linkend="_struct_t_value">TValue</link>&#32;*o&#32;=&#32;&amp;f-&gt;<link linkend="_struct_proto_1a5287370e219b50fe677549b4aafdc81d">k</link>[i];
00164 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;t&#32;=&#32;<link linkend="_lundump_8c_1a42ccd2fdd0830eda677e6b0b4bb5ec5a">loadByte</link>(S);
00165 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(t)&#32;{
00166 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lobject_8h_1aac7a0aeb62c96ba16c7638e707bfaac0">LUA_VNIL</link>:
00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8h_1ad9034def7bbc1965ec3d714d84620b07">setnilvalue</link>(o);
00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00169 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lobject_8h_1a95236d400066ed64a37c72d3dada7e9d">LUA_VFALSE</link>:
00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8h_1ad0259526a10884432dd2e7ea10b90e0f">setbfvalue</link>(o);
00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00172 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lobject_8h_1aed66cd95aa3f518c947b5bd9e17bab47">LUA_VTRUE</link>:
00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8h_1a1b86e0dccf6b92c4c89d47af26e3a8e3">setbtvalue</link>(o);
00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00175 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lobject_8h_1a19aaaf978586be9032b63b7a8807631a">LUA_VNUMFLT</link>:
00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8h_1ae357382324a8220a3cf77607752de887">setfltvalue</link>(o,&#32;<link linkend="_lundump_8c_1abc39c54e4b51ab039f8b8f90f45b3d19">loadNumber</link>(S));
00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00178 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lobject_8h_1a69aa5cae89d634d458e0da4957257745">LUA_VNUMINT</link>:
00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8h_1af9dd109ba186841ab26efb2d62baf4f6">setivalue</link>(o,&#32;<link linkend="_lundump_8c_1a47c3697d53ebc451a28687215007e69e">loadInteger</link>(S));
00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00181 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lobject_8h_1a794410ffd7267ef873eb05ac695b1ba6">LUA_VSHRSTR</link>:
00182 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lobject_8h_1a6869fcb0a0178b6d70d431eae1683199">LUA_VLNGSTR</link>:
00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8h_1aa7a9ab918b0322fa100f3f7af16d2375">setsvalue2n</link>(S-&gt;<link linkend="_struct_load_state_1a62f94dfc0036bec0c14106c2f15caf3e">L</link>,&#32;o,&#32;<link linkend="_lundump_8c_1adf82f91f2291f1cea44f0f28646d6ad5">loadString</link>(S,&#32;f));
00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00185 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:&#32;<link linkend="_llimits_8h_1a5978f5fda715bd80e845df1e16ad7780">lua_assert</link>(0);
00186 &#32;&#32;&#32;&#32;}
00187 &#32;&#32;}
00188 }
00189 
00190 
<anchor xml:id="_lundump_8c_source_1l00191"/><link linkend="_lundump_8c_1a6a14558eb41ec5a096e4094f033531fe">00191</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_lundump_8c_1a6a14558eb41ec5a096e4094f033531fe">loadProtos</link>&#32;(<link linkend="_struct_load_state">LoadState</link>&#32;*S,&#32;<link linkend="_struct_proto">Proto</link>&#32;*f)&#32;{
00192 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
00193 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;n&#32;=&#32;<link linkend="_lundump_8c_1abc34d9e099b17660e4eaf21b2039ef03">loadInt</link>(S);
00194 &#32;&#32;f-&gt;<link linkend="_struct_proto_1ab7af98f98f5cf674f6be5e3fc855af43">p</link>&#32;=&#32;<link linkend="_lmem_8h_1ab223744a0660c0aa48e388ca51466839">luaM_newvectorchecked</link>(S-&gt;<link linkend="_struct_load_state_1a62f94dfc0036bec0c14106c2f15caf3e">L</link>,&#32;n,&#32;<link linkend="_struct_proto">Proto</link>&#32;*);
00195 &#32;&#32;f-&gt;<link linkend="_struct_proto_1aea0f5dcb02517aa08aa2ffa58c396260">sizep</link>&#32;=&#32;n;
00196 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;n;&#32;i++)
00197 &#32;&#32;&#32;&#32;f-&gt;<link linkend="_struct_proto_1ab7af98f98f5cf674f6be5e3fc855af43">p</link>[i]&#32;=&#32;NULL;
00198 &#32;&#32;for&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;n;&#32;i++)&#32;{
00199 &#32;&#32;&#32;&#32;f-&gt;<link linkend="_struct_proto_1ab7af98f98f5cf674f6be5e3fc855af43">p</link>[i]&#32;=&#32;<link linkend="_lfunc_8c_1a4ffd9d8ef515a7f785d007de7ceb9e4f">luaF_newproto</link>(S-&gt;<link linkend="_struct_load_state_1a62f94dfc0036bec0c14106c2f15caf3e">L</link>);
00200 &#32;&#32;&#32;&#32;<link linkend="_lgc_8h_1a90ac4f3c7085a418025edcc7215e8983">luaC_objbarrier</link>(S-&gt;<link linkend="_struct_load_state_1a62f94dfc0036bec0c14106c2f15caf3e">L</link>,&#32;f,&#32;f-&gt;<link linkend="_struct_proto_1ab7af98f98f5cf674f6be5e3fc855af43">p</link>[i]);
00201 &#32;&#32;&#32;&#32;<link linkend="_lundump_8c_1a894435708ede05d12c7e81033dae380f">loadFunction</link>(S,&#32;f-&gt;<link linkend="_struct_proto_1ab7af98f98f5cf674f6be5e3fc855af43">p</link>[i],&#32;f-&gt;<link linkend="_struct_proto_1a47b5f25d6c53f3892e43702659c6de69">source</link>);
00202 &#32;&#32;}
00203 }
00204 
00205 
00206 <emphasis role="comment">/*</emphasis>
00207 <emphasis role="comment">**&#32;Load&#32;the&#32;upvalues&#32;for&#32;a&#32;function.&#32;The&#32;names&#32;must&#32;be&#32;filled&#32;first,</emphasis>
00208 <emphasis role="comment">**&#32;because&#32;the&#32;filling&#32;of&#32;the&#32;other&#32;fields&#32;can&#32;raise&#32;read&#32;errors&#32;and</emphasis>
00209 <emphasis role="comment">**&#32;the&#32;creation&#32;of&#32;the&#32;error&#32;message&#32;can&#32;call&#32;an&#32;emergency&#32;collection;</emphasis>
00210 <emphasis role="comment">**&#32;in&#32;that&#32;case&#32;all&#32;prototypes&#32;must&#32;be&#32;consistent&#32;for&#32;the&#32;GC.</emphasis>
00211 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lundump_8c_source_1l00212"/><link linkend="_lundump_8c_1a08010fa069d0ec9c6345dfe053001bd7">00212</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_lundump_8c_1a08010fa069d0ec9c6345dfe053001bd7">loadUpvalues</link>&#32;(<link linkend="_struct_load_state">LoadState</link>&#32;*S,&#32;<link linkend="_struct_proto">Proto</link>&#32;*f)&#32;{
00213 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,&#32;n;
00214 &#32;&#32;n&#32;=&#32;<link linkend="_lundump_8c_1abc34d9e099b17660e4eaf21b2039ef03">loadInt</link>(S);
00215 &#32;&#32;f-&gt;<link linkend="_struct_proto_1ac3b891662880254a7e0a3dc0afa86254">upvalues</link>&#32;=&#32;<link linkend="_lmem_8h_1ab223744a0660c0aa48e388ca51466839">luaM_newvectorchecked</link>(S-&gt;<link linkend="_struct_load_state_1a62f94dfc0036bec0c14106c2f15caf3e">L</link>,&#32;n,&#32;<link linkend="_struct_upvaldesc">Upvaldesc</link>);
00216 &#32;&#32;f-&gt;<link linkend="_struct_proto_1a2e13a98343ef0d1233bb3e62ae519c5f">sizeupvalues</link>&#32;=&#32;n;
00217 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;n;&#32;i++)&#32;&#32;<emphasis role="comment">/*&#32;make&#32;array&#32;valid&#32;for&#32;GC&#32;*/</emphasis>
00218 &#32;&#32;&#32;&#32;f-&gt;<link linkend="_struct_proto_1ac3b891662880254a7e0a3dc0afa86254">upvalues</link>[i].<link linkend="_struct_upvaldesc_1aa249fce0e5297641aa43f45e48bb1548">name</link>&#32;=&#32;NULL;
00219 &#32;&#32;for&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;n;&#32;i++)&#32;{&#32;&#32;<emphasis role="comment">/*&#32;following&#32;calls&#32;can&#32;raise&#32;errors&#32;*/</emphasis>
00220 &#32;&#32;&#32;&#32;f-&gt;<link linkend="_struct_proto_1ac3b891662880254a7e0a3dc0afa86254">upvalues</link>[i].<link linkend="_struct_upvaldesc_1acfbdd39f714ffdb714bddda46b7ae744">instack</link>&#32;=&#32;<link linkend="_lundump_8c_1a42ccd2fdd0830eda677e6b0b4bb5ec5a">loadByte</link>(S);
00221 &#32;&#32;&#32;&#32;f-&gt;<link linkend="_struct_proto_1ac3b891662880254a7e0a3dc0afa86254">upvalues</link>[i].<link linkend="_struct_upvaldesc_1a6234b462bcd2f6c2e6f5e537b2793b84">idx</link>&#32;=&#32;<link linkend="_lundump_8c_1a42ccd2fdd0830eda677e6b0b4bb5ec5a">loadByte</link>(S);
00222 &#32;&#32;&#32;&#32;f-&gt;<link linkend="_struct_proto_1ac3b891662880254a7e0a3dc0afa86254">upvalues</link>[i].<link linkend="_struct_upvaldesc_1a85f4000f0b6d1a7e3ff5f1612472db29">kind</link>&#32;=&#32;<link linkend="_lundump_8c_1a42ccd2fdd0830eda677e6b0b4bb5ec5a">loadByte</link>(S);
00223 &#32;&#32;}
00224 }
00225 
00226 
<anchor xml:id="_lundump_8c_source_1l00227"/><link linkend="_lundump_8c_1a121ddfe27d3762c4b5ed14bd3746af7a">00227</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_lundump_8c_1a121ddfe27d3762c4b5ed14bd3746af7a">loadDebug</link>&#32;(<link linkend="_struct_load_state">LoadState</link>&#32;*S,&#32;<link linkend="_struct_proto">Proto</link>&#32;*f)&#32;{
00228 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,&#32;n;
00229 &#32;&#32;n&#32;=&#32;<link linkend="_lundump_8c_1abc34d9e099b17660e4eaf21b2039ef03">loadInt</link>(S);
00230 &#32;&#32;f-&gt;<link linkend="_struct_proto_1a0d5af822069e8cdb2bd7f17f3cdcf575">lineinfo</link>&#32;=&#32;<link linkend="_lmem_8h_1ab223744a0660c0aa48e388ca51466839">luaM_newvectorchecked</link>(S-&gt;<link linkend="_struct_load_state_1a62f94dfc0036bec0c14106c2f15caf3e">L</link>,&#32;n,&#32;<link linkend="_llimits_8h_1aab58a246c9e0a85c4c2ed0fd8d6724bb">ls_byte</link>);
00231 &#32;&#32;f-&gt;<link linkend="_struct_proto_1a53f346647cd2060380dad39c9d5caebe">sizelineinfo</link>&#32;=&#32;n;
00232 &#32;&#32;<link linkend="_lundump_8c_1ac2c6d25be53702eb5dac5a27feec260e">loadVector</link>(S,&#32;f-&gt;<link linkend="_struct_proto_1a0d5af822069e8cdb2bd7f17f3cdcf575">lineinfo</link>,&#32;n);
00233 &#32;&#32;n&#32;=&#32;<link linkend="_lundump_8c_1abc34d9e099b17660e4eaf21b2039ef03">loadInt</link>(S);
00234 &#32;&#32;f-&gt;<link linkend="_struct_proto_1a731ed18a38cc12a903582b927104c883">abslineinfo</link>&#32;=&#32;<link linkend="_lmem_8h_1ab223744a0660c0aa48e388ca51466839">luaM_newvectorchecked</link>(S-&gt;<link linkend="_struct_load_state_1a62f94dfc0036bec0c14106c2f15caf3e">L</link>,&#32;n,&#32;<link linkend="_struct_abs_line_info">AbsLineInfo</link>);
00235 &#32;&#32;f-&gt;<link linkend="_struct_proto_1ab443243fa7dd09b9c08117626c3f8a61">sizeabslineinfo</link>&#32;=&#32;n;
00236 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;n;&#32;i++)&#32;{
00237 &#32;&#32;&#32;&#32;f-&gt;<link linkend="_struct_proto_1a731ed18a38cc12a903582b927104c883">abslineinfo</link>[i].<link linkend="_struct_abs_line_info_1ac8c81e61335635fa4709d82412b31f06">pc</link>&#32;=&#32;<link linkend="_lundump_8c_1abc34d9e099b17660e4eaf21b2039ef03">loadInt</link>(S);
00238 &#32;&#32;&#32;&#32;f-&gt;<link linkend="_struct_proto_1a731ed18a38cc12a903582b927104c883">abslineinfo</link>[i].<link linkend="_struct_abs_line_info_1a41ebd28ef1d7c6ade45642cb6acc1039">line</link>&#32;=&#32;<link linkend="_lundump_8c_1abc34d9e099b17660e4eaf21b2039ef03">loadInt</link>(S);
00239 &#32;&#32;}
00240 &#32;&#32;n&#32;=&#32;<link linkend="_lundump_8c_1abc34d9e099b17660e4eaf21b2039ef03">loadInt</link>(S);
00241 &#32;&#32;f-&gt;<link linkend="_struct_proto_1a7a727780b57a02cd42e7ef902f6e7f90">locvars</link>&#32;=&#32;<link linkend="_lmem_8h_1ab223744a0660c0aa48e388ca51466839">luaM_newvectorchecked</link>(S-&gt;<link linkend="_struct_load_state_1a62f94dfc0036bec0c14106c2f15caf3e">L</link>,&#32;n,&#32;<link linkend="_struct_loc_var">LocVar</link>);
00242 &#32;&#32;f-&gt;<link linkend="_struct_proto_1af9147ae18b522811714aeb19036f639d">sizelocvars</link>&#32;=&#32;n;
00243 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;n;&#32;i++)
00244 &#32;&#32;&#32;&#32;f-&gt;<link linkend="_struct_proto_1a7a727780b57a02cd42e7ef902f6e7f90">locvars</link>[i].<link linkend="_struct_loc_var_1ac2450e0899ac889b040f20956221cd83">varname</link>&#32;=&#32;NULL;
00245 &#32;&#32;for&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;n;&#32;i++)&#32;{
00246 &#32;&#32;&#32;&#32;f-&gt;<link linkend="_struct_proto_1a7a727780b57a02cd42e7ef902f6e7f90">locvars</link>[i].<link linkend="_struct_loc_var_1ac2450e0899ac889b040f20956221cd83">varname</link>&#32;=&#32;<link linkend="_lundump_8c_1a809187a6bdb823c33bbbde30a17eca54">loadStringN</link>(S,&#32;f);
00247 &#32;&#32;&#32;&#32;f-&gt;<link linkend="_struct_proto_1a7a727780b57a02cd42e7ef902f6e7f90">locvars</link>[i].<link linkend="_struct_loc_var_1aede5156df384666bb10ffffe4e8c2d8f">startpc</link>&#32;=&#32;<link linkend="_lundump_8c_1abc34d9e099b17660e4eaf21b2039ef03">loadInt</link>(S);
00248 &#32;&#32;&#32;&#32;f-&gt;<link linkend="_struct_proto_1a7a727780b57a02cd42e7ef902f6e7f90">locvars</link>[i].<link linkend="_struct_loc_var_1a4531ef6d4151bc1400f288a004323700">endpc</link>&#32;=&#32;<link linkend="_lundump_8c_1abc34d9e099b17660e4eaf21b2039ef03">loadInt</link>(S);
00249 &#32;&#32;}
00250 &#32;&#32;n&#32;=&#32;<link linkend="_lundump_8c_1abc34d9e099b17660e4eaf21b2039ef03">loadInt</link>(S);
00251 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;n;&#32;i++)
00252 &#32;&#32;&#32;&#32;f-&gt;<link linkend="_struct_proto_1ac3b891662880254a7e0a3dc0afa86254">upvalues</link>[i].<link linkend="_struct_upvaldesc_1aa249fce0e5297641aa43f45e48bb1548">name</link>&#32;=&#32;<link linkend="_lundump_8c_1a809187a6bdb823c33bbbde30a17eca54">loadStringN</link>(S,&#32;f);
00253 }
00254 
00255 
<anchor xml:id="_lundump_8c_source_1l00256"/><link linkend="_lundump_8c_1a894435708ede05d12c7e81033dae380f">00256</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_lundump_8c_1a894435708ede05d12c7e81033dae380f">loadFunction</link>&#32;(<link linkend="_struct_load_state">LoadState</link>&#32;*S,&#32;<link linkend="_struct_proto">Proto</link>&#32;*f,&#32;<link linkend="_struct_t_string">TString</link>&#32;*psource)&#32;{
00257 &#32;&#32;f-&gt;<link linkend="_struct_proto_1a47b5f25d6c53f3892e43702659c6de69">source</link>&#32;=&#32;<link linkend="_lundump_8c_1a809187a6bdb823c33bbbde30a17eca54">loadStringN</link>(S,&#32;f);
00258 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(f-&gt;<link linkend="_struct_proto_1a47b5f25d6c53f3892e43702659c6de69">source</link>&#32;==&#32;NULL)&#32;&#32;<emphasis role="comment">/*&#32;no&#32;source&#32;in&#32;dump?&#32;*/</emphasis>
00259 &#32;&#32;&#32;&#32;f-&gt;<link linkend="_struct_proto_1a47b5f25d6c53f3892e43702659c6de69">source</link>&#32;=&#32;psource;&#32;&#32;<emphasis role="comment">/*&#32;reuse&#32;parent&apos;s&#32;source&#32;*/</emphasis>
00260 &#32;&#32;f-&gt;<link linkend="_struct_proto_1a4dfda1a3839aa77fb8fc7626075151dd">linedefined</link>&#32;=&#32;<link linkend="_lundump_8c_1abc34d9e099b17660e4eaf21b2039ef03">loadInt</link>(S);
00261 &#32;&#32;f-&gt;<link linkend="_struct_proto_1a0129a289db231fbe2c6c3b3d6062979e">lastlinedefined</link>&#32;=&#32;<link linkend="_lundump_8c_1abc34d9e099b17660e4eaf21b2039ef03">loadInt</link>(S);
00262 &#32;&#32;f-&gt;<link linkend="_struct_proto_1a2c5c3bfc47c6c4b7b9f4eef47d7167e9">numparams</link>&#32;=&#32;<link linkend="_lundump_8c_1a42ccd2fdd0830eda677e6b0b4bb5ec5a">loadByte</link>(S);
00263 &#32;&#32;f-&gt;<link linkend="_struct_proto_1a75232df840e02cfa8134903745579657">is_vararg</link>&#32;=&#32;<link linkend="_lundump_8c_1a42ccd2fdd0830eda677e6b0b4bb5ec5a">loadByte</link>(S);
00264 &#32;&#32;f-&gt;<link linkend="_struct_proto_1ad11e004e7f14af7e281b6da69d08ad7a">maxstacksize</link>&#32;=&#32;<link linkend="_lundump_8c_1a42ccd2fdd0830eda677e6b0b4bb5ec5a">loadByte</link>(S);
00265 &#32;&#32;<link linkend="_lundump_8c_1acd554fb4ba9399a7a48919de12daa53f">loadCode</link>(S,&#32;f);
00266 &#32;&#32;<link linkend="_lundump_8c_1a4a169ad6d9eefbca97c3a62641d65e48">loadConstants</link>(S,&#32;f);
00267 &#32;&#32;<link linkend="_lundump_8c_1a08010fa069d0ec9c6345dfe053001bd7">loadUpvalues</link>(S,&#32;f);
00268 &#32;&#32;<link linkend="_lundump_8c_1a6a14558eb41ec5a096e4094f033531fe">loadProtos</link>(S,&#32;f);
00269 &#32;&#32;<link linkend="_lundump_8c_1a121ddfe27d3762c4b5ed14bd3746af7a">loadDebug</link>(S,&#32;f);
00270 }
00271 
00272 
<anchor xml:id="_lundump_8c_source_1l00273"/><link linkend="_lundump_8c_1a005ddaa01fdc44c5223b2b641fcb1653">00273</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_lundump_8c_1a005ddaa01fdc44c5223b2b641fcb1653">checkliteral</link>&#32;(<link linkend="_struct_load_state">LoadState</link>&#32;*S,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*s,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*msg)&#32;{
00274 &#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;buff[<emphasis role="keyword">sizeof</emphasis>(<link linkend="_lua_8h_1af21c9fa681dc005c17a7b288882cae1b">LUA_SIGNATURE</link>)&#32;+&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_lundump_8h_1ad6f33b546a90e78ddb67428b712b48ae">LUAC_DATA</link>)];&#32;<emphasis role="comment">/*&#32;larger&#32;than&#32;both&#32;*/</emphasis>
00275 &#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;len&#32;=&#32;strlen(s);
00276 &#32;&#32;<link linkend="_lundump_8c_1ac2c6d25be53702eb5dac5a27feec260e">loadVector</link>(S,&#32;buff,&#32;len);
00277 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(memcmp(s,&#32;buff,&#32;len)&#32;!=&#32;0)
00278 &#32;&#32;&#32;&#32;<link linkend="_lundump_8c_1a4359a67dfcb96fbedf2becab47365599">error</link>(S,&#32;msg);
00279 }
00280 
00281 
<anchor xml:id="_lundump_8c_source_1l00282"/><link linkend="_lundump_8c_1adc6b144eed9f7f11d35f27ef83901e99">00282</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_lundump_8c_1adc6b144eed9f7f11d35f27ef83901e99">fchecksize</link>&#32;(<link linkend="_struct_load_state">LoadState</link>&#32;*S,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;size,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*tname)&#32;{
00283 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lundump_8c_1a42ccd2fdd0830eda677e6b0b4bb5ec5a">loadByte</link>(S)&#32;!=&#32;size)
00284 &#32;&#32;&#32;&#32;<link linkend="_lundump_8c_1a4359a67dfcb96fbedf2becab47365599">error</link>(S,&#32;<link linkend="_lobject_8c_1a8e224db7123c74d695076a96d1bfda61">luaO_pushfstring</link>(S-&gt;<link linkend="_struct_load_state_1a62f94dfc0036bec0c14106c2f15caf3e">L</link>,&#32;<emphasis role="stringliteral">&quot;%s&#32;size&#32;mismatch&quot;</emphasis>,&#32;tname));
00285 }
00286 
00287 
<anchor xml:id="_lundump_8c_source_1l00288"/><link linkend="_lundump_8c_1a022b57a9b68e60fd3daa99a557d9b92f">00288</link> <emphasis role="preprocessor">#define&#32;checksize(S,t)&#32;&#32;fchecksize(S,sizeof(t),#t)</emphasis>
00289 
<anchor xml:id="_lundump_8c_source_1l00290"/><link linkend="_lundump_8c_1aef0399a03c281a51786c05a14b74b637">00290</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_lundump_8c_1aef0399a03c281a51786c05a14b74b637">checkHeader</link>&#32;(<link linkend="_struct_load_state">LoadState</link>&#32;*S)&#32;{
00291 &#32;&#32;<emphasis role="comment">/*&#32;skip&#32;1st&#32;char&#32;(already&#32;read&#32;and&#32;checked)&#32;*/</emphasis>
00292 &#32;&#32;<link linkend="_lundump_8c_1a005ddaa01fdc44c5223b2b641fcb1653">checkliteral</link>(S,&#32;&amp;<link linkend="_lua_8h_1af21c9fa681dc005c17a7b288882cae1b">LUA_SIGNATURE</link>[1],&#32;<emphasis role="stringliteral">&quot;not&#32;a&#32;binary&#32;chunk&quot;</emphasis>);
00293 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lundump_8c_1a42ccd2fdd0830eda677e6b0b4bb5ec5a">loadByte</link>(S)&#32;!=&#32;<link linkend="_lundump_8h_1aaef225d352d4ab1461adc02e4fa027cd">LUAC_VERSION</link>)
00294 &#32;&#32;&#32;&#32;<link linkend="_lundump_8c_1a4359a67dfcb96fbedf2becab47365599">error</link>(S,&#32;<emphasis role="stringliteral">&quot;version&#32;mismatch&quot;</emphasis>);
00295 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lundump_8c_1a42ccd2fdd0830eda677e6b0b4bb5ec5a">loadByte</link>(S)&#32;!=&#32;<link linkend="_lundump_8h_1a1898203259aab6e1d60737b1e95c2adc">LUAC_FORMAT</link>)
00296 &#32;&#32;&#32;&#32;<link linkend="_lundump_8c_1a4359a67dfcb96fbedf2becab47365599">error</link>(S,&#32;<emphasis role="stringliteral">&quot;format&#32;mismatch&quot;</emphasis>);
00297 &#32;&#32;<link linkend="_lundump_8c_1a005ddaa01fdc44c5223b2b641fcb1653">checkliteral</link>(S,&#32;<link linkend="_lundump_8h_1ad6f33b546a90e78ddb67428b712b48ae">LUAC_DATA</link>,&#32;<emphasis role="stringliteral">&quot;corrupted&#32;chunk&quot;</emphasis>);
00298 &#32;&#32;<link linkend="_lundump_8c_1a022b57a9b68e60fd3daa99a557d9b92f">checksize</link>(S,&#32;<link linkend="_llimits_8h_1aa81d2e7f7263ef29946852d4966a192e">Instruction</link>);
00299 &#32;&#32;<link linkend="_lundump_8c_1a022b57a9b68e60fd3daa99a557d9b92f">checksize</link>(S,&#32;<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>);
00300 &#32;&#32;<link linkend="_lundump_8c_1a022b57a9b68e60fd3daa99a557d9b92f">checksize</link>(S,&#32;<link linkend="_lua_8h_1af0a6ed3b852d680769cfc410a0672172">lua_Number</link>);
00301 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lundump_8c_1a47c3697d53ebc451a28687215007e69e">loadInteger</link>(S)&#32;!=&#32;<link linkend="_lundump_8h_1af8b5bd7f864ed14aef7a9e7405ce6aad">LUAC_INT</link>)
00302 &#32;&#32;&#32;&#32;<link linkend="_lundump_8c_1a4359a67dfcb96fbedf2becab47365599">error</link>(S,&#32;<emphasis role="stringliteral">&quot;integer&#32;format&#32;mismatch&quot;</emphasis>);
00303 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lundump_8c_1abc39c54e4b51ab039f8b8f90f45b3d19">loadNumber</link>(S)&#32;!=&#32;<link linkend="_lundump_8h_1a83a08bb2d400b526bb4a2f449523dd62">LUAC_NUM</link>)
00304 &#32;&#32;&#32;&#32;<link linkend="_lundump_8c_1a4359a67dfcb96fbedf2becab47365599">error</link>(S,&#32;<emphasis role="stringliteral">&quot;float&#32;format&#32;mismatch&quot;</emphasis>);
00305 }
00306 
00307 
00308 <emphasis role="comment">/*</emphasis>
00309 <emphasis role="comment">**&#32;Load&#32;precompiled&#32;chunk.</emphasis>
00310 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lundump_8c_source_1l00311"/><link linkend="_lundump_8h_1ae777344c08970a8fc2de3624c4067dde">00311</link> <link linkend="_struct_l_closure">LClosure</link>&#32;*<link linkend="_lundump_8c_1a388a74bf67456b3abf167ef9fc85b3db">luaU_undump</link>(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<link linkend="_struct_zio">ZIO</link>&#32;*Z,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*name)&#32;{
00312 &#32;&#32;<link linkend="_struct_load_state">LoadState</link>&#32;S;
00313 &#32;&#32;<link linkend="_struct_l_closure">LClosure</link>&#32;*cl;
00314 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(*name&#32;==&#32;<emphasis role="charliteral">&apos;@&apos;</emphasis>&#32;||&#32;*name&#32;==&#32;<emphasis role="charliteral">&apos;=&apos;</emphasis>)
00315 &#32;&#32;&#32;&#32;S.<link linkend="_struct_load_state_1a8f8f80d37794cde9472343e4487ba3eb">name</link>&#32;=&#32;name&#32;+&#32;1;
00316 &#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(*name&#32;==&#32;<link linkend="_lua_8h_1af21c9fa681dc005c17a7b288882cae1b">LUA_SIGNATURE</link>[0])
00317 &#32;&#32;&#32;&#32;S.<link linkend="_struct_load_state_1a8f8f80d37794cde9472343e4487ba3eb">name</link>&#32;=&#32;<emphasis role="stringliteral">&quot;binary&#32;string&quot;</emphasis>;
00318 &#32;&#32;<emphasis role="keywordflow">else</emphasis>
00319 &#32;&#32;&#32;&#32;S.<link linkend="_struct_load_state_1a8f8f80d37794cde9472343e4487ba3eb">name</link>&#32;=&#32;name;
00320 &#32;&#32;S.<link linkend="_struct_load_state_1a62f94dfc0036bec0c14106c2f15caf3e">L</link>&#32;=&#32;L;
00321 &#32;&#32;S.<link linkend="_struct_load_state_1a251c439823e4e9214aa61d423da8de90">Z</link>&#32;=&#32;Z;
00322 &#32;&#32;<link linkend="_lundump_8c_1aef0399a03c281a51786c05a14b74b637">checkHeader</link>(&amp;S);
00323 &#32;&#32;cl&#32;=&#32;<link linkend="_lfunc_8c_1a9fb730389493e9e60bbf0b6809061af5">luaF_newLclosure</link>(L,&#32;<link linkend="_lundump_8c_1a42ccd2fdd0830eda677e6b0b4bb5ec5a">loadByte</link>(&amp;S));
00324 &#32;&#32;<link linkend="_lobject_8h_1a3e4e5270b0c50551ed8c3a0367f56d14">setclLvalue2s</link>(L,&#32;L-&gt;<link linkend="_structlua___state_1afeb5dbe379fc406b35fe5f8a5fcfc5d7">top</link>,&#32;cl);
00325 &#32;&#32;<link linkend="_ldo_8c_1a4dd006aa3210fdc854d0441e2a98c9af">luaD_inctop</link>(L);
00326 &#32;&#32;cl-&gt;<link linkend="_struct_l_closure_1aed1f50b9bdc5ce4c7cfa49529472b42c">p</link>&#32;=&#32;<link linkend="_lfunc_8c_1a4ffd9d8ef515a7f785d007de7ceb9e4f">luaF_newproto</link>(L);
00327 &#32;&#32;<link linkend="_lgc_8h_1a90ac4f3c7085a418025edcc7215e8983">luaC_objbarrier</link>(L,&#32;cl,&#32;cl-&gt;<link linkend="_struct_l_closure_1aed1f50b9bdc5ce4c7cfa49529472b42c">p</link>);
00328 &#32;&#32;<link linkend="_lundump_8c_1a894435708ede05d12c7e81033dae380f">loadFunction</link>(&amp;S,&#32;cl-&gt;<link linkend="_struct_l_closure_1aed1f50b9bdc5ce4c7cfa49529472b42c">p</link>,&#32;NULL);
00329 &#32;&#32;<link linkend="_llimits_8h_1a5978f5fda715bd80e845df1e16ad7780">lua_assert</link>(cl-&gt;nupvalues&#32;==&#32;cl-&gt;<link linkend="_struct_l_closure_1aed1f50b9bdc5ce4c7cfa49529472b42c">p</link>-&gt;<link linkend="_struct_proto_1a2e13a98343ef0d1233bb3e62ae519c5f">sizeupvalues</link>);
00330 &#32;&#32;<link linkend="_lundump_8c_1ac24baf04a83a58a79d218599dc7474c7">luai_verifycode</link>(L,&#32;cl-&gt;<link linkend="_struct_l_closure_1aed1f50b9bdc5ce4c7cfa49529472b42c">p</link>);
00331 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;cl;
00332 }
00333 
</programlisting></section>
