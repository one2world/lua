.TH "D:/gitworkspace/lua/src/lparser.h" 3 "2020年 九月 8日 星期二" "Lua_Docmention" \" -*- nroff -*-
.ad l
.nh
.SH NAME
D:/gitworkspace/lua/src/lparser.h
.SH SYNOPSIS
.br
.PP
\fC#include 'llimits\&.h'\fP
.br
\fC#include 'lobject\&.h'\fP
.br
\fC#include 'lzio\&.h'\fP
.br

.SS "结构体"

.in +1c
.ti -1c
.RI "struct \fBexpdesc\fP"
.br
.ti -1c
.RI "union \fBVardesc\fP"
.br
.ti -1c
.RI "struct \fBLabeldesc\fP"
.br
.ti -1c
.RI "struct \fBLabellist\fP"
.br
.ti -1c
.RI "struct \fBDyndata\fP"
.br
.ti -1c
.RI "struct \fBFuncState\fP"
.br
.in -1c
.SS "宏定义"

.in +1c
.ti -1c
.RI "#define \fBvkisvar\fP(k)   (\fBVLOCAL\fP <= (k) && (k) <= \fBVINDEXSTR\fP)"
.br
.ti -1c
.RI "#define \fBvkisindexed\fP(k)   (\fBVINDEXED\fP <= (k) && (k) <= \fBVINDEXSTR\fP)"
.br
.ti -1c
.RI "#define \fBVDKREG\fP   0   /* regular */"
.br
.ti -1c
.RI "#define \fBRDKCONST\fP   1   /* constant */"
.br
.ti -1c
.RI "#define \fBRDKTOCLOSE\fP   2   /* to\-be\-closed */"
.br
.ti -1c
.RI "#define \fBRDKCTC\fP   3   /* compile\-time constant */"
.br
.in -1c
.SS "类型定义"

.in +1c
.ti -1c
.RI "typedef struct \fBexpdesc\fP \fBexpdesc\fP"
.br
.ti -1c
.RI "typedef union \fBVardesc\fP \fBVardesc\fP"
.br
.ti -1c
.RI "typedef struct \fBLabeldesc\fP \fBLabeldesc\fP"
.br
.ti -1c
.RI "typedef struct \fBLabellist\fP \fBLabellist\fP"
.br
.ti -1c
.RI "typedef struct \fBDyndata\fP \fBDyndata\fP"
.br
.ti -1c
.RI "typedef struct \fBFuncState\fP \fBFuncState\fP"
.br
.in -1c
.SS "枚举"

.in +1c
.ti -1c
.RI "enum \fBexpkind\fP { \fBVVOID\fP, \fBVNIL\fP, \fBVTRUE\fP, \fBVFALSE\fP, \fBVK\fP, \fBVKFLT\fP, \fBVKINT\fP, \fBVKSTR\fP, \fBVNONRELOC\fP, \fBVLOCAL\fP, \fBVUPVAL\fP, \fBVCONST\fP, \fBVINDEXED\fP, \fBVINDEXUP\fP, \fBVINDEXI\fP, \fBVINDEXSTR\fP, \fBVJMP\fP, \fBVRELOC\fP, \fBVCALL\fP, \fBVVARARG\fP }"
.br
.in -1c
.SS "函数"

.in +1c
.ti -1c
.RI "\fBLUAI_FUNC\fP int \fBluaY_nvarstack\fP (\fBFuncState\fP *fs)"
.br
.ti -1c
.RI "\fBLUAI_FUNC\fP \fBLClosure\fP * \fBluaY_parser\fP (\fBlua_State\fP *L, \fBZIO\fP *z, \fBMbuffer\fP *buff, \fBDyndata\fP *dyd, const char *name, int firstchar)"
.br
.in -1c
.SH "宏定义说明"
.PP 
.SS "#define RDKCONST   1   /* constant */"

.PP
在文件 lparser\&.h 第 90 行定义\&.
.SS "#define RDKCTC   3   /* compile\-time constant */"

.PP
在文件 lparser\&.h 第 92 行定义\&.
.SS "#define RDKTOCLOSE   2   /* to\-be\-closed */"

.PP
在文件 lparser\&.h 第 91 行定义\&.
.SS "#define VDKREG   0   /* regular */"

.PP
在文件 lparser\&.h 第 89 行定义\&.
.SS "#define vkisindexed(k)   (\fBVINDEXED\fP <= (k) && (k) <= \fBVINDEXSTR\fP)"

.PP
在文件 lparser\&.h 第 64 行定义\&.
.SS "#define vkisvar(k)   (\fBVLOCAL\fP <= (k) && (k) <= \fBVINDEXSTR\fP)"

.PP
在文件 lparser\&.h 第 63 行定义\&.
.SH "类型定义说明"
.PP 
.SS "typedef struct \fBDyndata\fP \fBDyndata\fP"

.SS "typedef struct \fBexpdesc\fP \fBexpdesc\fP"

.SS "typedef struct \fBFuncState\fP \fBFuncState\fP"

.SS "typedef struct \fBLabeldesc\fP \fBLabeldesc\fP"

.SS "typedef struct \fBLabellist\fP \fBLabellist\fP"

.SS "typedef union \fBVardesc\fP \fBVardesc\fP"

.SH "枚举类型说明"
.PP 
.SS "enum \fBexpkind\fP"

.PP
\fB枚举值\fP
.in +1c
.TP
\fB\fIVVOID \fP\fP
.TP
\fB\fIVNIL \fP\fP
.TP
\fB\fIVTRUE \fP\fP
.TP
\fB\fIVFALSE \fP\fP
.TP
\fB\fIVK \fP\fP
.TP
\fB\fIVKFLT \fP\fP
.TP
\fB\fIVKINT \fP\fP
.TP
\fB\fIVKSTR \fP\fP
.TP
\fB\fIVNONRELOC \fP\fP
.TP
\fB\fIVLOCAL \fP\fP
.TP
\fB\fIVUPVAL \fP\fP
.TP
\fB\fIVCONST \fP\fP
.TP
\fB\fIVINDEXED \fP\fP
.TP
\fB\fIVINDEXUP \fP\fP
.TP
\fB\fIVINDEXI \fP\fP
.TP
\fB\fIVINDEXSTR \fP\fP
.TP
\fB\fIVJMP \fP\fP
.TP
\fB\fIVRELOC \fP\fP
.TP
\fB\fIVCALL \fP\fP
.TP
\fB\fIVVARARG \fP\fP
.PP
在文件 lparser\&.h 第 25 行定义\&.
.SH "函数说明"
.PP 
.SS "\fBLUAI_FUNC\fP int luaY_nvarstack (\fBFuncState\fP * fs)"

.PP
在文件 lparser\&.c 第 243 行定义\&.
.SS "\fBLUAI_FUNC\fP \fBLClosure\fP* luaY_parser (\fBlua_State\fP * L, \fBZIO\fP * z, \fBMbuffer\fP * buff, \fBDyndata\fP * dyd, const char * name, int firstchar)"

.PP
在文件 lparser\&.c 第 1971 行定义\&.
.SH "作者"
.PP 
由 Doyxgen 通过分析 Lua_Docmention 的 源代码自动生成\&.
