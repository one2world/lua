<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_lauxlib_8c_source" xml:lang="zh">
<title>D:/gitworkspace/lua/lauxlib.c</title>
<programlisting>00001 <emphasis role="comment">/*</emphasis>
00002 <emphasis role="comment">**&#32;$Id:&#32;lauxlib.c&#32;$</emphasis>
00003 <emphasis role="comment">**&#32;Auxiliary&#32;functions&#32;for&#32;building&#32;Lua&#32;libraries</emphasis>
00004 <emphasis role="comment">**&#32;See&#32;Copyright&#32;Notice&#32;in&#32;lua.h</emphasis>
00005 <emphasis role="comment">*/</emphasis>
00006 
<anchor xml:id="_lauxlib_8c_source_1l00007"/><link linkend="_lauxlib_8c_1a278591952532b1fb04508c2bc4acd385">00007</link> <emphasis role="preprocessor">#define&#32;lauxlib_c</emphasis>
<anchor xml:id="_lauxlib_8c_source_1l00008"/><link linkend="_lauxlib_8c_1a884b19ad6094d6238c4072a8064aeb12">00008</link> <emphasis role="preprocessor">#define&#32;LUA_LIB</emphasis>
00009 
00010 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_lprefix_8h">lprefix.h</link>&quot;</emphasis>
00011 
00012 
00013 <emphasis role="preprocessor">#include&#32;&lt;errno.h&gt;</emphasis>
00014 <emphasis role="preprocessor">#include&#32;&lt;stdarg.h&gt;</emphasis>
00015 <emphasis role="preprocessor">#include&#32;&lt;stdio.h&gt;</emphasis>
00016 <emphasis role="preprocessor">#include&#32;&lt;stdlib.h&gt;</emphasis>
00017 <emphasis role="preprocessor">#include&#32;&lt;string.h&gt;</emphasis>
00018 
00019 
00020 <emphasis role="comment">/*</emphasis>
00021 <emphasis role="comment">**&#32;This&#32;file&#32;uses&#32;only&#32;the&#32;official&#32;API&#32;of&#32;Lua.</emphasis>
00022 <emphasis role="comment">**&#32;Any&#32;function&#32;declared&#32;here&#32;could&#32;be&#32;written&#32;as&#32;an&#32;application&#32;function.</emphasis>
00023 <emphasis role="comment">*/</emphasis>
00024 
00025 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_lua_8h">lua.h</link>&quot;</emphasis>
00026 
00027 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_lauxlib_8h">lauxlib.h</link>&quot;</emphasis>
00028 
00029 
00030 <emphasis role="preprocessor">#if&#32;!defined(MAX_SIZET)</emphasis>
00031 <emphasis role="comment">/*&#32;maximum&#32;value&#32;for&#32;size_t&#32;*/</emphasis>
<anchor xml:id="_lauxlib_8c_source_1l00032"/><link linkend="_lauxlib_8c_1aa927c7bf177c162feda3483e1e972b3a">00032</link> <emphasis role="preprocessor">#define&#32;MAX_SIZET&#32;&#32;&#32;((size_t)(~(size_t)0))</emphasis>
00033 <emphasis role="preprocessor">#endif</emphasis>
00034 
00035 
00036 <emphasis role="comment">/*</emphasis>
00037 <emphasis role="comment">**&#32;{======================================================</emphasis>
00038 <emphasis role="comment">**&#32;Traceback</emphasis>
00039 <emphasis role="comment">**&#32;=======================================================</emphasis>
00040 <emphasis role="comment">*/</emphasis>
00041 
00042 
<anchor xml:id="_lauxlib_8c_source_1l00043"/><link linkend="_lauxlib_8c_1a6e3d7fb82b885f522e902bcb0386a626">00043</link> <emphasis role="preprocessor">#define&#32;LEVELS1&#32;10&#32;&#32;</emphasis><emphasis role="comment">/*&#32;size&#32;of&#32;the&#32;first&#32;part&#32;of&#32;the&#32;stack&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_lauxlib_8c_source_1l00044"/><link linkend="_lauxlib_8c_1a5f9e9ae6eacbd733a346ecdb14f0e69c">00044</link> <emphasis role="preprocessor">#define&#32;LEVELS2&#32;11&#32;&#32;</emphasis><emphasis role="comment">/*&#32;size&#32;of&#32;the&#32;second&#32;part&#32;of&#32;the&#32;stack&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
00045 
00046 
00047 
00048 <emphasis role="comment">/*</emphasis>
00049 <emphasis role="comment">**&#32;Search&#32;for&#32;&apos;objidx&apos;&#32;in&#32;table&#32;at&#32;index&#32;-1.&#32;(&apos;objidx&apos;&#32;must&#32;be&#32;an</emphasis>
00050 <emphasis role="comment">**&#32;absolute&#32;index.)&#32;Return&#32;1&#32;+&#32;string&#32;at&#32;top&#32;if&#32;it&#32;found&#32;a&#32;good&#32;name.</emphasis>
00051 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lauxlib_8c_source_1l00052"/><link linkend="_lauxlib_8c_1a36c8f149b779f8c9a5c042ea9784d80a">00052</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lauxlib_8c_1a36c8f149b779f8c9a5c042ea9784d80a">findfield</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<emphasis role="keywordtype">int</emphasis>&#32;objidx,&#32;<emphasis role="keywordtype">int</emphasis>&#32;level)&#32;{
00053 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(level&#32;==&#32;0&#32;||&#32;!<link linkend="_lua_8h_1a161af51893c5f79dacc1c382416a5f27">lua_istable</link>(L,&#32;-1))
00054 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;&#32;&#32;<emphasis role="comment">/*&#32;not&#32;found&#32;*/</emphasis>
00055 &#32;&#32;<link linkend="_lapi_8c_1a1b4cd0d80f51e5545a97ca6c28c03c50">lua_pushnil</link>(L);&#32;&#32;<emphasis role="comment">/*&#32;start&#32;&apos;next&apos;&#32;loop&#32;*/</emphasis>
00056 &#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(<link linkend="_lapi_8c_1aa8bf464b98335a075732200ad91ce1de">lua_next</link>(L,&#32;-2))&#32;{&#32;&#32;<emphasis role="comment">/*&#32;for&#32;each&#32;pair&#32;in&#32;table&#32;*/</emphasis>
00057 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lapi_8c_1a652b273947f0656686f998d8e90cd3ea">lua_type</link>(L,&#32;-2)&#32;==&#32;<link linkend="_lua_8h_1a57de20d87bb5131a3159f2bd52e3fab6">LUA_TSTRING</link>)&#32;{&#32;&#32;<emphasis role="comment">/*&#32;ignore&#32;non-string&#32;keys&#32;*/</emphasis>
00058 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lapi_8c_1ace66ea78ced7fda0b367f45d09d10d83">lua_rawequal</link>(L,&#32;objidx,&#32;-1))&#32;{&#32;&#32;<emphasis role="comment">/*&#32;found&#32;object?&#32;*/</emphasis>
00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lua_8h_1abb8eae2164badeafdb037bc1e03cc822">lua_pop</link>(L,&#32;1);&#32;&#32;<emphasis role="comment">/*&#32;remove&#32;value&#32;(but&#32;keep&#32;name)&#32;*/</emphasis>
00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
00061 &#32;&#32;&#32;&#32;&#32;&#32;}
00062 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lauxlib_8c_1a36c8f149b779f8c9a5c042ea9784d80a">findfield</link>(L,&#32;objidx,&#32;level&#32;-&#32;1))&#32;{&#32;&#32;<emphasis role="comment">/*&#32;try&#32;recursively&#32;*/</emphasis>
00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;stack:&#32;lib_name,&#32;lib_table,&#32;field_name&#32;(top)&#32;*/</emphasis>
00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lua_8h_1a47854189a679002ed743ebbcb30b1b26">lua_pushliteral</link>(L,&#32;<emphasis role="stringliteral">&quot;.&quot;</emphasis>);&#32;&#32;<emphasis role="comment">/*&#32;place&#32;&apos;.&apos;&#32;between&#32;the&#32;two&#32;names&#32;*/</emphasis>
00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lua_8h_1a09daca42852c6356e4b415c46eba5955">lua_replace</link>(L,&#32;-3);&#32;&#32;<emphasis role="comment">/*&#32;(in&#32;the&#32;slot&#32;occupied&#32;by&#32;table)&#32;*/</emphasis>
00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lapi_8c_1a1de3afee1daece63d455f23818c883d9">lua_concat</link>(L,&#32;3);&#32;&#32;<emphasis role="comment">/*&#32;lib_name.field_name&#32;*/</emphasis>
00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
00068 &#32;&#32;&#32;&#32;&#32;&#32;}
00069 &#32;&#32;&#32;&#32;}
00070 &#32;&#32;&#32;&#32;<link linkend="_lua_8h_1abb8eae2164badeafdb037bc1e03cc822">lua_pop</link>(L,&#32;1);&#32;&#32;<emphasis role="comment">/*&#32;remove&#32;value&#32;*/</emphasis>
00071 &#32;&#32;}
00072 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;&#32;&#32;<emphasis role="comment">/*&#32;not&#32;found&#32;*/</emphasis>
00073 }
00074 
00075 
00076 <emphasis role="comment">/*</emphasis>
00077 <emphasis role="comment">**&#32;Search&#32;for&#32;a&#32;name&#32;for&#32;a&#32;function&#32;in&#32;all&#32;loaded&#32;modules</emphasis>
00078 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lauxlib_8c_source_1l00079"/><link linkend="_lauxlib_8c_1a4f35430f7ecfcbd5f507e550937046b4">00079</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lauxlib_8c_1a4f35430f7ecfcbd5f507e550937046b4">pushglobalfuncname</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<link linkend="_structlua___debug">lua_Debug</link>&#32;*ar)&#32;{
00080 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;top&#32;=&#32;<link linkend="_lapi_8c_1afbb08ecb69421875494105d4de68e5bf">lua_gettop</link>(L);
00081 &#32;&#32;<link linkend="_ldebug_8c_1acaafc35d8e385c4d167229486165df6d">lua_getinfo</link>(L,&#32;<emphasis role="stringliteral">&quot;f&quot;</emphasis>,&#32;ar);&#32;&#32;<emphasis role="comment">/*&#32;push&#32;function&#32;*/</emphasis>
00082 &#32;&#32;<link linkend="_lapi_8c_1a8b47f1b5685c3f8018ba926abb99af24">lua_getfield</link>(L,&#32;<link linkend="_lua_8h_1a3524c2bbc8fcf847dc083246b62945dd">LUA_REGISTRYINDEX</link>,&#32;<link linkend="_lauxlib_8h_1a0fbee1a8156dc622618c9f6048281a73">LUA_LOADED_TABLE</link>);
00083 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lauxlib_8c_1a36c8f149b779f8c9a5c042ea9784d80a">findfield</link>(L,&#32;top&#32;+&#32;1,&#32;2))&#32;{
00084 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*name&#32;=&#32;<link linkend="_lua_8h_1ac813fc3bc1886ba17c363d5b4c6e7ef1">lua_tostring</link>(L,&#32;-1);
00085 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(strncmp(name,&#32;<link linkend="_lauxlib_8h_1a074d53b3afd2b899d4b986c9643fb41a">LUA_GNAME</link>&#32;<emphasis role="stringliteral">&quot;.&quot;</emphasis>,&#32;3)&#32;==&#32;0)&#32;{&#32;&#32;<emphasis role="comment">/*&#32;name&#32;start&#32;with&#32;&apos;_G.&apos;?&#32;*/</emphasis>
00086 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lapi_8c_1a771d300f2e64b2197d1df9bf31660ebf">lua_pushstring</link>(L,&#32;name&#32;+&#32;3);&#32;&#32;<emphasis role="comment">/*&#32;push&#32;name&#32;without&#32;prefix&#32;*/</emphasis>
00087 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lua_8h_1a7664dec8f7220c706b7e71ad3227cc78">lua_remove</link>(L,&#32;-2);&#32;&#32;<emphasis role="comment">/*&#32;remove&#32;original&#32;name&#32;*/</emphasis>
00088 &#32;&#32;&#32;&#32;}
00089 &#32;&#32;&#32;&#32;<link linkend="_lapi_8c_1a111bd3fa34fe656f415edae5e343e13e">lua_copy</link>(L,&#32;-1,&#32;top&#32;+&#32;1);&#32;&#32;<emphasis role="comment">/*&#32;copy&#32;name&#32;to&#32;proper&#32;place&#32;*/</emphasis>
00090 &#32;&#32;&#32;&#32;<link linkend="_lapi_8c_1adaa30f0d34786144c94644039d1d1b6e">lua_settop</link>(L,&#32;top&#32;+&#32;1);&#32;&#32;<emphasis role="comment">/*&#32;remove&#32;table&#32;&quot;loaded&quot;&#32;and&#32;name&#32;copy&#32;*/</emphasis>
00091 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
00092 &#32;&#32;}
00093 &#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00094 &#32;&#32;&#32;&#32;<link linkend="_lapi_8c_1adaa30f0d34786144c94644039d1d1b6e">lua_settop</link>(L,&#32;top);&#32;&#32;<emphasis role="comment">/*&#32;remove&#32;function&#32;and&#32;global&#32;table&#32;*/</emphasis>
00095 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
00096 &#32;&#32;}
00097 }
00098 
00099 
<anchor xml:id="_lauxlib_8c_source_1l00100"/><link linkend="_lauxlib_8c_1a0aa557042467d3f84d0663c742b32946">00100</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_lauxlib_8c_1a0aa557042467d3f84d0663c742b32946">pushfuncname</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<link linkend="_structlua___debug">lua_Debug</link>&#32;*ar)&#32;{
00101 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lauxlib_8c_1a4f35430f7ecfcbd5f507e550937046b4">pushglobalfuncname</link>(L,&#32;ar))&#32;{&#32;&#32;<emphasis role="comment">/*&#32;try&#32;first&#32;a&#32;global&#32;name&#32;*/</emphasis>
00102 &#32;&#32;&#32;&#32;<link linkend="_lapi_8c_1ab190c226d38b289e6ca57683a9d4e0f0">lua_pushfstring</link>(L,&#32;<emphasis role="stringliteral">&quot;function&#32;&apos;%s&apos;&quot;</emphasis>,&#32;<link linkend="_lua_8h_1ac813fc3bc1886ba17c363d5b4c6e7ef1">lua_tostring</link>(L,&#32;-1));
00103 &#32;&#32;&#32;&#32;<link linkend="_lua_8h_1a7664dec8f7220c706b7e71ad3227cc78">lua_remove</link>(L,&#32;-2);&#32;&#32;<emphasis role="comment">/*&#32;remove&#32;name&#32;*/</emphasis>
00104 &#32;&#32;}
00105 &#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(*ar-&gt;<link linkend="_structlua___debug_1a37bd506f9c90a2199c60ed511c2c56dc">namewhat</link>&#32;!=&#32;<emphasis role="charliteral">&apos;\0&apos;</emphasis>)&#32;&#32;<emphasis role="comment">/*&#32;is&#32;there&#32;a&#32;name&#32;from&#32;code?&#32;*/</emphasis>
00106 &#32;&#32;&#32;&#32;<link linkend="_lapi_8c_1ab190c226d38b289e6ca57683a9d4e0f0">lua_pushfstring</link>(L,&#32;<emphasis role="stringliteral">&quot;%s&#32;&apos;%s&apos;&quot;</emphasis>,&#32;ar-&gt;<link linkend="_structlua___debug_1a37bd506f9c90a2199c60ed511c2c56dc">namewhat</link>,&#32;ar-&gt;<link linkend="_structlua___debug_1a8f8f80d37794cde9472343e4487ba3eb">name</link>);&#32;&#32;<emphasis role="comment">/*&#32;use&#32;it&#32;*/</emphasis>
00107 &#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(*ar-&gt;<link linkend="_structlua___debug_1a951a98f1e2d69ca61adcd53c0f8faca3">what</link>&#32;==&#32;<emphasis role="charliteral">&apos;m&apos;</emphasis>)&#32;&#32;<emphasis role="comment">/*&#32;main?&#32;*/</emphasis>
00108 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lua_8h_1a47854189a679002ed743ebbcb30b1b26">lua_pushliteral</link>(L,&#32;<emphasis role="stringliteral">&quot;main&#32;chunk&quot;</emphasis>);
00109 &#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(*ar-&gt;<link linkend="_structlua___debug_1a951a98f1e2d69ca61adcd53c0f8faca3">what</link>&#32;!=&#32;<emphasis role="charliteral">&apos;C&apos;</emphasis>)&#32;&#32;<emphasis role="comment">/*&#32;for&#32;Lua&#32;functions,&#32;use&#32;&lt;file:line&gt;&#32;*/</emphasis>
00110 &#32;&#32;&#32;&#32;<link linkend="_lapi_8c_1ab190c226d38b289e6ca57683a9d4e0f0">lua_pushfstring</link>(L,&#32;<emphasis role="stringliteral">&quot;function&#32;&lt;%s:%d&gt;&quot;</emphasis>,&#32;ar-&gt;<link linkend="_structlua___debug_1af9d2e23fe50a49dc12c41f7276c2143d">short_src</link>,&#32;ar-&gt;<link linkend="_structlua___debug_1a4dfda1a3839aa77fb8fc7626075151dd">linedefined</link>);
00111 &#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;&#32;<emphasis role="comment">/*&#32;nothing&#32;left...&#32;*/</emphasis>
00112 &#32;&#32;&#32;&#32;<link linkend="_lua_8h_1a47854189a679002ed743ebbcb30b1b26">lua_pushliteral</link>(L,&#32;<emphasis role="stringliteral">&quot;?&quot;</emphasis>);
00113 }
00114 
00115 
<anchor xml:id="_lauxlib_8c_source_1l00116"/><link linkend="_lauxlib_8c_1af3eb164386f8acd9cfd63e7ea4ad4dad">00116</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lauxlib_8c_1af3eb164386f8acd9cfd63e7ea4ad4dad">lastlevel</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L)&#32;{
00117 &#32;&#32;<link linkend="_structlua___debug">lua_Debug</link>&#32;ar;
00118 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;li&#32;=&#32;1,&#32;le&#32;=&#32;1;
00119 &#32;&#32;<emphasis role="comment">/*&#32;find&#32;an&#32;upper&#32;bound&#32;*/</emphasis>
00120 &#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(<link linkend="_ldebug_8c_1ac1fc03c27ee46caa4037df2d70f22110">lua_getstack</link>(L,&#32;le,&#32;&amp;ar))&#32;{&#32;li&#32;=&#32;le;&#32;le&#32;*=&#32;2;&#32;}
00121 &#32;&#32;<emphasis role="comment">/*&#32;do&#32;a&#32;binary&#32;search&#32;*/</emphasis>
00122 &#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(li&#32;&lt;&#32;le)&#32;{
00123 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;m&#32;=&#32;(li&#32;+&#32;le)/2;
00124 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_ldebug_8c_1ac1fc03c27ee46caa4037df2d70f22110">lua_getstack</link>(L,&#32;m,&#32;&amp;ar))&#32;li&#32;=&#32;m&#32;+&#32;1;
00125 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;le&#32;=&#32;m;
00126 &#32;&#32;}
00127 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;le&#32;-&#32;1;
00128 }
00129 
00130 
<anchor xml:id="_lauxlib_8c_source_1l00131"/><link linkend="_lauxlib_8h_1a664cc293d6c7a7dc67857fe95583a10e">00131</link> <link linkend="_luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95">LUALIB_API</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_lauxlib_8c_1a67bf3728d34d2c9badb2bd2f57c75233">luaL_traceback</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<link linkend="_structlua___state">lua_State</link>&#32;*L1,
00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*msg,&#32;<emphasis role="keywordtype">int</emphasis>&#32;level)&#32;{
00133 &#32;&#32;<link linkend="_structlua_l___buffer">luaL_Buffer</link>&#32;b;
00134 &#32;&#32;<link linkend="_structlua___debug">lua_Debug</link>&#32;ar;
00135 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;last&#32;=&#32;<link linkend="_lauxlib_8c_1af3eb164386f8acd9cfd63e7ea4ad4dad">lastlevel</link>(L1);
00136 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;limit2show&#32;=&#32;(last&#32;-&#32;level&#32;&gt;&#32;<link linkend="_lauxlib_8c_1a6e3d7fb82b885f522e902bcb0386a626">LEVELS1</link>&#32;+&#32;<link linkend="_lauxlib_8c_1a5f9e9ae6eacbd733a346ecdb14f0e69c">LEVELS2</link>)&#32;?&#32;<link linkend="_lauxlib_8c_1a6e3d7fb82b885f522e902bcb0386a626">LEVELS1</link>&#32;:&#32;-1;
00137 &#32;&#32;<link linkend="_lauxlib_8c_1a0830ef75e335f6d7590b0e058f82a5eb">luaL_buffinit</link>(L,&#32;&amp;b);
00138 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(msg)&#32;{
00139 &#32;&#32;&#32;&#32;<link linkend="_lauxlib_8c_1aced031f9a3f68375e9f80315933d9a88">luaL_addstring</link>(&amp;b,&#32;msg);
00140 &#32;&#32;&#32;&#32;<link linkend="_lauxlib_8h_1a63935c5b4cf5d45930c875f6cc5e1432">luaL_addchar</link>(&amp;b,&#32;<emphasis role="charliteral">&apos;\n&apos;</emphasis>);
00141 &#32;&#32;}
00142 &#32;&#32;<link linkend="_lauxlib_8c_1aced031f9a3f68375e9f80315933d9a88">luaL_addstring</link>(&amp;b,&#32;<emphasis role="stringliteral">&quot;stack&#32;traceback:&quot;</emphasis>);
00143 &#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(<link linkend="_ldebug_8c_1ac1fc03c27ee46caa4037df2d70f22110">lua_getstack</link>(L1,&#32;level++,&#32;&amp;ar))&#32;{
00144 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(limit2show--&#32;==&#32;0)&#32;{&#32;&#32;<emphasis role="comment">/*&#32;too&#32;many&#32;levels?&#32;*/</emphasis>
00145 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;n&#32;=&#32;last&#32;-&#32;level&#32;-&#32;<link linkend="_lauxlib_8c_1a5f9e9ae6eacbd733a346ecdb14f0e69c">LEVELS2</link>&#32;+&#32;1;&#32;&#32;<emphasis role="comment">/*&#32;number&#32;of&#32;levels&#32;to&#32;skip&#32;*/</emphasis>
00146 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lapi_8c_1ab190c226d38b289e6ca57683a9d4e0f0">lua_pushfstring</link>(L,&#32;<emphasis role="stringliteral">&quot;\n\t...\t(skipping&#32;%d&#32;levels)&quot;</emphasis>,&#32;n);
00147 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lauxlib_8c_1a59a8ac34826fee305ad56101d97aee18">luaL_addvalue</link>(&amp;b);&#32;&#32;<emphasis role="comment">/*&#32;add&#32;warning&#32;about&#32;skip&#32;*/</emphasis>
00148 &#32;&#32;&#32;&#32;&#32;&#32;level&#32;+=&#32;n;&#32;&#32;<emphasis role="comment">/*&#32;and&#32;skip&#32;to&#32;last&#32;levels&#32;*/</emphasis>
00149 &#32;&#32;&#32;&#32;}
00150 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00151 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_ldebug_8c_1acaafc35d8e385c4d167229486165df6d">lua_getinfo</link>(L1,&#32;<emphasis role="stringliteral">&quot;Slnt&quot;</emphasis>,&#32;&amp;ar);
00152 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ar.<link linkend="_structlua___debug_1a1be7dfac6c204d2592700475b5d73fd2">currentline</link>&#32;&lt;=&#32;0)
00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lapi_8c_1ab190c226d38b289e6ca57683a9d4e0f0">lua_pushfstring</link>(L,&#32;<emphasis role="stringliteral">&quot;\n\t%s:&#32;in&#32;&quot;</emphasis>,&#32;ar.<link linkend="_structlua___debug_1af9d2e23fe50a49dc12c41f7276c2143d">short_src</link>);
00154 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lapi_8c_1ab190c226d38b289e6ca57683a9d4e0f0">lua_pushfstring</link>(L,&#32;<emphasis role="stringliteral">&quot;\n\t%s:%d:&#32;in&#32;&quot;</emphasis>,&#32;ar.<link linkend="_structlua___debug_1af9d2e23fe50a49dc12c41f7276c2143d">short_src</link>,&#32;ar.<link linkend="_structlua___debug_1a1be7dfac6c204d2592700475b5d73fd2">currentline</link>);
00156 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lauxlib_8c_1a59a8ac34826fee305ad56101d97aee18">luaL_addvalue</link>(&amp;b);
00157 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lauxlib_8c_1a0aa557042467d3f84d0663c742b32946">pushfuncname</link>(L,&#32;&amp;ar);
00158 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lauxlib_8c_1a59a8ac34826fee305ad56101d97aee18">luaL_addvalue</link>(&amp;b);
00159 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ar.<link linkend="_structlua___debug_1aa30e4bb574536d40b6aaa3c24c1fa725">istailcall</link>)
00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lauxlib_8c_1aced031f9a3f68375e9f80315933d9a88">luaL_addstring</link>(&amp;b,&#32;<emphasis role="stringliteral">&quot;\n\t(...tail&#32;calls...)&quot;</emphasis>);
00161 &#32;&#32;&#32;&#32;}
00162 &#32;&#32;}
00163 &#32;&#32;<link linkend="_lauxlib_8c_1a3a1f80033814e2057583a7d24cee23b4">luaL_pushresult</link>(&amp;b);
00164 }
00165 
00166 <emphasis role="comment">/*&#32;}======================================================&#32;*/</emphasis>
00167 
00168 
00169 <emphasis role="comment">/*</emphasis>
00170 <emphasis role="comment">**&#32;{======================================================</emphasis>
00171 <emphasis role="comment">**&#32;Error-report&#32;functions</emphasis>
00172 <emphasis role="comment">**&#32;=======================================================</emphasis>
00173 <emphasis role="comment">*/</emphasis>
00174 
<anchor xml:id="_lauxlib_8c_source_1l00175"/><link linkend="_lauxlib_8h_1ad0599591343ae7836d46e685b16e69de">00175</link> <link linkend="_luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95">LUALIB_API</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lauxlib_8c_1ac607576dd107a3120cd51948989f1ed2">luaL_argerror</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<emphasis role="keywordtype">int</emphasis>&#32;arg,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*extramsg)&#32;{
00176 &#32;&#32;<link linkend="_structlua___debug">lua_Debug</link>&#32;ar;
00177 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_ldebug_8c_1ac1fc03c27ee46caa4037df2d70f22110">lua_getstack</link>(L,&#32;0,&#32;&amp;ar))&#32;&#32;<emphasis role="comment">/*&#32;no&#32;stack&#32;frame?&#32;*/</emphasis>
00178 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_lauxlib_8c_1a6c51d83d29244779392551388913e08a">luaL_error</link>(L,&#32;<emphasis role="stringliteral">&quot;bad&#32;argument&#32;#%d&#32;(%s)&quot;</emphasis>,&#32;arg,&#32;extramsg);
00179 &#32;&#32;<link linkend="_ldebug_8c_1acaafc35d8e385c4d167229486165df6d">lua_getinfo</link>(L,&#32;<emphasis role="stringliteral">&quot;n&quot;</emphasis>,&#32;&amp;ar);
00180 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(strcmp(ar.<link linkend="_structlua___debug_1a37bd506f9c90a2199c60ed511c2c56dc">namewhat</link>,&#32;<emphasis role="stringliteral">&quot;method&quot;</emphasis>)&#32;==&#32;0)&#32;{
00181 &#32;&#32;&#32;&#32;arg--;&#32;&#32;<emphasis role="comment">/*&#32;do&#32;not&#32;count&#32;&apos;self&apos;&#32;*/</emphasis>
00182 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(arg&#32;==&#32;0)&#32;&#32;<emphasis role="comment">/*&#32;error&#32;is&#32;in&#32;the&#32;self&#32;argument&#32;itself?&#32;*/</emphasis>
00183 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_lauxlib_8c_1a6c51d83d29244779392551388913e08a">luaL_error</link>(L,&#32;<emphasis role="stringliteral">&quot;calling&#32;&apos;%s&apos;&#32;on&#32;bad&#32;self&#32;(%s)&quot;</emphasis>,
00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ar.<link linkend="_structlua___debug_1a8f8f80d37794cde9472343e4487ba3eb">name</link>,&#32;extramsg);
00185 &#32;&#32;}
00186 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ar.<link linkend="_structlua___debug_1a8f8f80d37794cde9472343e4487ba3eb">name</link>&#32;==&#32;NULL)
00187 &#32;&#32;&#32;&#32;ar.<link linkend="_structlua___debug_1a8f8f80d37794cde9472343e4487ba3eb">name</link>&#32;=&#32;(<link linkend="_lauxlib_8c_1a4f35430f7ecfcbd5f507e550937046b4">pushglobalfuncname</link>(L,&#32;&amp;ar))&#32;?&#32;<link linkend="_lua_8h_1ac813fc3bc1886ba17c363d5b4c6e7ef1">lua_tostring</link>(L,&#32;-1)&#32;:&#32;<emphasis role="stringliteral">&quot;?&quot;</emphasis>;
00188 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_lauxlib_8c_1a6c51d83d29244779392551388913e08a">luaL_error</link>(L,&#32;<emphasis role="stringliteral">&quot;bad&#32;argument&#32;#%d&#32;to&#32;&apos;%s&apos;&#32;(%s)&quot;</emphasis>,
00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;arg,&#32;ar.<link linkend="_structlua___debug_1a8f8f80d37794cde9472343e4487ba3eb">name</link>,&#32;extramsg);
00190 }
00191 
00192 
<anchor xml:id="_lauxlib_8c_source_1l00193"/><link linkend="_lauxlib_8h_1a38cc1bb8d85efadc840f38b33e37326b">00193</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lauxlib_8c_1ab8ddc4ac13516f3548a6c102dd6fa114">luaL_typeerror</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<emphasis role="keywordtype">int</emphasis>&#32;arg,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*tname)&#32;{
00194 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*msg;
00195 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*typearg;&#32;&#32;<emphasis role="comment">/*&#32;name&#32;for&#32;the&#32;type&#32;of&#32;the&#32;actual&#32;argument&#32;*/</emphasis>
00196 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lauxlib_8c_1add7cea31816ff3f61014031248e0daa6">luaL_getmetafield</link>(L,&#32;arg,&#32;<emphasis role="stringliteral">&quot;__name&quot;</emphasis>)&#32;==&#32;<link linkend="_lua_8h_1a57de20d87bb5131a3159f2bd52e3fab6">LUA_TSTRING</link>)
00197 &#32;&#32;&#32;&#32;typearg&#32;=&#32;<link linkend="_lua_8h_1ac813fc3bc1886ba17c363d5b4c6e7ef1">lua_tostring</link>(L,&#32;-1);&#32;&#32;<emphasis role="comment">/*&#32;use&#32;the&#32;given&#32;type&#32;name&#32;*/</emphasis>
00198 &#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lapi_8c_1a652b273947f0656686f998d8e90cd3ea">lua_type</link>(L,&#32;arg)&#32;==&#32;<link linkend="_lua_8h_1aa030c2d649070173902c8094d8e0e2cd">LUA_TLIGHTUSERDATA</link>)
00199 &#32;&#32;&#32;&#32;typearg&#32;=&#32;<emphasis role="stringliteral">&quot;light&#32;userdata&quot;</emphasis>;&#32;&#32;<emphasis role="comment">/*&#32;special&#32;name&#32;for&#32;messages&#32;*/</emphasis>
00200 &#32;&#32;<emphasis role="keywordflow">else</emphasis>
00201 &#32;&#32;&#32;&#32;typearg&#32;=&#32;<link linkend="_lauxlib_8h_1a2bee94954917c5bccb05d6578f3c675b">luaL_typename</link>(L,&#32;arg);&#32;&#32;<emphasis role="comment">/*&#32;standard&#32;name&#32;*/</emphasis>
00202 &#32;&#32;msg&#32;=&#32;<link linkend="_lapi_8c_1ab190c226d38b289e6ca57683a9d4e0f0">lua_pushfstring</link>(L,&#32;<emphasis role="stringliteral">&quot;%s&#32;expected,&#32;got&#32;%s&quot;</emphasis>,&#32;tname,&#32;typearg);
00203 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_lauxlib_8c_1ac607576dd107a3120cd51948989f1ed2">luaL_argerror</link>(L,&#32;arg,&#32;msg);
00204 }
00205 
00206 
<anchor xml:id="_lauxlib_8c_source_1l00207"/><link linkend="_lauxlib_8c_1ab8e946260debec8d4bbc714b76a1613b">00207</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_lauxlib_8c_1ab8e946260debec8d4bbc714b76a1613b">tag_error</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<emphasis role="keywordtype">int</emphasis>&#32;arg,&#32;<emphasis role="keywordtype">int</emphasis>&#32;tag)&#32;{
00208 &#32;&#32;<link linkend="_lauxlib_8c_1ab8ddc4ac13516f3548a6c102dd6fa114">luaL_typeerror</link>(L,&#32;arg,&#32;<link linkend="_lapi_8c_1a7d64f87addab440bbda96bb088816e17">lua_typename</link>(L,&#32;tag));
00209 }
00210 
00211 
00212 <emphasis role="comment">/*</emphasis>
00213 <emphasis role="comment">**&#32;The&#32;use&#32;of&#32;&apos;lua_pushfstring&apos;&#32;ensures&#32;this&#32;function&#32;does&#32;not</emphasis>
00214 <emphasis role="comment">**&#32;need&#32;reserved&#32;stack&#32;space&#32;when&#32;called.</emphasis>
00215 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lauxlib_8c_source_1l00216"/><link linkend="_lauxlib_8h_1a269122a77674ca63c9193c2a30b4729e">00216</link> <link linkend="_luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95">LUALIB_API</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_lauxlib_8c_1a0f4d3c30c07eae36aa25605df84279a0">luaL_where</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<emphasis role="keywordtype">int</emphasis>&#32;level)&#32;{
00217 &#32;&#32;<link linkend="_structlua___debug">lua_Debug</link>&#32;ar;
00218 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_ldebug_8c_1ac1fc03c27ee46caa4037df2d70f22110">lua_getstack</link>(L,&#32;level,&#32;&amp;ar))&#32;{&#32;&#32;<emphasis role="comment">/*&#32;check&#32;function&#32;at&#32;level&#32;*/</emphasis>
00219 &#32;&#32;&#32;&#32;<link linkend="_ldebug_8c_1acaafc35d8e385c4d167229486165df6d">lua_getinfo</link>(L,&#32;<emphasis role="stringliteral">&quot;Sl&quot;</emphasis>,&#32;&amp;ar);&#32;&#32;<emphasis role="comment">/*&#32;get&#32;info&#32;about&#32;it&#32;*/</emphasis>
00220 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ar.<link linkend="_structlua___debug_1a1be7dfac6c204d2592700475b5d73fd2">currentline</link>&#32;&gt;&#32;0)&#32;{&#32;&#32;<emphasis role="comment">/*&#32;is&#32;there&#32;info?&#32;*/</emphasis>
00221 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lapi_8c_1ab190c226d38b289e6ca57683a9d4e0f0">lua_pushfstring</link>(L,&#32;<emphasis role="stringliteral">&quot;%s:%d:&#32;&quot;</emphasis>,&#32;ar.<link linkend="_structlua___debug_1af9d2e23fe50a49dc12c41f7276c2143d">short_src</link>,&#32;ar.<link linkend="_structlua___debug_1a1be7dfac6c204d2592700475b5d73fd2">currentline</link>);
00222 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
00223 &#32;&#32;&#32;&#32;}
00224 &#32;&#32;}
00225 &#32;&#32;<link linkend="_lapi_8c_1ab190c226d38b289e6ca57683a9d4e0f0">lua_pushfstring</link>(L,&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>);&#32;&#32;<emphasis role="comment">/*&#32;else,&#32;no&#32;information&#32;available...&#32;*/</emphasis>
00226 }
00227 
00228 
00229 <emphasis role="comment">/*</emphasis>
00230 <emphasis role="comment">**&#32;Again,&#32;the&#32;use&#32;of&#32;&apos;lua_pushvfstring&apos;&#32;ensures&#32;this&#32;function&#32;does</emphasis>
00231 <emphasis role="comment">**&#32;not&#32;need&#32;reserved&#32;stack&#32;space&#32;when&#32;called.&#32;(At&#32;worst,&#32;it&#32;generates</emphasis>
00232 <emphasis role="comment">**&#32;an&#32;error&#32;with&#32;&quot;stack&#32;overflow&quot;&#32;instead&#32;of&#32;the&#32;given&#32;message.)</emphasis>
00233 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lauxlib_8c_source_1l00234"/><link linkend="_lauxlib_8h_1a994f73d7985c30672469a260d9e86ae6">00234</link> <link linkend="_luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95">LUALIB_API</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lauxlib_8c_1a6c51d83d29244779392551388913e08a">luaL_error</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*fmt,&#32;...)&#32;{
00235 &#32;&#32;va_list&#32;argp;
00236 &#32;&#32;va_start(argp,&#32;fmt);
00237 &#32;&#32;<link linkend="_lauxlib_8c_1a0f4d3c30c07eae36aa25605df84279a0">luaL_where</link>(L,&#32;1);
00238 &#32;&#32;<link linkend="_lapi_8c_1a426c9cb1d582be3e43060c4772854e5a">lua_pushvfstring</link>(L,&#32;fmt,&#32;argp);
00239 &#32;&#32;va_end(argp);
00240 &#32;&#32;<link linkend="_lapi_8c_1a1de3afee1daece63d455f23818c883d9">lua_concat</link>(L,&#32;2);
00241 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_lapi_8c_1a6ba7b91143fe8a03910420d800de8e97">lua_error</link>(L);
00242 }
00243 
00244 
<anchor xml:id="_lauxlib_8c_source_1l00245"/><link linkend="_lauxlib_8h_1ab94b3cb77f5a0ae622ae4ba5f99af4c7">00245</link> <link linkend="_luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95">LUALIB_API</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lauxlib_8c_1a86309080a5d45b232bcc240b45d06942">luaL_fileresult</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<emphasis role="keywordtype">int</emphasis>&#32;stat,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*fname)&#32;{
00246 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;en&#32;=&#32;errno;&#32;&#32;<emphasis role="comment">/*&#32;calls&#32;to&#32;Lua&#32;API&#32;may&#32;change&#32;this&#32;value&#32;*/</emphasis>
00247 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stat)&#32;{
00248 &#32;&#32;&#32;&#32;<link linkend="_lapi_8c_1a56bbb7479265e38da2e2596e6ec25faa">lua_pushboolean</link>(L,&#32;1);
00249 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
00250 &#32;&#32;}
00251 &#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00252 &#32;&#32;&#32;&#32;<link linkend="_lauxlib_8h_1a8666135f7a1412f5eaa14857aec279f0">luaL_pushfail</link>(L);
00253 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fname)
00254 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lapi_8c_1ab190c226d38b289e6ca57683a9d4e0f0">lua_pushfstring</link>(L,&#32;<emphasis role="stringliteral">&quot;%s:&#32;%s&quot;</emphasis>,&#32;fname,&#32;strerror(en));
00255 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
00256 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lapi_8c_1a771d300f2e64b2197d1df9bf31660ebf">lua_pushstring</link>(L,&#32;strerror(en));
00257 &#32;&#32;&#32;&#32;<link linkend="_lapi_8c_1adcec46ff05dfee9a3c4c05828b40c213">lua_pushinteger</link>(L,&#32;en);
00258 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;3;
00259 &#32;&#32;}
00260 }
00261 
00262 
00263 <emphasis role="preprocessor">#if&#32;!defined(l_inspectstat)&#32;</emphasis><emphasis role="comment">/*&#32;{&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
00264 
00265 <emphasis role="preprocessor">#if&#32;defined(LUA_USE_POSIX)</emphasis>
00266 
00267 <emphasis role="preprocessor">#include&#32;&lt;sys/wait.h&gt;</emphasis>
00268 
00269 <emphasis role="comment">/*</emphasis>
00270 <emphasis role="comment">**&#32;use&#32;appropriate&#32;macros&#32;to&#32;interpret&#32;&apos;pclose&apos;&#32;return&#32;status</emphasis>
00271 <emphasis role="comment">*/</emphasis>
00272 <emphasis role="preprocessor">#define&#32;l_inspectstat(stat,what)&#32;&#32;\</emphasis>
00273 <emphasis role="preprocessor">&#32;&#32;&#32;if&#32;(WIFEXITED(stat))&#32;{&#32;stat&#32;=&#32;WEXITSTATUS(stat);&#32;}&#32;\</emphasis>
00274 <emphasis role="preprocessor">&#32;&#32;&#32;else&#32;if&#32;(WIFSIGNALED(stat))&#32;{&#32;stat&#32;=&#32;WTERMSIG(stat);&#32;what&#32;=&#32;&quot;signal&quot;;&#32;}</emphasis>
00275 
00276 <emphasis role="preprocessor">#else</emphasis>
00277 
<anchor xml:id="_lauxlib_8c_source_1l00278"/><link linkend="_lauxlib_8c_1a5dbc30b9986c3aeb0834ffcd615acb45">00278</link> <emphasis role="preprocessor">#define&#32;l_inspectstat(stat,what)&#32;&#32;</emphasis><emphasis role="comment">/*&#32;no&#32;op&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
00279 
00280 <emphasis role="preprocessor">#endif</emphasis>
00281 
00282 <emphasis role="preprocessor">#endif&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis><emphasis role="comment">/*&#32;}&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
00283 
00284 
<anchor xml:id="_lauxlib_8c_source_1l00285"/><link linkend="_lauxlib_8h_1a2e009e523534f5ad087e7834e711b781">00285</link> <link linkend="_luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95">LUALIB_API</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lauxlib_8c_1a3db3f3a0c7de522b5e494c3ad06186d8">luaL_execresult</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<emphasis role="keywordtype">int</emphasis>&#32;stat)&#32;{
00286 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*what&#32;=&#32;<emphasis role="stringliteral">&quot;exit&quot;</emphasis>;&#32;&#32;<emphasis role="comment">/*&#32;type&#32;of&#32;termination&#32;*/</emphasis>
00287 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stat&#32;!=&#32;0&#32;&amp;&amp;&#32;errno&#32;!=&#32;0)&#32;&#32;<emphasis role="comment">/*&#32;error&#32;with&#32;an&#32;&apos;errno&apos;?&#32;*/</emphasis>
00288 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_lauxlib_8c_1a86309080a5d45b232bcc240b45d06942">luaL_fileresult</link>(L,&#32;0,&#32;NULL);
00289 &#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00290 &#32;&#32;&#32;&#32;<link linkend="_lauxlib_8c_1a5dbc30b9986c3aeb0834ffcd615acb45">l_inspectstat</link>(stat,&#32;what);&#32;&#32;<emphasis role="comment">/*&#32;interpret&#32;result&#32;*/</emphasis>
00291 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(*what&#32;==&#32;<emphasis role="charliteral">&apos;e&apos;</emphasis>&#32;&amp;&amp;&#32;stat&#32;==&#32;0)&#32;&#32;<emphasis role="comment">/*&#32;successful&#32;termination?&#32;*/</emphasis>
00292 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lapi_8c_1a56bbb7479265e38da2e2596e6ec25faa">lua_pushboolean</link>(L,&#32;1);
00293 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
00294 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lauxlib_8h_1a8666135f7a1412f5eaa14857aec279f0">luaL_pushfail</link>(L);
00295 &#32;&#32;&#32;&#32;<link linkend="_lapi_8c_1a771d300f2e64b2197d1df9bf31660ebf">lua_pushstring</link>(L,&#32;what);
00296 &#32;&#32;&#32;&#32;<link linkend="_lapi_8c_1adcec46ff05dfee9a3c4c05828b40c213">lua_pushinteger</link>(L,&#32;stat);
00297 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;3;&#32;&#32;<emphasis role="comment">/*&#32;return&#32;true/fail,what,code&#32;*/</emphasis>
00298 &#32;&#32;}
00299 }
00300 
00301 <emphasis role="comment">/*&#32;}======================================================&#32;*/</emphasis>
00302 
00303 
00304 
00305 <emphasis role="comment">/*</emphasis>
00306 <emphasis role="comment">**&#32;{======================================================</emphasis>
00307 <emphasis role="comment">**&#32;Userdata&apos;s&#32;metatable&#32;manipulation</emphasis>
00308 <emphasis role="comment">**&#32;=======================================================</emphasis>
00309 <emphasis role="comment">*/</emphasis>
00310 
<anchor xml:id="_lauxlib_8c_source_1l00311"/><link linkend="_lauxlib_8h_1a0e9e032108e7aedc05836b0c1d72a0fa">00311</link> <link linkend="_luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95">LUALIB_API</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lauxlib_8c_1a2664eb7bcc85bbf6eeded2a81cf09b01">luaL_newmetatable</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*tname)&#32;{
00312 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lauxlib_8h_1a201407aa41ff74577c67308372a130d9">luaL_getmetatable</link>(L,&#32;tname)&#32;!=&#32;<link linkend="_lua_8h_1ae38a6fb8c687b8bfab211b7675a695ef">LUA_TNIL</link>)&#32;&#32;<emphasis role="comment">/*&#32;name&#32;already&#32;in&#32;use?&#32;*/</emphasis>
00313 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;&#32;&#32;<emphasis role="comment">/*&#32;leave&#32;previous&#32;value&#32;on&#32;top,&#32;but&#32;return&#32;0&#32;*/</emphasis>
00314 &#32;&#32;<link linkend="_lua_8h_1abb8eae2164badeafdb037bc1e03cc822">lua_pop</link>(L,&#32;1);
00315 &#32;&#32;<link linkend="_lapi_8c_1a7f93e3baf3101cad59ec61b7744a55d8">lua_createtable</link>(L,&#32;0,&#32;2);&#32;&#32;<emphasis role="comment">/*&#32;create&#32;metatable&#32;*/</emphasis>
00316 &#32;&#32;<link linkend="_lapi_8c_1a771d300f2e64b2197d1df9bf31660ebf">lua_pushstring</link>(L,&#32;tname);
00317 &#32;&#32;<link linkend="_lapi_8c_1a3f2f542ee6728d82e51b1c302f9606df">lua_setfield</link>(L,&#32;-2,&#32;<emphasis role="stringliteral">&quot;__name&quot;</emphasis>);&#32;&#32;<emphasis role="comment">/*&#32;metatable.__name&#32;=&#32;tname&#32;*/</emphasis>
00318 &#32;&#32;<link linkend="_lapi_8c_1a602f61a9b583d69dc1c72c8970bd65e8">lua_pushvalue</link>(L,&#32;-1);
00319 &#32;&#32;<link linkend="_lapi_8c_1a3f2f542ee6728d82e51b1c302f9606df">lua_setfield</link>(L,&#32;<link linkend="_lua_8h_1a3524c2bbc8fcf847dc083246b62945dd">LUA_REGISTRYINDEX</link>,&#32;tname);&#32;&#32;<emphasis role="comment">/*&#32;registry.name&#32;=&#32;metatable&#32;*/</emphasis>
00320 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
00321 }
00322 
00323 
<anchor xml:id="_lauxlib_8c_source_1l00324"/><link linkend="_lauxlib_8h_1a4ef6497609d8cb52f8f4dc0ec489bb7a">00324</link> <link linkend="_luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95">LUALIB_API</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_lauxlib_8c_1ae3907fc11c3e2af69f00ab4a37872cae">luaL_setmetatable</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*tname)&#32;{
00325 &#32;&#32;<link linkend="_lauxlib_8h_1a201407aa41ff74577c67308372a130d9">luaL_getmetatable</link>(L,&#32;tname);
00326 &#32;&#32;<link linkend="_lapi_8c_1a15719ea4119bdf5b3f2a406534431a7e">lua_setmetatable</link>(L,&#32;-2);
00327 }
00328 
00329 
<anchor xml:id="_lauxlib_8c_source_1l00330"/><link linkend="_lauxlib_8h_1ab40f618f7e65d9af23e01f3924c3d6c8">00330</link> <link linkend="_luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95">LUALIB_API</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*<link linkend="_lauxlib_8c_1af2ad56ae788ac3a59b4e0e29852ab460">luaL_testudata</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<emphasis role="keywordtype">int</emphasis>&#32;ud,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*tname)&#32;{
00331 &#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;*p&#32;=&#32;<link linkend="_lapi_8c_1a0444ddf13e5618bca969e4b3b47bc0cc">lua_touserdata</link>(L,&#32;ud);
00332 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(p&#32;!=&#32;NULL)&#32;{&#32;&#32;<emphasis role="comment">/*&#32;value&#32;is&#32;a&#32;userdata?&#32;*/</emphasis>
00333 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lapi_8c_1a4caa9ca5e47a30bd45e33d83bf2d6d6e">lua_getmetatable</link>(L,&#32;ud))&#32;{&#32;&#32;<emphasis role="comment">/*&#32;does&#32;it&#32;have&#32;a&#32;metatable?&#32;*/</emphasis>
00334 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lauxlib_8h_1a201407aa41ff74577c67308372a130d9">luaL_getmetatable</link>(L,&#32;tname);&#32;&#32;<emphasis role="comment">/*&#32;get&#32;correct&#32;metatable&#32;*/</emphasis>
00335 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_lapi_8c_1ace66ea78ced7fda0b367f45d09d10d83">lua_rawequal</link>(L,&#32;-1,&#32;-2))&#32;&#32;<emphasis role="comment">/*&#32;not&#32;the&#32;same?&#32;*/</emphasis>
00336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p&#32;=&#32;NULL;&#32;&#32;<emphasis role="comment">/*&#32;value&#32;is&#32;a&#32;userdata&#32;with&#32;wrong&#32;metatable&#32;*/</emphasis>
00337 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lua_8h_1abb8eae2164badeafdb037bc1e03cc822">lua_pop</link>(L,&#32;2);&#32;&#32;<emphasis role="comment">/*&#32;remove&#32;both&#32;metatables&#32;*/</emphasis>
00338 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;p;
00339 &#32;&#32;&#32;&#32;}
00340 &#32;&#32;}
00341 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;NULL;&#32;&#32;<emphasis role="comment">/*&#32;value&#32;is&#32;not&#32;a&#32;userdata&#32;with&#32;a&#32;metatable&#32;*/</emphasis>
00342 }
00343 
00344 
<anchor xml:id="_lauxlib_8c_source_1l00345"/><link linkend="_lauxlib_8h_1aed8d8e4f3b95c6bcac246ec9895027b1">00345</link> <link linkend="_luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95">LUALIB_API</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*<link linkend="_lauxlib_8c_1a1799d8a48445b6f9d39462d8f1b0285a">luaL_checkudata</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<emphasis role="keywordtype">int</emphasis>&#32;ud,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*tname)&#32;{
00346 &#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;*p&#32;=&#32;<link linkend="_lauxlib_8c_1af2ad56ae788ac3a59b4e0e29852ab460">luaL_testudata</link>(L,&#32;ud,&#32;tname);
00347 &#32;&#32;<link linkend="_lauxlib_8h_1ad13737dbd230fffc0b9925b1c728c58e">luaL_argexpected</link>(L,&#32;p&#32;!=&#32;NULL,&#32;ud,&#32;tname);
00348 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;p;
00349 }
00350 
00351 <emphasis role="comment">/*&#32;}======================================================&#32;*/</emphasis>
00352 
00353 
00354 <emphasis role="comment">/*</emphasis>
00355 <emphasis role="comment">**&#32;{======================================================</emphasis>
00356 <emphasis role="comment">**&#32;Argument&#32;check&#32;functions</emphasis>
00357 <emphasis role="comment">**&#32;=======================================================</emphasis>
00358 <emphasis role="comment">*/</emphasis>
00359 
<anchor xml:id="_lauxlib_8c_source_1l00360"/><link linkend="_lauxlib_8h_1ae4a7f494cc400b09f5cbccfc3f8187c5">00360</link> <link linkend="_luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95">LUALIB_API</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lauxlib_8c_1a7a3959469b5643d9ea2313eb11a3946f">luaL_checkoption</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<emphasis role="keywordtype">int</emphasis>&#32;arg,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*def,
00361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<emphasis role="keyword">const</emphasis>&#32;lst[])&#32;{
00362 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*name&#32;=&#32;(def)&#32;?&#32;<link linkend="_lauxlib_8h_1a732bc5882c4a5da46b236649ab6db47b">luaL_optstring</link>(L,&#32;arg,&#32;def)&#32;:
00363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lauxlib_8h_1ad9917d22c79651fdd73d42c146b5056f">luaL_checkstring</link>(L,&#32;arg);
00364 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
00365 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i=0;&#32;lst[i];&#32;i++)
00366 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(strcmp(lst[i],&#32;name)&#32;==&#32;0)
00367 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;i;
00368 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_lauxlib_8c_1ac607576dd107a3120cd51948989f1ed2">luaL_argerror</link>(L,&#32;arg,
00369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lapi_8c_1ab190c226d38b289e6ca57683a9d4e0f0">lua_pushfstring</link>(L,&#32;<emphasis role="stringliteral">&quot;invalid&#32;option&#32;&apos;%s&apos;&quot;</emphasis>,&#32;name));
00370 }
00371 
00372 
00373 <emphasis role="comment">/*</emphasis>
00374 <emphasis role="comment">**&#32;Ensures&#32;the&#32;stack&#32;has&#32;at&#32;least&#32;&apos;space&apos;&#32;extra&#32;slots,&#32;raising&#32;an&#32;error</emphasis>
00375 <emphasis role="comment">**&#32;if&#32;it&#32;cannot&#32;fulfill&#32;the&#32;request.&#32;(The&#32;error&#32;handling&#32;needs&#32;a&#32;few</emphasis>
00376 <emphasis role="comment">**&#32;extra&#32;slots&#32;to&#32;format&#32;the&#32;error&#32;message.&#32;In&#32;case&#32;of&#32;an&#32;error&#32;without</emphasis>
00377 <emphasis role="comment">**&#32;this&#32;extra&#32;space,&#32;Lua&#32;will&#32;generate&#32;the&#32;same&#32;&apos;stack&#32;overflow&apos;&#32;error,</emphasis>
00378 <emphasis role="comment">**&#32;but&#32;without&#32;&apos;msg&apos;.)</emphasis>
00379 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lauxlib_8c_source_1l00380"/><link linkend="_lauxlib_8h_1a724f5a5aeee97c0b40948c8bca91341c">00380</link> <link linkend="_luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95">LUALIB_API</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_lauxlib_8c_1a7c46517055e0e8cb25e61b959709083a">luaL_checkstack</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<emphasis role="keywordtype">int</emphasis>&#32;space,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*msg)&#32;{
00381 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_lapi_8c_1a1d762b92d5d82d6fa9f54ccf5c89d6a2">lua_checkstack</link>(L,&#32;space))&#32;{
00382 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(msg)
00383 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lauxlib_8c_1a6c51d83d29244779392551388913e08a">luaL_error</link>(L,&#32;<emphasis role="stringliteral">&quot;stack&#32;overflow&#32;(%s)&quot;</emphasis>,&#32;msg);
00384 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
00385 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lauxlib_8c_1a6c51d83d29244779392551388913e08a">luaL_error</link>(L,&#32;<emphasis role="stringliteral">&quot;stack&#32;overflow&quot;</emphasis>);
00386 &#32;&#32;}
00387 }
00388 
00389 
<anchor xml:id="_lauxlib_8c_source_1l00390"/><link linkend="_lauxlib_8h_1ae9c9f80f66ca2ff9567e4db4d1d704e3">00390</link> <link linkend="_luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95">LUALIB_API</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_lauxlib_8c_1a0f8f78c4edc5cbf890690b3cf9615dc8">luaL_checktype</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<emphasis role="keywordtype">int</emphasis>&#32;arg,&#32;<emphasis role="keywordtype">int</emphasis>&#32;t)&#32;{
00391 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lapi_8c_1a652b273947f0656686f998d8e90cd3ea">lua_type</link>(L,&#32;arg)&#32;!=&#32;t)
00392 &#32;&#32;&#32;&#32;<link linkend="_lauxlib_8c_1ab8e946260debec8d4bbc714b76a1613b">tag_error</link>(L,&#32;arg,&#32;t);
00393 }
00394 
00395 
<anchor xml:id="_lauxlib_8c_source_1l00396"/><link linkend="_lauxlib_8h_1a21ba19f50ce2a499224d2710f6fa7728">00396</link> <link linkend="_luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95">LUALIB_API</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_lauxlib_8c_1a8ebfe706b773eaaf50283e6583d4642e">luaL_checkany</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<emphasis role="keywordtype">int</emphasis>&#32;arg)&#32;{
00397 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lapi_8c_1a652b273947f0656686f998d8e90cd3ea">lua_type</link>(L,&#32;arg)&#32;==&#32;<link linkend="_lua_8h_1a39c27eef097c704eee3536906dea5380">LUA_TNONE</link>)
00398 &#32;&#32;&#32;&#32;<link linkend="_lauxlib_8c_1ac607576dd107a3120cd51948989f1ed2">luaL_argerror</link>(L,&#32;arg,&#32;<emphasis role="stringliteral">&quot;value&#32;expected&quot;</emphasis>);
00399 }
00400 
00401 
<anchor xml:id="_lauxlib_8c_source_1l00402"/><link linkend="_lauxlib_8h_1aba7169b56524dab1c9f67f71b0417d86">00402</link> <link linkend="_luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95">LUALIB_API</link>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="_lauxlib_8c_1a79405166c5a94624ebe0427e6b0c07e0">luaL_checklstring</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<emphasis role="keywordtype">int</emphasis>&#32;arg,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;*len)&#32;{
00403 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*s&#32;=&#32;<link linkend="_lapi_8c_1a3fc7dbcac3f2610f3d687ec15343bd3f">lua_tolstring</link>(L,&#32;arg,&#32;len);
00404 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!s)&#32;<link linkend="_lauxlib_8c_1ab8e946260debec8d4bbc714b76a1613b">tag_error</link>(L,&#32;arg,&#32;<link linkend="_lua_8h_1a57de20d87bb5131a3159f2bd52e3fab6">LUA_TSTRING</link>);
00405 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;s;
00406 }
00407 
00408 
<anchor xml:id="_lauxlib_8c_source_1l00409"/><link linkend="_lauxlib_8h_1a3340783871347b1c95cf4ede72d5c67b">00409</link> <link linkend="_luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95">LUALIB_API</link>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="_lauxlib_8c_1a78e227b41b881001dc0e95a263690816">luaL_optlstring</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<emphasis role="keywordtype">int</emphasis>&#32;arg,
00410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*def,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;*len)&#32;{
00411 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lua_8h_1af51702bb75a31bb4a279953ee386d533">lua_isnoneornil</link>(L,&#32;arg))&#32;{
00412 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(len)
00413 &#32;&#32;&#32;&#32;&#32;&#32;*len&#32;=&#32;(def&#32;?&#32;strlen(def)&#32;:&#32;0);
00414 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;def;
00415 &#32;&#32;}
00416 &#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_lauxlib_8c_1a79405166c5a94624ebe0427e6b0c07e0">luaL_checklstring</link>(L,&#32;arg,&#32;len);
00417 }
00418 
00419 
<anchor xml:id="_lauxlib_8c_source_1l00420"/><link linkend="_lauxlib_8h_1ac0919af2e419b4b9e86d6ddb355cec65">00420</link> <link linkend="_luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95">LUALIB_API</link>&#32;<link linkend="_lua_8h_1af0a6ed3b852d680769cfc410a0672172">lua_Number</link>&#32;<link linkend="_lauxlib_8c_1a9f2c941bb5eb7d3a7746f35c4fe3cced">luaL_checknumber</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<emphasis role="keywordtype">int</emphasis>&#32;arg)&#32;{
00421 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;isnum;
00422 &#32;&#32;<link linkend="_lua_8h_1af0a6ed3b852d680769cfc410a0672172">lua_Number</link>&#32;d&#32;=&#32;<link linkend="_lapi_8c_1a375da41304604b0cba0b8c798499e673">lua_tonumberx</link>(L,&#32;arg,&#32;&amp;isnum);
00423 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!isnum)
00424 &#32;&#32;&#32;&#32;<link linkend="_lauxlib_8c_1ab8e946260debec8d4bbc714b76a1613b">tag_error</link>(L,&#32;arg,&#32;<link linkend="_lua_8h_1a7f62ecb240cb38da9c8a53b41fe21ed9">LUA_TNUMBER</link>);
00425 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;d;
00426 }
00427 
00428 
<anchor xml:id="_lauxlib_8c_source_1l00429"/><link linkend="_lauxlib_8h_1aa26a2aaafd22fe5c02c84eb9a7098fd8">00429</link> <link linkend="_luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95">LUALIB_API</link>&#32;<link linkend="_lua_8h_1af0a6ed3b852d680769cfc410a0672172">lua_Number</link>&#32;<link linkend="_lauxlib_8c_1afa696696945ee6215c0033656ee64e97">luaL_optnumber</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<emphasis role="keywordtype">int</emphasis>&#32;arg,&#32;<link linkend="_lua_8h_1af0a6ed3b852d680769cfc410a0672172">lua_Number</link>&#32;def)&#32;{
00430 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_lauxlib_8h_1aca033280b0176012ef290131876f706e">luaL_opt</link>(L,&#32;<link linkend="_lauxlib_8c_1a9f2c941bb5eb7d3a7746f35c4fe3cced">luaL_checknumber</link>,&#32;arg,&#32;def);
00431 }
00432 
00433 
<anchor xml:id="_lauxlib_8c_source_1l00434"/><link linkend="_lauxlib_8c_1ac900510f548ea0ea6d53358d2aedd100">00434</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_lauxlib_8c_1ac900510f548ea0ea6d53358d2aedd100">interror</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<emphasis role="keywordtype">int</emphasis>&#32;arg)&#32;{
00435 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lapi_8c_1a99451f234bf085c9c46c3d17a5aef905">lua_isnumber</link>(L,&#32;arg))
00436 &#32;&#32;&#32;&#32;<link linkend="_lauxlib_8c_1ac607576dd107a3120cd51948989f1ed2">luaL_argerror</link>(L,&#32;arg,&#32;<emphasis role="stringliteral">&quot;number&#32;has&#32;no&#32;integer&#32;representation&quot;</emphasis>);
00437 &#32;&#32;<emphasis role="keywordflow">else</emphasis>
00438 &#32;&#32;&#32;&#32;<link linkend="_lauxlib_8c_1ab8e946260debec8d4bbc714b76a1613b">tag_error</link>(L,&#32;arg,&#32;<link linkend="_lua_8h_1a7f62ecb240cb38da9c8a53b41fe21ed9">LUA_TNUMBER</link>);
00439 }
00440 
00441 
<anchor xml:id="_lauxlib_8c_source_1l00442"/><link linkend="_lauxlib_8h_1a4fab48acb62fbf5344ff26e482afaab2">00442</link> <link linkend="_luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95">LUALIB_API</link>&#32;<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;<link linkend="_lauxlib_8c_1aa15bea412c49bfdee1f3dbff096ce7d2">luaL_checkinteger</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<emphasis role="keywordtype">int</emphasis>&#32;arg)&#32;{
00443 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;isnum;
00444 &#32;&#32;<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;d&#32;=&#32;<link linkend="_lapi_8c_1af81c9a68425546e1f8c6354728c95170">lua_tointegerx</link>(L,&#32;arg,&#32;&amp;isnum);
00445 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!isnum)&#32;{
00446 &#32;&#32;&#32;&#32;<link linkend="_lauxlib_8c_1ac900510f548ea0ea6d53358d2aedd100">interror</link>(L,&#32;arg);
00447 &#32;&#32;}
00448 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;d;
00449 }
00450 
00451 
<anchor xml:id="_lauxlib_8c_source_1l00452"/><link linkend="_lauxlib_8h_1aeb7f0d9ff0b8244215c2a5950a168bb8">00452</link> <link linkend="_luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95">LUALIB_API</link>&#32;<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;<link linkend="_lauxlib_8c_1ab10ff110a5ba19b4385947de7834ee3c">luaL_optinteger</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<emphasis role="keywordtype">int</emphasis>&#32;arg,
00453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;def)&#32;{
00454 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_lauxlib_8h_1aca033280b0176012ef290131876f706e">luaL_opt</link>(L,&#32;<link linkend="_lauxlib_8c_1aa15bea412c49bfdee1f3dbff096ce7d2">luaL_checkinteger</link>,&#32;arg,&#32;def);
00455 }
00456 
00457 <emphasis role="comment">/*&#32;}======================================================&#32;*/</emphasis>
00458 
00459 
00460 <emphasis role="comment">/*</emphasis>
00461 <emphasis role="comment">**&#32;{======================================================</emphasis>
00462 <emphasis role="comment">**&#32;Generic&#32;Buffer&#32;manipulation</emphasis>
00463 <emphasis role="comment">**&#32;=======================================================</emphasis>
00464 <emphasis role="comment">*/</emphasis>
00465 
00466 <emphasis role="comment">/*&#32;userdata&#32;to&#32;box&#32;arbitrary&#32;data&#32;*/</emphasis>
<anchor xml:id="_lauxlib_8c_source_1l00467"/><link linkend="_struct_u_box">00467</link> <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_u_box">UBox</link>&#32;{
<anchor xml:id="_lauxlib_8c_source_1l00468"/><link linkend="_struct_u_box_1af06c82a131c92d169d94c8602c64f757">00468</link> &#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;*<link linkend="_struct_u_box_1af06c82a131c92d169d94c8602c64f757">box</link>;
<anchor xml:id="_lauxlib_8c_source_1l00469"/><link linkend="_struct_u_box_1a2cbae7e4bd552155acfe6bd81683e50f">00469</link> &#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_struct_u_box_1a2cbae7e4bd552155acfe6bd81683e50f">bsize</link>;
<anchor xml:id="_lauxlib_8c_source_1l00470"/><link linkend="_lauxlib_8c_1acbefa8abd6262ef921e53fb16ae1bcd5">00470</link> }&#32;<link linkend="_lauxlib_8c_1acbefa8abd6262ef921e53fb16ae1bcd5">UBox</link>;
00471 
00472 
<anchor xml:id="_lauxlib_8c_source_1l00473"/><link linkend="_lauxlib_8c_1acdf7f3169e55f9c8bd3d314358a9e778">00473</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*<link linkend="_lauxlib_8c_1acdf7f3169e55f9c8bd3d314358a9e778">resizebox</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<emphasis role="keywordtype">int</emphasis>&#32;idx,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;newsize)&#32;{
00474 &#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;*ud;
00475 &#32;&#32;<link linkend="_lua_8h_1a2fee348bffcc82b15c626b27f66a748b">lua_Alloc</link>&#32;allocf&#32;=&#32;<link linkend="_lapi_8c_1a3dbff8747b32b799cf63603c46da06cc">lua_getallocf</link>(L,&#32;&amp;ud);
00476 &#32;&#32;<link linkend="_struct_u_box">UBox</link>&#32;*box&#32;=&#32;(<link linkend="_struct_u_box">UBox</link>&#32;*)<link linkend="_lapi_8c_1a0444ddf13e5618bca969e4b3b47bc0cc">lua_touserdata</link>(L,&#32;idx);
00477 &#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;*temp&#32;=&#32;allocf(ud,&#32;box-&gt;<link linkend="_struct_u_box_1af06c82a131c92d169d94c8602c64f757">box</link>,&#32;box-&gt;<link linkend="_struct_u_box_1a2cbae7e4bd552155acfe6bd81683e50f">bsize</link>,&#32;newsize);
00478 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(temp&#32;==&#32;NULL&#32;&amp;&amp;&#32;newsize&#32;&gt;&#32;0)&#32;{&#32;&#32;<emphasis role="comment">/*&#32;allocation&#32;error?&#32;*/</emphasis>
00479 &#32;&#32;&#32;&#32;<link linkend="_lua_8h_1a47854189a679002ed743ebbcb30b1b26">lua_pushliteral</link>(L,&#32;<emphasis role="stringliteral">&quot;not&#32;enough&#32;memory&quot;</emphasis>);
00480 &#32;&#32;&#32;&#32;<link linkend="_lapi_8c_1a6ba7b91143fe8a03910420d800de8e97">lua_error</link>(L);&#32;&#32;<emphasis role="comment">/*&#32;raise&#32;a&#32;memory&#32;error&#32;*/</emphasis>
00481 &#32;&#32;}
00482 &#32;&#32;box-&gt;<link linkend="_struct_u_box_1af06c82a131c92d169d94c8602c64f757">box</link>&#32;=&#32;temp;
00483 &#32;&#32;box-&gt;<link linkend="_struct_u_box_1a2cbae7e4bd552155acfe6bd81683e50f">bsize</link>&#32;=&#32;newsize;
00484 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;temp;
00485 }
00486 
00487 
<anchor xml:id="_lauxlib_8c_source_1l00488"/><link linkend="_lauxlib_8c_1a1957766835de815798e07848d3d14810">00488</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lauxlib_8c_1a1957766835de815798e07848d3d14810">boxgc</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L)&#32;{
00489 &#32;&#32;<link linkend="_lauxlib_8c_1acdf7f3169e55f9c8bd3d314358a9e778">resizebox</link>(L,&#32;1,&#32;0);
00490 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
00491 }
00492 
00493 
<anchor xml:id="_lauxlib_8c_source_1l00494"/><link linkend="_lauxlib_8c_1a73790a7785f0b5ecc0a57e8d9d2fbbcf">00494</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structlua_l___reg">luaL_Reg</link>&#32;<link linkend="_lauxlib_8c_1a73790a7785f0b5ecc0a57e8d9d2fbbcf">boxmt</link>[]&#32;=&#32;{&#32;&#32;<emphasis role="comment">/*&#32;box&#32;metamethods&#32;*/</emphasis>
00495 &#32;&#32;{<emphasis role="stringliteral">&quot;__gc&quot;</emphasis>,&#32;<link linkend="_lauxlib_8c_1a1957766835de815798e07848d3d14810">boxgc</link>},
00496 &#32;&#32;{<emphasis role="stringliteral">&quot;__close&quot;</emphasis>,&#32;<link linkend="_lauxlib_8c_1a1957766835de815798e07848d3d14810">boxgc</link>},
00497 &#32;&#32;{NULL,&#32;NULL}
00498 };
00499 
00500 
<anchor xml:id="_lauxlib_8c_source_1l00501"/><link linkend="_lauxlib_8c_1a22714b3538a1ad6943014db449d4ed19">00501</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_lauxlib_8c_1a22714b3538a1ad6943014db449d4ed19">newbox</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L)&#32;{
00502 &#32;&#32;<link linkend="_struct_u_box">UBox</link>&#32;*box&#32;=&#32;(<link linkend="_struct_u_box">UBox</link>&#32;*)<link linkend="_lapi_8c_1a9c09a58b86c71e997d7ccabb67f18c12">lua_newuserdatauv</link>(L,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_struct_u_box">UBox</link>),&#32;0);
00503 &#32;&#32;box-&gt;<link linkend="_struct_u_box_1af06c82a131c92d169d94c8602c64f757">box</link>&#32;=&#32;NULL;
00504 &#32;&#32;box-&gt;<link linkend="_struct_u_box_1a2cbae7e4bd552155acfe6bd81683e50f">bsize</link>&#32;=&#32;0;
00505 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lauxlib_8c_1a2664eb7bcc85bbf6eeded2a81cf09b01">luaL_newmetatable</link>(L,&#32;<emphasis role="stringliteral">&quot;_UBOX*&quot;</emphasis>))&#32;&#32;<emphasis role="comment">/*&#32;creating&#32;metatable?&#32;*/</emphasis>
00506 &#32;&#32;&#32;&#32;<link linkend="_lauxlib_8c_1a4cab22d0cb403fa6b94f2542f4303096">luaL_setfuncs</link>(L,&#32;<link linkend="_lauxlib_8c_1a73790a7785f0b5ecc0a57e8d9d2fbbcf">boxmt</link>,&#32;0);&#32;&#32;<emphasis role="comment">/*&#32;set&#32;its&#32;metamethods&#32;*/</emphasis>
00507 &#32;&#32;<link linkend="_lapi_8c_1a15719ea4119bdf5b3f2a406534431a7e">lua_setmetatable</link>(L,&#32;-2);
00508 }
00509 
00510 
00511 <emphasis role="comment">/*</emphasis>
00512 <emphasis role="comment">**&#32;check&#32;whether&#32;buffer&#32;is&#32;using&#32;a&#32;userdata&#32;on&#32;the&#32;stack&#32;as&#32;a&#32;temporary</emphasis>
00513 <emphasis role="comment">**&#32;buffer</emphasis>
00514 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lauxlib_8c_source_1l00515"/><link linkend="_lauxlib_8c_1a58cb6b4ecea4192420347c2edc9e0ea0">00515</link> <emphasis role="preprocessor">#define&#32;buffonstack(B)&#32;&#32;((B)-&gt;b&#32;!=&#32;(B)-&gt;init.b)</emphasis>
00516 
00517 
00518 <emphasis role="comment">/*</emphasis>
00519 <emphasis role="comment">**&#32;Compute&#32;new&#32;size&#32;for&#32;buffer&#32;&apos;B&apos;,&#32;enough&#32;to&#32;accommodate&#32;extra&#32;&apos;sz&apos;</emphasis>
00520 <emphasis role="comment">**&#32;bytes.</emphasis>
00521 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lauxlib_8c_source_1l00522"/><link linkend="_lauxlib_8c_1a5a09a1507f8338fd07d77992e200c5d2">00522</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_lauxlib_8c_1a5a09a1507f8338fd07d77992e200c5d2">newbuffsize</link>&#32;(<link linkend="_structlua_l___buffer">luaL_Buffer</link>&#32;*B,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;sz)&#32;{
00523 &#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;newsize&#32;=&#32;B-&gt;<link linkend="_structlua_l___buffer_1a854352f53b148adc24983a58a1866d66">size</link>&#32;*&#32;2;&#32;&#32;<emphasis role="comment">/*&#32;double&#32;buffer&#32;size&#32;*/</emphasis>
00524 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lauxlib_8c_1aa927c7bf177c162feda3483e1e972b3a">MAX_SIZET</link>&#32;-&#32;sz&#32;&lt;&#32;B-&gt;n)&#32;&#32;<emphasis role="comment">/*&#32;overflow&#32;in&#32;(B-&gt;n&#32;+&#32;sz)?&#32;*/</emphasis>
00525 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_lauxlib_8c_1a6c51d83d29244779392551388913e08a">luaL_error</link>(B-&gt;<link linkend="_structlua_l___buffer_1a62f94dfc0036bec0c14106c2f15caf3e">L</link>,&#32;<emphasis role="stringliteral">&quot;buffer&#32;too&#32;large&quot;</emphasis>);
00526 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(newsize&#32;&lt;&#32;B-&gt;n&#32;+&#32;sz)&#32;&#32;<emphasis role="comment">/*&#32;double&#32;is&#32;not&#32;big&#32;enough?&#32;*/</emphasis>
00527 &#32;&#32;&#32;&#32;newsize&#32;=&#32;B-&gt;<link linkend="_structlua_l___buffer_1a3d05cf6aa68b03e254d70afbe869e305">n</link>&#32;+&#32;sz;
00528 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;newsize;
00529 }
00530 
00531 
00532 <emphasis role="comment">/*</emphasis>
00533 <emphasis role="comment">**&#32;Returns&#32;a&#32;pointer&#32;to&#32;a&#32;free&#32;area&#32;with&#32;at&#32;least&#32;&apos;sz&apos;&#32;bytes&#32;in&#32;buffer</emphasis>
00534 <emphasis role="comment">**&#32;&apos;B&apos;.&#32;&apos;boxidx&apos;&#32;is&#32;the&#32;relative&#32;position&#32;in&#32;the&#32;stack&#32;where&#32;the</emphasis>
00535 <emphasis role="comment">**&#32;buffer&apos;s&#32;box&#32;is&#32;or&#32;should&#32;be.</emphasis>
00536 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lauxlib_8c_source_1l00537"/><link linkend="_lauxlib_8c_1a96b72c2bee2d49148b93676ea09818a5">00537</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="_lauxlib_8c_1a96b72c2bee2d49148b93676ea09818a5">prepbuffsize</link>&#32;(<link linkend="_structlua_l___buffer">luaL_Buffer</link>&#32;*B,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;sz,&#32;<emphasis role="keywordtype">int</emphasis>&#32;boxidx)&#32;{
00538 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(B-&gt;<link linkend="_structlua_l___buffer_1a854352f53b148adc24983a58a1866d66">size</link>&#32;-&#32;B-&gt;<link linkend="_structlua_l___buffer_1a3d05cf6aa68b03e254d70afbe869e305">n</link>&#32;&gt;=&#32;sz)&#32;&#32;<emphasis role="comment">/*&#32;enough&#32;space?&#32;*/</emphasis>
00539 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;B-&gt;<link linkend="_structlua_l___buffer_1aafe80d64508a05a94be4d07b648244d0">b</link>&#32;+&#32;B-&gt;<link linkend="_structlua_l___buffer_1a3d05cf6aa68b03e254d70afbe869e305">n</link>;
00540 &#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00541 &#32;&#32;&#32;&#32;<link linkend="_structlua___state">lua_State</link>&#32;*L&#32;=&#32;B-&gt;<link linkend="_structlua_l___buffer_1a62f94dfc0036bec0c14106c2f15caf3e">L</link>;
00542 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;*newbuff;
00543 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;newsize&#32;=&#32;<link linkend="_lauxlib_8c_1a5a09a1507f8338fd07d77992e200c5d2">newbuffsize</link>(B,&#32;sz);
00544 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;create&#32;larger&#32;buffer&#32;*/</emphasis>
00545 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lauxlib_8c_1a58cb6b4ecea4192420347c2edc9e0ea0">buffonstack</link>(B))&#32;&#32;<emphasis role="comment">/*&#32;buffer&#32;already&#32;has&#32;a&#32;box?&#32;*/</emphasis>
00546 &#32;&#32;&#32;&#32;&#32;&#32;newbuff&#32;=&#32;(<emphasis role="keywordtype">char</emphasis>&#32;*)<link linkend="_lauxlib_8c_1acdf7f3169e55f9c8bd3d314358a9e778">resizebox</link>(L,&#32;boxidx,&#32;newsize);&#32;&#32;<emphasis role="comment">/*&#32;resize&#32;it&#32;*/</emphasis>
00547 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{&#32;&#32;<emphasis role="comment">/*&#32;no&#32;box&#32;yet&#32;*/</emphasis>
00548 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lapi_8c_1a1b4cd0d80f51e5545a97ca6c28c03c50">lua_pushnil</link>(L);&#32;&#32;<emphasis role="comment">/*&#32;reserve&#32;slot&#32;for&#32;final&#32;result&#32;*/</emphasis>
00549 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lauxlib_8c_1a22714b3538a1ad6943014db449d4ed19">newbox</link>(L);&#32;&#32;<emphasis role="comment">/*&#32;create&#32;a&#32;new&#32;box&#32;*/</emphasis>
00550 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;move&#32;box&#32;(and&#32;slot)&#32;to&#32;its&#32;intended&#32;position&#32;*/</emphasis>
00551 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lapi_8c_1af680e24129c0e021b4fbb7700cf185dc">lua_rotate</link>(L,&#32;boxidx&#32;-&#32;1,&#32;2);
00552 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lapi_8c_1a5101545bcd4222abe101836b7931bdf9">lua_toclose</link>(L,&#32;boxidx);
00553 &#32;&#32;&#32;&#32;&#32;&#32;newbuff&#32;=&#32;(<emphasis role="keywordtype">char</emphasis>&#32;*)<link linkend="_lauxlib_8c_1acdf7f3169e55f9c8bd3d314358a9e778">resizebox</link>(L,&#32;boxidx,&#32;newsize);
00554 &#32;&#32;&#32;&#32;&#32;&#32;memcpy(newbuff,&#32;B-&gt;<link linkend="_structlua_l___buffer_1aafe80d64508a05a94be4d07b648244d0">b</link>,&#32;B-&gt;<link linkend="_structlua_l___buffer_1a3d05cf6aa68b03e254d70afbe869e305">n</link>&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">char</emphasis>));&#32;&#32;<emphasis role="comment">/*&#32;copy&#32;original&#32;content&#32;*/</emphasis>
00555 &#32;&#32;&#32;&#32;}
00556 &#32;&#32;&#32;&#32;B-&gt;<link linkend="_structlua_l___buffer_1aafe80d64508a05a94be4d07b648244d0">b</link>&#32;=&#32;newbuff;
00557 &#32;&#32;&#32;&#32;B-&gt;<link linkend="_structlua_l___buffer_1a854352f53b148adc24983a58a1866d66">size</link>&#32;=&#32;newsize;
00558 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;newbuff&#32;+&#32;B-&gt;<link linkend="_structlua_l___buffer_1a3d05cf6aa68b03e254d70afbe869e305">n</link>;
00559 &#32;&#32;}
00560 }
00561 
00562 <emphasis role="comment">/*</emphasis>
00563 <emphasis role="comment">**&#32;returns&#32;a&#32;pointer&#32;to&#32;a&#32;free&#32;area&#32;with&#32;at&#32;least&#32;&apos;sz&apos;&#32;bytes</emphasis>
00564 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lauxlib_8c_source_1l00565"/><link linkend="_lauxlib_8h_1a0fb6d10de24960ceed452061b47c2c06">00565</link> <link linkend="_luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95">LUALIB_API</link>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="_lauxlib_8c_1ae695ed340bec54979c499b70d7d29318">luaL_prepbuffsize</link>&#32;(<link linkend="_structlua_l___buffer">luaL_Buffer</link>&#32;*B,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;sz)&#32;{
00566 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_lauxlib_8c_1a96b72c2bee2d49148b93676ea09818a5">prepbuffsize</link>(B,&#32;sz,&#32;-1);
00567 }
00568 
00569 
<anchor xml:id="_lauxlib_8c_source_1l00570"/><link linkend="_lauxlib_8h_1a06fceedb3abb1272566ca22c96e34b95">00570</link> <link linkend="_luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95">LUALIB_API</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_lauxlib_8c_1a0d56993399c45ae61ebb9b448dc30538">luaL_addlstring</link>&#32;(<link linkend="_structlua_l___buffer">luaL_Buffer</link>&#32;*B,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*s,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;l)&#32;{
00571 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(l&#32;&gt;&#32;0)&#32;{&#32;&#32;<emphasis role="comment">/*&#32;avoid&#32;&apos;memcpy&apos;&#32;when&#32;&apos;s&apos;&#32;can&#32;be&#32;NULL&#32;*/</emphasis>
00572 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;*b&#32;=&#32;<link linkend="_lauxlib_8c_1a96b72c2bee2d49148b93676ea09818a5">prepbuffsize</link>(B,&#32;l,&#32;-1);
00573 &#32;&#32;&#32;&#32;memcpy(b,&#32;s,&#32;l&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">char</emphasis>));
00574 &#32;&#32;&#32;&#32;<link linkend="_lauxlib_8h_1a7c0adb7401e0be1a843946cee0556684">luaL_addsize</link>(B,&#32;l);
00575 &#32;&#32;}
00576 }
00577 
00578 
<anchor xml:id="_lauxlib_8c_source_1l00579"/><link linkend="_lauxlib_8h_1ad9c038f6e108e216011aca1801f84f44">00579</link> <link linkend="_luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95">LUALIB_API</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_lauxlib_8c_1aced031f9a3f68375e9f80315933d9a88">luaL_addstring</link>&#32;(<link linkend="_structlua_l___buffer">luaL_Buffer</link>&#32;*B,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*s)&#32;{
00580 &#32;&#32;<link linkend="_lauxlib_8c_1a0d56993399c45ae61ebb9b448dc30538">luaL_addlstring</link>(B,&#32;s,&#32;strlen(s));
00581 }
00582 
00583 
<anchor xml:id="_lauxlib_8c_source_1l00584"/><link linkend="_lauxlib_8h_1aac5dfab9ba0ced4f5ae3b22aa35faffe">00584</link> <link linkend="_luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95">LUALIB_API</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_lauxlib_8c_1a3a1f80033814e2057583a7d24cee23b4">luaL_pushresult</link>&#32;(<link linkend="_structlua_l___buffer">luaL_Buffer</link>&#32;*B)&#32;{
00585 &#32;&#32;<link linkend="_structlua___state">lua_State</link>&#32;*L&#32;=&#32;B-&gt;<link linkend="_structlua_l___buffer_1a62f94dfc0036bec0c14106c2f15caf3e">L</link>;
00586 &#32;&#32;<link linkend="_lapi_8c_1a2c325311534c23450cdf11931a8db0ae">lua_pushlstring</link>(L,&#32;B-&gt;<link linkend="_structlua_l___buffer_1aafe80d64508a05a94be4d07b648244d0">b</link>,&#32;B-&gt;<link linkend="_structlua_l___buffer_1a3d05cf6aa68b03e254d70afbe869e305">n</link>);
00587 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lauxlib_8c_1a58cb6b4ecea4192420347c2edc9e0ea0">buffonstack</link>(B))&#32;{
00588 &#32;&#32;&#32;&#32;<link linkend="_lapi_8c_1a111bd3fa34fe656f415edae5e343e13e">lua_copy</link>(L,&#32;-1,&#32;-3);&#32;&#32;<emphasis role="comment">/*&#32;move&#32;string&#32;to&#32;reserved&#32;slot&#32;*/</emphasis>
00589 &#32;&#32;&#32;&#32;<link linkend="_lua_8h_1abb8eae2164badeafdb037bc1e03cc822">lua_pop</link>(L,&#32;2);&#32;&#32;<emphasis role="comment">/*&#32;pop&#32;string&#32;and&#32;box&#32;(closing&#32;the&#32;box)&#32;*/</emphasis>
00590 &#32;&#32;}
00591 }
00592 
00593 
<anchor xml:id="_lauxlib_8c_source_1l00594"/><link linkend="_lauxlib_8h_1ac12082513e8da6bfd5b834e840789682">00594</link> <link linkend="_luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95">LUALIB_API</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_lauxlib_8c_1aae36c3a2c184f1b2619ad7f99f2b4c16">luaL_pushresultsize</link>&#32;(<link linkend="_structlua_l___buffer">luaL_Buffer</link>&#32;*B,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;sz)&#32;{
00595 &#32;&#32;<link linkend="_lauxlib_8h_1a7c0adb7401e0be1a843946cee0556684">luaL_addsize</link>(B,&#32;sz);
00596 &#32;&#32;<link linkend="_lauxlib_8c_1a3a1f80033814e2057583a7d24cee23b4">luaL_pushresult</link>(B);
00597 }
00598 
00599 
00600 <emphasis role="comment">/*</emphasis>
00601 <emphasis role="comment">**&#32;&apos;luaL_addvalue&apos;&#32;is&#32;the&#32;only&#32;function&#32;in&#32;the&#32;Buffer&#32;system&#32;where&#32;the</emphasis>
00602 <emphasis role="comment">**&#32;box&#32;(if&#32;existent)&#32;is&#32;not&#32;on&#32;the&#32;top&#32;of&#32;the&#32;stack.&#32;So,&#32;instead&#32;of</emphasis>
00603 <emphasis role="comment">**&#32;calling&#32;&apos;luaL_addlstring&apos;,&#32;it&#32;replicates&#32;the&#32;code&#32;using&#32;-2&#32;as&#32;the</emphasis>
00604 <emphasis role="comment">**&#32;last&#32;argument&#32;to&#32;&apos;prepbuffsize&apos;,&#32;signaling&#32;that&#32;the&#32;box&#32;is&#32;(or&#32;will</emphasis>
00605 <emphasis role="comment">**&#32;be)&#32;bellow&#32;the&#32;string&#32;being&#32;added&#32;to&#32;the&#32;buffer.&#32;(Box&#32;creation&#32;can</emphasis>
00606 <emphasis role="comment">**&#32;trigger&#32;an&#32;emergency&#32;GC,&#32;so&#32;we&#32;should&#32;not&#32;remove&#32;the&#32;string&#32;from&#32;the</emphasis>
00607 <emphasis role="comment">**&#32;stack&#32;before&#32;we&#32;have&#32;the&#32;space&#32;guaranteed.)</emphasis>
00608 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lauxlib_8c_source_1l00609"/><link linkend="_lauxlib_8h_1aeeb03d69681da0ec0e952b582ce3841c">00609</link> <link linkend="_luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95">LUALIB_API</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_lauxlib_8c_1a59a8ac34826fee305ad56101d97aee18">luaL_addvalue</link>&#32;(<link linkend="_structlua_l___buffer">luaL_Buffer</link>&#32;*B)&#32;{
00610 &#32;&#32;<link linkend="_structlua___state">lua_State</link>&#32;*L&#32;=&#32;B-&gt;<link linkend="_structlua_l___buffer_1a62f94dfc0036bec0c14106c2f15caf3e">L</link>;
00611 &#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;len;
00612 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*s&#32;=&#32;<link linkend="_lapi_8c_1a3fc7dbcac3f2610f3d687ec15343bd3f">lua_tolstring</link>(L,&#32;-1,&#32;&amp;len);
00613 &#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;*b&#32;=&#32;<link linkend="_lauxlib_8c_1a96b72c2bee2d49148b93676ea09818a5">prepbuffsize</link>(B,&#32;len,&#32;-2);
00614 &#32;&#32;memcpy(b,&#32;s,&#32;len&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">char</emphasis>));
00615 &#32;&#32;<link linkend="_lauxlib_8h_1a7c0adb7401e0be1a843946cee0556684">luaL_addsize</link>(B,&#32;len);
00616 &#32;&#32;<link linkend="_lua_8h_1abb8eae2164badeafdb037bc1e03cc822">lua_pop</link>(L,&#32;1);&#32;&#32;<emphasis role="comment">/*&#32;pop&#32;string&#32;*/</emphasis>
00617 }
00618 
00619 
<anchor xml:id="_lauxlib_8c_source_1l00620"/><link linkend="_lauxlib_8h_1aab6af54c782855fee2bef84eb41bdc00">00620</link> <link linkend="_luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95">LUALIB_API</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_lauxlib_8c_1a0830ef75e335f6d7590b0e058f82a5eb">luaL_buffinit</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<link linkend="_structlua_l___buffer">luaL_Buffer</link>&#32;*B)&#32;{
00621 &#32;&#32;B-&gt;<link linkend="_structlua_l___buffer_1a62f94dfc0036bec0c14106c2f15caf3e">L</link>&#32;=&#32;L;
00622 &#32;&#32;B-&gt;<link linkend="_structlua_l___buffer_1aafe80d64508a05a94be4d07b648244d0">b</link>&#32;=&#32;B-&gt;<link linkend="_structlua_l___buffer_1ac1767f98426851390cb9b85009e68bdf">init</link>.<link linkend="_structlua_l___buffer_1aafe80d64508a05a94be4d07b648244d0">b</link>;
00623 &#32;&#32;B-&gt;<link linkend="_structlua_l___buffer_1a3d05cf6aa68b03e254d70afbe869e305">n</link>&#32;=&#32;0;
00624 &#32;&#32;B-&gt;<link linkend="_structlua_l___buffer_1a854352f53b148adc24983a58a1866d66">size</link>&#32;=&#32;<link linkend="_ltests_8h_1af360ad37a770dfdc29291a99c398f42d">LUAL_BUFFERSIZE</link>;
00625 }
00626 
00627 
<anchor xml:id="_lauxlib_8c_source_1l00628"/><link linkend="_lauxlib_8h_1ab8f18fe563cab9ea411ae84d2c1c2518">00628</link> <link linkend="_luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95">LUALIB_API</link>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="_lauxlib_8c_1a4f1a8d2f28779b1680587982b1385b61">luaL_buffinitsize</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<link linkend="_structlua_l___buffer">luaL_Buffer</link>&#32;*B,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;sz)&#32;{
00629 &#32;&#32;<link linkend="_lauxlib_8c_1a0830ef75e335f6d7590b0e058f82a5eb">luaL_buffinit</link>(L,&#32;B);
00630 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_lauxlib_8c_1a96b72c2bee2d49148b93676ea09818a5">prepbuffsize</link>(B,&#32;sz,&#32;-1);
00631 }
00632 
00633 <emphasis role="comment">/*&#32;}======================================================&#32;*/</emphasis>
00634 
00635 
00636 <emphasis role="comment">/*</emphasis>
00637 <emphasis role="comment">**&#32;{======================================================</emphasis>
00638 <emphasis role="comment">**&#32;Reference&#32;system</emphasis>
00639 <emphasis role="comment">**&#32;=======================================================</emphasis>
00640 <emphasis role="comment">*/</emphasis>
00641 
00642 <emphasis role="comment">/*&#32;index&#32;of&#32;free-list&#32;header&#32;*/</emphasis>
<anchor xml:id="_lauxlib_8c_source_1l00643"/><link linkend="_lauxlib_8c_1a896e77038c659ca416b686f1e7a93eb8">00643</link> <emphasis role="preprocessor">#define&#32;freelist&#32;&#32;&#32;&#32;0</emphasis>
00644 
00645 
<anchor xml:id="_lauxlib_8c_source_1l00646"/><link linkend="_lauxlib_8h_1a2b69e67252d95df410818251f4b2d8e5">00646</link> <link linkend="_luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95">LUALIB_API</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lauxlib_8c_1a1adeae26be7c2e3001c3583f43f70720">luaL_ref</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<emphasis role="keywordtype">int</emphasis>&#32;t)&#32;{
00647 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;ref;
00648 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lua_8h_1a86d737d7002e7e94023765397c6eef20">lua_isnil</link>(L,&#32;-1))&#32;{
00649 &#32;&#32;&#32;&#32;<link linkend="_lua_8h_1abb8eae2164badeafdb037bc1e03cc822">lua_pop</link>(L,&#32;1);&#32;&#32;<emphasis role="comment">/*&#32;remove&#32;from&#32;stack&#32;*/</emphasis>
00650 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_lauxlib_8h_1a004a6b76c047f3b94890a08dbdcbbee7">LUA_REFNIL</link>;&#32;&#32;<emphasis role="comment">/*&#32;&apos;nil&apos;&#32;has&#32;a&#32;unique&#32;fixed&#32;reference&#32;*/</emphasis>
00651 &#32;&#32;}
00652 &#32;&#32;t&#32;=&#32;<link linkend="_lapi_8c_1a32821b04960f1c1223132349d04911c1">lua_absindex</link>(L,&#32;t);
00653 &#32;&#32;<link linkend="_lapi_8c_1af8e4dc545cc83927d901d2f242489320">lua_rawgeti</link>(L,&#32;t,&#32;<link linkend="_lauxlib_8c_1a896e77038c659ca416b686f1e7a93eb8">freelist</link>);&#32;&#32;<emphasis role="comment">/*&#32;get&#32;first&#32;free&#32;element&#32;*/</emphasis>
00654 &#32;&#32;ref&#32;=&#32;(int)<link linkend="_lua_8h_1a1365e48377a3b567e9d88423b2a6345c">lua_tointeger</link>(L,&#32;-1);&#32;&#32;<emphasis role="comment">/*&#32;ref&#32;=&#32;t[freelist]&#32;*/</emphasis>
00655 &#32;&#32;<link linkend="_lua_8h_1abb8eae2164badeafdb037bc1e03cc822">lua_pop</link>(L,&#32;1);&#32;&#32;<emphasis role="comment">/*&#32;remove&#32;it&#32;from&#32;stack&#32;*/</emphasis>
00656 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ref&#32;!=&#32;0)&#32;{&#32;&#32;<emphasis role="comment">/*&#32;any&#32;free&#32;element?&#32;*/</emphasis>
00657 &#32;&#32;&#32;&#32;<link linkend="_lapi_8c_1af8e4dc545cc83927d901d2f242489320">lua_rawgeti</link>(L,&#32;t,&#32;ref);&#32;&#32;<emphasis role="comment">/*&#32;remove&#32;it&#32;from&#32;list&#32;*/</emphasis>
00658 &#32;&#32;&#32;&#32;<link linkend="_lapi_8c_1a757fd16e7e09280e2d4e4f9f77ba1099">lua_rawseti</link>(L,&#32;t,&#32;<link linkend="_lauxlib_8c_1a896e77038c659ca416b686f1e7a93eb8">freelist</link>);&#32;&#32;<emphasis role="comment">/*&#32;(t[freelist]&#32;=&#32;t[ref])&#32;*/</emphasis>
00659 &#32;&#32;}
00660 &#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;&#32;<emphasis role="comment">/*&#32;no&#32;free&#32;elements&#32;*/</emphasis>
00661 &#32;&#32;&#32;&#32;ref&#32;=&#32;(int)<link linkend="_lapi_8c_1a161e2baf3d7a6a84499f6a9010cf12c8">lua_rawlen</link>(L,&#32;t)&#32;+&#32;1;&#32;&#32;<emphasis role="comment">/*&#32;get&#32;a&#32;new&#32;reference&#32;*/</emphasis>
00662 &#32;&#32;<link linkend="_lapi_8c_1a757fd16e7e09280e2d4e4f9f77ba1099">lua_rawseti</link>(L,&#32;t,&#32;ref);
00663 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ref;
00664 }
00665 
00666 
<anchor xml:id="_lauxlib_8c_source_1l00667"/><link linkend="_lauxlib_8h_1a6200030ecae784852045161274501e0e">00667</link> <link linkend="_luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95">LUALIB_API</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_lauxlib_8c_1ad5e8303f3809d26c336c3e18879b7f4e">luaL_unref</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<emphasis role="keywordtype">int</emphasis>&#32;t,&#32;<emphasis role="keywordtype">int</emphasis>&#32;ref)&#32;{
00668 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ref&#32;&gt;=&#32;0)&#32;{
00669 &#32;&#32;&#32;&#32;t&#32;=&#32;<link linkend="_lapi_8c_1a32821b04960f1c1223132349d04911c1">lua_absindex</link>(L,&#32;t);
00670 &#32;&#32;&#32;&#32;<link linkend="_lapi_8c_1af8e4dc545cc83927d901d2f242489320">lua_rawgeti</link>(L,&#32;t,&#32;<link linkend="_lauxlib_8c_1a896e77038c659ca416b686f1e7a93eb8">freelist</link>);
00671 &#32;&#32;&#32;&#32;<link linkend="_lapi_8c_1a757fd16e7e09280e2d4e4f9f77ba1099">lua_rawseti</link>(L,&#32;t,&#32;ref);&#32;&#32;<emphasis role="comment">/*&#32;t[ref]&#32;=&#32;t[freelist]&#32;*/</emphasis>
00672 &#32;&#32;&#32;&#32;<link linkend="_lapi_8c_1adcec46ff05dfee9a3c4c05828b40c213">lua_pushinteger</link>(L,&#32;ref);
00673 &#32;&#32;&#32;&#32;<link linkend="_lapi_8c_1a757fd16e7e09280e2d4e4f9f77ba1099">lua_rawseti</link>(L,&#32;t,&#32;<link linkend="_lauxlib_8c_1a896e77038c659ca416b686f1e7a93eb8">freelist</link>);&#32;&#32;<emphasis role="comment">/*&#32;t[freelist]&#32;=&#32;ref&#32;*/</emphasis>
00674 &#32;&#32;}
00675 }
00676 
00677 <emphasis role="comment">/*&#32;}======================================================&#32;*/</emphasis>
00678 
00679 
00680 <emphasis role="comment">/*</emphasis>
00681 <emphasis role="comment">**&#32;{======================================================</emphasis>
00682 <emphasis role="comment">**&#32;Load&#32;functions</emphasis>
00683 <emphasis role="comment">**&#32;=======================================================</emphasis>
00684 <emphasis role="comment">*/</emphasis>
00685 
<anchor xml:id="_lauxlib_8c_source_1l00686"/><link linkend="_struct_load_f">00686</link> <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_load_f">LoadF</link>&#32;{
<anchor xml:id="_lauxlib_8c_source_1l00687"/><link linkend="_struct_load_f_1a76f11d9a0a47b94f72c2d0e77fb32240">00687</link> &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_struct_load_f_1a76f11d9a0a47b94f72c2d0e77fb32240">n</link>;&#32;&#32;<emphasis role="comment">/*&#32;number&#32;of&#32;pre-read&#32;characters&#32;*/</emphasis>
<anchor xml:id="_lauxlib_8c_source_1l00688"/><link linkend="_struct_load_f_1a3efb0e1a16208deecbd84c15401f7cf8">00688</link> &#32;&#32;FILE&#32;*<link linkend="_struct_load_f_1a3efb0e1a16208deecbd84c15401f7cf8">f</link>;&#32;&#32;<emphasis role="comment">/*&#32;file&#32;being&#32;read&#32;*/</emphasis>
<anchor xml:id="_lauxlib_8c_source_1l00689"/><link linkend="_struct_load_f_1a136c289101fc59f3b8872db4aa8b7e76">00689</link> &#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="_struct_load_f_1a136c289101fc59f3b8872db4aa8b7e76">buff</link>[BUFSIZ];&#32;&#32;<emphasis role="comment">/*&#32;area&#32;for&#32;reading&#32;file&#32;*/</emphasis>
<anchor xml:id="_lauxlib_8c_source_1l00690"/><link linkend="_lauxlib_8c_1a482c2598b668c96a68dabb9fb5a6886d">00690</link> }&#32;<link linkend="_lauxlib_8c_1a482c2598b668c96a68dabb9fb5a6886d">LoadF</link>;
00691 
00692 
<anchor xml:id="_lauxlib_8c_source_1l00693"/><link linkend="_lauxlib_8c_1a51d79018e5cbe2f3cd784f3ae22a65fb">00693</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="_lauxlib_8c_1a51d79018e5cbe2f3cd784f3ae22a65fb">getF</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*ud,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;*size)&#32;{
00694 &#32;&#32;<link linkend="_struct_load_f">LoadF</link>&#32;*lf&#32;=&#32;(<link linkend="_struct_load_f">LoadF</link>&#32;*)ud;
00695 &#32;&#32;(void)L;&#32;&#32;<emphasis role="comment">/*&#32;not&#32;used&#32;*/</emphasis>
00696 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(lf-&gt;<link linkend="_struct_load_f_1a76f11d9a0a47b94f72c2d0e77fb32240">n</link>&#32;&gt;&#32;0)&#32;{&#32;&#32;<emphasis role="comment">/*&#32;are&#32;there&#32;pre-read&#32;characters&#32;to&#32;be&#32;read?&#32;*/</emphasis>
00697 &#32;&#32;&#32;&#32;*size&#32;=&#32;lf-&gt;<link linkend="_struct_load_f_1a76f11d9a0a47b94f72c2d0e77fb32240">n</link>;&#32;&#32;<emphasis role="comment">/*&#32;return&#32;them&#32;(chars&#32;already&#32;in&#32;buffer)&#32;*/</emphasis>
00698 &#32;&#32;&#32;&#32;lf-&gt;<link linkend="_struct_load_f_1a76f11d9a0a47b94f72c2d0e77fb32240">n</link>&#32;=&#32;0;&#32;&#32;<emphasis role="comment">/*&#32;no&#32;more&#32;pre-read&#32;characters&#32;*/</emphasis>
00699 &#32;&#32;}
00700 &#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{&#32;&#32;<emphasis role="comment">/*&#32;read&#32;a&#32;block&#32;from&#32;file&#32;*/</emphasis>
00701 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;&apos;fread&apos;&#32;can&#32;return&#32;&gt;&#32;0&#32;*and*&#32;set&#32;the&#32;EOF&#32;flag.&#32;If&#32;next&#32;call&#32;to</emphasis>
00702 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&apos;getF&apos;&#32;called&#32;&apos;fread&apos;,&#32;it&#32;might&#32;still&#32;wait&#32;for&#32;user&#32;input.</emphasis>
00703 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;The&#32;next&#32;check&#32;avoids&#32;this&#32;problem.&#32;*/</emphasis>
00704 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(feof(lf-&gt;<link linkend="_struct_load_f_1a3efb0e1a16208deecbd84c15401f7cf8">f</link>))&#32;<emphasis role="keywordflow">return</emphasis>&#32;NULL;
00705 &#32;&#32;&#32;&#32;*size&#32;=&#32;fread(lf-&gt;<link linkend="_struct_load_f_1a136c289101fc59f3b8872db4aa8b7e76">buff</link>,&#32;1,&#32;<emphasis role="keyword">sizeof</emphasis>(lf-&gt;<link linkend="_struct_load_f_1a136c289101fc59f3b8872db4aa8b7e76">buff</link>),&#32;lf-&gt;<link linkend="_struct_load_f_1a3efb0e1a16208deecbd84c15401f7cf8">f</link>);&#32;&#32;<emphasis role="comment">/*&#32;read&#32;block&#32;*/</emphasis>
00706 &#32;&#32;}
00707 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;lf-&gt;<link linkend="_struct_load_f_1a136c289101fc59f3b8872db4aa8b7e76">buff</link>;
00708 }
00709 
00710 
<anchor xml:id="_lauxlib_8c_source_1l00711"/><link linkend="_lauxlib_8c_1a5899b2cf676252a49cc95a89536d0e38">00711</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lauxlib_8c_1a5899b2cf676252a49cc95a89536d0e38">errfile</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*what,&#32;<emphasis role="keywordtype">int</emphasis>&#32;fnameindex)&#32;{
00712 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*serr&#32;=&#32;strerror(errno);
00713 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*filename&#32;=&#32;<link linkend="_lua_8h_1ac813fc3bc1886ba17c363d5b4c6e7ef1">lua_tostring</link>(L,&#32;fnameindex)&#32;+&#32;1;
00714 &#32;&#32;<link linkend="_lapi_8c_1ab190c226d38b289e6ca57683a9d4e0f0">lua_pushfstring</link>(L,&#32;<emphasis role="stringliteral">&quot;cannot&#32;%s&#32;%s:&#32;%s&quot;</emphasis>,&#32;what,&#32;filename,&#32;serr);
00715 &#32;&#32;<link linkend="_lua_8h_1a7664dec8f7220c706b7e71ad3227cc78">lua_remove</link>(L,&#32;fnameindex);
00716 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_lauxlib_8h_1ab8d4418d33cd59728435db95ac2caf5a">LUA_ERRFILE</link>;
00717 }
00718 
00719 
<anchor xml:id="_lauxlib_8c_source_1l00720"/><link linkend="_lauxlib_8c_1a2166815af5654076fea257c99eca1789">00720</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lauxlib_8c_1a2166815af5654076fea257c99eca1789">skipBOM</link>&#32;(<link linkend="_struct_load_f">LoadF</link>&#32;*lf)&#32;{
00721 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*p&#32;=&#32;<emphasis role="stringliteral">&quot;\xEF\xBB\xBF&quot;</emphasis>;&#32;&#32;<emphasis role="comment">/*&#32;UTF-8&#32;BOM&#32;mark&#32;*/</emphasis>
00722 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;c;
00723 &#32;&#32;lf-&gt;<link linkend="_struct_load_f_1a76f11d9a0a47b94f72c2d0e77fb32240">n</link>&#32;=&#32;0;
00724 &#32;&#32;<emphasis role="keywordflow">do</emphasis>&#32;{
00725 &#32;&#32;&#32;&#32;c&#32;=&#32;getc(lf-&gt;<link linkend="_struct_load_f_1a3efb0e1a16208deecbd84c15401f7cf8">f</link>);
00726 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(c&#32;==&#32;EOF&#32;||&#32;c&#32;!=&#32;*(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*)p++)&#32;<emphasis role="keywordflow">return</emphasis>&#32;c;
00727 &#32;&#32;&#32;&#32;lf-&gt;<link linkend="_struct_load_f_1a136c289101fc59f3b8872db4aa8b7e76">buff</link>[lf-&gt;<link linkend="_struct_load_f_1a76f11d9a0a47b94f72c2d0e77fb32240">n</link>++]&#32;=&#32;c;&#32;&#32;<emphasis role="comment">/*&#32;to&#32;be&#32;read&#32;by&#32;the&#32;parser&#32;*/</emphasis>
00728 &#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>&#32;(*p&#32;!=&#32;<emphasis role="charliteral">&apos;\0&apos;</emphasis>);
00729 &#32;&#32;lf-&gt;<link linkend="_struct_load_f_1a76f11d9a0a47b94f72c2d0e77fb32240">n</link>&#32;=&#32;0;&#32;&#32;<emphasis role="comment">/*&#32;prefix&#32;matched;&#32;discard&#32;it&#32;*/</emphasis>
00730 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;getc(lf-&gt;<link linkend="_struct_load_f_1a3efb0e1a16208deecbd84c15401f7cf8">f</link>);&#32;&#32;<emphasis role="comment">/*&#32;return&#32;next&#32;character&#32;*/</emphasis>
00731 }
00732 
00733 
00734 <emphasis role="comment">/*</emphasis>
00735 <emphasis role="comment">**&#32;reads&#32;the&#32;first&#32;character&#32;of&#32;file&#32;&apos;f&apos;&#32;and&#32;skips&#32;an&#32;optional&#32;BOM&#32;mark</emphasis>
00736 <emphasis role="comment">**&#32;in&#32;its&#32;beginning&#32;plus&#32;its&#32;first&#32;line&#32;if&#32;it&#32;starts&#32;with&#32;&apos;#&apos;.&#32;Returns</emphasis>
00737 <emphasis role="comment">**&#32;true&#32;if&#32;it&#32;skipped&#32;the&#32;first&#32;line.&#32;&#32;In&#32;any&#32;case,&#32;&apos;*cp&apos;&#32;has&#32;the</emphasis>
00738 <emphasis role="comment">**&#32;first&#32;&quot;valid&quot;&#32;character&#32;of&#32;the&#32;file&#32;(after&#32;the&#32;optional&#32;BOM&#32;and</emphasis>
00739 <emphasis role="comment">**&#32;a&#32;first-line&#32;comment).</emphasis>
00740 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lauxlib_8c_source_1l00741"/><link linkend="_lauxlib_8c_1a6adfc638788adb7cb8c7eaa246dbea17">00741</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lauxlib_8c_1a6adfc638788adb7cb8c7eaa246dbea17">skipcomment</link>&#32;(<link linkend="_struct_load_f">LoadF</link>&#32;*lf,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*cp)&#32;{
00742 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;c&#32;=&#32;*cp&#32;=&#32;<link linkend="_lauxlib_8c_1a2166815af5654076fea257c99eca1789">skipBOM</link>(lf);
00743 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(c&#32;==&#32;<emphasis role="charliteral">&apos;#&apos;</emphasis>)&#32;{&#32;&#32;<emphasis role="comment">/*&#32;first&#32;line&#32;is&#32;a&#32;comment&#32;(Unix&#32;exec.&#32;file)?&#32;*/</emphasis>
00744 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>&#32;{&#32;&#32;<emphasis role="comment">/*&#32;skip&#32;first&#32;line&#32;*/</emphasis>
00745 &#32;&#32;&#32;&#32;&#32;&#32;c&#32;=&#32;getc(lf-&gt;<link linkend="_struct_load_f_1a3efb0e1a16208deecbd84c15401f7cf8">f</link>);
00746 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>&#32;(c&#32;!=&#32;EOF&#32;&amp;&amp;&#32;c&#32;!=&#32;<emphasis role="charliteral">&apos;\n&apos;</emphasis>);
00747 &#32;&#32;&#32;&#32;*cp&#32;=&#32;getc(lf-&gt;<link linkend="_struct_load_f_1a3efb0e1a16208deecbd84c15401f7cf8">f</link>);&#32;&#32;<emphasis role="comment">/*&#32;skip&#32;end-of-line,&#32;if&#32;present&#32;*/</emphasis>
00748 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;&#32;&#32;<emphasis role="comment">/*&#32;there&#32;was&#32;a&#32;comment&#32;*/</emphasis>
00749 &#32;&#32;}
00750 &#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;&#32;&#32;<emphasis role="comment">/*&#32;no&#32;comment&#32;*/</emphasis>
00751 }
00752 
00753 
<anchor xml:id="_lauxlib_8c_source_1l00754"/><link linkend="_lauxlib_8h_1a8c38c6dcf9db7e110e525b46742bacf8">00754</link> <link linkend="_luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95">LUALIB_API</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lauxlib_8c_1a6ac3b2572d5ce635c4617aed2a0eb649">luaL_loadfilex</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*filename,
00755 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*mode)&#32;{
00756 &#32;&#32;<link linkend="_struct_load_f">LoadF</link>&#32;lf;
00757 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;status,&#32;readstatus;
00758 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;c;
00759 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;fnameindex&#32;=&#32;<link linkend="_lapi_8c_1afbb08ecb69421875494105d4de68e5bf">lua_gettop</link>(L)&#32;+&#32;1;&#32;&#32;<emphasis role="comment">/*&#32;index&#32;of&#32;filename&#32;on&#32;the&#32;stack&#32;*/</emphasis>
00760 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(filename&#32;==&#32;NULL)&#32;{
00761 &#32;&#32;&#32;&#32;<link linkend="_lua_8h_1a47854189a679002ed743ebbcb30b1b26">lua_pushliteral</link>(L,&#32;<emphasis role="stringliteral">&quot;=stdin&quot;</emphasis>);
00762 &#32;&#32;&#32;&#32;lf.<link linkend="_struct_load_f_1a3efb0e1a16208deecbd84c15401f7cf8">f</link>&#32;=&#32;stdin;
00763 &#32;&#32;}
00764 &#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00765 &#32;&#32;&#32;&#32;<link linkend="_lapi_8c_1ab190c226d38b289e6ca57683a9d4e0f0">lua_pushfstring</link>(L,&#32;<emphasis role="stringliteral">&quot;@%s&quot;</emphasis>,&#32;filename);
00766 &#32;&#32;&#32;&#32;lf.<link linkend="_struct_load_f_1a3efb0e1a16208deecbd84c15401f7cf8">f</link>&#32;=&#32;fopen(filename,&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>);
00767 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(lf.<link linkend="_struct_load_f_1a3efb0e1a16208deecbd84c15401f7cf8">f</link>&#32;==&#32;NULL)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_lauxlib_8c_1a5899b2cf676252a49cc95a89536d0e38">errfile</link>(L,&#32;<emphasis role="stringliteral">&quot;open&quot;</emphasis>,&#32;fnameindex);
00768 &#32;&#32;}
00769 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lauxlib_8c_1a6adfc638788adb7cb8c7eaa246dbea17">skipcomment</link>(&amp;lf,&#32;&amp;c))&#32;&#32;<emphasis role="comment">/*&#32;read&#32;initial&#32;portion&#32;*/</emphasis>
00770 &#32;&#32;&#32;&#32;lf.<link linkend="_struct_load_f_1a136c289101fc59f3b8872db4aa8b7e76">buff</link>[lf.<link linkend="_struct_load_f_1a76f11d9a0a47b94f72c2d0e77fb32240">n</link>++]&#32;=&#32;<emphasis role="charliteral">&apos;\n&apos;</emphasis>;&#32;&#32;<emphasis role="comment">/*&#32;add&#32;line&#32;to&#32;correct&#32;line&#32;numbers&#32;*/</emphasis>
00771 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(c&#32;==&#32;<link linkend="_lua_8h_1af21c9fa681dc005c17a7b288882cae1b">LUA_SIGNATURE</link>[0]&#32;&amp;&amp;&#32;filename)&#32;{&#32;&#32;<emphasis role="comment">/*&#32;binary&#32;file?&#32;*/</emphasis>
00772 &#32;&#32;&#32;&#32;lf.<link linkend="_struct_load_f_1a3efb0e1a16208deecbd84c15401f7cf8">f</link>&#32;=&#32;freopen(filename,&#32;<emphasis role="stringliteral">&quot;rb&quot;</emphasis>,&#32;lf.<link linkend="_struct_load_f_1a3efb0e1a16208deecbd84c15401f7cf8">f</link>);&#32;&#32;<emphasis role="comment">/*&#32;reopen&#32;in&#32;binary&#32;mode&#32;*/</emphasis>
00773 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(lf.<link linkend="_struct_load_f_1a3efb0e1a16208deecbd84c15401f7cf8">f</link>&#32;==&#32;NULL)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_lauxlib_8c_1a5899b2cf676252a49cc95a89536d0e38">errfile</link>(L,&#32;<emphasis role="stringliteral">&quot;reopen&quot;</emphasis>,&#32;fnameindex);
00774 &#32;&#32;&#32;&#32;<link linkend="_lauxlib_8c_1a6adfc638788adb7cb8c7eaa246dbea17">skipcomment</link>(&amp;lf,&#32;&amp;c);&#32;&#32;<emphasis role="comment">/*&#32;re-read&#32;initial&#32;portion&#32;*/</emphasis>
00775 &#32;&#32;}
00776 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(c&#32;!=&#32;EOF)
00777 &#32;&#32;&#32;&#32;lf.<link linkend="_struct_load_f_1a136c289101fc59f3b8872db4aa8b7e76">buff</link>[lf.<link linkend="_struct_load_f_1a76f11d9a0a47b94f72c2d0e77fb32240">n</link>++]&#32;=&#32;c;&#32;&#32;<emphasis role="comment">/*&#32;&apos;c&apos;&#32;is&#32;the&#32;first&#32;character&#32;of&#32;the&#32;stream&#32;*/</emphasis>
00778 &#32;&#32;status&#32;=&#32;<link linkend="_lapi_8c_1aa7a94c45f3eec251e5b258d7482ffe87">lua_load</link>(L,&#32;<link linkend="_lauxlib_8c_1a51d79018e5cbe2f3cd784f3ae22a65fb">getF</link>,&#32;&amp;lf,&#32;<link linkend="_lua_8h_1ac813fc3bc1886ba17c363d5b4c6e7ef1">lua_tostring</link>(L,&#32;-1),&#32;mode);
00779 &#32;&#32;readstatus&#32;=&#32;ferror(lf.<link linkend="_struct_load_f_1a3efb0e1a16208deecbd84c15401f7cf8">f</link>);
00780 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(filename)&#32;fclose(lf.<link linkend="_struct_load_f_1a3efb0e1a16208deecbd84c15401f7cf8">f</link>);&#32;&#32;<emphasis role="comment">/*&#32;close&#32;file&#32;(even&#32;in&#32;case&#32;of&#32;errors)&#32;*/</emphasis>
00781 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(readstatus)&#32;{
00782 &#32;&#32;&#32;&#32;<link linkend="_lapi_8c_1adaa30f0d34786144c94644039d1d1b6e">lua_settop</link>(L,&#32;fnameindex);&#32;&#32;<emphasis role="comment">/*&#32;ignore&#32;results&#32;from&#32;&apos;lua_load&apos;&#32;*/</emphasis>
00783 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_lauxlib_8c_1a5899b2cf676252a49cc95a89536d0e38">errfile</link>(L,&#32;<emphasis role="stringliteral">&quot;read&quot;</emphasis>,&#32;fnameindex);
00784 &#32;&#32;}
00785 &#32;&#32;<link linkend="_lua_8h_1a7664dec8f7220c706b7e71ad3227cc78">lua_remove</link>(L,&#32;fnameindex);
00786 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;status;
00787 }
00788 
00789 
<anchor xml:id="_lauxlib_8c_source_1l00790"/><link linkend="_struct_load_s">00790</link> <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_load_s">LoadS</link>&#32;{
<anchor xml:id="_lauxlib_8c_source_1l00791"/><link linkend="_struct_load_s_1ab87f55bd0280d90925050a4188c14ab5">00791</link> &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="_struct_load_s_1ab87f55bd0280d90925050a4188c14ab5">s</link>;
<anchor xml:id="_lauxlib_8c_source_1l00792"/><link linkend="_struct_load_s_1a854352f53b148adc24983a58a1866d66">00792</link> &#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_struct_load_s_1a854352f53b148adc24983a58a1866d66">size</link>;
<anchor xml:id="_lauxlib_8c_source_1l00793"/><link linkend="_lauxlib_8c_1a717dbcc7ef165c8a810dff0bfb556ebd">00793</link> }&#32;<link linkend="_lauxlib_8c_1a717dbcc7ef165c8a810dff0bfb556ebd">LoadS</link>;
00794 
00795 
<anchor xml:id="_lauxlib_8c_source_1l00796"/><link linkend="_lauxlib_8c_1a7fb82f42d22d1cbde5e3af0561389cbf">00796</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="_lauxlib_8c_1a7fb82f42d22d1cbde5e3af0561389cbf">getS</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*ud,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;*size)&#32;{
00797 &#32;&#32;<link linkend="_struct_load_s">LoadS</link>&#32;*ls&#32;=&#32;(<link linkend="_struct_load_s">LoadS</link>&#32;*)ud;
00798 &#32;&#32;(void)L;&#32;&#32;<emphasis role="comment">/*&#32;not&#32;used&#32;*/</emphasis>
00799 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ls-&gt;<link linkend="_struct_load_s_1a854352f53b148adc24983a58a1866d66">size</link>&#32;==&#32;0)&#32;<emphasis role="keywordflow">return</emphasis>&#32;NULL;
00800 &#32;&#32;*size&#32;=&#32;ls-&gt;<link linkend="_struct_load_s_1a854352f53b148adc24983a58a1866d66">size</link>;
00801 &#32;&#32;ls-&gt;<link linkend="_struct_load_s_1a854352f53b148adc24983a58a1866d66">size</link>&#32;=&#32;0;
00802 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ls-&gt;<link linkend="_struct_load_s_1ab87f55bd0280d90925050a4188c14ab5">s</link>;
00803 }
00804 
00805 
<anchor xml:id="_lauxlib_8c_source_1l00806"/><link linkend="_lauxlib_8h_1a3ab1955dd9322cf03e2d3626ebfae669">00806</link> <link linkend="_luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95">LUALIB_API</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lauxlib_8c_1a867ca33afe2cb3d07bfc238cbb438f61">luaL_loadbufferx</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*buff,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;size,
00807 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*name,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*mode)&#32;{
00808 &#32;&#32;<link linkend="_struct_load_s">LoadS</link>&#32;ls;
00809 &#32;&#32;ls.<link linkend="_struct_load_s_1ab87f55bd0280d90925050a4188c14ab5">s</link>&#32;=&#32;buff;
00810 &#32;&#32;ls.<link linkend="_struct_load_s_1a854352f53b148adc24983a58a1866d66">size</link>&#32;=&#32;size;
00811 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_lapi_8c_1aa7a94c45f3eec251e5b258d7482ffe87">lua_load</link>(L,&#32;<link linkend="_lauxlib_8c_1a7fb82f42d22d1cbde5e3af0561389cbf">getS</link>,&#32;&amp;ls,&#32;name,&#32;mode);
00812 }
00813 
00814 
<anchor xml:id="_lauxlib_8c_source_1l00815"/><link linkend="_lauxlib_8h_1ac88130d6214ff6b3e2f1781f327807eb">00815</link> <link linkend="_luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95">LUALIB_API</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lauxlib_8c_1ac1503e3f7db09148f426164834c37a57">luaL_loadstring</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*s)&#32;{
00816 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_lauxlib_8h_1ae210c8b2a9a27ee62b2e846e93ae876f">luaL_loadbuffer</link>(L,&#32;s,&#32;strlen(s),&#32;s);
00817 }
00818 
00819 <emphasis role="comment">/*&#32;}======================================================&#32;*/</emphasis>
00820 
00821 
00822 
<anchor xml:id="_lauxlib_8c_source_1l00823"/><link linkend="_lauxlib_8h_1aed3f129411ba1ec14f813d650f16384d">00823</link> <link linkend="_luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95">LUALIB_API</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lauxlib_8c_1add7cea31816ff3f61014031248e0daa6">luaL_getmetafield</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<emphasis role="keywordtype">int</emphasis>&#32;obj,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*event)&#32;{
00824 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_lapi_8c_1a4caa9ca5e47a30bd45e33d83bf2d6d6e">lua_getmetatable</link>(L,&#32;obj))&#32;&#32;<emphasis role="comment">/*&#32;no&#32;metatable?&#32;*/</emphasis>
00825 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_lua_8h_1ae38a6fb8c687b8bfab211b7675a695ef">LUA_TNIL</link>;
00826 &#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00827 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;tt;
00828 &#32;&#32;&#32;&#32;<link linkend="_lapi_8c_1a771d300f2e64b2197d1df9bf31660ebf">lua_pushstring</link>(L,&#32;event);
00829 &#32;&#32;&#32;&#32;tt&#32;=&#32;<link linkend="_lapi_8c_1a52944e714d1c64bda7b83f511c14b2d3">lua_rawget</link>(L,&#32;-2);
00830 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tt&#32;==&#32;<link linkend="_lua_8h_1ae38a6fb8c687b8bfab211b7675a695ef">LUA_TNIL</link>)&#32;&#32;<emphasis role="comment">/*&#32;is&#32;metafield&#32;nil?&#32;*/</emphasis>
00831 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lua_8h_1abb8eae2164badeafdb037bc1e03cc822">lua_pop</link>(L,&#32;2);&#32;&#32;<emphasis role="comment">/*&#32;remove&#32;metatable&#32;and&#32;metafield&#32;*/</emphasis>
00832 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
00833 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lua_8h_1a7664dec8f7220c706b7e71ad3227cc78">lua_remove</link>(L,&#32;-2);&#32;&#32;<emphasis role="comment">/*&#32;remove&#32;only&#32;metatable&#32;*/</emphasis>
00834 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;tt;&#32;&#32;<emphasis role="comment">/*&#32;return&#32;metafield&#32;type&#32;*/</emphasis>
00835 &#32;&#32;}
00836 }
00837 
00838 
<anchor xml:id="_lauxlib_8c_source_1l00839"/><link linkend="_lauxlib_8h_1af26aec8cce4a3f4448c60f402d78f17d">00839</link> <link linkend="_luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95">LUALIB_API</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lauxlib_8c_1abfb23747df76e74d28ac48dabda0c3e1">luaL_callmeta</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<emphasis role="keywordtype">int</emphasis>&#32;obj,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*event)&#32;{
00840 &#32;&#32;obj&#32;=&#32;<link linkend="_lapi_8c_1a32821b04960f1c1223132349d04911c1">lua_absindex</link>(L,&#32;obj);
00841 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lauxlib_8c_1add7cea31816ff3f61014031248e0daa6">luaL_getmetafield</link>(L,&#32;obj,&#32;event)&#32;==&#32;<link linkend="_lua_8h_1ae38a6fb8c687b8bfab211b7675a695ef">LUA_TNIL</link>)&#32;&#32;<emphasis role="comment">/*&#32;no&#32;metafield?&#32;*/</emphasis>
00842 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
00843 &#32;&#32;<link linkend="_lapi_8c_1a602f61a9b583d69dc1c72c8970bd65e8">lua_pushvalue</link>(L,&#32;obj);
00844 &#32;&#32;<link linkend="_lua_8h_1a89cbf40f871b6fae2dd2df814c7ac1ba">lua_call</link>(L,&#32;1,&#32;1);
00845 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
00846 }
00847 
00848 
<anchor xml:id="_lauxlib_8c_source_1l00849"/><link linkend="_lauxlib_8h_1ac9d38b77e425247b630afdb212401a05">00849</link> <link linkend="_luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95">LUALIB_API</link>&#32;<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;<link linkend="_lauxlib_8c_1aa525c1b6aa90c90d684ef64cf2215e21">luaL_len</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<emphasis role="keywordtype">int</emphasis>&#32;idx)&#32;{
00850 &#32;&#32;<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;l;
00851 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;isnum;
00852 &#32;&#32;<link linkend="_lapi_8c_1a28bdc8c01771ec2524b329a409a08040">lua_len</link>(L,&#32;idx);
00853 &#32;&#32;l&#32;=&#32;<link linkend="_lapi_8c_1af81c9a68425546e1f8c6354728c95170">lua_tointegerx</link>(L,&#32;-1,&#32;&amp;isnum);
00854 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!isnum)
00855 &#32;&#32;&#32;&#32;<link linkend="_lauxlib_8c_1a6c51d83d29244779392551388913e08a">luaL_error</link>(L,&#32;<emphasis role="stringliteral">&quot;object&#32;length&#32;is&#32;not&#32;an&#32;integer&quot;</emphasis>);
00856 &#32;&#32;<link linkend="_lua_8h_1abb8eae2164badeafdb037bc1e03cc822">lua_pop</link>(L,&#32;1);&#32;&#32;<emphasis role="comment">/*&#32;remove&#32;object&#32;*/</emphasis>
00857 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;l;
00858 }
00859 
00860 
<anchor xml:id="_lauxlib_8c_source_1l00861"/><link linkend="_lauxlib_8h_1aef6da057d1e26ed6449b92177f1f2f5a">00861</link> <link linkend="_luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95">LUALIB_API</link>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="_lauxlib_8c_1a0d4cbfd194d1919b3ff84000c0644cc0">luaL_tolstring</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<emphasis role="keywordtype">int</emphasis>&#32;idx,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;*len)&#32;{
00862 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lauxlib_8c_1abfb23747df76e74d28ac48dabda0c3e1">luaL_callmeta</link>(L,&#32;idx,&#32;<emphasis role="stringliteral">&quot;__tostring&quot;</emphasis>))&#32;{&#32;&#32;<emphasis role="comment">/*&#32;metafield?&#32;*/</emphasis>
00863 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_lapi_8c_1a9f20233199a414b04c1c4b43f5d040f3">lua_isstring</link>(L,&#32;-1))
00864 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lauxlib_8c_1a6c51d83d29244779392551388913e08a">luaL_error</link>(L,&#32;<emphasis role="stringliteral">&quot;&apos;__tostring&apos;&#32;must&#32;return&#32;a&#32;string&quot;</emphasis>);
00865 &#32;&#32;}
00866 &#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00867 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(<link linkend="_lapi_8c_1a652b273947f0656686f998d8e90cd3ea">lua_type</link>(L,&#32;idx))&#32;{
00868 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lua_8h_1a7f62ecb240cb38da9c8a53b41fe21ed9">LUA_TNUMBER</link>:&#32;{
00869 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lapi_8c_1aba53e83eb1fff94b5ed96203bb52d8ae">lua_isinteger</link>(L,&#32;idx))
00870 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lapi_8c_1ab190c226d38b289e6ca57683a9d4e0f0">lua_pushfstring</link>(L,&#32;<emphasis role="stringliteral">&quot;%I&quot;</emphasis>,&#32;(<link linkend="_luaconf_8h_1a7a9d650ef5ea12d81160db595fe9f177">LUAI_UACINT</link>)<link linkend="_lua_8h_1a1365e48377a3b567e9d88423b2a6345c">lua_tointeger</link>(L,&#32;idx));
00871 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
00872 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lapi_8c_1ab190c226d38b289e6ca57683a9d4e0f0">lua_pushfstring</link>(L,&#32;<emphasis role="stringliteral">&quot;%f&quot;</emphasis>,&#32;(<link linkend="_luaconf_8h_1ae3594e990592ab0bf7243dad64c76d2a">LUAI_UACNUMBER</link>)<link linkend="_lua_8h_1a3237a0507d51d772dadd4c560a75af17">lua_tonumber</link>(L,&#32;idx));
00873 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00874 &#32;&#32;&#32;&#32;&#32;&#32;}
00875 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lua_8h_1a57de20d87bb5131a3159f2bd52e3fab6">LUA_TSTRING</link>:
00876 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lapi_8c_1a602f61a9b583d69dc1c72c8970bd65e8">lua_pushvalue</link>(L,&#32;idx);
00877 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00878 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lua_8h_1a611808ed12d4c2aee2a9e298a9d9a9bf">LUA_TBOOLEAN</link>:
00879 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lapi_8c_1a771d300f2e64b2197d1df9bf31660ebf">lua_pushstring</link>(L,&#32;(<link linkend="_lapi_8c_1a444aee9aa56b0b06175ee3c7bcf7927c">lua_toboolean</link>(L,&#32;idx)&#32;?&#32;<emphasis role="stringliteral">&quot;true&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;false&quot;</emphasis>));
00880 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00881 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lua_8h_1ae38a6fb8c687b8bfab211b7675a695ef">LUA_TNIL</link>:
00882 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lua_8h_1a47854189a679002ed743ebbcb30b1b26">lua_pushliteral</link>(L,&#32;<emphasis role="stringliteral">&quot;nil&quot;</emphasis>);
00883 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00884 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:&#32;{
00885 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;tt&#32;=&#32;<link linkend="_lauxlib_8c_1add7cea31816ff3f61014031248e0daa6">luaL_getmetafield</link>(L,&#32;idx,&#32;<emphasis role="stringliteral">&quot;__name&quot;</emphasis>);&#32;&#32;<emphasis role="comment">/*&#32;try&#32;name&#32;*/</emphasis>
00886 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*kind&#32;=&#32;(tt&#32;==&#32;<link linkend="_lua_8h_1a57de20d87bb5131a3159f2bd52e3fab6">LUA_TSTRING</link>)&#32;?&#32;<link linkend="_lua_8h_1ac813fc3bc1886ba17c363d5b4c6e7ef1">lua_tostring</link>(L,&#32;-1)&#32;:
00887 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lauxlib_8h_1a2bee94954917c5bccb05d6578f3c675b">luaL_typename</link>(L,&#32;idx);
00888 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lapi_8c_1ab190c226d38b289e6ca57683a9d4e0f0">lua_pushfstring</link>(L,&#32;<emphasis role="stringliteral">&quot;%s:&#32;%p&quot;</emphasis>,&#32;kind,&#32;<link linkend="_lapi_8c_1a5b533fe96cb52b5415896d41daad374a">lua_topointer</link>(L,&#32;idx));
00889 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tt&#32;!=&#32;<link linkend="_lua_8h_1ae38a6fb8c687b8bfab211b7675a695ef">LUA_TNIL</link>)
00890 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lua_8h_1a7664dec8f7220c706b7e71ad3227cc78">lua_remove</link>(L,&#32;-2);&#32;&#32;<emphasis role="comment">/*&#32;remove&#32;&apos;__name&apos;&#32;*/</emphasis>
00891 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00892 &#32;&#32;&#32;&#32;&#32;&#32;}
00893 &#32;&#32;&#32;&#32;}
00894 &#32;&#32;}
00895 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_lapi_8c_1a3fc7dbcac3f2610f3d687ec15343bd3f">lua_tolstring</link>(L,&#32;-1,&#32;len);
00896 }
00897 
00898 
00899 <emphasis role="comment">/*</emphasis>
00900 <emphasis role="comment">**&#32;set&#32;functions&#32;from&#32;list&#32;&apos;l&apos;&#32;into&#32;table&#32;at&#32;top&#32;-&#32;&apos;nup&apos;;&#32;each</emphasis>
00901 <emphasis role="comment">**&#32;function&#32;gets&#32;the&#32;&apos;nup&apos;&#32;elements&#32;at&#32;the&#32;top&#32;as&#32;upvalues.</emphasis>
00902 <emphasis role="comment">**&#32;Returns&#32;with&#32;only&#32;the&#32;table&#32;at&#32;the&#32;stack.</emphasis>
00903 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lauxlib_8c_source_1l00904"/><link linkend="_lauxlib_8h_1a8750009b9bbc508e4c3818ebd15b4e14">00904</link> <link linkend="_luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95">LUALIB_API</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_lauxlib_8c_1a4cab22d0cb403fa6b94f2542f4303096">luaL_setfuncs</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structlua_l___reg">luaL_Reg</link>&#32;*l,&#32;<emphasis role="keywordtype">int</emphasis>&#32;nup)&#32;{
00905 &#32;&#32;<link linkend="_lauxlib_8c_1a7c46517055e0e8cb25e61b959709083a">luaL_checkstack</link>(L,&#32;nup,&#32;<emphasis role="stringliteral">&quot;too&#32;many&#32;upvalues&quot;</emphasis>);
00906 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;&#32;l-&gt;<link linkend="_structlua_l___reg_1a8f8f80d37794cde9472343e4487ba3eb">name</link>&#32;!=&#32;NULL;&#32;l++)&#32;{&#32;&#32;<emphasis role="comment">/*&#32;fill&#32;the&#32;table&#32;with&#32;given&#32;functions&#32;*/</emphasis>
00907 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(l-&gt;<link linkend="_structlua_l___reg_1a9ee443558d897affd625361767eb0cec">func</link>&#32;==&#32;NULL)&#32;&#32;<emphasis role="comment">/*&#32;place&#32;holder?&#32;*/</emphasis>
00908 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lapi_8c_1a56bbb7479265e38da2e2596e6ec25faa">lua_pushboolean</link>(L,&#32;0);
00909 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00910 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
00911 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;nup;&#32;i++)&#32;&#32;<emphasis role="comment">/*&#32;copy&#32;upvalues&#32;to&#32;the&#32;top&#32;*/</emphasis>
00912 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lapi_8c_1a602f61a9b583d69dc1c72c8970bd65e8">lua_pushvalue</link>(L,&#32;-nup);
00913 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lapi_8c_1a142802b91cdd22516b54599f51e101e4">lua_pushcclosure</link>(L,&#32;l-&gt;<link linkend="_structlua_l___reg_1a9ee443558d897affd625361767eb0cec">func</link>,&#32;nup);&#32;&#32;<emphasis role="comment">/*&#32;closure&#32;with&#32;those&#32;upvalues&#32;*/</emphasis>
00914 &#32;&#32;&#32;&#32;}
00915 &#32;&#32;&#32;&#32;<link linkend="_lapi_8c_1a3f2f542ee6728d82e51b1c302f9606df">lua_setfield</link>(L,&#32;-(nup&#32;+&#32;2),&#32;l-&gt;<link linkend="_structlua_l___reg_1a8f8f80d37794cde9472343e4487ba3eb">name</link>);
00916 &#32;&#32;}
00917 &#32;&#32;<link linkend="_lua_8h_1abb8eae2164badeafdb037bc1e03cc822">lua_pop</link>(L,&#32;nup);&#32;&#32;<emphasis role="comment">/*&#32;remove&#32;upvalues&#32;*/</emphasis>
00918 }
00919 
00920 
00921 <emphasis role="comment">/*</emphasis>
00922 <emphasis role="comment">**&#32;ensure&#32;that&#32;stack[idx][fname]&#32;has&#32;a&#32;table&#32;and&#32;push&#32;that&#32;table</emphasis>
00923 <emphasis role="comment">**&#32;into&#32;the&#32;stack</emphasis>
00924 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lauxlib_8c_source_1l00925"/><link linkend="_lauxlib_8h_1a2605da7ef3a12d7e9cfa85939245f941">00925</link> <link linkend="_luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95">LUALIB_API</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lauxlib_8c_1a4cd66d7b986316711233243a268e8e04">luaL_getsubtable</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<emphasis role="keywordtype">int</emphasis>&#32;idx,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*fname)&#32;{
00926 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lapi_8c_1a8b47f1b5685c3f8018ba926abb99af24">lua_getfield</link>(L,&#32;idx,&#32;fname)&#32;==&#32;<link linkend="_lua_8h_1a31620fd8da5b655b7879e16a116ec31a">LUA_TTABLE</link>)
00927 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;&#32;&#32;<emphasis role="comment">/*&#32;table&#32;already&#32;there&#32;*/</emphasis>
00928 &#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00929 &#32;&#32;&#32;&#32;<link linkend="_lua_8h_1abb8eae2164badeafdb037bc1e03cc822">lua_pop</link>(L,&#32;1);&#32;&#32;<emphasis role="comment">/*&#32;remove&#32;previous&#32;result&#32;*/</emphasis>
00930 &#32;&#32;&#32;&#32;idx&#32;=&#32;<link linkend="_lapi_8c_1a32821b04960f1c1223132349d04911c1">lua_absindex</link>(L,&#32;idx);
00931 &#32;&#32;&#32;&#32;<link linkend="_lua_8h_1aa59db6b784aa1ec954599a44168c7761">lua_newtable</link>(L);
00932 &#32;&#32;&#32;&#32;<link linkend="_lapi_8c_1a602f61a9b583d69dc1c72c8970bd65e8">lua_pushvalue</link>(L,&#32;-1);&#32;&#32;<emphasis role="comment">/*&#32;copy&#32;to&#32;be&#32;left&#32;at&#32;top&#32;*/</emphasis>
00933 &#32;&#32;&#32;&#32;<link linkend="_lapi_8c_1a3f2f542ee6728d82e51b1c302f9606df">lua_setfield</link>(L,&#32;idx,&#32;fname);&#32;&#32;<emphasis role="comment">/*&#32;assign&#32;new&#32;table&#32;to&#32;field&#32;*/</emphasis>
00934 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;&#32;&#32;<emphasis role="comment">/*&#32;false,&#32;because&#32;did&#32;not&#32;find&#32;table&#32;there&#32;*/</emphasis>
00935 &#32;&#32;}
00936 }
00937 
00938 
00939 <emphasis role="comment">/*</emphasis>
00940 <emphasis role="comment">**&#32;Stripped-down&#32;&apos;require&apos;:&#32;After&#32;checking&#32;&quot;loaded&quot;&#32;table,&#32;calls&#32;&apos;openf&apos;</emphasis>
00941 <emphasis role="comment">**&#32;to&#32;open&#32;a&#32;module,&#32;registers&#32;the&#32;result&#32;in&#32;&apos;package.loaded&apos;&#32;table&#32;and,</emphasis>
00942 <emphasis role="comment">**&#32;if&#32;&apos;glb&apos;&#32;is&#32;true,&#32;also&#32;registers&#32;the&#32;result&#32;in&#32;the&#32;global&#32;table.</emphasis>
00943 <emphasis role="comment">**&#32;Leaves&#32;resulting&#32;module&#32;on&#32;the&#32;top.</emphasis>
00944 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lauxlib_8c_source_1l00945"/><link linkend="_lauxlib_8h_1af6e3e3ca0a445a50f34cfc26f89c7d61">00945</link> <link linkend="_luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95">LUALIB_API</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_lauxlib_8c_1a3cb8205f86c838d8f82b7d2360b1b0f4">luaL_requiref</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*modname,
00946 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lua_8h_1a878b7e392e78661a374cf1c3073029b9">lua_CFunction</link>&#32;openf,&#32;<emphasis role="keywordtype">int</emphasis>&#32;glb)&#32;{
00947 &#32;&#32;<link linkend="_lauxlib_8c_1a4cd66d7b986316711233243a268e8e04">luaL_getsubtable</link>(L,&#32;<link linkend="_lua_8h_1a3524c2bbc8fcf847dc083246b62945dd">LUA_REGISTRYINDEX</link>,&#32;<link linkend="_lauxlib_8h_1a0fbee1a8156dc622618c9f6048281a73">LUA_LOADED_TABLE</link>);
00948 &#32;&#32;<link linkend="_lapi_8c_1a8b47f1b5685c3f8018ba926abb99af24">lua_getfield</link>(L,&#32;-1,&#32;modname);&#32;&#32;<emphasis role="comment">/*&#32;LOADED[modname]&#32;*/</emphasis>
00949 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_lapi_8c_1a444aee9aa56b0b06175ee3c7bcf7927c">lua_toboolean</link>(L,&#32;-1))&#32;{&#32;&#32;<emphasis role="comment">/*&#32;package&#32;not&#32;already&#32;loaded?&#32;*/</emphasis>
00950 &#32;&#32;&#32;&#32;<link linkend="_lua_8h_1abb8eae2164badeafdb037bc1e03cc822">lua_pop</link>(L,&#32;1);&#32;&#32;<emphasis role="comment">/*&#32;remove&#32;field&#32;*/</emphasis>
00951 &#32;&#32;&#32;&#32;<link linkend="_lua_8h_1a2e4fbbe97182bf90004379202202f2b9">lua_pushcfunction</link>(L,&#32;openf);
00952 &#32;&#32;&#32;&#32;<link linkend="_lapi_8c_1a771d300f2e64b2197d1df9bf31660ebf">lua_pushstring</link>(L,&#32;modname);&#32;&#32;<emphasis role="comment">/*&#32;argument&#32;to&#32;open&#32;function&#32;*/</emphasis>
00953 &#32;&#32;&#32;&#32;<link linkend="_lua_8h_1a89cbf40f871b6fae2dd2df814c7ac1ba">lua_call</link>(L,&#32;1,&#32;1);&#32;&#32;<emphasis role="comment">/*&#32;call&#32;&apos;openf&apos;&#32;to&#32;open&#32;module&#32;*/</emphasis>
00954 &#32;&#32;&#32;&#32;<link linkend="_lapi_8c_1a602f61a9b583d69dc1c72c8970bd65e8">lua_pushvalue</link>(L,&#32;-1);&#32;&#32;<emphasis role="comment">/*&#32;make&#32;copy&#32;of&#32;module&#32;(call&#32;result)&#32;*/</emphasis>
00955 &#32;&#32;&#32;&#32;<link linkend="_lapi_8c_1a3f2f542ee6728d82e51b1c302f9606df">lua_setfield</link>(L,&#32;-3,&#32;modname);&#32;&#32;<emphasis role="comment">/*&#32;LOADED[modname]&#32;=&#32;module&#32;*/</emphasis>
00956 &#32;&#32;}
00957 &#32;&#32;<link linkend="_lua_8h_1a7664dec8f7220c706b7e71ad3227cc78">lua_remove</link>(L,&#32;-2);&#32;&#32;<emphasis role="comment">/*&#32;remove&#32;LOADED&#32;table&#32;*/</emphasis>
00958 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(glb)&#32;{
00959 &#32;&#32;&#32;&#32;<link linkend="_lapi_8c_1a602f61a9b583d69dc1c72c8970bd65e8">lua_pushvalue</link>(L,&#32;-1);&#32;&#32;<emphasis role="comment">/*&#32;copy&#32;of&#32;module&#32;*/</emphasis>
00960 &#32;&#32;&#32;&#32;<link linkend="_lapi_8c_1aecf388efaede9d97581335998dfa243b">lua_setglobal</link>(L,&#32;modname);&#32;&#32;<emphasis role="comment">/*&#32;_G[modname]&#32;=&#32;module&#32;*/</emphasis>
00961 &#32;&#32;}
00962 }
00963 
00964 
<anchor xml:id="_lauxlib_8c_source_1l00965"/><link linkend="_lauxlib_8h_1a5dcf12b98ab3ef52b7885a27f48fadea">00965</link> <link linkend="_luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95">LUALIB_API</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_lauxlib_8c_1a5dcf12b98ab3ef52b7885a27f48fadea">luaL_addgsub</link>&#32;(<link linkend="_structlua_l___buffer">luaL_Buffer</link>&#32;*b,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*s,
00966 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*p,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*r)&#32;{
00967 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*wild;
00968 &#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;l&#32;=&#32;strlen(p);
00969 &#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;((wild&#32;=&#32;strstr(s,&#32;p))&#32;!=&#32;NULL)&#32;{
00970 &#32;&#32;&#32;&#32;<link linkend="_lauxlib_8c_1a0d56993399c45ae61ebb9b448dc30538">luaL_addlstring</link>(b,&#32;s,&#32;wild&#32;-&#32;s);&#32;&#32;<emphasis role="comment">/*&#32;push&#32;prefix&#32;*/</emphasis>
00971 &#32;&#32;&#32;&#32;<link linkend="_lauxlib_8c_1aced031f9a3f68375e9f80315933d9a88">luaL_addstring</link>(b,&#32;r);&#32;&#32;<emphasis role="comment">/*&#32;push&#32;replacement&#32;in&#32;place&#32;of&#32;pattern&#32;*/</emphasis>
00972 &#32;&#32;&#32;&#32;s&#32;=&#32;wild&#32;+&#32;l;&#32;&#32;<emphasis role="comment">/*&#32;continue&#32;after&#32;&apos;p&apos;&#32;*/</emphasis>
00973 &#32;&#32;}
00974 &#32;&#32;<link linkend="_lauxlib_8c_1aced031f9a3f68375e9f80315933d9a88">luaL_addstring</link>(b,&#32;s);&#32;&#32;<emphasis role="comment">/*&#32;push&#32;last&#32;suffix&#32;*/</emphasis>
00975 }
00976 
00977 
<anchor xml:id="_lauxlib_8c_source_1l00978"/><link linkend="_lauxlib_8h_1a46672be75da57e1a464c5c6d80f19064">00978</link> <link linkend="_luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95">LUALIB_API</link>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="_lauxlib_8c_1a65a9b27abc8408f98fbeac037a790ae9">luaL_gsub</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*s,
00979 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*p,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*r)&#32;{
00980 &#32;&#32;<link linkend="_structlua_l___buffer">luaL_Buffer</link>&#32;b;
00981 &#32;&#32;<link linkend="_lauxlib_8c_1a0830ef75e335f6d7590b0e058f82a5eb">luaL_buffinit</link>(L,&#32;&amp;b);
00982 &#32;&#32;<link linkend="_lauxlib_8c_1a5dcf12b98ab3ef52b7885a27f48fadea">luaL_addgsub</link>(&amp;b,&#32;s,&#32;p,&#32;r);
00983 &#32;&#32;<link linkend="_lauxlib_8c_1a3a1f80033814e2057583a7d24cee23b4">luaL_pushresult</link>(&amp;b);
00984 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_lua_8h_1ac813fc3bc1886ba17c363d5b4c6e7ef1">lua_tostring</link>(L,&#32;-1);
00985 }
00986 
00987 
<anchor xml:id="_lauxlib_8c_source_1l00988"/><link linkend="_lauxlib_8c_1ac69fc1fd1f00a5bdf07657b2e29bbedc">00988</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*<link linkend="_lauxlib_8c_1ac69fc1fd1f00a5bdf07657b2e29bbedc">l_alloc</link>&#32;(<emphasis role="keywordtype">void</emphasis>&#32;*ud,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*ptr,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;osize,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;nsize)&#32;{
00989 &#32;&#32;(void)ud;&#32;(void)osize;&#32;&#32;<emphasis role="comment">/*&#32;not&#32;used&#32;*/</emphasis>
00990 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(nsize&#32;==&#32;0)&#32;{
00991 &#32;&#32;&#32;&#32;free(ptr);
00992 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;NULL;
00993 &#32;&#32;}
00994 &#32;&#32;<emphasis role="keywordflow">else</emphasis>
00995 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;realloc(ptr,&#32;nsize);
00996 }
00997 
00998 
<anchor xml:id="_lauxlib_8c_source_1l00999"/><link linkend="_lauxlib_8c_1aa9ed62d0906c6d69ad16bd1b018d660b">00999</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lauxlib_8c_1aa9ed62d0906c6d69ad16bd1b018d660b">panic</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L)&#32;{
01000 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*msg&#32;=&#32;<link linkend="_lua_8h_1ac813fc3bc1886ba17c363d5b4c6e7ef1">lua_tostring</link>(L,&#32;-1);
01001 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(msg&#32;==&#32;NULL)&#32;msg&#32;=&#32;<emphasis role="stringliteral">&quot;error&#32;object&#32;is&#32;not&#32;a&#32;string&quot;</emphasis>;
01002 &#32;&#32;<link linkend="_lauxlib_8h_1a0706f68a79575584d365d033d613707b">lua_writestringerror</link>(<emphasis role="stringliteral">&quot;PANIC:&#32;unprotected&#32;error&#32;in&#32;call&#32;to&#32;Lua&#32;API&#32;(%s)\n&quot;</emphasis>,
01003 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;msg);
01004 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;&#32;&#32;<emphasis role="comment">/*&#32;return&#32;to&#32;Lua&#32;to&#32;abort&#32;*/</emphasis>
01005 }
01006 
01007 
01008 <emphasis role="comment">/*</emphasis>
01009 <emphasis role="comment">**&#32;Emit&#32;a&#32;warning.&#32;&apos;*warnstate&apos;&#32;means:</emphasis>
01010 <emphasis role="comment">**&#32;0&#32;-&#32;warning&#32;system&#32;is&#32;off;</emphasis>
01011 <emphasis role="comment">**&#32;1&#32;-&#32;ready&#32;to&#32;start&#32;a&#32;new&#32;message;</emphasis>
01012 <emphasis role="comment">**&#32;2&#32;-&#32;previous&#32;message&#32;is&#32;to&#32;be&#32;continued.</emphasis>
01013 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lauxlib_8c_source_1l01014"/><link linkend="_lauxlib_8c_1acba9e22050fdbe52eb22f5f80cb809a4">01014</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_lauxlib_8c_1acba9e22050fdbe52eb22f5f80cb809a4">warnf</link>&#32;(<emphasis role="keywordtype">void</emphasis>&#32;*ud,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*message,&#32;<emphasis role="keywordtype">int</emphasis>&#32;tocont)&#32;{
01015 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;*warnstate&#32;=&#32;(<emphasis role="keywordtype">int</emphasis>&#32;*)ud;
01016 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(*warnstate&#32;!=&#32;2&#32;&amp;&amp;&#32;!tocont&#32;&amp;&amp;&#32;*message&#32;==&#32;<emphasis role="charliteral">&apos;@&apos;</emphasis>)&#32;{&#32;&#32;<emphasis role="comment">/*&#32;control&#32;message?&#32;*/</emphasis>
01017 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(strcmp(message,&#32;<emphasis role="stringliteral">&quot;@off&quot;</emphasis>)&#32;==&#32;0)
01018 &#32;&#32;&#32;&#32;&#32;&#32;*warnstate&#32;=&#32;0;
01019 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(strcmp(message,&#32;<emphasis role="stringliteral">&quot;@on&quot;</emphasis>)&#32;==&#32;0)
01020 &#32;&#32;&#32;&#32;&#32;&#32;*warnstate&#32;=&#32;1;
01021 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
01022 &#32;&#32;}
01023 &#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(*warnstate&#32;==&#32;0)&#32;&#32;<emphasis role="comment">/*&#32;warnings&#32;off?&#32;*/</emphasis>
01024 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
01025 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(*warnstate&#32;==&#32;1)&#32;&#32;<emphasis role="comment">/*&#32;previous&#32;message&#32;was&#32;the&#32;last?&#32;*/</emphasis>
01026 &#32;&#32;&#32;&#32;<link linkend="_lauxlib_8h_1a0706f68a79575584d365d033d613707b">lua_writestringerror</link>(<emphasis role="stringliteral">&quot;%s&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;Lua&#32;warning:&#32;&quot;</emphasis>);&#32;&#32;<emphasis role="comment">/*&#32;start&#32;a&#32;new&#32;warning&#32;*/</emphasis>
01027 &#32;&#32;<link linkend="_lauxlib_8h_1a0706f68a79575584d365d033d613707b">lua_writestringerror</link>(<emphasis role="stringliteral">&quot;%s&quot;</emphasis>,&#32;message);&#32;&#32;<emphasis role="comment">/*&#32;write&#32;message&#32;*/</emphasis>
01028 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tocont)&#32;&#32;<emphasis role="comment">/*&#32;not&#32;the&#32;last&#32;part?&#32;*/</emphasis>
01029 &#32;&#32;&#32;&#32;*warnstate&#32;=&#32;2;&#32;&#32;<emphasis role="comment">/*&#32;to&#32;be&#32;continued&#32;*/</emphasis>
01030 &#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{&#32;&#32;<emphasis role="comment">/*&#32;last&#32;part&#32;*/</emphasis>
01031 &#32;&#32;&#32;&#32;<link linkend="_lauxlib_8h_1a0706f68a79575584d365d033d613707b">lua_writestringerror</link>(<emphasis role="stringliteral">&quot;%s&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\n&quot;</emphasis>);&#32;&#32;<emphasis role="comment">/*&#32;finish&#32;message&#32;with&#32;end-of-line&#32;*/</emphasis>
01032 &#32;&#32;&#32;&#32;*warnstate&#32;=&#32;1;&#32;&#32;<emphasis role="comment">/*&#32;ready&#32;to&#32;start&#32;a&#32;new&#32;message&#32;*/</emphasis>
01033 &#32;&#32;}
01034 }
01035 
01036 
<anchor xml:id="_lauxlib_8c_source_1l01037"/><link linkend="_lauxlib_8h_1a7d8712fcede90ae93d5a9a7b409c586e">01037</link> <link linkend="_luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95">LUALIB_API</link>&#32;<link linkend="_structlua___state">lua_State</link>&#32;*<link linkend="_lauxlib_8c_1aac01e11c3aeeec5ca26b28f285eadb9e">luaL_newstate</link>&#32;(<emphasis role="keywordtype">void</emphasis>)&#32;{
01038 &#32;&#32;<link linkend="_structlua___state">lua_State</link>&#32;*L&#32;=&#32;<link linkend="_lstate_8c_1a59a0d54f62839bcb7dfa8d0d7b4761b4">lua_newstate</link>(<link linkend="_lauxlib_8c_1ac69fc1fd1f00a5bdf07657b2e29bbedc">l_alloc</link>,&#32;NULL);
01039 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(L)&#32;{
01040 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;*warnstate;&#32;&#32;<emphasis role="comment">/*&#32;space&#32;for&#32;warning&#32;state&#32;*/</emphasis>
01041 &#32;&#32;&#32;&#32;<link linkend="_lapi_8c_1a90bf785da77985164dbe2eb0d64bf82e">lua_atpanic</link>(L,&#32;&amp;<link linkend="_lauxlib_8c_1aa9ed62d0906c6d69ad16bd1b018d660b">panic</link>);
01042 &#32;&#32;&#32;&#32;warnstate&#32;=&#32;(<emphasis role="keywordtype">int</emphasis>&#32;*)<link linkend="_lapi_8c_1a9c09a58b86c71e997d7ccabb67f18c12">lua_newuserdatauv</link>(L,&#32;<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">int</emphasis>),&#32;0);
01043 &#32;&#32;&#32;&#32;<link linkend="_lauxlib_8c_1a1adeae26be7c2e3001c3583f43f70720">luaL_ref</link>(L,&#32;<link linkend="_lua_8h_1a3524c2bbc8fcf847dc083246b62945dd">LUA_REGISTRYINDEX</link>);&#32;&#32;<emphasis role="comment">/*&#32;make&#32;sure&#32;it&#32;won&apos;t&#32;be&#32;collected&#32;*/</emphasis>
01044 &#32;&#32;&#32;&#32;*warnstate&#32;=&#32;0;&#32;&#32;<emphasis role="comment">/*&#32;default&#32;is&#32;warnings&#32;off&#32;*/</emphasis>
01045 &#32;&#32;&#32;&#32;<link linkend="_lapi_8c_1a708d3ea569d1e7174f06281ecba5a091">lua_setwarnf</link>(L,&#32;<link linkend="_lauxlib_8c_1acba9e22050fdbe52eb22f5f80cb809a4">warnf</link>,&#32;warnstate);
01046 &#32;&#32;}
01047 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;L;
01048 }
01049 
01050 
<anchor xml:id="_lauxlib_8c_source_1l01051"/><link linkend="_lauxlib_8h_1ab42194a5a9cd8a6f6ee9123ef1807e52">01051</link> <link linkend="_luaconf_8h_1a373d5a572c4c65a5f35a6e4ee9293c95">LUALIB_API</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_lauxlib_8c_1a8ad94df78305955cad1c698ea9d1eee9">luaL_checkversion_</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<link linkend="_lua_8h_1af0a6ed3b852d680769cfc410a0672172">lua_Number</link>&#32;ver,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;sz)&#32;{
01052 &#32;&#32;<link linkend="_lua_8h_1af0a6ed3b852d680769cfc410a0672172">lua_Number</link>&#32;v&#32;=&#32;<link linkend="_lapi_8c_1a173602b148e6a610676e866fb7874ff1">lua_version</link>(L);
01053 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sz&#32;!=&#32;<link linkend="_lauxlib_8h_1ae6c79b83e1d493d4ab680e74e5a85a6a">LUAL_NUMSIZES</link>)&#32;&#32;<emphasis role="comment">/*&#32;check&#32;numeric&#32;types&#32;*/</emphasis>
01054 &#32;&#32;&#32;&#32;<link linkend="_lauxlib_8c_1a6c51d83d29244779392551388913e08a">luaL_error</link>(L,&#32;<emphasis role="stringliteral">&quot;core&#32;and&#32;library&#32;have&#32;incompatible&#32;numeric&#32;types&quot;</emphasis>);
01055 &#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(v&#32;!=&#32;ver)
01056 &#32;&#32;&#32;&#32;<link linkend="_lauxlib_8c_1a6c51d83d29244779392551388913e08a">luaL_error</link>(L,&#32;<emphasis role="stringliteral">&quot;version&#32;mismatch:&#32;app.&#32;needs&#32;%f,&#32;Lua&#32;core&#32;provides&#32;%f&quot;</emphasis>,
01057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<link linkend="_luaconf_8h_1ae3594e990592ab0bf7243dad64c76d2a">LUAI_UACNUMBER</link>)ver,&#32;(<link linkend="_luaconf_8h_1ae3594e990592ab0bf7243dad64c76d2a">LUAI_UACNUMBER</link>)v);
01058 }
01059 
</programlisting></section>
