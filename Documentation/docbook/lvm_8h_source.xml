<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_lvm_8h_source" xml:lang="zh">
<title>D:/gitworkspace/lua/lvm.h</title>
<programlisting>00001 <emphasis role="comment">/*</emphasis>
00002 <emphasis role="comment">**&#32;$Id:&#32;lvm.h&#32;$</emphasis>
00003 <emphasis role="comment">**&#32;Lua&#32;virtual&#32;machine</emphasis>
00004 <emphasis role="comment">**&#32;See&#32;Copyright&#32;Notice&#32;in&#32;lua.h</emphasis>
00005 <emphasis role="comment">*/</emphasis>
00006 
00007 <emphasis role="preprocessor">#ifndef&#32;lvm_h</emphasis>
00008 <emphasis role="preprocessor">#define&#32;lvm_h</emphasis>
00009 
00010 
00011 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_ldo_8h">ldo.h</link>&quot;</emphasis>
00012 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_lobject_8h">lobject.h</link>&quot;</emphasis>
00013 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_ltm_8h">ltm.h</link>&quot;</emphasis>
00014 
00015 
00016 <emphasis role="preprocessor">#if&#32;!defined(LUA_NOCVTN2S)</emphasis>
<anchor xml:id="_lvm_8h_source_1l00017"/><link linkend="_lvm_8h_1aa6af30bdcb0dce1826c81061cec16d81">00017</link> <emphasis role="preprocessor">#define&#32;cvt2str(o)&#32;&#32;ttisnumber(o)</emphasis>
00018 <emphasis role="preprocessor">#else</emphasis>
00019 <emphasis role="preprocessor">#define&#32;cvt2str(o)&#32;&#32;0&#32;&#32;&#32;</emphasis><emphasis role="comment">/*&#32;no&#32;conversion&#32;from&#32;numbers&#32;to&#32;strings&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
00020 <emphasis role="preprocessor">#endif</emphasis>
00021 
00022 
00023 <emphasis role="preprocessor">#if&#32;!defined(LUA_NOCVTS2N)</emphasis>
<anchor xml:id="_lvm_8h_source_1l00024"/><link linkend="_lvm_8h_1a19856e050e5fb27e8c0babf15cf1a1fa">00024</link> <emphasis role="preprocessor">#define&#32;cvt2num(o)&#32;&#32;ttisstring(o)</emphasis>
00025 <emphasis role="preprocessor">#else</emphasis>
00026 <emphasis role="preprocessor">#define&#32;cvt2num(o)&#32;&#32;0&#32;&#32;&#32;</emphasis><emphasis role="comment">/*&#32;no&#32;conversion&#32;from&#32;strings&#32;to&#32;numbers&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
00027 <emphasis role="preprocessor">#endif</emphasis>
00028 
00029 
00030 <emphasis role="comment">/*</emphasis>
00031 <emphasis role="comment">**&#32;You&#32;can&#32;define&#32;LUA_FLOORN2I&#32;if&#32;you&#32;want&#32;to&#32;convert&#32;floats&#32;to&#32;integers</emphasis>
00032 <emphasis role="comment">**&#32;by&#32;flooring&#32;them&#32;(instead&#32;of&#32;raising&#32;an&#32;error&#32;if&#32;they&#32;are&#32;not</emphasis>
00033 <emphasis role="comment">**&#32;integral&#32;values)</emphasis>
00034 <emphasis role="comment">*/</emphasis>
00035 <emphasis role="preprocessor">#if&#32;!defined(LUA_FLOORN2I)</emphasis>
<anchor xml:id="_lvm_8h_source_1l00036"/><link linkend="_lvm_8h_1a8fad4fb73165b35bb6e1b9718040703e">00036</link> <emphasis role="preprocessor">#define&#32;LUA_FLOORN2I&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;F2Ieq</emphasis>
00037 <emphasis role="preprocessor">#endif</emphasis>
00038 
00039 
00040 <emphasis role="comment">/*</emphasis>
00041 <emphasis role="comment">**&#32;Rounding&#32;modes&#32;for&#32;float-&gt;integer&#32;coercion</emphasis>
00042 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_lvm_8h_source_1l00043"/><link linkend="_lvm_8h_1a1639065f78212a54317141b2703061c0">00043</link> <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">enum</emphasis>&#32;{
<anchor xml:id="_lvm_8h_source_1l00044"/><link linkend="_lvm_8h_1a1639065f78212a54317141b2703061c0a7eaebd7cdc41b6f7c4ae319a813f3995">00044</link> &#32;&#32;<link linkend="_lvm_8h_1a1639065f78212a54317141b2703061c0a7eaebd7cdc41b6f7c4ae319a813f3995">F2Ieq</link>,&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;no&#32;rounding;&#32;accepts&#32;only&#32;integral&#32;values&#32;*/</emphasis>
<anchor xml:id="_lvm_8h_source_1l00045"/><link linkend="_lvm_8h_1a1639065f78212a54317141b2703061c0a04712d393ba74d0c04f9f1e80f33c02c">00045</link> &#32;&#32;<link linkend="_lvm_8h_1a1639065f78212a54317141b2703061c0a04712d393ba74d0c04f9f1e80f33c02c">F2Ifloor</link>,&#32;&#32;<emphasis role="comment">/*&#32;takes&#32;the&#32;floor&#32;of&#32;the&#32;number&#32;*/</emphasis>
00046 &#32;&#32;<link linkend="_lvm_8h_1a1639065f78212a54317141b2703061c0ac844cfcb3d7f91dd0c10f424d93c13ca">F2Iceil</link>&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;takes&#32;the&#32;ceil&#32;of&#32;the&#32;number&#32;*/</emphasis>
<anchor xml:id="_lvm_8h_source_1l00047"/><link linkend="_lvm_8h_1a1639065f78212a54317141b2703061c0ac844cfcb3d7f91dd0c10f424d93c13ca">00047</link> }&#32;<link linkend="_lvm_8h_1a1639065f78212a54317141b2703061c0">F2Imod</link>;
00048 
00049 
00050 <emphasis role="comment">/*&#32;convert&#32;an&#32;object&#32;to&#32;a&#32;float&#32;(including&#32;string&#32;coercion)&#32;*/</emphasis>
<anchor xml:id="_lvm_8h_source_1l00051"/><link linkend="_lvm_8h_1af9edcc5da8ea1ac07ffdf79fbe5bb95c">00051</link> <emphasis role="preprocessor">#define&#32;tonumber(o,n)&#32;\</emphasis>
00052 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;(ttisfloat(o)&#32;?&#32;(*(n)&#32;=&#32;fltvalue(o),&#32;1)&#32;:&#32;luaV_tonumber_(o,n))</emphasis>
00053 
00054 
00055 <emphasis role="comment">/*&#32;convert&#32;an&#32;object&#32;to&#32;a&#32;float&#32;(without&#32;string&#32;coercion)&#32;*/</emphasis>
<anchor xml:id="_lvm_8h_source_1l00056"/><link linkend="_lvm_8h_1a1c1072a8845c14cc7b5b7744ef4d18a4">00056</link> <emphasis role="preprocessor">#define&#32;tonumberns(o,n)&#32;\</emphasis>
00057 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;(ttisfloat(o)&#32;?&#32;((n)&#32;=&#32;fltvalue(o),&#32;1)&#32;:&#32;\</emphasis>
00058 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;(ttisinteger(o)&#32;?&#32;((n)&#32;=&#32;cast_num(ivalue(o)),&#32;1)&#32;:&#32;0))</emphasis>
00059 
00060 
00061 <emphasis role="comment">/*&#32;convert&#32;an&#32;object&#32;to&#32;an&#32;integer&#32;(including&#32;string&#32;coercion)&#32;*/</emphasis>
<anchor xml:id="_lvm_8h_source_1l00062"/><link linkend="_lvm_8h_1aa0972161c02de57dbe993112eb5c5583">00062</link> <emphasis role="preprocessor">#define&#32;tointeger(o,i)&#32;\</emphasis>
00063 <emphasis role="preprocessor">&#32;&#32;(ttisinteger(o)&#32;?&#32;(*(i)&#32;=&#32;ivalue(o),&#32;1)&#32;:&#32;luaV_tointeger(o,i,LUA_FLOORN2I))</emphasis>
00064 
00065 
00066 <emphasis role="comment">/*&#32;convert&#32;an&#32;object&#32;to&#32;an&#32;integer&#32;(without&#32;string&#32;coercion)&#32;*/</emphasis>
<anchor xml:id="_lvm_8h_source_1l00067"/><link linkend="_lvm_8h_1a0b3a6eff12747eacea6551dbc2d42707">00067</link> <emphasis role="preprocessor">#define&#32;tointegerns(o,i)&#32;\</emphasis>
00068 <emphasis role="preprocessor">&#32;&#32;(ttisinteger(o)&#32;?&#32;(*(i)&#32;=&#32;ivalue(o),&#32;1)&#32;:&#32;luaV_tointegerns(o,i,LUA_FLOORN2I))</emphasis>
00069 
00070 
<anchor xml:id="_lvm_8h_source_1l00071"/><link linkend="_lvm_8h_1a6c054eb9ce53c1b282e7ff0088895a37">00071</link> <emphasis role="preprocessor">#define&#32;intop(op,v1,v2)&#32;l_castU2S(l_castS2U(v1)&#32;op&#32;l_castS2U(v2))</emphasis>
00072 
<anchor xml:id="_lvm_8h_source_1l00073"/><link linkend="_lvm_8h_1aedbcec0d2a0e951710844d11dfa59a07">00073</link> <emphasis role="preprocessor">#define&#32;luaV_rawequalobj(t1,t2)&#32;&#32;&#32;&#32;&#32;luaV_equalobj(NULL,t1,t2)</emphasis>
00074 
00075 
00076 <emphasis role="comment">/*</emphasis>
00077 <emphasis role="comment">**&#32;fast&#32;track&#32;for&#32;&apos;gettable&apos;:&#32;if&#32;&apos;t&apos;&#32;is&#32;a&#32;table&#32;and&#32;&apos;t[k]&apos;&#32;is&#32;present,</emphasis>
00078 <emphasis role="comment">**&#32;return&#32;1&#32;with&#32;&apos;slot&apos;&#32;pointing&#32;to&#32;&apos;t[k]&apos;&#32;(position&#32;of&#32;final&#32;result).</emphasis>
00079 <emphasis role="comment">**&#32;Otherwise,&#32;return&#32;0&#32;(meaning&#32;it&#32;will&#32;have&#32;to&#32;check&#32;metamethod)</emphasis>
00080 <emphasis role="comment">**&#32;with&#32;&apos;slot&apos;&#32;pointing&#32;to&#32;an&#32;empty&#32;&apos;t[k]&apos;&#32;(if&#32;&apos;t&apos;&#32;is&#32;a&#32;table)&#32;or&#32;NULL</emphasis>
00081 <emphasis role="comment">**&#32;(otherwise).&#32;&apos;f&apos;&#32;is&#32;the&#32;raw&#32;get&#32;function&#32;to&#32;use.</emphasis>
00082 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lvm_8h_source_1l00083"/><link linkend="_lvm_8h_1a16d42351ed7a1d0c0c1677bdfd3b123b">00083</link> <emphasis role="preprocessor">#define&#32;luaV_fastget(L,t,k,slot,f)&#32;\</emphasis>
00084 <emphasis role="preprocessor">&#32;&#32;(!ttistable(t)&#32;&#32;\</emphasis>
00085 <emphasis role="preprocessor">&#32;&#32;&#32;?&#32;(slot&#32;=&#32;NULL,&#32;0)&#32;&#32;</emphasis><emphasis role="comment">/*&#32;not&#32;a&#32;table;&#32;&apos;slot&apos;&#32;is&#32;NULL&#32;and&#32;result&#32;is&#32;0&#32;*/</emphasis><emphasis role="preprocessor">&#32;&#32;\</emphasis>
00086 <emphasis role="preprocessor">&#32;&#32;&#32;:&#32;(slot&#32;=&#32;f(hvalue(t),&#32;k),&#32;&#32;</emphasis><emphasis role="comment">/*&#32;else,&#32;do&#32;raw&#32;access&#32;*/</emphasis><emphasis role="preprocessor">&#32;&#32;\</emphasis>
00087 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;!isempty(slot)))&#32;&#32;</emphasis><emphasis role="comment">/*&#32;result&#32;not&#32;empty?&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
00088 
00089 
00090 <emphasis role="comment">/*</emphasis>
00091 <emphasis role="comment">**&#32;Special&#32;case&#32;of&#32;&apos;luaV_fastget&apos;&#32;for&#32;integers,&#32;inlining&#32;the&#32;fast&#32;case</emphasis>
00092 <emphasis role="comment">**&#32;of&#32;&apos;luaH_getint&apos;.</emphasis>
00093 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lvm_8h_source_1l00094"/><link linkend="_lvm_8h_1a1caa2d08a594618bae645c93d3e21a56">00094</link> <emphasis role="preprocessor">#define&#32;luaV_fastgeti(L,t,k,slot)&#32;\</emphasis>
00095 <emphasis role="preprocessor">&#32;&#32;(!ttistable(t)&#32;&#32;\</emphasis>
00096 <emphasis role="preprocessor">&#32;&#32;&#32;?&#32;(slot&#32;=&#32;NULL,&#32;0)&#32;&#32;</emphasis><emphasis role="comment">/*&#32;not&#32;a&#32;table;&#32;&apos;slot&apos;&#32;is&#32;NULL&#32;and&#32;result&#32;is&#32;0&#32;*/</emphasis><emphasis role="preprocessor">&#32;&#32;\</emphasis>
00097 <emphasis role="preprocessor">&#32;&#32;&#32;:&#32;(slot&#32;=&#32;(l_castS2U(k)&#32;-&#32;1u&#32;&lt;&#32;hvalue(t)-&gt;alimit)&#32;\</emphasis>
00098 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;?&#32;&amp;hvalue(t)-&gt;array[k&#32;-&#32;1]&#32;:&#32;luaH_getint(hvalue(t),&#32;k),&#32;\</emphasis>
00099 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;!isempty(slot)))&#32;&#32;</emphasis><emphasis role="comment">/*&#32;result&#32;not&#32;empty?&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
00100 
00101 
00102 <emphasis role="comment">/*</emphasis>
00103 <emphasis role="comment">**&#32;Finish&#32;a&#32;fast&#32;set&#32;operation&#32;(when&#32;fast&#32;get&#32;succeeds).&#32;In&#32;that&#32;case,</emphasis>
00104 <emphasis role="comment">**&#32;&apos;slot&apos;&#32;points&#32;to&#32;the&#32;place&#32;to&#32;put&#32;the&#32;value.</emphasis>
00105 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lvm_8h_source_1l00106"/><link linkend="_lvm_8h_1a432c22e13223409ad55ed6c3aec12bcb">00106</link> <emphasis role="preprocessor">#define&#32;luaV_finishfastset(L,t,slot,v)&#32;\</emphasis>
00107 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;{&#32;setobj2t(L,&#32;cast(TValue&#32;*,slot),&#32;v);&#32;\</emphasis>
00108 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;luaC_barrierback(L,&#32;gcvalue(t),&#32;v);&#32;}</emphasis>
00109 
00110 
00111 
00112 
00113 <link linkend="_luaconf_8h_1a3f43b35a70c93f2cfde1db42a5a24f1e">LUAI_FUNC</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lvm_8h_1a2f779d315adf5ac6a26c88409b58eeec">luaV_equalobj</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_value">TValue</link>&#32;*t1,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_value">TValue</link>&#32;*t2);
00114 <link linkend="_luaconf_8h_1a3f43b35a70c93f2cfde1db42a5a24f1e">LUAI_FUNC</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lvm_8h_1a1245a563d674251ea03c7abbd1a2ca8c">luaV_lessthan</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_value">TValue</link>&#32;*l,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_value">TValue</link>&#32;*r);
00115 <link linkend="_luaconf_8h_1a3f43b35a70c93f2cfde1db42a5a24f1e">LUAI_FUNC</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lvm_8h_1aa151c39c80af19e2ea6d309e7993973c">luaV_lessequal</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_value">TValue</link>&#32;*l,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_value">TValue</link>&#32;*r);
00116 <link linkend="_luaconf_8h_1a3f43b35a70c93f2cfde1db42a5a24f1e">LUAI_FUNC</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lvm_8h_1a8dde84947fb2b5ec169813216235a4ba">luaV_tonumber_</link>&#32;(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_value">TValue</link>&#32;*obj,&#32;<link linkend="_lua_8h_1af0a6ed3b852d680769cfc410a0672172">lua_Number</link>&#32;*n);
00117 <link linkend="_luaconf_8h_1a3f43b35a70c93f2cfde1db42a5a24f1e">LUAI_FUNC</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lvm_8h_1a2a864417ad70b6e8d3eb7d3c10cad672">luaV_tointeger</link>&#32;(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_value">TValue</link>&#32;*obj,&#32;<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;*p,&#32;<link linkend="_lvm_8h_1a1639065f78212a54317141b2703061c0">F2Imod</link>&#32;mode);
00118 <link linkend="_luaconf_8h_1a3f43b35a70c93f2cfde1db42a5a24f1e">LUAI_FUNC</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lvm_8h_1a217081972ce52f0e7a489d2398422b39">luaV_tointegerns</link>&#32;(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_value">TValue</link>&#32;*obj,&#32;<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;*p,
00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8h_1a1639065f78212a54317141b2703061c0">F2Imod</link>&#32;mode);
00120 <link linkend="_luaconf_8h_1a3f43b35a70c93f2cfde1db42a5a24f1e">LUAI_FUNC</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lvm_8h_1aafdf8bf00e39d6cf1d53e1e364ced4cb">luaV_flttointeger</link>&#32;(<link linkend="_lua_8h_1af0a6ed3b852d680769cfc410a0672172">lua_Number</link>&#32;n,&#32;<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;*p,&#32;<link linkend="_lvm_8h_1a1639065f78212a54317141b2703061c0">F2Imod</link>&#32;mode);
00121 <link linkend="_luaconf_8h_1a3f43b35a70c93f2cfde1db42a5a24f1e">LUAI_FUNC</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_lvm_8h_1a282d1037898c9b77aae41b12327a6c72">luaV_finishget</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_value">TValue</link>&#32;*t,&#32;<link linkend="_struct_t_value">TValue</link>&#32;*key,
00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_union_stack_value">StkId</link>&#32;val,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_value">TValue</link>&#32;*slot);
00123 <link linkend="_luaconf_8h_1a3f43b35a70c93f2cfde1db42a5a24f1e">LUAI_FUNC</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_lvm_8h_1ab932d6ab0da7d7c900e4fa020b08ea76">luaV_finishset</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_value">TValue</link>&#32;*t,&#32;<link linkend="_struct_t_value">TValue</link>&#32;*key,
00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_t_value">TValue</link>&#32;*val,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_value">TValue</link>&#32;*slot);
00125 <link linkend="_luaconf_8h_1a3f43b35a70c93f2cfde1db42a5a24f1e">LUAI_FUNC</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_lvm_8h_1a5db3e64b3cc2f63c3b10b27f7ecd1d03">luaV_finishOp</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L);
00126 <link linkend="_luaconf_8h_1a3f43b35a70c93f2cfde1db42a5a24f1e">LUAI_FUNC</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_lvm_8h_1ac430e93ed874f6ab2449d7a16aa6b62f">luaV_execute</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<link linkend="_struct_call_info">CallInfo</link>&#32;*ci);
00127 <link linkend="_luaconf_8h_1a3f43b35a70c93f2cfde1db42a5a24f1e">LUAI_FUNC</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_lvm_8h_1aee84bfc563cb4bdd21a013218a289aa7">luaV_concat</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<emphasis role="keywordtype">int</emphasis>&#32;total);
00128 <link linkend="_luaconf_8h_1a3f43b35a70c93f2cfde1db42a5a24f1e">LUAI_FUNC</link>&#32;<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;<link linkend="_lvm_8h_1a3fb7bab8732e10dbf0305243201075dc">luaV_idiv</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;x,&#32;<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;y);
00129 <link linkend="_luaconf_8h_1a3f43b35a70c93f2cfde1db42a5a24f1e">LUAI_FUNC</link>&#32;<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;<link linkend="_lvm_8h_1a8c64b8dbe11cb5be7617feb17c279ced">luaV_mod</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;x,&#32;<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;y);
00130 <link linkend="_luaconf_8h_1a3f43b35a70c93f2cfde1db42a5a24f1e">LUAI_FUNC</link>&#32;<link linkend="_lua_8h_1af0a6ed3b852d680769cfc410a0672172">lua_Number</link>&#32;<link linkend="_lvm_8h_1a7de4dcc7d1f397d2c02443dd7cb3e65b">luaV_modf</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<link linkend="_lua_8h_1af0a6ed3b852d680769cfc410a0672172">lua_Number</link>&#32;x,&#32;<link linkend="_lua_8h_1af0a6ed3b852d680769cfc410a0672172">lua_Number</link>&#32;y);
00131 <link linkend="_luaconf_8h_1a3f43b35a70c93f2cfde1db42a5a24f1e">LUAI_FUNC</link>&#32;<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;<link linkend="_lvm_8h_1aa785f0ac32664e47c2d3689d75edc5e8">luaV_shiftl</link>&#32;(<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;x,&#32;<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;y);
00132 <link linkend="_luaconf_8h_1a3f43b35a70c93f2cfde1db42a5a24f1e">LUAI_FUNC</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_lvm_8h_1a414b4b487239935324f2f16e1e7715db">luaV_objlen</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<link linkend="_union_stack_value">StkId</link>&#32;ra,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_value">TValue</link>&#32;*rb);
00133 
00134 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
