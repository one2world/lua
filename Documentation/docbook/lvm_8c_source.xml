<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_lvm_8c_source" xml:lang="zh">
<title>D:/gitworkspace/lua/lvm.c</title>
<programlisting>00001 <emphasis role="comment">/*</emphasis>
00002 <emphasis role="comment">**&#32;$Id:&#32;lvm.c&#32;$</emphasis>
00003 <emphasis role="comment">**&#32;Lua&#32;virtual&#32;machine</emphasis>
00004 <emphasis role="comment">**&#32;See&#32;Copyright&#32;Notice&#32;in&#32;lua.h</emphasis>
00005 <emphasis role="comment">*/</emphasis>
00006 
<anchor xml:id="_lvm_8c_source_1l00007"/><link linkend="_lvm_8c_1a26fd89afa52fe8d2335f741f35611ea2">00007</link> <emphasis role="preprocessor">#define&#32;lvm_c</emphasis>
<anchor xml:id="_lvm_8c_source_1l00008"/><link linkend="_lvm_8c_1abf0b3947b59218777a8e928a10be205b">00008</link> <emphasis role="preprocessor">#define&#32;LUA_CORE</emphasis>
00009 
00010 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_lprefix_8h">lprefix.h</link>&quot;</emphasis>
00011 
00012 <emphasis role="preprocessor">#include&#32;&lt;float.h&gt;</emphasis>
00013 <emphasis role="preprocessor">#include&#32;&lt;limits.h&gt;</emphasis>
00014 <emphasis role="preprocessor">#include&#32;&lt;math.h&gt;</emphasis>
00015 <emphasis role="preprocessor">#include&#32;&lt;stdio.h&gt;</emphasis>
00016 <emphasis role="preprocessor">#include&#32;&lt;stdlib.h&gt;</emphasis>
00017 <emphasis role="preprocessor">#include&#32;&lt;string.h&gt;</emphasis>
00018 
00019 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_lua_8h">lua.h</link>&quot;</emphasis>
00020 
00021 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_ldebug_8h">ldebug.h</link>&quot;</emphasis>
00022 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_ldo_8h">ldo.h</link>&quot;</emphasis>
00023 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_lfunc_8h">lfunc.h</link>&quot;</emphasis>
00024 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_lgc_8h">lgc.h</link>&quot;</emphasis>
00025 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_lobject_8h">lobject.h</link>&quot;</emphasis>
00026 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_lopcodes_8h">lopcodes.h</link>&quot;</emphasis>
00027 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_lstate_8h">lstate.h</link>&quot;</emphasis>
00028 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_lstring_8h">lstring.h</link>&quot;</emphasis>
00029 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_ltable_8h">ltable.h</link>&quot;</emphasis>
00030 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_ltm_8h">ltm.h</link>&quot;</emphasis>
00031 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_lvm_8h">lvm.h</link>&quot;</emphasis>
00032 
00033 
00034 <emphasis role="comment">/*</emphasis>
00035 <emphasis role="comment">**&#32;By&#32;default,&#32;use&#32;jump&#32;tables&#32;in&#32;the&#32;main&#32;interpreter&#32;loop&#32;on&#32;gcc</emphasis>
00036 <emphasis role="comment">**&#32;and&#32;compatible&#32;compilers.</emphasis>
00037 <emphasis role="comment">*/</emphasis>
00038 <emphasis role="preprocessor">#if&#32;!defined(LUA_USE_JUMPTABLE)</emphasis>
00039 <emphasis role="preprocessor">#if&#32;defined(__GNUC__)</emphasis>
00040 <emphasis role="preprocessor">#define&#32;LUA_USE_JUMPTABLE&#32;&#32;&#32;1</emphasis>
00041 <emphasis role="preprocessor">#else</emphasis>
<anchor xml:id="_lvm_8c_source_1l00042"/><link linkend="_lvm_8c_1a23db0b8d14efa41ab925d3c939eff24b">00042</link> <emphasis role="preprocessor">#define&#32;LUA_USE_JUMPTABLE&#32;&#32;&#32;0</emphasis>
00043 <emphasis role="preprocessor">#endif</emphasis>
00044 <emphasis role="preprocessor">#endif</emphasis>
00045 
00046 
00047 
00048 <emphasis role="comment">/*&#32;limit&#32;for&#32;table&#32;tag-method&#32;chains&#32;(to&#32;avoid&#32;infinite&#32;loops)&#32;*/</emphasis>
<anchor xml:id="_lvm_8c_source_1l00049"/><link linkend="_lvm_8c_1aa25ebed8c5d8537e72643d5c81420bea">00049</link> <emphasis role="preprocessor">#define&#32;MAXTAGLOOP&#32;&#32;2000</emphasis>
00050 
00051 
00052 <emphasis role="comment">/*</emphasis>
00053 <emphasis role="comment">**&#32;&apos;l_intfitsf&apos;&#32;checks&#32;whether&#32;a&#32;given&#32;integer&#32;is&#32;in&#32;the&#32;range&#32;that</emphasis>
00054 <emphasis role="comment">**&#32;can&#32;be&#32;converted&#32;to&#32;a&#32;float&#32;without&#32;rounding.&#32;Used&#32;in&#32;comparisons.</emphasis>
00055 <emphasis role="comment">*/</emphasis>
00056 
00057 <emphasis role="comment">/*&#32;number&#32;of&#32;bits&#32;in&#32;the&#32;mantissa&#32;of&#32;a&#32;float&#32;*/</emphasis>
<anchor xml:id="_lvm_8c_source_1l00058"/><link linkend="_lvm_8c_1ae126772a4eeffe9b1f4ad8b8bea1228f">00058</link> <emphasis role="preprocessor">#define&#32;NBM&#32;&#32;&#32;&#32;&#32;(l_floatatt(MANT_DIG))</emphasis>
00059 
00060 <emphasis role="comment">/*</emphasis>
00061 <emphasis role="comment">**&#32;Check&#32;whether&#32;some&#32;integers&#32;may&#32;not&#32;fit&#32;in&#32;a&#32;float,&#32;testing&#32;whether</emphasis>
00062 <emphasis role="comment">**&#32;(maxinteger&#32;&gt;&gt;&#32;NBM)&#32;&gt;&#32;0.&#32;(That&#32;implies&#32;(1&#32;&lt;&lt;&#32;NBM)&#32;&lt;=&#32;maxinteger.)</emphasis>
00063 <emphasis role="comment">**&#32;(The&#32;shifts&#32;are&#32;done&#32;in&#32;parts,&#32;to&#32;avoid&#32;shifting&#32;by&#32;more&#32;than&#32;the&#32;size</emphasis>
00064 <emphasis role="comment">**&#32;of&#32;an&#32;integer.&#32;In&#32;a&#32;worst&#32;case,&#32;NBM&#32;==&#32;113&#32;for&#32;long&#32;double&#32;and</emphasis>
00065 <emphasis role="comment">**&#32;sizeof(long)&#32;==&#32;32.)</emphasis>
00066 <emphasis role="comment">*/</emphasis>
00067 <emphasis role="preprocessor">#if&#32;((((LUA_MAXINTEGER&#32;&gt;&gt;&#32;(NBM&#32;/&#32;4))&#32;&gt;&gt;&#32;(NBM&#32;/&#32;4))&#32;&gt;&gt;&#32;(NBM&#32;/&#32;4))&#32;\</emphasis>
00068 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&gt;&gt;&#32;(NBM&#32;-&#32;(3&#32;*&#32;(NBM&#32;/&#32;4))))&#32;&#32;&gt;&#32;&#32;0</emphasis>
00069 
00070 <emphasis role="comment">/*&#32;limit&#32;for&#32;integers&#32;that&#32;fit&#32;in&#32;a&#32;float&#32;*/</emphasis>
00071 <emphasis role="preprocessor">#define&#32;MAXINTFITSF&#32;((lua_Unsigned)1&#32;&lt;&lt;&#32;NBM)</emphasis>
00072 
00073 <emphasis role="comment">/*&#32;check&#32;whether&#32;&apos;i&apos;&#32;is&#32;in&#32;the&#32;interval&#32;[-MAXINTFITSF,&#32;MAXINTFITSF]&#32;*/</emphasis>
00074 <emphasis role="preprocessor">#define&#32;l_intfitsf(i)&#32;&#32;&#32;((MAXINTFITSF&#32;+&#32;l_castS2U(i))&#32;&lt;=&#32;(2&#32;*&#32;MAXINTFITSF))</emphasis>
00075 
00076 <emphasis role="preprocessor">#else&#32;&#32;</emphasis><emphasis role="comment">/*&#32;all&#32;integers&#32;fit&#32;in&#32;a&#32;float&#32;precisely&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
00077 
<anchor xml:id="_lvm_8c_source_1l00078"/><link linkend="_lvm_8c_1ae3419ac662e1d1cf37cde228781d8ad9">00078</link> <emphasis role="preprocessor">#define&#32;l_intfitsf(i)&#32;&#32;&#32;1</emphasis>
00079 
00080 <emphasis role="preprocessor">#endif</emphasis>
00081 
00082 
00083 <emphasis role="comment">/*</emphasis>
00084 <emphasis role="comment">**&#32;Try&#32;to&#32;convert&#32;a&#32;value&#32;from&#32;string&#32;to&#32;a&#32;number&#32;value.</emphasis>
00085 <emphasis role="comment">**&#32;If&#32;the&#32;value&#32;is&#32;not&#32;a&#32;string&#32;or&#32;is&#32;a&#32;string&#32;not&#32;representing</emphasis>
00086 <emphasis role="comment">**&#32;a&#32;valid&#32;numeral&#32;(or&#32;if&#32;coercions&#32;from&#32;strings&#32;to&#32;numbers</emphasis>
00087 <emphasis role="comment">**&#32;are&#32;disabled&#32;via&#32;macro&#32;&apos;cvt2num&apos;),&#32;do&#32;not&#32;modify&#32;&apos;result&apos;</emphasis>
00088 <emphasis role="comment">**&#32;and&#32;return&#32;0.</emphasis>
00089 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lvm_8c_source_1l00090"/><link linkend="_lvm_8c_1ad20630400fb41a023f723f86d1bcf2ee">00090</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lvm_8c_1ad20630400fb41a023f723f86d1bcf2ee">l_strton</link>&#32;(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_value">TValue</link>&#32;*obj,&#32;<link linkend="_struct_t_value">TValue</link>&#32;*result)&#32;{
00091 &#32;&#32;<link linkend="_llimits_8h_1a5978f5fda715bd80e845df1e16ad7780">lua_assert</link>(obj&#32;!=&#32;result);
00092 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_lvm_8h_1a19856e050e5fb27e8c0babf15cf1a1fa">cvt2num</link>(obj))&#32;&#32;<emphasis role="comment">/*&#32;is&#32;object&#32;not&#32;a&#32;string?&#32;*/</emphasis>
00093 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
00094 &#32;&#32;<emphasis role="keywordflow">else</emphasis>
00095 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="_lobject_8c_1ab1956c979ca7ff39b07534390714505d">luaO_str2num</link>(<link linkend="_lobject_8h_1ac2c9eedf3ff2c3042445b3b534f161e1">svalue</link>(obj),&#32;result)&#32;==&#32;<link linkend="_lobject_8h_1a9753d5f343806e0cb16293f53143098c">vslen</link>(obj)&#32;+&#32;1);
00096 }
00097 
00098 
00099 <emphasis role="comment">/*</emphasis>
00100 <emphasis role="comment">**&#32;Try&#32;to&#32;convert&#32;a&#32;value&#32;to&#32;a&#32;float.&#32;The&#32;float&#32;case&#32;is&#32;already&#32;handled</emphasis>
00101 <emphasis role="comment">**&#32;by&#32;the&#32;macro&#32;&apos;tonumber&apos;.</emphasis>
00102 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lvm_8c_source_1l00103"/><link linkend="_lvm_8h_1a8dde84947fb2b5ec169813216235a4ba">00103</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lvm_8c_1adf13f75d26fb8674d228c32803abe382">luaV_tonumber_</link>&#32;(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_value">TValue</link>&#32;*obj,&#32;<link linkend="_lua_8h_1af0a6ed3b852d680769cfc410a0672172">lua_Number</link>&#32;*n)&#32;{
00104 &#32;&#32;<link linkend="_struct_t_value">TValue</link>&#32;v;
00105 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lobject_8h_1abade243295a9140f7b86838fbb049054">ttisinteger</link>(obj))&#32;{
00106 &#32;&#32;&#32;&#32;*n&#32;=&#32;<link linkend="_llimits_8h_1ac92cecb12c5aba1164877e81e76e2cb6">cast_num</link>(<link linkend="_lobject_8h_1af1a59636db050b842a791cd19086d925">ivalue</link>(obj));
00107 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
00108 &#32;&#32;}
00109 &#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lvm_8c_1ad20630400fb41a023f723f86d1bcf2ee">l_strton</link>(obj,&#32;&amp;v))&#32;{&#32;&#32;<emphasis role="comment">/*&#32;string&#32;coercible&#32;to&#32;number?&#32;*/</emphasis>
00110 &#32;&#32;&#32;&#32;*n&#32;=&#32;<link linkend="_lobject_8h_1a690ab618235691bb5a82610f07dd8684">nvalue</link>(&amp;v);&#32;&#32;<emphasis role="comment">/*&#32;convert&#32;result&#32;of&#32;&apos;luaO_str2num&apos;&#32;to&#32;a&#32;float&#32;*/</emphasis>
00111 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
00112 &#32;&#32;}
00113 &#32;&#32;<emphasis role="keywordflow">else</emphasis>
00114 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;&#32;&#32;<emphasis role="comment">/*&#32;conversion&#32;failed&#32;*/</emphasis>
00115 }
00116 
00117 
00118 <emphasis role="comment">/*</emphasis>
00119 <emphasis role="comment">**&#32;try&#32;to&#32;convert&#32;a&#32;float&#32;to&#32;an&#32;integer,&#32;rounding&#32;according&#32;to&#32;&apos;mode&apos;.</emphasis>
00120 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lvm_8c_source_1l00121"/><link linkend="_lvm_8h_1aafdf8bf00e39d6cf1d53e1e364ced4cb">00121</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lvm_8c_1a3a9a9378ccdbd0ea4cba6555673dccf9">luaV_flttointeger</link>&#32;(<link linkend="_lua_8h_1af0a6ed3b852d680769cfc410a0672172">lua_Number</link>&#32;n,&#32;<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;*p,&#32;<link linkend="_lvm_8h_1a1639065f78212a54317141b2703061c0">F2Imod</link>&#32;mode)&#32;{
00122 &#32;&#32;<link linkend="_lua_8h_1af0a6ed3b852d680769cfc410a0672172">lua_Number</link>&#32;f&#32;=&#32;<link linkend="_luaconf_8h_1a89e74d547b8879cf8d10c3e956c283b9">l_floor</link>(n);
00123 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(n&#32;!=&#32;f)&#32;{&#32;&#32;<emphasis role="comment">/*&#32;not&#32;an&#32;integral&#32;value?&#32;*/</emphasis>
00124 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(mode&#32;==&#32;<link linkend="_lvm_8h_1a1639065f78212a54317141b2703061c0a7eaebd7cdc41b6f7c4ae319a813f3995">F2Ieq</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;&#32;&#32;<emphasis role="comment">/*&#32;fails&#32;if&#32;mode&#32;demands&#32;integral&#32;value&#32;*/</emphasis>
00125 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(mode&#32;==&#32;<link linkend="_lvm_8h_1a1639065f78212a54317141b2703061c0ac844cfcb3d7f91dd0c10f424d93c13ca">F2Iceil</link>)&#32;&#32;<emphasis role="comment">/*&#32;needs&#32;ceil?&#32;*/</emphasis>
00126 &#32;&#32;&#32;&#32;&#32;&#32;f&#32;+=&#32;1;&#32;&#32;<emphasis role="comment">/*&#32;convert&#32;floor&#32;to&#32;ceil&#32;(remember:&#32;n&#32;!=&#32;f)&#32;*/</emphasis>
00127 &#32;&#32;}
00128 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_luaconf_8h_1a4b0d24a7a90003778668e2d01831bb88">lua_numbertointeger</link>(f,&#32;p);
00129 }
00130 
00131 
00132 <emphasis role="comment">/*</emphasis>
00133 <emphasis role="comment">**&#32;try&#32;to&#32;convert&#32;a&#32;value&#32;to&#32;an&#32;integer,&#32;rounding&#32;according&#32;to&#32;&apos;mode&apos;,</emphasis>
00134 <emphasis role="comment">**&#32;without&#32;string&#32;coercion.</emphasis>
00135 <emphasis role="comment">**&#32;(&quot;Fast&#32;track&quot;&#32;handled&#32;by&#32;macro&#32;&apos;tointegerns&apos;.)</emphasis>
00136 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lvm_8c_source_1l00137"/><link linkend="_lvm_8h_1a217081972ce52f0e7a489d2398422b39">00137</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lvm_8c_1aed793e2bcd34f922ab591e317e57d375">luaV_tointegerns</link>&#32;(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_value">TValue</link>&#32;*obj,&#32;<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;*p,&#32;<link linkend="_lvm_8h_1a1639065f78212a54317141b2703061c0">F2Imod</link>&#32;mode)&#32;{
00138 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lobject_8h_1ac1338b5ac67cadf27489f5ae7e939c29">ttisfloat</link>(obj))
00139 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_lvm_8c_1a3a9a9378ccdbd0ea4cba6555673dccf9">luaV_flttointeger</link>(<link linkend="_lobject_8h_1a7d7d6b08f40350c9e7364e9cb984d744">fltvalue</link>(obj),&#32;p,&#32;mode);
00140 &#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lobject_8h_1abade243295a9140f7b86838fbb049054">ttisinteger</link>(obj))&#32;{
00141 &#32;&#32;&#32;&#32;*p&#32;=&#32;<link linkend="_lobject_8h_1af1a59636db050b842a791cd19086d925">ivalue</link>(obj);
00142 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
00143 &#32;&#32;}
00144 &#32;&#32;<emphasis role="keywordflow">else</emphasis>
00145 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
00146 }
00147 
00148 
00149 <emphasis role="comment">/*</emphasis>
00150 <emphasis role="comment">**&#32;try&#32;to&#32;convert&#32;a&#32;value&#32;to&#32;an&#32;integer.</emphasis>
00151 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lvm_8c_source_1l00152"/><link linkend="_lvm_8h_1a2a864417ad70b6e8d3eb7d3c10cad672">00152</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lvm_8c_1a924f46c2bf450e137210ca19b4461747">luaV_tointeger</link>&#32;(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_value">TValue</link>&#32;*obj,&#32;<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;*p,&#32;<link linkend="_lvm_8h_1a1639065f78212a54317141b2703061c0">F2Imod</link>&#32;mode)&#32;{
00153 &#32;&#32;<link linkend="_struct_t_value">TValue</link>&#32;v;
00154 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lvm_8c_1ad20630400fb41a023f723f86d1bcf2ee">l_strton</link>(obj,&#32;&amp;v))&#32;&#32;<emphasis role="comment">/*&#32;does&#32;&apos;obj&apos;&#32;point&#32;to&#32;a&#32;numerical&#32;string?&#32;*/</emphasis>
00155 &#32;&#32;&#32;&#32;obj&#32;=&#32;&amp;v;&#32;&#32;<emphasis role="comment">/*&#32;change&#32;it&#32;to&#32;point&#32;to&#32;its&#32;corresponding&#32;number&#32;*/</emphasis>
00156 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_lvm_8c_1aed793e2bcd34f922ab591e317e57d375">luaV_tointegerns</link>(obj,&#32;p,&#32;mode);
00157 }
00158 
00159 
00160 <emphasis role="comment">/*</emphasis>
00161 <emphasis role="comment">**&#32;Try&#32;to&#32;convert&#32;a&#32;&apos;for&apos;&#32;limit&#32;to&#32;an&#32;integer,&#32;preserving&#32;the&#32;semantics</emphasis>
00162 <emphasis role="comment">**&#32;of&#32;the&#32;loop.&#32;Return&#32;true&#32;if&#32;the&#32;loop&#32;must&#32;not&#32;run;&#32;otherwise,&#32;&apos;*p&apos;</emphasis>
00163 <emphasis role="comment">**&#32;gets&#32;the&#32;integer&#32;limit.</emphasis>
00164 <emphasis role="comment">**&#32;(The&#32;following&#32;explanation&#32;assumes&#32;a&#32;positive&#32;step;&#32;it&#32;is&#32;valid&#32;for</emphasis>
00165 <emphasis role="comment">**&#32;negative&#32;steps&#32;mutatis&#32;mutandis.)</emphasis>
00166 <emphasis role="comment">**&#32;If&#32;the&#32;limit&#32;is&#32;an&#32;integer&#32;or&#32;can&#32;be&#32;converted&#32;to&#32;an&#32;integer,</emphasis>
00167 <emphasis role="comment">**&#32;rounding&#32;down,&#32;that&#32;is&#32;the&#32;limit.</emphasis>
00168 <emphasis role="comment">**&#32;Otherwise,&#32;check&#32;whether&#32;the&#32;limit&#32;can&#32;be&#32;converted&#32;to&#32;a&#32;float.&#32;If</emphasis>
00169 <emphasis role="comment">**&#32;the&#32;float&#32;is&#32;too&#32;large,&#32;clip&#32;it&#32;to&#32;LUA_MAXINTEGER.&#32;&#32;If&#32;the&#32;float</emphasis>
00170 <emphasis role="comment">**&#32;is&#32;too&#32;negative,&#32;the&#32;loop&#32;should&#32;not&#32;run,&#32;because&#32;any&#32;initial</emphasis>
00171 <emphasis role="comment">**&#32;integer&#32;value&#32;is&#32;greater&#32;than&#32;such&#32;limit;&#32;so,&#32;the&#32;function&#32;returns</emphasis>
00172 <emphasis role="comment">**&#32;true&#32;to&#32;signal&#32;that.&#32;(For&#32;this&#32;latter&#32;case,&#32;no&#32;integer&#32;limit&#32;would&#32;be</emphasis>
00173 <emphasis role="comment">**&#32;correct;&#32;even&#32;a&#32;limit&#32;of&#32;LUA_MININTEGER&#32;would&#32;run&#32;the&#32;loop&#32;once&#32;for</emphasis>
00174 <emphasis role="comment">**&#32;an&#32;initial&#32;value&#32;equal&#32;to&#32;LUA_MININTEGER.)</emphasis>
00175 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lvm_8c_source_1l00176"/><link linkend="_lvm_8c_1a74de39e56f455130121e51b2cae6685a">00176</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lvm_8c_1a74de39e56f455130121e51b2cae6685a">forlimit</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;init,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_value">TValue</link>&#32;*lim,
00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;*p,&#32;<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;step)&#32;{
00178 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_lvm_8c_1a924f46c2bf450e137210ca19b4461747">luaV_tointeger</link>(lim,&#32;p,&#32;(step&#32;&lt;&#32;0&#32;?&#32;<link linkend="_lvm_8h_1a1639065f78212a54317141b2703061c0ac844cfcb3d7f91dd0c10f424d93c13ca">F2Iceil</link>&#32;:&#32;<link linkend="_lvm_8h_1a1639065f78212a54317141b2703061c0a04712d393ba74d0c04f9f1e80f33c02c">F2Ifloor</link>)))&#32;{
00179 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;not&#32;coercible&#32;to&#32;in&#32;integer&#32;*/</emphasis>
00180 &#32;&#32;&#32;&#32;<link linkend="_lua_8h_1af0a6ed3b852d680769cfc410a0672172">lua_Number</link>&#32;flim;&#32;&#32;<emphasis role="comment">/*&#32;try&#32;to&#32;convert&#32;to&#32;float&#32;*/</emphasis>
00181 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_lvm_8h_1af9edcc5da8ea1ac07ffdf79fbe5bb95c">tonumber</link>(lim,&#32;&amp;flim))&#32;<emphasis role="comment">/*&#32;cannot&#32;convert&#32;to&#32;float?&#32;*/</emphasis>
00182 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_ldebug_8c_1a2d4bfa8b9ba02f149e1d2819b8e98c53">luaG_forerror</link>(L,&#32;lim,&#32;<emphasis role="stringliteral">&quot;limit&quot;</emphasis>);
00183 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;else&#32;&apos;flim&apos;&#32;is&#32;a&#32;float&#32;out&#32;of&#32;integer&#32;bounds&#32;*/</emphasis>
00184 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_llimits_8h_1ae035faaeb068720ee8540210870ee5c9">luai_numlt</link>(0,&#32;flim))&#32;{&#32;&#32;<emphasis role="comment">/*&#32;if&#32;it&#32;is&#32;positive,&#32;it&#32;is&#32;too&#32;large&#32;*/</emphasis>
00185 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(step&#32;&lt;&#32;0)&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;&#32;&#32;<emphasis role="comment">/*&#32;initial&#32;value&#32;must&#32;be&#32;less&#32;than&#32;it&#32;*/</emphasis>
00186 &#32;&#32;&#32;&#32;&#32;&#32;*p&#32;=&#32;LUA_MAXINTEGER;&#32;&#32;<emphasis role="comment">/*&#32;truncate&#32;*/</emphasis>
00187 &#32;&#32;&#32;&#32;}
00188 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{&#32;&#32;<emphasis role="comment">/*&#32;it&#32;is&#32;less&#32;than&#32;min&#32;integer&#32;*/</emphasis>
00189 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(step&#32;&gt;&#32;0)&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;&#32;&#32;<emphasis role="comment">/*&#32;initial&#32;value&#32;must&#32;be&#32;greater&#32;than&#32;it&#32;*/</emphasis>
00190 &#32;&#32;&#32;&#32;&#32;&#32;*p&#32;=&#32;LUA_MININTEGER;&#32;&#32;<emphasis role="comment">/*&#32;truncate&#32;*/</emphasis>
00191 &#32;&#32;&#32;&#32;}
00192 &#32;&#32;}
00193 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(step&#32;&gt;&#32;0&#32;?&#32;init&#32;&gt;&#32;*p&#32;:&#32;init&#32;&lt;&#32;*p);&#32;&#32;<emphasis role="comment">/*&#32;not&#32;to&#32;run?&#32;*/</emphasis>
00194 }
00195 
00196 
00197 <emphasis role="comment">/*</emphasis>
00198 <emphasis role="comment">**&#32;Prepare&#32;a&#32;numerical&#32;for&#32;loop&#32;(opcode&#32;OP_FORPREP).</emphasis>
00199 <emphasis role="comment">**&#32;Return&#32;true&#32;to&#32;skip&#32;the&#32;loop.&#32;Otherwise,</emphasis>
00200 <emphasis role="comment">**&#32;after&#32;preparation,&#32;stack&#32;will&#32;be&#32;as&#32;follows:</emphasis>
00201 <emphasis role="comment">**&#32;&#32;&#32;ra&#32;:&#32;internal&#32;index&#32;(safe&#32;copy&#32;of&#32;the&#32;control&#32;variable)</emphasis>
00202 <emphasis role="comment">**&#32;&#32;&#32;ra&#32;+&#32;1&#32;:&#32;loop&#32;counter&#32;(integer&#32;loops)&#32;or&#32;limit&#32;(float&#32;loops)</emphasis>
00203 <emphasis role="comment">**&#32;&#32;&#32;ra&#32;+&#32;2&#32;:&#32;step</emphasis>
00204 <emphasis role="comment">**&#32;&#32;&#32;ra&#32;+&#32;3&#32;:&#32;control&#32;variable</emphasis>
00205 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lvm_8c_source_1l00206"/><link linkend="_lvm_8c_1a8d9c9746ae6f28dd1b17982a88589b51">00206</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lvm_8c_1a8d9c9746ae6f28dd1b17982a88589b51">forprep</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<link linkend="_union_stack_value">StkId</link>&#32;ra)&#32;{
00207 &#32;&#32;<link linkend="_struct_t_value">TValue</link>&#32;*pinit&#32;=&#32;<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(ra);
00208 &#32;&#32;<link linkend="_struct_t_value">TValue</link>&#32;*plimit&#32;=&#32;<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(ra&#32;+&#32;1);
00209 &#32;&#32;<link linkend="_struct_t_value">TValue</link>&#32;*pstep&#32;=&#32;<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(ra&#32;+&#32;2);
00210 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lobject_8h_1abade243295a9140f7b86838fbb049054">ttisinteger</link>(pinit)&#32;&amp;&amp;&#32;<link linkend="_lobject_8h_1abade243295a9140f7b86838fbb049054">ttisinteger</link>(pstep))&#32;{&#32;<emphasis role="comment">/*&#32;integer&#32;loop?&#32;*/</emphasis>
00211 &#32;&#32;&#32;&#32;<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;init&#32;=&#32;<link linkend="_lobject_8h_1af1a59636db050b842a791cd19086d925">ivalue</link>(pinit);
00212 &#32;&#32;&#32;&#32;<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;step&#32;=&#32;<link linkend="_lobject_8h_1af1a59636db050b842a791cd19086d925">ivalue</link>(pstep);
00213 &#32;&#32;&#32;&#32;<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;limit;
00214 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(step&#32;==&#32;0)
00215 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_ldebug_8c_1a88d38ca5da2e7a1492fc9d5ad70c32c5">luaG_runerror</link>(L,&#32;<emphasis role="stringliteral">&quot;&apos;for&apos;&#32;step&#32;is&#32;zero&quot;</emphasis>);
00216 &#32;&#32;&#32;&#32;<link linkend="_lobject_8h_1af9dd109ba186841ab26efb2d62baf4f6">setivalue</link>(<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(ra&#32;+&#32;3),&#32;init);&#32;&#32;<emphasis role="comment">/*&#32;control&#32;variable&#32;*/</emphasis>
00217 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lvm_8c_1a74de39e56f455130121e51b2cae6685a">forlimit</link>(L,&#32;init,&#32;plimit,&#32;&amp;limit,&#32;step))
00218 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;&#32;&#32;<emphasis role="comment">/*&#32;skip&#32;the&#32;loop&#32;*/</emphasis>
00219 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{&#32;&#32;<emphasis role="comment">/*&#32;prepare&#32;loop&#32;counter&#32;*/</emphasis>
00220 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lua_8h_1a2357bdcd9af1aaef0a6895a9c3b7eccf">lua_Unsigned</link>&#32;count;
00221 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(step&#32;&gt;&#32;0)&#32;{&#32;&#32;<emphasis role="comment">/*&#32;ascending&#32;loop?&#32;*/</emphasis>
00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;count&#32;=&#32;<link linkend="_llimits_8h_1a5871309e671ba9f938fcb1e0d3bcbeca">l_castS2U</link>(limit)&#32;-&#32;<link linkend="_llimits_8h_1a5871309e671ba9f938fcb1e0d3bcbeca">l_castS2U</link>(init);
00223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(step&#32;!=&#32;1)&#32;&#32;<emphasis role="comment">/*&#32;avoid&#32;division&#32;in&#32;the&#32;too&#32;common&#32;case&#32;*/</emphasis>
00224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;count&#32;/=&#32;<link linkend="_llimits_8h_1a5871309e671ba9f938fcb1e0d3bcbeca">l_castS2U</link>(step);
00225 &#32;&#32;&#32;&#32;&#32;&#32;}
00226 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{&#32;&#32;<emphasis role="comment">/*&#32;step&#32;&lt;&#32;0;&#32;descending&#32;loop&#32;*/</emphasis>
00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;count&#32;=&#32;<link linkend="_llimits_8h_1a5871309e671ba9f938fcb1e0d3bcbeca">l_castS2U</link>(init)&#32;-&#32;<link linkend="_llimits_8h_1a5871309e671ba9f938fcb1e0d3bcbeca">l_castS2U</link>(limit);
00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;&apos;step+1&apos;&#32;avoids&#32;negating&#32;&apos;mininteger&apos;&#32;*/</emphasis>
00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;count&#32;/=&#32;<link linkend="_llimits_8h_1a5871309e671ba9f938fcb1e0d3bcbeca">l_castS2U</link>(-(step&#32;+&#32;1))&#32;+&#32;1u;
00230 &#32;&#32;&#32;&#32;&#32;&#32;}
00231 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;store&#32;the&#32;counter&#32;in&#32;place&#32;of&#32;the&#32;limit&#32;(which&#32;won&apos;t&#32;be</emphasis>
00232 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;needed&#32;anymore&#32;*/</emphasis>
00233 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8h_1af9dd109ba186841ab26efb2d62baf4f6">setivalue</link>(plimit,&#32;<link linkend="_llimits_8h_1a873fa1b216f8caed046edbcebd4c1bc8">l_castU2S</link>(count));
00234 &#32;&#32;&#32;&#32;}
00235 &#32;&#32;}
00236 &#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{&#32;&#32;<emphasis role="comment">/*&#32;try&#32;making&#32;all&#32;values&#32;floats&#32;*/</emphasis>
00237 &#32;&#32;&#32;&#32;<link linkend="_lua_8h_1af0a6ed3b852d680769cfc410a0672172">lua_Number</link>&#32;init;&#32;<link linkend="_lua_8h_1af0a6ed3b852d680769cfc410a0672172">lua_Number</link>&#32;limit;&#32;<link linkend="_lua_8h_1af0a6ed3b852d680769cfc410a0672172">lua_Number</link>&#32;step;
00238 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_llimits_8h_1ac6c45889010c1bd68631771b64f18101">unlikely</link>(!<link linkend="_lvm_8h_1af9edcc5da8ea1ac07ffdf79fbe5bb95c">tonumber</link>(plimit,&#32;&amp;limit)))
00239 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_ldebug_8c_1a2d4bfa8b9ba02f149e1d2819b8e98c53">luaG_forerror</link>(L,&#32;plimit,&#32;<emphasis role="stringliteral">&quot;limit&quot;</emphasis>);
00240 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_llimits_8h_1ac6c45889010c1bd68631771b64f18101">unlikely</link>(!<link linkend="_lvm_8h_1af9edcc5da8ea1ac07ffdf79fbe5bb95c">tonumber</link>(pstep,&#32;&amp;step)))
00241 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_ldebug_8c_1a2d4bfa8b9ba02f149e1d2819b8e98c53">luaG_forerror</link>(L,&#32;pstep,&#32;<emphasis role="stringliteral">&quot;step&quot;</emphasis>);
00242 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_llimits_8h_1ac6c45889010c1bd68631771b64f18101">unlikely</link>(!<link linkend="_lvm_8h_1af9edcc5da8ea1ac07ffdf79fbe5bb95c">tonumber</link>(pinit,&#32;&amp;init)))
00243 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_ldebug_8c_1a2d4bfa8b9ba02f149e1d2819b8e98c53">luaG_forerror</link>(L,&#32;pinit,&#32;<emphasis role="stringliteral">&quot;initial&#32;value&quot;</emphasis>);
00244 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(step&#32;==&#32;0)
00245 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_ldebug_8c_1a88d38ca5da2e7a1492fc9d5ad70c32c5">luaG_runerror</link>(L,&#32;<emphasis role="stringliteral">&quot;&apos;for&apos;&#32;step&#32;is&#32;zero&quot;</emphasis>);
00246 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_llimits_8h_1ae035faaeb068720ee8540210870ee5c9">luai_numlt</link>(0,&#32;step)&#32;?&#32;<link linkend="_llimits_8h_1ae035faaeb068720ee8540210870ee5c9">luai_numlt</link>(limit,&#32;init)
00247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_llimits_8h_1ae035faaeb068720ee8540210870ee5c9">luai_numlt</link>(init,&#32;limit))
00248 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;&#32;&#32;<emphasis role="comment">/*&#32;skip&#32;the&#32;loop&#32;*/</emphasis>
00249 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00250 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;make&#32;sure&#32;internal&#32;values&#32;are&#32;all&#32;floats&#32;*/</emphasis>
00251 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8h_1ae357382324a8220a3cf77607752de887">setfltvalue</link>(plimit,&#32;limit);
00252 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8h_1ae357382324a8220a3cf77607752de887">setfltvalue</link>(pstep,&#32;step);
00253 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8h_1ae357382324a8220a3cf77607752de887">setfltvalue</link>(<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(ra),&#32;init);&#32;&#32;<emphasis role="comment">/*&#32;internal&#32;index&#32;*/</emphasis>
00254 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8h_1ae357382324a8220a3cf77607752de887">setfltvalue</link>(<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(ra&#32;+&#32;3),&#32;init);&#32;&#32;<emphasis role="comment">/*&#32;control&#32;variable&#32;*/</emphasis>
00255 &#32;&#32;&#32;&#32;}
00256 &#32;&#32;}
00257 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
00258 }
00259 
00260 
00261 <emphasis role="comment">/*</emphasis>
00262 <emphasis role="comment">**&#32;Execute&#32;a&#32;step&#32;of&#32;a&#32;float&#32;numerical&#32;for&#32;loop,&#32;returning</emphasis>
00263 <emphasis role="comment">**&#32;true&#32;iff&#32;the&#32;loop&#32;must&#32;continue.&#32;(The&#32;integer&#32;case&#32;is</emphasis>
00264 <emphasis role="comment">**&#32;written&#32;online&#32;with&#32;opcode&#32;OP_FORLOOP,&#32;for&#32;performance.)</emphasis>
00265 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lvm_8c_source_1l00266"/><link linkend="_lvm_8c_1ae1da05262daf2e1f5616c2f0e6472264">00266</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lvm_8c_1ae1da05262daf2e1f5616c2f0e6472264">floatforloop</link>&#32;(<link linkend="_union_stack_value">StkId</link>&#32;ra)&#32;{
00267 &#32;&#32;<link linkend="_lua_8h_1af0a6ed3b852d680769cfc410a0672172">lua_Number</link>&#32;step&#32;=&#32;<link linkend="_lobject_8h_1a7d7d6b08f40350c9e7364e9cb984d744">fltvalue</link>(<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(ra&#32;+&#32;2));
00268 &#32;&#32;<link linkend="_lua_8h_1af0a6ed3b852d680769cfc410a0672172">lua_Number</link>&#32;limit&#32;=&#32;<link linkend="_lobject_8h_1a7d7d6b08f40350c9e7364e9cb984d744">fltvalue</link>(<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(ra&#32;+&#32;1));
00269 &#32;&#32;<link linkend="_lua_8h_1af0a6ed3b852d680769cfc410a0672172">lua_Number</link>&#32;idx&#32;=&#32;<link linkend="_lobject_8h_1a7d7d6b08f40350c9e7364e9cb984d744">fltvalue</link>(<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(ra));&#32;&#32;<emphasis role="comment">/*&#32;internal&#32;index&#32;*/</emphasis>
00270 &#32;&#32;idx&#32;=&#32;<link linkend="_llimits_8h_1af3eb5d1884e4512d2701bbc97bb82e81">luai_numadd</link>(L,&#32;idx,&#32;step);&#32;&#32;<emphasis role="comment">/*&#32;increment&#32;index&#32;*/</emphasis>
00271 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_llimits_8h_1ae035faaeb068720ee8540210870ee5c9">luai_numlt</link>(0,&#32;step)&#32;?&#32;<link linkend="_llimits_8h_1af803655e8c9be7ba1f3f3fb0c4f730d7">luai_numle</link>(idx,&#32;limit)
00272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_llimits_8h_1af803655e8c9be7ba1f3f3fb0c4f730d7">luai_numle</link>(limit,&#32;idx))&#32;{
00273 &#32;&#32;&#32;&#32;<link linkend="_lobject_8h_1afb905ab8008c82b24755df25012408f2">chgfltvalue</link>(<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(ra),&#32;idx);&#32;&#32;<emphasis role="comment">/*&#32;update&#32;internal&#32;index&#32;*/</emphasis>
00274 &#32;&#32;&#32;&#32;<link linkend="_lobject_8h_1ae357382324a8220a3cf77607752de887">setfltvalue</link>(<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(ra&#32;+&#32;3),&#32;idx);&#32;&#32;<emphasis role="comment">/*&#32;and&#32;control&#32;variable&#32;*/</emphasis>
00275 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;&#32;&#32;<emphasis role="comment">/*&#32;jump&#32;back&#32;*/</emphasis>
00276 &#32;&#32;}
00277 &#32;&#32;<emphasis role="keywordflow">else</emphasis>
00278 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;&#32;&#32;<emphasis role="comment">/*&#32;finish&#32;the&#32;loop&#32;*/</emphasis>
00279 }
00280 
00281 
00282 <emphasis role="comment">/*</emphasis>
00283 <emphasis role="comment">**&#32;Finish&#32;the&#32;table&#32;access&#32;&apos;val&#32;=&#32;t[key]&apos;.</emphasis>
00284 <emphasis role="comment">**&#32;if&#32;&apos;slot&apos;&#32;is&#32;NULL,&#32;&apos;t&apos;&#32;is&#32;not&#32;a&#32;table;&#32;otherwise,&#32;&apos;slot&apos;&#32;points&#32;to</emphasis>
00285 <emphasis role="comment">**&#32;t[k]&#32;entry&#32;(which&#32;must&#32;be&#32;empty).</emphasis>
00286 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lvm_8c_source_1l00287"/><link linkend="_lvm_8h_1a282d1037898c9b77aae41b12327a6c72">00287</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_lvm_8c_1a45c30a70c51ed843f58bd446aa2096c9">luaV_finishget</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_value">TValue</link>&#32;*t,&#32;<link linkend="_struct_t_value">TValue</link>&#32;*key,&#32;<link linkend="_union_stack_value">StkId</link>&#32;val,
00288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_value">TValue</link>&#32;*slot)&#32;{
00289 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;loop;&#32;&#32;<emphasis role="comment">/*&#32;counter&#32;to&#32;avoid&#32;infinite&#32;loops&#32;*/</emphasis>
00290 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_value">TValue</link>&#32;*tm;&#32;&#32;<emphasis role="comment">/*&#32;metamethod&#32;*/</emphasis>
00291 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(loop&#32;=&#32;0;&#32;loop&#32;&lt;&#32;<link linkend="_lvm_8c_1aa25ebed8c5d8537e72643d5c81420bea">MAXTAGLOOP</link>;&#32;loop++)&#32;{
00292 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(slot&#32;==&#32;NULL)&#32;{&#32;&#32;<emphasis role="comment">/*&#32;&apos;t&apos;&#32;is&#32;not&#32;a&#32;table?&#32;*/</emphasis>
00293 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_llimits_8h_1a5978f5fda715bd80e845df1e16ad7780">lua_assert</link>(!<link linkend="_lobject_8h_1ac5338f5fe3885d1ee65412e00a44384e">ttistable</link>(t));
00294 &#32;&#32;&#32;&#32;&#32;&#32;tm&#32;=&#32;<link linkend="_ltm_8c_1a0a3a3df9d6e7f17d806f74d411e59b2d">luaT_gettmbyobj</link>(L,&#32;t,&#32;<link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1a9adb5d2c8bad970dff73ee1b9df1242e">TM_INDEX</link>);
00295 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_llimits_8h_1ac6c45889010c1bd68631771b64f18101">unlikely</link>(<link linkend="_ltm_8h_1a219a766ba661fa51758627615c22e632">notm</link>(tm)))
00296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_ldebug_8c_1a60bf9ce85441bd5065f2b73640163711">luaG_typeerror</link>(L,&#32;t,&#32;<emphasis role="stringliteral">&quot;index&quot;</emphasis>);&#32;&#32;<emphasis role="comment">/*&#32;no&#32;metamethod&#32;*/</emphasis>
00297 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;else&#32;will&#32;try&#32;the&#32;metamethod&#32;*/</emphasis>
00298 &#32;&#32;&#32;&#32;}
00299 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{&#32;&#32;<emphasis role="comment">/*&#32;&apos;t&apos;&#32;is&#32;a&#32;table&#32;*/</emphasis>
00300 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_llimits_8h_1a5978f5fda715bd80e845df1e16ad7780">lua_assert</link>(<link linkend="_lobject_8h_1a5345ae49ed16dfecdfef95ec5399b000">isempty</link>(slot));
00301 &#32;&#32;&#32;&#32;&#32;&#32;tm&#32;=&#32;<link linkend="_ltm_8h_1a0a29ed88450f8f92330a6a411a9c8134">fasttm</link>(L,&#32;<link linkend="_lobject_8h_1a336a6ce5e8340e6de133ec249cf47ebf">hvalue</link>(t)-&gt;metatable,&#32;<link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1a9adb5d2c8bad970dff73ee1b9df1242e">TM_INDEX</link>);&#32;&#32;<emphasis role="comment">/*&#32;table&apos;s&#32;metamethod&#32;*/</emphasis>
00302 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tm&#32;==&#32;NULL)&#32;{&#32;&#32;<emphasis role="comment">/*&#32;no&#32;metamethod?&#32;*/</emphasis>
00303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8h_1ad9034def7bbc1965ec3d714d84620b07">setnilvalue</link>(<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(val));&#32;&#32;<emphasis role="comment">/*&#32;result&#32;is&#32;nil&#32;*/</emphasis>
00304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
00305 &#32;&#32;&#32;&#32;&#32;&#32;}
00306 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;else&#32;will&#32;try&#32;the&#32;metamethod&#32;*/</emphasis>
00307 &#32;&#32;&#32;&#32;}
00308 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lobject_8h_1a48587dcb78721d149d3184d0768f4950">ttisfunction</link>(tm))&#32;{&#32;&#32;<emphasis role="comment">/*&#32;is&#32;metamethod&#32;a&#32;function?&#32;*/</emphasis>
00309 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_ltm_8c_1aad98f3a425ba53e65e7a8f8037320402">luaT_callTMres</link>(L,&#32;tm,&#32;t,&#32;key,&#32;val);&#32;&#32;<emphasis role="comment">/*&#32;call&#32;it&#32;*/</emphasis>
00310 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
00311 &#32;&#32;&#32;&#32;}
00312 &#32;&#32;&#32;&#32;t&#32;=&#32;tm;&#32;&#32;<emphasis role="comment">/*&#32;else&#32;try&#32;to&#32;access&#32;&apos;tm[key]&apos;&#32;*/</emphasis>
00313 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lvm_8h_1a16d42351ed7a1d0c0c1677bdfd3b123b">luaV_fastget</link>(L,&#32;t,&#32;key,&#32;slot,&#32;<link linkend="_ltable_8c_1a8b4fce00d7db27ee9caac3d49863dea3">luaH_get</link>))&#32;{&#32;&#32;<emphasis role="comment">/*&#32;fast&#32;track?&#32;*/</emphasis>
00314 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8h_1add70d29b431f66a1dee29a0cb286de6e">setobj2s</link>(L,&#32;val,&#32;slot);&#32;&#32;<emphasis role="comment">/*&#32;done&#32;*/</emphasis>
00315 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
00316 &#32;&#32;&#32;&#32;}
00317 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;else&#32;repeat&#32;(tail&#32;call&#32;&apos;luaV_finishget&apos;)&#32;*/</emphasis>
00318 &#32;&#32;}
00319 &#32;&#32;<link linkend="_ldebug_8c_1a88d38ca5da2e7a1492fc9d5ad70c32c5">luaG_runerror</link>(L,&#32;<emphasis role="stringliteral">&quot;&apos;__index&apos;&#32;chain&#32;too&#32;long;&#32;possible&#32;loop&quot;</emphasis>);
00320 }
00321 
00322 
00323 <emphasis role="comment">/*</emphasis>
00324 <emphasis role="comment">**&#32;Finish&#32;a&#32;table&#32;assignment&#32;&apos;t[key]&#32;=&#32;val&apos;.</emphasis>
00325 <emphasis role="comment">**&#32;If&#32;&apos;slot&apos;&#32;is&#32;NULL,&#32;&apos;t&apos;&#32;is&#32;not&#32;a&#32;table.&#32;&#32;Otherwise,&#32;&apos;slot&apos;&#32;points</emphasis>
00326 <emphasis role="comment">**&#32;to&#32;the&#32;entry&#32;&apos;t[key]&apos;,&#32;or&#32;to&#32;a&#32;value&#32;with&#32;an&#32;absent&#32;key&#32;if&#32;there</emphasis>
00327 <emphasis role="comment">**&#32;is&#32;no&#32;such&#32;entry.&#32;&#32;(The&#32;value&#32;at&#32;&apos;slot&apos;&#32;must&#32;be&#32;empty,&#32;otherwise</emphasis>
00328 <emphasis role="comment">**&#32;&apos;luaV_fastget&apos;&#32;would&#32;have&#32;done&#32;the&#32;job.)</emphasis>
00329 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lvm_8c_source_1l00330"/><link linkend="_lvm_8h_1ab932d6ab0da7d7c900e4fa020b08ea76">00330</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_lvm_8c_1a190116824dc13c5d37a6b2962f425a0d">luaV_finishset</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_value">TValue</link>&#32;*t,&#32;<link linkend="_struct_t_value">TValue</link>&#32;*key,
00331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_t_value">TValue</link>&#32;*val,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_value">TValue</link>&#32;*slot)&#32;{
00332 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;loop;&#32;&#32;<emphasis role="comment">/*&#32;counter&#32;to&#32;avoid&#32;infinite&#32;loops&#32;*/</emphasis>
00333 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(loop&#32;=&#32;0;&#32;loop&#32;&lt;&#32;<link linkend="_lvm_8c_1aa25ebed8c5d8537e72643d5c81420bea">MAXTAGLOOP</link>;&#32;loop++)&#32;{
00334 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_value">TValue</link>&#32;*tm;&#32;&#32;<emphasis role="comment">/*&#32;&apos;__newindex&apos;&#32;metamethod&#32;*/</emphasis>
00335 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(slot&#32;!=&#32;NULL)&#32;{&#32;&#32;<emphasis role="comment">/*&#32;is&#32;&apos;t&apos;&#32;a&#32;table?&#32;*/</emphasis>
00336 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_table">Table</link>&#32;*h&#32;=&#32;<link linkend="_lobject_8h_1a336a6ce5e8340e6de133ec249cf47ebf">hvalue</link>(t);&#32;&#32;<emphasis role="comment">/*&#32;save&#32;&apos;t&apos;&#32;table&#32;*/</emphasis>
00337 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_llimits_8h_1a5978f5fda715bd80e845df1e16ad7780">lua_assert</link>(<link linkend="_lobject_8h_1a5345ae49ed16dfecdfef95ec5399b000">isempty</link>(slot));&#32;&#32;<emphasis role="comment">/*&#32;slot&#32;must&#32;be&#32;empty&#32;*/</emphasis>
00338 &#32;&#32;&#32;&#32;&#32;&#32;tm&#32;=&#32;<link linkend="_ltm_8h_1a0a29ed88450f8f92330a6a411a9c8134">fasttm</link>(L,&#32;h-&gt;<link linkend="_struct_table_1a7051e0d573f6be65b230b27565a1a901">metatable</link>,&#32;<link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1a256e00a44fb438064c2eb7a8b7df206d">TM_NEWINDEX</link>);&#32;&#32;<emphasis role="comment">/*&#32;get&#32;metamethod&#32;*/</emphasis>
00339 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tm&#32;==&#32;NULL)&#32;{&#32;&#32;<emphasis role="comment">/*&#32;no&#32;metamethod?&#32;*/</emphasis>
00340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lobject_8h_1abb0534795c360c0ac007d3729758f908">isabstkey</link>(slot))&#32;&#32;<emphasis role="comment">/*&#32;no&#32;previous&#32;entry?&#32;*/</emphasis>
00341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;slot&#32;=&#32;<link linkend="_ltable_8c_1acd27c97015f505846bd7052b144f3133">luaH_newkey</link>(L,&#32;h,&#32;key);&#32;&#32;<emphasis role="comment">/*&#32;create&#32;one&#32;*/</emphasis>
00342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;no&#32;metamethod&#32;and&#32;(now)&#32;there&#32;is&#32;an&#32;entry&#32;with&#32;given&#32;key&#32;*/</emphasis>
00343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8h_1adefdd17d98f1f5734ee296395e1805d4">setobj2t</link>(L,&#32;<link linkend="_llimits_8h_1af17d62ec9e237a7644de6b9b34a48a34">cast</link>(<link linkend="_struct_t_value">TValue</link>&#32;*,&#32;slot),&#32;val);&#32;&#32;<emphasis role="comment">/*&#32;set&#32;its&#32;new&#32;value&#32;*/</emphasis>
00344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_ltable_8h_1a69534d37fbaf464430636bf437108530">invalidateTMcache</link>(h);
00345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lgc_8h_1a60903f232a1c51d22de556ea4c144f3a">luaC_barrierback</link>(L,&#32;<link linkend="_lstate_8h_1a254ca29aba03e47440082d4591a9734e">obj2gco</link>(h),&#32;val);
00346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
00347 &#32;&#32;&#32;&#32;&#32;&#32;}
00348 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;else&#32;will&#32;try&#32;the&#32;metamethod&#32;*/</emphasis>
00349 &#32;&#32;&#32;&#32;}
00350 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{&#32;&#32;<emphasis role="comment">/*&#32;not&#32;a&#32;table;&#32;check&#32;metamethod&#32;*/</emphasis>
00351 &#32;&#32;&#32;&#32;&#32;&#32;tm&#32;=&#32;<link linkend="_ltm_8c_1a0a3a3df9d6e7f17d806f74d411e59b2d">luaT_gettmbyobj</link>(L,&#32;t,&#32;<link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1a256e00a44fb438064c2eb7a8b7df206d">TM_NEWINDEX</link>);
00352 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_llimits_8h_1ac6c45889010c1bd68631771b64f18101">unlikely</link>(<link linkend="_ltm_8h_1a219a766ba661fa51758627615c22e632">notm</link>(tm)))
00353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_ldebug_8c_1a60bf9ce85441bd5065f2b73640163711">luaG_typeerror</link>(L,&#32;t,&#32;<emphasis role="stringliteral">&quot;index&quot;</emphasis>);
00354 &#32;&#32;&#32;&#32;}
00355 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;try&#32;the&#32;metamethod&#32;*/</emphasis>
00356 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lobject_8h_1a48587dcb78721d149d3184d0768f4950">ttisfunction</link>(tm))&#32;{
00357 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_ltm_8c_1a719f499f44a66a0fe32eef5a2c485ba3">luaT_callTM</link>(L,&#32;tm,&#32;t,&#32;key,&#32;val);
00358 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
00359 &#32;&#32;&#32;&#32;}
00360 &#32;&#32;&#32;&#32;t&#32;=&#32;tm;&#32;&#32;<emphasis role="comment">/*&#32;else&#32;repeat&#32;assignment&#32;over&#32;&apos;tm&apos;&#32;*/</emphasis>
00361 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lvm_8h_1a16d42351ed7a1d0c0c1677bdfd3b123b">luaV_fastget</link>(L,&#32;t,&#32;key,&#32;slot,&#32;<link linkend="_ltable_8c_1a8b4fce00d7db27ee9caac3d49863dea3">luaH_get</link>))&#32;{
00362 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8h_1a432c22e13223409ad55ed6c3aec12bcb">luaV_finishfastset</link>(L,&#32;t,&#32;slot,&#32;val);
00363 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;&#32;&#32;<emphasis role="comment">/*&#32;done&#32;*/</emphasis>
00364 &#32;&#32;&#32;&#32;}
00365 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;else&#32;&apos;return&#32;luaV_finishset(L,&#32;t,&#32;key,&#32;val,&#32;slot)&apos;&#32;(loop)&#32;*/</emphasis>
00366 &#32;&#32;}
00367 &#32;&#32;<link linkend="_ldebug_8c_1a88d38ca5da2e7a1492fc9d5ad70c32c5">luaG_runerror</link>(L,&#32;<emphasis role="stringliteral">&quot;&apos;__newindex&apos;&#32;chain&#32;too&#32;long;&#32;possible&#32;loop&quot;</emphasis>);
00368 }
00369 
00370 
00371 <emphasis role="comment">/*</emphasis>
00372 <emphasis role="comment">**&#32;Compare&#32;two&#32;strings&#32;&apos;ls&apos;&#32;x&#32;&apos;rs&apos;,&#32;returning&#32;an&#32;integer&#32;less-equal-</emphasis>
00373 <emphasis role="comment">**&#32;-greater&#32;than&#32;zero&#32;if&#32;&apos;ls&apos;&#32;is&#32;less-equal-greater&#32;than&#32;&apos;rs&apos;.</emphasis>
00374 <emphasis role="comment">**&#32;The&#32;code&#32;is&#32;a&#32;little&#32;tricky&#32;because&#32;it&#32;allows&#32;&apos;\0&apos;&#32;in&#32;the&#32;strings</emphasis>
00375 <emphasis role="comment">**&#32;and&#32;it&#32;uses&#32;&apos;strcoll&apos;&#32;(to&#32;respect&#32;locales)&#32;for&#32;each&#32;segments</emphasis>
00376 <emphasis role="comment">**&#32;of&#32;the&#32;strings.</emphasis>
00377 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lvm_8c_source_1l00378"/><link linkend="_lvm_8c_1af609f8da5aa129c2dfe05d03f7001c03">00378</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lvm_8c_1af609f8da5aa129c2dfe05d03f7001c03">l_strcmp</link>&#32;(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_string">TString</link>&#32;*ls,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_string">TString</link>&#32;*rs)&#32;{
00379 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*l&#32;=&#32;<link linkend="_lobject_8h_1acb05d3ab238923581a9c629b8e11a6ac">getstr</link>(ls);
00380 &#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;ll&#32;=&#32;<link linkend="_lobject_8h_1a3a62185cfa9345aedfc3a581dfdbb4f3">tsslen</link>(ls);
00381 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*r&#32;=&#32;<link linkend="_lobject_8h_1acb05d3ab238923581a9c629b8e11a6ac">getstr</link>(rs);
00382 &#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;lr&#32;=&#32;<link linkend="_lobject_8h_1a3a62185cfa9345aedfc3a581dfdbb4f3">tsslen</link>(rs);
00383 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;;)&#32;{&#32;&#32;<emphasis role="comment">/*&#32;for&#32;each&#32;segment&#32;*/</emphasis>
00384 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;temp&#32;=&#32;strcoll(l,&#32;r);
00385 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(temp&#32;!=&#32;0)&#32;&#32;<emphasis role="comment">/*&#32;not&#32;equal?&#32;*/</emphasis>
00386 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;temp;&#32;&#32;<emphasis role="comment">/*&#32;done&#32;*/</emphasis>
00387 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{&#32;&#32;<emphasis role="comment">/*&#32;strings&#32;are&#32;equal&#32;up&#32;to&#32;a&#32;&apos;\0&apos;&#32;*/</emphasis>
00388 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;len&#32;=&#32;strlen(l);&#32;&#32;<emphasis role="comment">/*&#32;index&#32;of&#32;first&#32;&apos;\0&apos;&#32;in&#32;both&#32;strings&#32;*/</emphasis>
00389 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(len&#32;==&#32;lr)&#32;&#32;<emphasis role="comment">/*&#32;&apos;rs&apos;&#32;is&#32;finished?&#32;*/</emphasis>
00390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(len&#32;==&#32;ll)&#32;?&#32;0&#32;:&#32;1;&#32;&#32;<emphasis role="comment">/*&#32;check&#32;&apos;ls&apos;&#32;*/</emphasis>
00391 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(len&#32;==&#32;ll)&#32;&#32;<emphasis role="comment">/*&#32;&apos;ls&apos;&#32;is&#32;finished?&#32;*/</emphasis>
00392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1;&#32;&#32;<emphasis role="comment">/*&#32;&apos;ls&apos;&#32;is&#32;less&#32;than&#32;&apos;rs&apos;&#32;(&apos;rs&apos;&#32;is&#32;not&#32;finished)&#32;*/</emphasis>
00393 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;both&#32;strings&#32;longer&#32;than&#32;&apos;len&apos;;&#32;go&#32;on&#32;comparing&#32;after&#32;the&#32;&apos;\0&apos;&#32;*/</emphasis>
00394 &#32;&#32;&#32;&#32;&#32;&#32;len++;
00395 &#32;&#32;&#32;&#32;&#32;&#32;l&#32;+=&#32;len;&#32;ll&#32;-=&#32;len;&#32;r&#32;+=&#32;len;&#32;lr&#32;-=&#32;len;
00396 &#32;&#32;&#32;&#32;}
00397 &#32;&#32;}
00398 }
00399 
00400 
00401 <emphasis role="comment">/*</emphasis>
00402 <emphasis role="comment">**&#32;Check&#32;whether&#32;integer&#32;&apos;i&apos;&#32;is&#32;less&#32;than&#32;float&#32;&apos;f&apos;.&#32;If&#32;&apos;i&apos;&#32;has&#32;an</emphasis>
00403 <emphasis role="comment">**&#32;exact&#32;representation&#32;as&#32;a&#32;float&#32;(&apos;l_intfitsf&apos;),&#32;compare&#32;numbers&#32;as</emphasis>
00404 <emphasis role="comment">**&#32;floats.&#32;Otherwise,&#32;use&#32;the&#32;equivalence&#32;&apos;i&#32;&lt;&#32;f&#32;&lt;=&gt;&#32;i&#32;&lt;&#32;ceil(f)&apos;.</emphasis>
00405 <emphasis role="comment">**&#32;If&#32;&apos;ceil(f)&apos;&#32;is&#32;out&#32;of&#32;integer&#32;range,&#32;either&#32;&apos;f&apos;&#32;is&#32;greater&#32;than</emphasis>
00406 <emphasis role="comment">**&#32;all&#32;integers&#32;or&#32;less&#32;than&#32;all&#32;integers.</emphasis>
00407 <emphasis role="comment">**&#32;(The&#32;test&#32;with&#32;&apos;l_intfitsf&apos;&#32;is&#32;only&#32;for&#32;performance;&#32;the&#32;else</emphasis>
00408 <emphasis role="comment">**&#32;case&#32;is&#32;correct&#32;for&#32;all&#32;values,&#32;but&#32;it&#32;is&#32;slow&#32;due&#32;to&#32;the&#32;conversion</emphasis>
00409 <emphasis role="comment">**&#32;from&#32;float&#32;to&#32;int.)</emphasis>
00410 <emphasis role="comment">**&#32;When&#32;&apos;f&apos;&#32;is&#32;NaN,&#32;comparisons&#32;must&#32;result&#32;in&#32;false.</emphasis>
00411 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lvm_8c_source_1l00412"/><link linkend="_lvm_8c_1aed56b743321d737d2c2df6268674281f">00412</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lvm_8c_1aed56b743321d737d2c2df6268674281f">LTintfloat</link>&#32;(<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;i,&#32;<link linkend="_lua_8h_1af0a6ed3b852d680769cfc410a0672172">lua_Number</link>&#32;f)&#32;{
00413 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lvm_8c_1ae3419ac662e1d1cf37cde228781d8ad9">l_intfitsf</link>(i))
00414 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_llimits_8h_1ae035faaeb068720ee8540210870ee5c9">luai_numlt</link>(<link linkend="_llimits_8h_1ac92cecb12c5aba1164877e81e76e2cb6">cast_num</link>(i),&#32;f);&#32;&#32;<emphasis role="comment">/*&#32;compare&#32;them&#32;as&#32;floats&#32;*/</emphasis>
00415 &#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{&#32;&#32;<emphasis role="comment">/*&#32;i&#32;&lt;&#32;f&#32;&lt;=&gt;&#32;i&#32;&lt;&#32;ceil(f)&#32;*/</emphasis>
00416 &#32;&#32;&#32;&#32;<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;fi;
00417 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lvm_8c_1a3a9a9378ccdbd0ea4cba6555673dccf9">luaV_flttointeger</link>(f,&#32;&amp;fi,&#32;<link linkend="_lvm_8h_1a1639065f78212a54317141b2703061c0ac844cfcb3d7f91dd0c10f424d93c13ca">F2Iceil</link>))&#32;&#32;<emphasis role="comment">/*&#32;fi&#32;=&#32;ceil(f)&#32;*/</emphasis>
00418 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;i&#32;&lt;&#32;fi;&#32;&#32;&#32;<emphasis role="comment">/*&#32;compare&#32;them&#32;as&#32;integers&#32;*/</emphasis>
00419 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;&#32;<emphasis role="comment">/*&#32;&apos;f&apos;&#32;is&#32;either&#32;greater&#32;or&#32;less&#32;than&#32;all&#32;integers&#32;*/</emphasis>
00420 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;f&#32;&gt;&#32;0;&#32;&#32;<emphasis role="comment">/*&#32;greater?&#32;*/</emphasis>
00421 &#32;&#32;}
00422 }
00423 
00424 
00425 <emphasis role="comment">/*</emphasis>
00426 <emphasis role="comment">**&#32;Check&#32;whether&#32;integer&#32;&apos;i&apos;&#32;is&#32;less&#32;than&#32;or&#32;equal&#32;to&#32;float&#32;&apos;f&apos;.</emphasis>
00427 <emphasis role="comment">**&#32;See&#32;comments&#32;on&#32;previous&#32;function.</emphasis>
00428 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lvm_8c_source_1l00429"/><link linkend="_lvm_8c_1ab394eec9acbce8e5be88eeaf799d6a13">00429</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lvm_8c_1ab394eec9acbce8e5be88eeaf799d6a13">LEintfloat</link>&#32;(<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;i,&#32;<link linkend="_lua_8h_1af0a6ed3b852d680769cfc410a0672172">lua_Number</link>&#32;f)&#32;{
00430 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lvm_8c_1ae3419ac662e1d1cf37cde228781d8ad9">l_intfitsf</link>(i))
00431 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_llimits_8h_1af803655e8c9be7ba1f3f3fb0c4f730d7">luai_numle</link>(<link linkend="_llimits_8h_1ac92cecb12c5aba1164877e81e76e2cb6">cast_num</link>(i),&#32;f);&#32;&#32;<emphasis role="comment">/*&#32;compare&#32;them&#32;as&#32;floats&#32;*/</emphasis>
00432 &#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{&#32;&#32;<emphasis role="comment">/*&#32;i&#32;&lt;=&#32;f&#32;&lt;=&gt;&#32;i&#32;&lt;=&#32;floor(f)&#32;*/</emphasis>
00433 &#32;&#32;&#32;&#32;<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;fi;
00434 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lvm_8c_1a3a9a9378ccdbd0ea4cba6555673dccf9">luaV_flttointeger</link>(f,&#32;&amp;fi,&#32;<link linkend="_lvm_8h_1a1639065f78212a54317141b2703061c0a04712d393ba74d0c04f9f1e80f33c02c">F2Ifloor</link>))&#32;&#32;<emphasis role="comment">/*&#32;fi&#32;=&#32;floor(f)&#32;*/</emphasis>
00435 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;i&#32;&lt;=&#32;fi;&#32;&#32;&#32;<emphasis role="comment">/*&#32;compare&#32;them&#32;as&#32;integers&#32;*/</emphasis>
00436 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;&#32;<emphasis role="comment">/*&#32;&apos;f&apos;&#32;is&#32;either&#32;greater&#32;or&#32;less&#32;than&#32;all&#32;integers&#32;*/</emphasis>
00437 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;f&#32;&gt;&#32;0;&#32;&#32;<emphasis role="comment">/*&#32;greater?&#32;*/</emphasis>
00438 &#32;&#32;}
00439 }
00440 
00441 
00442 <emphasis role="comment">/*</emphasis>
00443 <emphasis role="comment">**&#32;Check&#32;whether&#32;float&#32;&apos;f&apos;&#32;is&#32;less&#32;than&#32;integer&#32;&apos;i&apos;.</emphasis>
00444 <emphasis role="comment">**&#32;See&#32;comments&#32;on&#32;previous&#32;function.</emphasis>
00445 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lvm_8c_source_1l00446"/><link linkend="_lvm_8c_1a4c8a4beda3cf0a265070dc6832183318">00446</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lvm_8c_1a4c8a4beda3cf0a265070dc6832183318">LTfloatint</link>&#32;(<link linkend="_lua_8h_1af0a6ed3b852d680769cfc410a0672172">lua_Number</link>&#32;f,&#32;<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;i)&#32;{
00447 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lvm_8c_1ae3419ac662e1d1cf37cde228781d8ad9">l_intfitsf</link>(i))
00448 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_llimits_8h_1ae035faaeb068720ee8540210870ee5c9">luai_numlt</link>(f,&#32;<link linkend="_llimits_8h_1ac92cecb12c5aba1164877e81e76e2cb6">cast_num</link>(i));&#32;&#32;<emphasis role="comment">/*&#32;compare&#32;them&#32;as&#32;floats&#32;*/</emphasis>
00449 &#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{&#32;&#32;<emphasis role="comment">/*&#32;f&#32;&lt;&#32;i&#32;&lt;=&gt;&#32;floor(f)&#32;&lt;&#32;i&#32;*/</emphasis>
00450 &#32;&#32;&#32;&#32;<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;fi;
00451 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lvm_8c_1a3a9a9378ccdbd0ea4cba6555673dccf9">luaV_flttointeger</link>(f,&#32;&amp;fi,&#32;<link linkend="_lvm_8h_1a1639065f78212a54317141b2703061c0a04712d393ba74d0c04f9f1e80f33c02c">F2Ifloor</link>))&#32;&#32;<emphasis role="comment">/*&#32;fi&#32;=&#32;floor(f)&#32;*/</emphasis>
00452 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;fi&#32;&lt;&#32;i;&#32;&#32;&#32;<emphasis role="comment">/*&#32;compare&#32;them&#32;as&#32;integers&#32;*/</emphasis>
00453 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;&#32;<emphasis role="comment">/*&#32;&apos;f&apos;&#32;is&#32;either&#32;greater&#32;or&#32;less&#32;than&#32;all&#32;integers&#32;*/</emphasis>
00454 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;f&#32;&lt;&#32;0;&#32;&#32;<emphasis role="comment">/*&#32;less?&#32;*/</emphasis>
00455 &#32;&#32;}
00456 }
00457 
00458 
00459 <emphasis role="comment">/*</emphasis>
00460 <emphasis role="comment">**&#32;Check&#32;whether&#32;float&#32;&apos;f&apos;&#32;is&#32;less&#32;than&#32;or&#32;equal&#32;to&#32;integer&#32;&apos;i&apos;.</emphasis>
00461 <emphasis role="comment">**&#32;See&#32;comments&#32;on&#32;previous&#32;function.</emphasis>
00462 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lvm_8c_source_1l00463"/><link linkend="_lvm_8c_1a29b512f6e7e0c458be29cf7fe250bba3">00463</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lvm_8c_1a29b512f6e7e0c458be29cf7fe250bba3">LEfloatint</link>&#32;(<link linkend="_lua_8h_1af0a6ed3b852d680769cfc410a0672172">lua_Number</link>&#32;f,&#32;<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;i)&#32;{
00464 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lvm_8c_1ae3419ac662e1d1cf37cde228781d8ad9">l_intfitsf</link>(i))
00465 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_llimits_8h_1af803655e8c9be7ba1f3f3fb0c4f730d7">luai_numle</link>(f,&#32;<link linkend="_llimits_8h_1ac92cecb12c5aba1164877e81e76e2cb6">cast_num</link>(i));&#32;&#32;<emphasis role="comment">/*&#32;compare&#32;them&#32;as&#32;floats&#32;*/</emphasis>
00466 &#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{&#32;&#32;<emphasis role="comment">/*&#32;f&#32;&lt;=&#32;i&#32;&lt;=&gt;&#32;ceil(f)&#32;&lt;=&#32;i&#32;*/</emphasis>
00467 &#32;&#32;&#32;&#32;<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;fi;
00468 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lvm_8c_1a3a9a9378ccdbd0ea4cba6555673dccf9">luaV_flttointeger</link>(f,&#32;&amp;fi,&#32;<link linkend="_lvm_8h_1a1639065f78212a54317141b2703061c0ac844cfcb3d7f91dd0c10f424d93c13ca">F2Iceil</link>))&#32;&#32;<emphasis role="comment">/*&#32;fi&#32;=&#32;ceil(f)&#32;*/</emphasis>
00469 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;fi&#32;&lt;=&#32;i;&#32;&#32;&#32;<emphasis role="comment">/*&#32;compare&#32;them&#32;as&#32;integers&#32;*/</emphasis>
00470 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;&#32;<emphasis role="comment">/*&#32;&apos;f&apos;&#32;is&#32;either&#32;greater&#32;or&#32;less&#32;than&#32;all&#32;integers&#32;*/</emphasis>
00471 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;f&#32;&lt;&#32;0;&#32;&#32;<emphasis role="comment">/*&#32;less?&#32;*/</emphasis>
00472 &#32;&#32;}
00473 }
00474 
00475 
00476 <emphasis role="comment">/*</emphasis>
00477 <emphasis role="comment">**&#32;Return&#32;&apos;l&#32;&lt;&#32;r&apos;,&#32;for&#32;numbers.</emphasis>
00478 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lvm_8c_source_1l00479"/><link linkend="_lvm_8c_1a1e3534dce31fc52f71f974802bc6ace2">00479</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lvm_8c_1a1e3534dce31fc52f71f974802bc6ace2">LTnum</link>&#32;(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_value">TValue</link>&#32;*l,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_value">TValue</link>&#32;*r)&#32;{
00480 &#32;&#32;<link linkend="_llimits_8h_1a5978f5fda715bd80e845df1e16ad7780">lua_assert</link>(<link linkend="_lobject_8h_1a7a1392f89b1f29ed3b1afa37a22d0be2">ttisnumber</link>(l)&#32;&amp;&amp;&#32;<link linkend="_lobject_8h_1a7a1392f89b1f29ed3b1afa37a22d0be2">ttisnumber</link>(r));
00481 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lobject_8h_1abade243295a9140f7b86838fbb049054">ttisinteger</link>(l))&#32;{
00482 &#32;&#32;&#32;&#32;<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;li&#32;=&#32;<link linkend="_lobject_8h_1af1a59636db050b842a791cd19086d925">ivalue</link>(l);
00483 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lobject_8h_1abade243295a9140f7b86838fbb049054">ttisinteger</link>(r))
00484 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;li&#32;&lt;&#32;<link linkend="_lobject_8h_1af1a59636db050b842a791cd19086d925">ivalue</link>(r);&#32;&#32;<emphasis role="comment">/*&#32;both&#32;are&#32;integers&#32;*/</emphasis>
00485 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;&#32;<emphasis role="comment">/*&#32;&apos;l&apos;&#32;is&#32;int&#32;and&#32;&apos;r&apos;&#32;is&#32;float&#32;*/</emphasis>
00486 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_lvm_8c_1aed56b743321d737d2c2df6268674281f">LTintfloat</link>(li,&#32;<link linkend="_lobject_8h_1a7d7d6b08f40350c9e7364e9cb984d744">fltvalue</link>(r));&#32;&#32;<emphasis role="comment">/*&#32;l&#32;&lt;&#32;r&#32;?&#32;*/</emphasis>
00487 &#32;&#32;}
00488 &#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00489 &#32;&#32;&#32;&#32;<link linkend="_lua_8h_1af0a6ed3b852d680769cfc410a0672172">lua_Number</link>&#32;lf&#32;=&#32;<link linkend="_lobject_8h_1a7d7d6b08f40350c9e7364e9cb984d744">fltvalue</link>(l);&#32;&#32;<emphasis role="comment">/*&#32;&apos;l&apos;&#32;must&#32;be&#32;float&#32;*/</emphasis>
00490 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lobject_8h_1ac1338b5ac67cadf27489f5ae7e939c29">ttisfloat</link>(r))
00491 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_llimits_8h_1ae035faaeb068720ee8540210870ee5c9">luai_numlt</link>(lf,&#32;<link linkend="_lobject_8h_1a7d7d6b08f40350c9e7364e9cb984d744">fltvalue</link>(r));&#32;&#32;<emphasis role="comment">/*&#32;both&#32;are&#32;float&#32;*/</emphasis>
00492 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;&#32;<emphasis role="comment">/*&#32;&apos;l&apos;&#32;is&#32;float&#32;and&#32;&apos;r&apos;&#32;is&#32;int&#32;*/</emphasis>
00493 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_lvm_8c_1a4c8a4beda3cf0a265070dc6832183318">LTfloatint</link>(lf,&#32;<link linkend="_lobject_8h_1af1a59636db050b842a791cd19086d925">ivalue</link>(r));
00494 &#32;&#32;}
00495 }
00496 
00497 
00498 <emphasis role="comment">/*</emphasis>
00499 <emphasis role="comment">**&#32;Return&#32;&apos;l&#32;&lt;=&#32;r&apos;,&#32;for&#32;numbers.</emphasis>
00500 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lvm_8c_source_1l00501"/><link linkend="_lvm_8c_1aa531a8c826e4bbb1918f43bd84b9456a">00501</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lvm_8c_1aa531a8c826e4bbb1918f43bd84b9456a">LEnum</link>&#32;(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_value">TValue</link>&#32;*l,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_value">TValue</link>&#32;*r)&#32;{
00502 &#32;&#32;<link linkend="_llimits_8h_1a5978f5fda715bd80e845df1e16ad7780">lua_assert</link>(<link linkend="_lobject_8h_1a7a1392f89b1f29ed3b1afa37a22d0be2">ttisnumber</link>(l)&#32;&amp;&amp;&#32;<link linkend="_lobject_8h_1a7a1392f89b1f29ed3b1afa37a22d0be2">ttisnumber</link>(r));
00503 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lobject_8h_1abade243295a9140f7b86838fbb049054">ttisinteger</link>(l))&#32;{
00504 &#32;&#32;&#32;&#32;<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;li&#32;=&#32;<link linkend="_lobject_8h_1af1a59636db050b842a791cd19086d925">ivalue</link>(l);
00505 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lobject_8h_1abade243295a9140f7b86838fbb049054">ttisinteger</link>(r))
00506 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;li&#32;&lt;=&#32;<link linkend="_lobject_8h_1af1a59636db050b842a791cd19086d925">ivalue</link>(r);&#32;&#32;<emphasis role="comment">/*&#32;both&#32;are&#32;integers&#32;*/</emphasis>
00507 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;&#32;<emphasis role="comment">/*&#32;&apos;l&apos;&#32;is&#32;int&#32;and&#32;&apos;r&apos;&#32;is&#32;float&#32;*/</emphasis>
00508 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_lvm_8c_1ab394eec9acbce8e5be88eeaf799d6a13">LEintfloat</link>(li,&#32;<link linkend="_lobject_8h_1a7d7d6b08f40350c9e7364e9cb984d744">fltvalue</link>(r));&#32;&#32;<emphasis role="comment">/*&#32;l&#32;&lt;=&#32;r&#32;?&#32;*/</emphasis>
00509 &#32;&#32;}
00510 &#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00511 &#32;&#32;&#32;&#32;<link linkend="_lua_8h_1af0a6ed3b852d680769cfc410a0672172">lua_Number</link>&#32;lf&#32;=&#32;<link linkend="_lobject_8h_1a7d7d6b08f40350c9e7364e9cb984d744">fltvalue</link>(l);&#32;&#32;<emphasis role="comment">/*&#32;&apos;l&apos;&#32;must&#32;be&#32;float&#32;*/</emphasis>
00512 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lobject_8h_1ac1338b5ac67cadf27489f5ae7e939c29">ttisfloat</link>(r))
00513 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_llimits_8h_1af803655e8c9be7ba1f3f3fb0c4f730d7">luai_numle</link>(lf,&#32;<link linkend="_lobject_8h_1a7d7d6b08f40350c9e7364e9cb984d744">fltvalue</link>(r));&#32;&#32;<emphasis role="comment">/*&#32;both&#32;are&#32;float&#32;*/</emphasis>
00514 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;&#32;<emphasis role="comment">/*&#32;&apos;l&apos;&#32;is&#32;float&#32;and&#32;&apos;r&apos;&#32;is&#32;int&#32;*/</emphasis>
00515 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_lvm_8c_1a29b512f6e7e0c458be29cf7fe250bba3">LEfloatint</link>(lf,&#32;<link linkend="_lobject_8h_1af1a59636db050b842a791cd19086d925">ivalue</link>(r));
00516 &#32;&#32;}
00517 }
00518 
00519 
00520 <emphasis role="comment">/*</emphasis>
00521 <emphasis role="comment">**&#32;return&#32;&apos;l&#32;&lt;&#32;r&apos;&#32;for&#32;non-numbers.</emphasis>
00522 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lvm_8c_source_1l00523"/><link linkend="_lvm_8c_1a13f124eec78027029d2e8fd9b83ee614">00523</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lvm_8c_1a13f124eec78027029d2e8fd9b83ee614">lessthanothers</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_value">TValue</link>&#32;*l,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_value">TValue</link>&#32;*r)&#32;{
00524 &#32;&#32;<link linkend="_llimits_8h_1a5978f5fda715bd80e845df1e16ad7780">lua_assert</link>(!<link linkend="_lobject_8h_1a7a1392f89b1f29ed3b1afa37a22d0be2">ttisnumber</link>(l)&#32;||&#32;!<link linkend="_lobject_8h_1a7a1392f89b1f29ed3b1afa37a22d0be2">ttisnumber</link>(r));
00525 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lobject_8h_1a9bdf057a0de8da2ffae3ac35662dd255">ttisstring</link>(l)&#32;&amp;&amp;&#32;<link linkend="_lobject_8h_1a9bdf057a0de8da2ffae3ac35662dd255">ttisstring</link>(r))&#32;&#32;<emphasis role="comment">/*&#32;both&#32;are&#32;strings?&#32;*/</emphasis>
00526 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_lvm_8c_1af609f8da5aa129c2dfe05d03f7001c03">l_strcmp</link>(<link linkend="_lobject_8h_1a8661397faed512ccc9c70a4661f1a83d">tsvalue</link>(l),&#32;<link linkend="_lobject_8h_1a8661397faed512ccc9c70a4661f1a83d">tsvalue</link>(r))&#32;&lt;&#32;0;
00527 &#32;&#32;<emphasis role="keywordflow">else</emphasis>
00528 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_ltm_8c_1a74d6ee402705616e54549d1066fd1e37">luaT_callorderTM</link>(L,&#32;l,&#32;r,&#32;<link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1afa8fa71435d77125e294751a6ec36dc0">TM_LT</link>);
00529 }
00530 
00531 
00532 <emphasis role="comment">/*</emphasis>
00533 <emphasis role="comment">**&#32;Main&#32;operation&#32;less&#32;than;&#32;return&#32;&apos;l&#32;&lt;&#32;r&apos;.</emphasis>
00534 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lvm_8c_source_1l00535"/><link linkend="_lvm_8h_1a1245a563d674251ea03c7abbd1a2ca8c">00535</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lvm_8c_1a82cf4e4e2322eef8c4c53b98669e2ada">luaV_lessthan</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_value">TValue</link>&#32;*l,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_value">TValue</link>&#32;*r)&#32;{
00536 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lobject_8h_1a7a1392f89b1f29ed3b1afa37a22d0be2">ttisnumber</link>(l)&#32;&amp;&amp;&#32;<link linkend="_lobject_8h_1a7a1392f89b1f29ed3b1afa37a22d0be2">ttisnumber</link>(r))&#32;&#32;<emphasis role="comment">/*&#32;both&#32;operands&#32;are&#32;numbers?&#32;*/</emphasis>
00537 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_lvm_8c_1a1e3534dce31fc52f71f974802bc6ace2">LTnum</link>(l,&#32;r);
00538 &#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_lvm_8c_1a13f124eec78027029d2e8fd9b83ee614">lessthanothers</link>(L,&#32;l,&#32;r);
00539 }
00540 
00541 
00542 <emphasis role="comment">/*</emphasis>
00543 <emphasis role="comment">**&#32;return&#32;&apos;l&#32;&lt;=&#32;r&apos;&#32;for&#32;non-numbers.</emphasis>
00544 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lvm_8c_source_1l00545"/><link linkend="_lvm_8c_1aa12d860dd59154d1952911589fd72fb2">00545</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lvm_8c_1aa12d860dd59154d1952911589fd72fb2">lessequalothers</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_value">TValue</link>&#32;*l,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_value">TValue</link>&#32;*r)&#32;{
00546 &#32;&#32;<link linkend="_llimits_8h_1a5978f5fda715bd80e845df1e16ad7780">lua_assert</link>(!<link linkend="_lobject_8h_1a7a1392f89b1f29ed3b1afa37a22d0be2">ttisnumber</link>(l)&#32;||&#32;!<link linkend="_lobject_8h_1a7a1392f89b1f29ed3b1afa37a22d0be2">ttisnumber</link>(r));
00547 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lobject_8h_1a9bdf057a0de8da2ffae3ac35662dd255">ttisstring</link>(l)&#32;&amp;&amp;&#32;<link linkend="_lobject_8h_1a9bdf057a0de8da2ffae3ac35662dd255">ttisstring</link>(r))&#32;&#32;<emphasis role="comment">/*&#32;both&#32;are&#32;strings?&#32;*/</emphasis>
00548 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_lvm_8c_1af609f8da5aa129c2dfe05d03f7001c03">l_strcmp</link>(<link linkend="_lobject_8h_1a8661397faed512ccc9c70a4661f1a83d">tsvalue</link>(l),&#32;<link linkend="_lobject_8h_1a8661397faed512ccc9c70a4661f1a83d">tsvalue</link>(r))&#32;&lt;=&#32;0;
00549 &#32;&#32;<emphasis role="keywordflow">else</emphasis>
00550 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_ltm_8c_1a74d6ee402705616e54549d1066fd1e37">luaT_callorderTM</link>(L,&#32;l,&#32;r,&#32;<link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1acb92c94037b451f214223a4c57eccbdf">TM_LE</link>);
00551 }
00552 
00553 
00554 <emphasis role="comment">/*</emphasis>
00555 <emphasis role="comment">**&#32;Main&#32;operation&#32;less&#32;than&#32;or&#32;equal&#32;to;&#32;return&#32;&apos;l&#32;&lt;=&#32;r&apos;.</emphasis>
00556 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lvm_8c_source_1l00557"/><link linkend="_lvm_8h_1aa151c39c80af19e2ea6d309e7993973c">00557</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lvm_8c_1a03d32b640c60651c78bc5ae0f2bc0549">luaV_lessequal</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_value">TValue</link>&#32;*l,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_value">TValue</link>&#32;*r)&#32;{
00558 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lobject_8h_1a7a1392f89b1f29ed3b1afa37a22d0be2">ttisnumber</link>(l)&#32;&amp;&amp;&#32;<link linkend="_lobject_8h_1a7a1392f89b1f29ed3b1afa37a22d0be2">ttisnumber</link>(r))&#32;&#32;<emphasis role="comment">/*&#32;both&#32;operands&#32;are&#32;numbers?&#32;*/</emphasis>
00559 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_lvm_8c_1aa531a8c826e4bbb1918f43bd84b9456a">LEnum</link>(l,&#32;r);
00560 &#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_lvm_8c_1aa12d860dd59154d1952911589fd72fb2">lessequalothers</link>(L,&#32;l,&#32;r);
00561 }
00562 
00563 
00564 <emphasis role="comment">/*</emphasis>
00565 <emphasis role="comment">**&#32;Main&#32;operation&#32;for&#32;equality&#32;of&#32;Lua&#32;values;&#32;return&#32;&apos;t1&#32;==&#32;t2&apos;.</emphasis>
00566 <emphasis role="comment">**&#32;L&#32;==&#32;NULL&#32;means&#32;raw&#32;equality&#32;(no&#32;metamethods)</emphasis>
00567 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lvm_8c_source_1l00568"/><link linkend="_lvm_8h_1a2f779d315adf5ac6a26c88409b58eeec">00568</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lvm_8c_1a4826066036eb5f7cf0f8a33f7073f49e">luaV_equalobj</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_value">TValue</link>&#32;*t1,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_value">TValue</link>&#32;*t2)&#32;{
00569 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_value">TValue</link>&#32;*tm;
00570 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lobject_8h_1a01db083f8bc8b2eb51a45c0ba9967043">ttypetag</link>(t1)&#32;!=&#32;<link linkend="_lobject_8h_1a01db083f8bc8b2eb51a45c0ba9967043">ttypetag</link>(t2))&#32;{&#32;&#32;<emphasis role="comment">/*&#32;not&#32;the&#32;same&#32;variant?&#32;*/</emphasis>
00571 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lobject_8h_1acd205ab396b96fba48e1f758c17a2cf3">ttype</link>(t1)&#32;!=&#32;<link linkend="_lobject_8h_1acd205ab396b96fba48e1f758c17a2cf3">ttype</link>(t2)&#32;||&#32;<link linkend="_lobject_8h_1acd205ab396b96fba48e1f758c17a2cf3">ttype</link>(t1)&#32;!=&#32;<link linkend="_lua_8h_1a7f62ecb240cb38da9c8a53b41fe21ed9">LUA_TNUMBER</link>)
00572 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;&#32;&#32;<emphasis role="comment">/*&#32;only&#32;numbers&#32;can&#32;be&#32;equal&#32;with&#32;different&#32;variants&#32;*/</emphasis>
00573 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{&#32;&#32;<emphasis role="comment">/*&#32;two&#32;numbers&#32;with&#32;different&#32;variants&#32;*/</emphasis>
00574 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;i1,&#32;i2;&#32;&#32;<emphasis role="comment">/*&#32;compare&#32;them&#32;as&#32;integers&#32;*/</emphasis>
00575 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="_lvm_8h_1a0b3a6eff12747eacea6551dbc2d42707">tointegerns</link>(t1,&#32;&amp;i1)&#32;&amp;&amp;&#32;<link linkend="_lvm_8h_1a0b3a6eff12747eacea6551dbc2d42707">tointegerns</link>(t2,&#32;&amp;i2)&#32;&amp;&amp;&#32;i1&#32;==&#32;i2);
00576 &#32;&#32;&#32;&#32;}
00577 &#32;&#32;}
00578 &#32;&#32;<emphasis role="comment">/*&#32;values&#32;have&#32;same&#32;type&#32;and&#32;same&#32;variant&#32;*/</emphasis>
00579 &#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(<link linkend="_lobject_8h_1a01db083f8bc8b2eb51a45c0ba9967043">ttypetag</link>(t1))&#32;{
00580 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lobject_8h_1aac7a0aeb62c96ba16c7638e707bfaac0">LUA_VNIL</link>:&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lobject_8h_1a95236d400066ed64a37c72d3dada7e9d">LUA_VFALSE</link>:&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lobject_8h_1aed66cd95aa3f518c947b5bd9e17bab47">LUA_VTRUE</link>:&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
00581 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lobject_8h_1a69aa5cae89d634d458e0da4957257745">LUA_VNUMINT</link>:&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="_lobject_8h_1af1a59636db050b842a791cd19086d925">ivalue</link>(t1)&#32;==&#32;<link linkend="_lobject_8h_1af1a59636db050b842a791cd19086d925">ivalue</link>(t2));
00582 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lobject_8h_1a19aaaf978586be9032b63b7a8807631a">LUA_VNUMFLT</link>:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_llimits_8h_1ae06bbbe345c8bb028e233120466d387d">luai_numeq</link>(<link linkend="_lobject_8h_1a7d7d6b08f40350c9e7364e9cb984d744">fltvalue</link>(t1),&#32;<link linkend="_lobject_8h_1a7d7d6b08f40350c9e7364e9cb984d744">fltvalue</link>(t2));
00583 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lobject_8h_1a0fe81163ea67e644d5a85078c4a6d25c">LUA_VLIGHTUSERDATA</link>:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_lobject_8h_1a16c0267c035b3e4edda082e25069e8cf">pvalue</link>(t1)&#32;==&#32;<link linkend="_lobject_8h_1a16c0267c035b3e4edda082e25069e8cf">pvalue</link>(t2);
00584 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lobject_8h_1a9b9abbdd10fec20fc7a746efd903872d">LUA_VLCF</link>:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_lobject_8h_1a27d0b4b700445d8c82ddc634c0252d10">fvalue</link>(t1)&#32;==&#32;<link linkend="_lobject_8h_1a27d0b4b700445d8c82ddc634c0252d10">fvalue</link>(t2);
00585 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lobject_8h_1a794410ffd7267ef873eb05ac695b1ba6">LUA_VSHRSTR</link>:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_lstring_8h_1add3806315bf73de7d3138c019ed7c0ce">eqshrstr</link>(<link linkend="_lobject_8h_1a8661397faed512ccc9c70a4661f1a83d">tsvalue</link>(t1),&#32;<link linkend="_lobject_8h_1a8661397faed512ccc9c70a4661f1a83d">tsvalue</link>(t2));
00586 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lobject_8h_1a6869fcb0a0178b6d70d431eae1683199">LUA_VLNGSTR</link>:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_lstring_8c_1a99b8eea92097f11885050ff629ff0f83">luaS_eqlngstr</link>(<link linkend="_lobject_8h_1a8661397faed512ccc9c70a4661f1a83d">tsvalue</link>(t1),&#32;<link linkend="_lobject_8h_1a8661397faed512ccc9c70a4661f1a83d">tsvalue</link>(t2));
00587 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lobject_8h_1af45b44d4031e7e869195dd97759d2ca3">LUA_VUSERDATA</link>:&#32;{
00588 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lobject_8h_1a1c49f55d93297e833141fb62903af3ad">uvalue</link>(t1)&#32;==&#32;<link linkend="_lobject_8h_1a1c49f55d93297e833141fb62903af3ad">uvalue</link>(t2))&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
00589 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(L&#32;==&#32;NULL)&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
00590 &#32;&#32;&#32;&#32;&#32;&#32;tm&#32;=&#32;<link linkend="_ltm_8h_1a0a29ed88450f8f92330a6a411a9c8134">fasttm</link>(L,&#32;<link linkend="_lobject_8h_1a1c49f55d93297e833141fb62903af3ad">uvalue</link>(t1)-&gt;metatable,&#32;<link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1aa0074eac874e7e19d5e7c0c8a22ea592">TM_EQ</link>);
00591 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tm&#32;==&#32;NULL)
00592 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tm&#32;=&#32;<link linkend="_ltm_8h_1a0a29ed88450f8f92330a6a411a9c8134">fasttm</link>(L,&#32;<link linkend="_lobject_8h_1a1c49f55d93297e833141fb62903af3ad">uvalue</link>(t2)-&gt;metatable,&#32;<link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1aa0074eac874e7e19d5e7c0c8a22ea592">TM_EQ</link>);
00593 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;&#32;&#32;<emphasis role="comment">/*&#32;will&#32;try&#32;TM&#32;*/</emphasis>
00594 &#32;&#32;&#32;&#32;}
00595 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lobject_8h_1afaf24d5b79b9027ad768d023778669df">LUA_VTABLE</link>:&#32;{
00596 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lobject_8h_1a336a6ce5e8340e6de133ec249cf47ebf">hvalue</link>(t1)&#32;==&#32;<link linkend="_lobject_8h_1a336a6ce5e8340e6de133ec249cf47ebf">hvalue</link>(t2))&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
00597 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(L&#32;==&#32;NULL)&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
00598 &#32;&#32;&#32;&#32;&#32;&#32;tm&#32;=&#32;<link linkend="_ltm_8h_1a0a29ed88450f8f92330a6a411a9c8134">fasttm</link>(L,&#32;<link linkend="_lobject_8h_1a336a6ce5e8340e6de133ec249cf47ebf">hvalue</link>(t1)-&gt;metatable,&#32;<link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1aa0074eac874e7e19d5e7c0c8a22ea592">TM_EQ</link>);
00599 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tm&#32;==&#32;NULL)
00600 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tm&#32;=&#32;<link linkend="_ltm_8h_1a0a29ed88450f8f92330a6a411a9c8134">fasttm</link>(L,&#32;<link linkend="_lobject_8h_1a336a6ce5e8340e6de133ec249cf47ebf">hvalue</link>(t2)-&gt;metatable,&#32;<link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1aa0074eac874e7e19d5e7c0c8a22ea592">TM_EQ</link>);
00601 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;&#32;&#32;<emphasis role="comment">/*&#32;will&#32;try&#32;TM&#32;*/</emphasis>
00602 &#32;&#32;&#32;&#32;}
00603 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:
00604 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_lobject_8h_1a05cdf6070135f10ad37e1048a730b634">gcvalue</link>(t1)&#32;==&#32;<link linkend="_lobject_8h_1a05cdf6070135f10ad37e1048a730b634">gcvalue</link>(t2);
00605 &#32;&#32;}
00606 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tm&#32;==&#32;NULL)&#32;&#32;<emphasis role="comment">/*&#32;no&#32;TM?&#32;*/</emphasis>
00607 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;&#32;&#32;<emphasis role="comment">/*&#32;objects&#32;are&#32;different&#32;*/</emphasis>
00608 &#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00609 &#32;&#32;&#32;&#32;<link linkend="_ltm_8c_1aad98f3a425ba53e65e7a8f8037320402">luaT_callTMres</link>(L,&#32;tm,&#32;t1,&#32;t2,&#32;L-&gt;<link linkend="_structlua___state_1afeb5dbe379fc406b35fe5f8a5fcfc5d7">top</link>);&#32;&#32;<emphasis role="comment">/*&#32;call&#32;TM&#32;*/</emphasis>
00610 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;!<link linkend="_lobject_8h_1a188e1a95c8c6d547a13431a6e1edd5b3">l_isfalse</link>(<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(L-&gt;<link linkend="_structlua___state_1afeb5dbe379fc406b35fe5f8a5fcfc5d7">top</link>));
00611 &#32;&#32;}
00612 }
00613 
00614 
00615 <emphasis role="comment">/*&#32;macro&#32;used&#32;by&#32;&apos;luaV_concat&apos;&#32;to&#32;ensure&#32;that&#32;element&#32;at&#32;&apos;o&apos;&#32;is&#32;a&#32;string&#32;*/</emphasis>
<anchor xml:id="_lvm_8c_source_1l00616"/><link linkend="_lvm_8c_1ac4af8d3b7a2c325068e51a81b01d0a65">00616</link> <emphasis role="preprocessor">#define&#32;tostring(L,o)&#32;&#32;\</emphasis>
00617 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;(ttisstring(o)&#32;||&#32;(cvt2str(o)&#32;&amp;&amp;&#32;(luaO_tostring(L,&#32;o),&#32;1)))</emphasis>
00618 
<anchor xml:id="_lvm_8c_source_1l00619"/><link linkend="_lvm_8c_1ae8f3af735ff64fa28e84ea124ff77861">00619</link> <emphasis role="preprocessor">#define&#32;isemptystr(o)&#32;&#32;&#32;(ttisshrstring(o)&#32;&amp;&amp;&#32;tsvalue(o)-&gt;shrlen&#32;==&#32;0)</emphasis>
00620 
00621 <emphasis role="comment">/*&#32;copy&#32;strings&#32;in&#32;stack&#32;from&#32;top&#32;-&#32;n&#32;up&#32;to&#32;top&#32;-&#32;1&#32;to&#32;buffer&#32;*/</emphasis>
<anchor xml:id="_lvm_8c_source_1l00622"/><link linkend="_lvm_8c_1a7f03a9c23b77ec5cd280bb955ec430b8">00622</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_lvm_8c_1a7f03a9c23b77ec5cd280bb955ec430b8">copy2buff</link>&#32;(<link linkend="_union_stack_value">StkId</link>&#32;top,&#32;<emphasis role="keywordtype">int</emphasis>&#32;n,&#32;<emphasis role="keywordtype">char</emphasis>&#32;*buff)&#32;{
00623 &#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;tl&#32;=&#32;0;&#32;&#32;<emphasis role="comment">/*&#32;size&#32;already&#32;copied&#32;*/</emphasis>
00624 &#32;&#32;<emphasis role="keywordflow">do</emphasis>&#32;{
00625 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;l&#32;=&#32;<link linkend="_lobject_8h_1a9753d5f343806e0cb16293f53143098c">vslen</link>(<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(top&#32;-&#32;n));&#32;&#32;<emphasis role="comment">/*&#32;length&#32;of&#32;string&#32;being&#32;copied&#32;*/</emphasis>
00626 &#32;&#32;&#32;&#32;memcpy(buff&#32;+&#32;tl,&#32;<link linkend="_lobject_8h_1ac2c9eedf3ff2c3042445b3b534f161e1">svalue</link>(<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(top&#32;-&#32;n)),&#32;l&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">char</emphasis>));
00627 &#32;&#32;&#32;&#32;tl&#32;+=&#32;l;
00628 &#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>&#32;(--n&#32;&gt;&#32;0);
00629 }
00630 
00631 
00632 <emphasis role="comment">/*</emphasis>
00633 <emphasis role="comment">**&#32;Main&#32;operation&#32;for&#32;concatenation:&#32;concat&#32;&apos;total&apos;&#32;values&#32;in&#32;the&#32;stack,</emphasis>
00634 <emphasis role="comment">**&#32;from&#32;&apos;L-&gt;top&#32;-&#32;total&apos;&#32;up&#32;to&#32;&apos;L-&gt;top&#32;-&#32;1&apos;.</emphasis>
00635 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lvm_8c_source_1l00636"/><link linkend="_lvm_8h_1aee84bfc563cb4bdd21a013218a289aa7">00636</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_lvm_8c_1a2f076040af405dcb50d661edd692eca7">luaV_concat</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<emphasis role="keywordtype">int</emphasis>&#32;total)&#32;{
00637 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(total&#32;==&#32;1)
00638 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;&#32;&#32;<emphasis role="comment">/*&#32;&quot;all&quot;&#32;values&#32;already&#32;concatenated&#32;*/</emphasis>
00639 &#32;&#32;<emphasis role="keywordflow">do</emphasis>&#32;{
00640 &#32;&#32;&#32;&#32;<link linkend="_union_stack_value">StkId</link>&#32;top&#32;=&#32;L-&gt;<link linkend="_structlua___state_1afeb5dbe379fc406b35fe5f8a5fcfc5d7">top</link>;
00641 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;n&#32;=&#32;2;&#32;&#32;<emphasis role="comment">/*&#32;number&#32;of&#32;elements&#32;handled&#32;in&#32;this&#32;pass&#32;(at&#32;least&#32;2)&#32;*/</emphasis>
00642 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!(<link linkend="_lobject_8h_1a9bdf057a0de8da2ffae3ac35662dd255">ttisstring</link>(<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(top&#32;-&#32;2))&#32;||&#32;<link linkend="_lvm_8h_1aa6af30bdcb0dce1826c81061cec16d81">cvt2str</link>(<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(top&#32;-&#32;2)))&#32;||
00643 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;!<link linkend="_lvm_8c_1ac4af8d3b7a2c325068e51a81b01d0a65">tostring</link>(L,&#32;<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(top&#32;-&#32;1)))
00644 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_ltm_8c_1addc61bf94c111c5a5bd3fe0032cb9be0">luaT_tryconcatTM</link>(L);
00645 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lvm_8c_1ae8f3af735ff64fa28e84ea124ff77861">isemptystr</link>(<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(top&#32;-&#32;1)))&#32;&#32;<emphasis role="comment">/*&#32;second&#32;operand&#32;is&#32;empty?&#32;*/</emphasis>
00646 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_llimits_8h_1a52a5166d7dc0590b63a9331cfc0f4564">cast_void</link>(<link linkend="_lvm_8c_1ac4af8d3b7a2c325068e51a81b01d0a65">tostring</link>(L,&#32;<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(top&#32;-&#32;2)));&#32;&#32;<emphasis role="comment">/*&#32;result&#32;is&#32;first&#32;operand&#32;*/</emphasis>
00647 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lvm_8c_1ae8f3af735ff64fa28e84ea124ff77861">isemptystr</link>(<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(top&#32;-&#32;2)))&#32;{&#32;&#32;<emphasis role="comment">/*&#32;first&#32;operand&#32;is&#32;empty&#32;string?&#32;*/</emphasis>
00648 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8h_1af9258d87e8f082be8a2adb731d90f1a5">setobjs2s</link>(L,&#32;top&#32;-&#32;2,&#32;top&#32;-&#32;1);&#32;&#32;<emphasis role="comment">/*&#32;result&#32;is&#32;second&#32;op.&#32;*/</emphasis>
00649 &#32;&#32;&#32;&#32;}
00650 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00651 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;at&#32;least&#32;two&#32;non-empty&#32;string&#32;values;&#32;get&#32;as&#32;many&#32;as&#32;possible&#32;*/</emphasis>
00652 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;tl&#32;=&#32;<link linkend="_lobject_8h_1a9753d5f343806e0cb16293f53143098c">vslen</link>(<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(top&#32;-&#32;1));
00653 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_t_string">TString</link>&#32;*ts;
00654 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;collect&#32;total&#32;length&#32;and&#32;number&#32;of&#32;strings&#32;*/</emphasis>
00655 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(n&#32;=&#32;1;&#32;n&#32;&lt;&#32;total&#32;&amp;&amp;&#32;<link linkend="_lvm_8c_1ac4af8d3b7a2c325068e51a81b01d0a65">tostring</link>(L,&#32;<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(top&#32;-&#32;n&#32;-&#32;1));&#32;n++)&#32;{
00656 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;l&#32;=&#32;<link linkend="_lobject_8h_1a9753d5f343806e0cb16293f53143098c">vslen</link>(<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(top&#32;-&#32;n&#32;-&#32;1));
00657 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_llimits_8h_1ac6c45889010c1bd68631771b64f18101">unlikely</link>(l&#32;&gt;=&#32;(<link linkend="_llimits_8h_1a0592dba56693fad79136250c11e5a7fe">MAX_SIZE</link>/<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">char</emphasis>))&#32;-&#32;tl))
00658 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_ldebug_8c_1a88d38ca5da2e7a1492fc9d5ad70c32c5">luaG_runerror</link>(L,&#32;<emphasis role="stringliteral">&quot;string&#32;length&#32;overflow&quot;</emphasis>);
00659 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tl&#32;+=&#32;l;
00660 &#32;&#32;&#32;&#32;&#32;&#32;}
00661 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tl&#32;&lt;=&#32;<link linkend="_llimits_8h_1a54fe4797308d6b24bf84fa0129a155bd">LUAI_MAXSHORTLEN</link>)&#32;{&#32;&#32;<emphasis role="comment">/*&#32;is&#32;result&#32;a&#32;short&#32;string?&#32;*/</emphasis>
00662 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;buff[<link linkend="_llimits_8h_1a54fe4797308d6b24bf84fa0129a155bd">LUAI_MAXSHORTLEN</link>];
00663 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a7f03a9c23b77ec5cd280bb955ec430b8">copy2buff</link>(top,&#32;n,&#32;buff);&#32;&#32;<emphasis role="comment">/*&#32;copy&#32;strings&#32;to&#32;buffer&#32;*/</emphasis>
00664 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ts&#32;=&#32;<link linkend="_lstring_8c_1ab41fb084ce3ea5e2779f6659ccc2484d">luaS_newlstr</link>(L,&#32;buff,&#32;tl);
00665 &#32;&#32;&#32;&#32;&#32;&#32;}
00666 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{&#32;&#32;<emphasis role="comment">/*&#32;long&#32;string;&#32;copy&#32;strings&#32;directly&#32;to&#32;final&#32;result&#32;*/</emphasis>
00667 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ts&#32;=&#32;<link linkend="_lstring_8c_1a8790c7d6e706f935dd6e9eefd068921c">luaS_createlngstrobj</link>(L,&#32;tl);
00668 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a7f03a9c23b77ec5cd280bb955ec430b8">copy2buff</link>(top,&#32;n,&#32;<link linkend="_lobject_8h_1acb05d3ab238923581a9c629b8e11a6ac">getstr</link>(ts));
00669 &#32;&#32;&#32;&#32;&#32;&#32;}
00670 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8h_1aa60b4c3bb90063dcaa2f90e77d4a61f6">setsvalue2s</link>(L,&#32;top&#32;-&#32;n,&#32;ts);&#32;&#32;<emphasis role="comment">/*&#32;create&#32;result&#32;*/</emphasis>
00671 &#32;&#32;&#32;&#32;}
00672 &#32;&#32;&#32;&#32;total&#32;-=&#32;n-1;&#32;&#32;<emphasis role="comment">/*&#32;got&#32;&apos;n&apos;&#32;strings&#32;to&#32;create&#32;1&#32;new&#32;*/</emphasis>
00673 &#32;&#32;&#32;&#32;L-&gt;<link linkend="_structlua___state_1afeb5dbe379fc406b35fe5f8a5fcfc5d7">top</link>&#32;-=&#32;n-1;&#32;&#32;<emphasis role="comment">/*&#32;popped&#32;&apos;n&apos;&#32;strings&#32;and&#32;pushed&#32;one&#32;*/</emphasis>
00674 &#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>&#32;(total&#32;&gt;&#32;1);&#32;&#32;<emphasis role="comment">/*&#32;repeat&#32;until&#32;only&#32;1&#32;result&#32;left&#32;*/</emphasis>
00675 }
00676 
00677 
00678 <emphasis role="comment">/*</emphasis>
00679 <emphasis role="comment">**&#32;Main&#32;operation&#32;&apos;ra&#32;=&#32;#rb&apos;.</emphasis>
00680 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lvm_8c_source_1l00681"/><link linkend="_lvm_8h_1a414b4b487239935324f2f16e1e7715db">00681</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_lvm_8c_1aae23b597659b2aae680f1d0a0b39ab3b">luaV_objlen</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<link linkend="_union_stack_value">StkId</link>&#32;ra,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_value">TValue</link>&#32;*rb)&#32;{
00682 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_value">TValue</link>&#32;*tm;
00683 &#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(<link linkend="_lobject_8h_1a01db083f8bc8b2eb51a45c0ba9967043">ttypetag</link>(rb))&#32;{
00684 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lobject_8h_1afaf24d5b79b9027ad768d023778669df">LUA_VTABLE</link>:&#32;{
00685 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_table">Table</link>&#32;*h&#32;=&#32;<link linkend="_lobject_8h_1a336a6ce5e8340e6de133ec249cf47ebf">hvalue</link>(rb);
00686 &#32;&#32;&#32;&#32;&#32;&#32;tm&#32;=&#32;<link linkend="_ltm_8h_1a0a29ed88450f8f92330a6a411a9c8134">fasttm</link>(L,&#32;h-&gt;<link linkend="_struct_table_1a7051e0d573f6be65b230b27565a1a901">metatable</link>,&#32;<link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1aadbac1e8e363dc76eb94aac5c8e7a7a4">TM_LEN</link>);
00687 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tm)&#32;<emphasis role="keywordflow">break</emphasis>;&#32;&#32;<emphasis role="comment">/*&#32;metamethod?&#32;break&#32;switch&#32;to&#32;call&#32;it&#32;*/</emphasis>
00688 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8h_1af9dd109ba186841ab26efb2d62baf4f6">setivalue</link>(<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(ra),&#32;<link linkend="_ltable_8c_1a94d8f30941967078b44e2e21c4dd9a75">luaH_getn</link>(h));&#32;&#32;<emphasis role="comment">/*&#32;else&#32;primitive&#32;len&#32;*/</emphasis>
00689 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
00690 &#32;&#32;&#32;&#32;}
00691 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lobject_8h_1a794410ffd7267ef873eb05ac695b1ba6">LUA_VSHRSTR</link>:&#32;{
00692 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8h_1af9dd109ba186841ab26efb2d62baf4f6">setivalue</link>(<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(ra),&#32;<link linkend="_lobject_8h_1a8661397faed512ccc9c70a4661f1a83d">tsvalue</link>(rb)-&gt;shrlen);
00693 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
00694 &#32;&#32;&#32;&#32;}
00695 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lobject_8h_1a6869fcb0a0178b6d70d431eae1683199">LUA_VLNGSTR</link>:&#32;{
00696 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8h_1af9dd109ba186841ab26efb2d62baf4f6">setivalue</link>(<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(ra),&#32;<link linkend="_lobject_8h_1a8661397faed512ccc9c70a4661f1a83d">tsvalue</link>(rb)-&gt;u.lnglen);
00697 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
00698 &#32;&#32;&#32;&#32;}
00699 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:&#32;{&#32;&#32;<emphasis role="comment">/*&#32;try&#32;metamethod&#32;*/</emphasis>
00700 &#32;&#32;&#32;&#32;&#32;&#32;tm&#32;=&#32;<link linkend="_ltm_8c_1a0a3a3df9d6e7f17d806f74d411e59b2d">luaT_gettmbyobj</link>(L,&#32;rb,&#32;<link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1aadbac1e8e363dc76eb94aac5c8e7a7a4">TM_LEN</link>);
00701 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_llimits_8h_1ac6c45889010c1bd68631771b64f18101">unlikely</link>(<link linkend="_ltm_8h_1a219a766ba661fa51758627615c22e632">notm</link>(tm)))&#32;&#32;<emphasis role="comment">/*&#32;no&#32;metamethod?&#32;*/</emphasis>
00702 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_ldebug_8c_1a60bf9ce85441bd5065f2b73640163711">luaG_typeerror</link>(L,&#32;rb,&#32;<emphasis role="stringliteral">&quot;get&#32;length&#32;of&quot;</emphasis>);
00703 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00704 &#32;&#32;&#32;&#32;}
00705 &#32;&#32;}
00706 &#32;&#32;<link linkend="_ltm_8c_1aad98f3a425ba53e65e7a8f8037320402">luaT_callTMres</link>(L,&#32;tm,&#32;rb,&#32;rb,&#32;ra);
00707 }
00708 
00709 
00710 <emphasis role="comment">/*</emphasis>
00711 <emphasis role="comment">**&#32;Integer&#32;division;&#32;return&#32;&apos;m&#32;//&#32;n&apos;,&#32;that&#32;is,&#32;floor(m/n).</emphasis>
00712 <emphasis role="comment">**&#32;C&#32;division&#32;truncates&#32;its&#32;result&#32;(rounds&#32;towards&#32;zero).</emphasis>
00713 <emphasis role="comment">**&#32;&apos;floor(q)&#32;==&#32;trunc(q)&apos;&#32;when&#32;&apos;q&#32;&gt;=&#32;0&apos;&#32;or&#32;when&#32;&apos;q&apos;&#32;is&#32;integer,</emphasis>
00714 <emphasis role="comment">**&#32;otherwise&#32;&apos;floor(q)&#32;==&#32;trunc(q)&#32;-&#32;1&apos;.</emphasis>
00715 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lvm_8c_source_1l00716"/><link linkend="_lvm_8h_1a3fb7bab8732e10dbf0305243201075dc">00716</link> <link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;<link linkend="_lvm_8c_1a8815b6d106992c5713900b20a0da5e29">luaV_idiv</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;m,&#32;<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;n)&#32;{
00717 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_llimits_8h_1ac6c45889010c1bd68631771b64f18101">unlikely</link>(<link linkend="_llimits_8h_1a5871309e671ba9f938fcb1e0d3bcbeca">l_castS2U</link>(n)&#32;+&#32;1u&#32;&lt;=&#32;1u))&#32;{&#32;&#32;<emphasis role="comment">/*&#32;special&#32;cases:&#32;-1&#32;or&#32;0&#32;*/</emphasis>
00718 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(n&#32;==&#32;0)
00719 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_ldebug_8c_1a88d38ca5da2e7a1492fc9d5ad70c32c5">luaG_runerror</link>(L,&#32;<emphasis role="stringliteral">&quot;attempt&#32;to&#32;divide&#32;by&#32;zero&quot;</emphasis>);
00720 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_lvm_8h_1a6c054eb9ce53c1b282e7ff0088895a37">intop</link>(-,&#32;0,&#32;m);&#32;&#32;&#32;<emphasis role="comment">/*&#32;n==-1;&#32;avoid&#32;overflow&#32;with&#32;0x80000...//-1&#32;*/</emphasis>
00721 &#32;&#32;}
00722 &#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00723 &#32;&#32;&#32;&#32;<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;q&#32;=&#32;m&#32;/&#32;n;&#32;&#32;<emphasis role="comment">/*&#32;perform&#32;C&#32;division&#32;*/</emphasis>
00724 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((m&#32;^&#32;n)&#32;&lt;&#32;0&#32;&amp;&amp;&#32;m&#32;%&#32;n&#32;!=&#32;0)&#32;&#32;<emphasis role="comment">/*&#32;&apos;m/n&apos;&#32;would&#32;be&#32;negative&#32;non-integer?&#32;*/</emphasis>
00725 &#32;&#32;&#32;&#32;&#32;&#32;q&#32;-=&#32;1;&#32;&#32;<emphasis role="comment">/*&#32;correct&#32;result&#32;for&#32;different&#32;rounding&#32;*/</emphasis>
00726 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;q;
00727 &#32;&#32;}
00728 }
00729 
00730 
00731 <emphasis role="comment">/*</emphasis>
00732 <emphasis role="comment">**&#32;Integer&#32;modulus;&#32;return&#32;&apos;m&#32;%&#32;n&apos;.&#32;(Assume&#32;that&#32;C&#32;&apos;%&apos;&#32;with</emphasis>
00733 <emphasis role="comment">**&#32;negative&#32;operands&#32;follows&#32;C99&#32;behavior.&#32;See&#32;previous&#32;comment</emphasis>
00734 <emphasis role="comment">**&#32;about&#32;luaV_idiv.)</emphasis>
00735 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lvm_8c_source_1l00736"/><link linkend="_lvm_8h_1a8c64b8dbe11cb5be7617feb17c279ced">00736</link> <link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;<link linkend="_lvm_8c_1af1241d1650e114f39843626fd879d3d6">luaV_mod</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;m,&#32;<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;n)&#32;{
00737 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_llimits_8h_1ac6c45889010c1bd68631771b64f18101">unlikely</link>(<link linkend="_llimits_8h_1a5871309e671ba9f938fcb1e0d3bcbeca">l_castS2U</link>(n)&#32;+&#32;1u&#32;&lt;=&#32;1u))&#32;{&#32;&#32;<emphasis role="comment">/*&#32;special&#32;cases:&#32;-1&#32;or&#32;0&#32;*/</emphasis>
00738 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(n&#32;==&#32;0)
00739 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_ldebug_8c_1a88d38ca5da2e7a1492fc9d5ad70c32c5">luaG_runerror</link>(L,&#32;<emphasis role="stringliteral">&quot;attempt&#32;to&#32;perform&#32;&apos;n%%0&apos;&quot;</emphasis>);
00740 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;&#32;&#32;&#32;<emphasis role="comment">/*&#32;m&#32;%&#32;-1&#32;==&#32;0;&#32;avoid&#32;overflow&#32;with&#32;0x80000...%-1&#32;*/</emphasis>
00741 &#32;&#32;}
00742 &#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00743 &#32;&#32;&#32;&#32;<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;r&#32;=&#32;m&#32;%&#32;n;
00744 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(r&#32;!=&#32;0&#32;&amp;&amp;&#32;(r&#32;^&#32;n)&#32;&lt;&#32;0)&#32;&#32;<emphasis role="comment">/*&#32;&apos;m/n&apos;&#32;would&#32;be&#32;non-integer&#32;negative?&#32;*/</emphasis>
00745 &#32;&#32;&#32;&#32;&#32;&#32;r&#32;+=&#32;n;&#32;&#32;<emphasis role="comment">/*&#32;correct&#32;result&#32;for&#32;different&#32;rounding&#32;*/</emphasis>
00746 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;r;
00747 &#32;&#32;}
00748 }
00749 
00750 
00751 <emphasis role="comment">/*</emphasis>
00752 <emphasis role="comment">**&#32;Float&#32;modulus</emphasis>
00753 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lvm_8c_source_1l00754"/><link linkend="_lvm_8h_1a7de4dcc7d1f397d2c02443dd7cb3e65b">00754</link> <link linkend="_lua_8h_1af0a6ed3b852d680769cfc410a0672172">lua_Number</link>&#32;<link linkend="_lvm_8c_1ac0162e10dc7e235089eb3cbef4addca7">luaV_modf</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<link linkend="_lua_8h_1af0a6ed3b852d680769cfc410a0672172">lua_Number</link>&#32;m,&#32;<link linkend="_lua_8h_1af0a6ed3b852d680769cfc410a0672172">lua_Number</link>&#32;n)&#32;{
00755 &#32;&#32;<link linkend="_lua_8h_1af0a6ed3b852d680769cfc410a0672172">lua_Number</link>&#32;r;
00756 &#32;&#32;<link linkend="_llimits_8h_1ac6e6bfca420c761a89eee023103c34f4">luai_nummod</link>(L,&#32;m,&#32;n,&#32;r);
00757 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;r;
00758 }
00759 
00760 
00761 <emphasis role="comment">/*&#32;number&#32;of&#32;bits&#32;in&#32;an&#32;integer&#32;*/</emphasis>
<anchor xml:id="_lvm_8c_source_1l00762"/><link linkend="_lvm_8c_1a671db1197d35e1db5d5bf18f1af5ed3f">00762</link> <emphasis role="preprocessor">#define&#32;NBITS&#32;&#32;&#32;cast_int(sizeof(lua_Integer)&#32;*&#32;CHAR_BIT)</emphasis>
00763 
00764 <emphasis role="comment">/*</emphasis>
00765 <emphasis role="comment">**&#32;Shift&#32;left&#32;operation.&#32;(Shift&#32;right&#32;just&#32;negates&#32;&apos;y&apos;.)</emphasis>
00766 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lvm_8c_source_1l00767"/><link linkend="_lvm_8c_1a1696d36ebff18f8164f4aa2f993c2088">00767</link> <emphasis role="preprocessor">#define&#32;luaV_shiftr(x,y)&#32;&#32;&#32;&#32;luaV_shiftl(x,-(y))</emphasis>
00768 
<anchor xml:id="_lvm_8c_source_1l00769"/><link linkend="_lvm_8h_1aa785f0ac32664e47c2d3689d75edc5e8">00769</link> <link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;<link linkend="_lvm_8c_1ade6c9565152d0bb1f6116a90ea2c867a">luaV_shiftl</link>&#32;(<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;x,&#32;<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;y)&#32;{
00770 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(y&#32;&lt;&#32;0)&#32;{&#32;&#32;<emphasis role="comment">/*&#32;shift&#32;right?&#32;*/</emphasis>
00771 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(y&#32;&lt;=&#32;-<link linkend="_lvm_8c_1a671db1197d35e1db5d5bf18f1af5ed3f">NBITS</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
00772 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_lvm_8h_1a6c054eb9ce53c1b282e7ff0088895a37">intop</link>(&gt;&gt;,&#32;x,&#32;-y);
00773 &#32;&#32;}
00774 &#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{&#32;&#32;<emphasis role="comment">/*&#32;shift&#32;left&#32;*/</emphasis>
00775 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(y&#32;&gt;=&#32;<link linkend="_lvm_8c_1a671db1197d35e1db5d5bf18f1af5ed3f">NBITS</link>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
00776 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_lvm_8h_1a6c054eb9ce53c1b282e7ff0088895a37">intop</link>(&lt;&lt;,&#32;x,&#32;y);
00777 &#32;&#32;}
00778 }
00779 
00780 
00781 <emphasis role="comment">/*</emphasis>
00782 <emphasis role="comment">**&#32;create&#32;a&#32;new&#32;Lua&#32;closure,&#32;push&#32;it&#32;in&#32;the&#32;stack,&#32;and&#32;initialize</emphasis>
00783 <emphasis role="comment">**&#32;its&#32;upvalues.</emphasis>
00784 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lvm_8c_source_1l00785"/><link linkend="_lvm_8c_1a4bcc07915cc8b4d397b6d411e4d2723c">00785</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_lvm_8c_1a4bcc07915cc8b4d397b6d411e4d2723c">pushclosure</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<link linkend="_struct_proto">Proto</link>&#32;*p,&#32;<link linkend="_struct_up_val">UpVal</link>&#32;**encup,&#32;<link linkend="_union_stack_value">StkId</link>&#32;base,
00786 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_union_stack_value">StkId</link>&#32;ra)&#32;{
00787 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;nup&#32;=&#32;p-&gt;<link linkend="_struct_proto_1a2e13a98343ef0d1233bb3e62ae519c5f">sizeupvalues</link>;
00788 &#32;&#32;<link linkend="_struct_upvaldesc">Upvaldesc</link>&#32;*uv&#32;=&#32;p-&gt;<link linkend="_struct_proto_1ac3b891662880254a7e0a3dc0afa86254">upvalues</link>;
00789 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
00790 &#32;&#32;<link linkend="_struct_l_closure">LClosure</link>&#32;*ncl&#32;=&#32;<link linkend="_lfunc_8c_1a9fb730389493e9e60bbf0b6809061af5">luaF_newLclosure</link>(L,&#32;nup);
00791 &#32;&#32;ncl-&gt;<link linkend="_struct_l_closure_1aed1f50b9bdc5ce4c7cfa49529472b42c">p</link>&#32;=&#32;p;
00792 &#32;&#32;<link linkend="_lobject_8h_1a3e4e5270b0c50551ed8c3a0367f56d14">setclLvalue2s</link>(L,&#32;ra,&#32;ncl);&#32;&#32;<emphasis role="comment">/*&#32;anchor&#32;new&#32;closure&#32;in&#32;stack&#32;*/</emphasis>
00793 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;nup;&#32;i++)&#32;{&#32;&#32;<emphasis role="comment">/*&#32;fill&#32;in&#32;its&#32;upvalues&#32;*/</emphasis>
00794 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(uv[i].instack)&#32;&#32;<emphasis role="comment">/*&#32;upvalue&#32;refers&#32;to&#32;local&#32;variable?&#32;*/</emphasis>
00795 &#32;&#32;&#32;&#32;&#32;&#32;ncl-&gt;<link linkend="_struct_l_closure_1aa4734795813776a46167fe712dfd9506">upvals</link>[i]&#32;=&#32;<link linkend="_lfunc_8c_1a20f971bc630264489ebc4deea02be13a">luaF_findupval</link>(L,&#32;base&#32;+&#32;uv[i].idx);
00796 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;&#32;<emphasis role="comment">/*&#32;get&#32;upvalue&#32;from&#32;enclosing&#32;function&#32;*/</emphasis>
00797 &#32;&#32;&#32;&#32;&#32;&#32;ncl-&gt;<link linkend="_struct_l_closure_1aa4734795813776a46167fe712dfd9506">upvals</link>[i]&#32;=&#32;encup[uv[i].<link linkend="_struct_upvaldesc_1a6234b462bcd2f6c2e6f5e537b2793b84">idx</link>];
00798 &#32;&#32;&#32;&#32;<link linkend="_lgc_8h_1a90ac4f3c7085a418025edcc7215e8983">luaC_objbarrier</link>(L,&#32;ncl,&#32;ncl-&gt;<link linkend="_struct_l_closure_1aa4734795813776a46167fe712dfd9506">upvals</link>[i]);
00799 &#32;&#32;}
00800 }
00801 
00802 
00803 <emphasis role="comment">/*</emphasis>
00804 <emphasis role="comment">**&#32;finish&#32;execution&#32;of&#32;an&#32;opcode&#32;interrupted&#32;by&#32;a&#32;yield</emphasis>
00805 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lvm_8c_source_1l00806"/><link linkend="_lvm_8h_1a5db3e64b3cc2f63c3b10b27f7ecd1d03">00806</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_lvm_8c_1a8ccb90ee001013b54a5005df64c7359d">luaV_finishOp</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L)&#32;{
00807 &#32;&#32;<link linkend="_struct_call_info">CallInfo</link>&#32;*ci&#32;=&#32;L-&gt;<link linkend="_structlua___state_1a8764223139091552413c85d3fc0bb1eb">ci</link>;
00808 &#32;&#32;<link linkend="_union_stack_value">StkId</link>&#32;base&#32;=&#32;ci-&gt;<link linkend="_struct_call_info_1a9d82a8ad04b0dd8837e621047972260a">func</link>&#32;+&#32;1;
00809 &#32;&#32;<link linkend="_llimits_8h_1aa81d2e7f7263ef29946852d4966a192e">Instruction</link>&#32;inst&#32;=&#32;*(ci-&gt;<link linkend="_struct_call_info_1af8751782b1a040b075c25cef0acb484a">u</link>.<link linkend="_struct_call_info_1a1abd0b31f495fcbdfaa1bb8ac5546d6d">l</link>.savedpc&#32;-&#32;1);&#32;&#32;<emphasis role="comment">/*&#32;interrupted&#32;instruction&#32;*/</emphasis>
00810 &#32;&#32;<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7">OpCode</link>&#32;op&#32;=&#32;<link linkend="_lopcodes_8h_1aaa146179c3677b790c5681dcd82f0acc">GET_OPCODE</link>(inst);
00811 &#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(op)&#32;{&#32;&#32;<emphasis role="comment">/*&#32;finish&#32;its&#32;execution&#32;*/</emphasis>
00812 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7a25acd5dff5083adb067889345ae100d6">OP_MMBIN</link>:&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7a2068a8603e2904d2abd826877ab9e516">OP_MMBINI</link>:&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7a023d51bef94e0b9450cce3b76788a229">OP_MMBINK</link>:&#32;{
00813 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8h_1af9258d87e8f082be8a2adb731d90f1a5">setobjs2s</link>(L,&#32;base&#32;+&#32;<link linkend="_lopcodes_8h_1a1d504abc1e2246548f89977210dce0b9">GETARG_A</link>(*(ci-&gt;<link linkend="_struct_call_info_1af8751782b1a040b075c25cef0acb484a">u</link>.<link linkend="_struct_call_info_1a1abd0b31f495fcbdfaa1bb8ac5546d6d">l</link>.savedpc&#32;-&#32;2)),&#32;--L-&gt;<link linkend="_structlua___state_1afeb5dbe379fc406b35fe5f8a5fcfc5d7">top</link>);
00814 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00815 &#32;&#32;&#32;&#32;}
00816 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7ae3fd0932f8be8e5e810d731fd60ab8ef">OP_UNM</link>:&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7ada36dd48f6870a79b5998262341c57d6">OP_BNOT</link>:&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7a55406931f4958f887e6d966d154a1931">OP_LEN</link>:
00817 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7acba90301f3ac979a3edd23f74182367b">OP_GETTABUP</link>:&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7ab1ec2a36c59db7612249cc31e382fdd9">OP_GETTABLE</link>:&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7a965a4251f6730e9c8e5ca9e4ba4d8568">OP_GETI</link>:
00818 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7ab8cb85274c0cd7f8d8525953bd844207">OP_GETFIELD</link>:&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7a64bea18253f9e73c4c5fcfa6b0d5abd2">OP_SELF</link>:&#32;{
00819 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8h_1af9258d87e8f082be8a2adb731d90f1a5">setobjs2s</link>(L,&#32;base&#32;+&#32;<link linkend="_lopcodes_8h_1a1d504abc1e2246548f89977210dce0b9">GETARG_A</link>(inst),&#32;--L-&gt;<link linkend="_structlua___state_1afeb5dbe379fc406b35fe5f8a5fcfc5d7">top</link>);
00820 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00821 &#32;&#32;&#32;&#32;}
00822 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7a7d5ed006824d331041dad8486e52df50">OP_LT</link>:&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7acef6e71b662db063ff532d89500bb0c0">OP_LE</link>:
00823 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7a7355d162e8b15877fe33c54e3b755746">OP_LTI</link>:&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7aec7e53f36f35ef810ecff8a7eb274877">OP_LEI</link>:
00824 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7a4c9ef8190def252dc1e0deb1bf7e787e">OP_GTI</link>:&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7ade0bd78cc2f7ec9c1bf6c161759221fa">OP_GEI</link>:
00825 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7a1634898deb6e4d1bcb15416034c641c5">OP_EQ</link>:&#32;{&#32;&#32;<emphasis role="comment">/*&#32;note&#32;that&#32;&apos;OP_EQI&apos;/&apos;OP_EQK&apos;&#32;cannot&#32;yield&#32;*/</emphasis>
00826 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;res&#32;=&#32;!<link linkend="_lobject_8h_1a188e1a95c8c6d547a13431a6e1edd5b3">l_isfalse</link>(<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(L-&gt;<link linkend="_structlua___state_1afeb5dbe379fc406b35fe5f8a5fcfc5d7">top</link>&#32;-&#32;1));
00827 &#32;&#32;&#32;&#32;&#32;&#32;L-&gt;<link linkend="_structlua___state_1afeb5dbe379fc406b35fe5f8a5fcfc5d7">top</link>--;
00828 <emphasis role="preprocessor">#if&#32;defined(LUA_COMPAT_LT_LE)</emphasis>
00829 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ci-&gt;<link linkend="_struct_call_info_1a1551d635e86dcf5c62f9bc718512d89b">callstatus</link>&#32;&amp;&#32;CIST_LEQ)&#32;{&#32;&#32;<emphasis role="comment">/*&#32;&quot;&lt;=&quot;&#32;using&#32;&quot;&lt;&quot;&#32;instead?&#32;*/</emphasis>
00830 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ci-&gt;<link linkend="_struct_call_info_1a1551d635e86dcf5c62f9bc718512d89b">callstatus</link>&#32;^=&#32;CIST_LEQ;&#32;&#32;<emphasis role="comment">/*&#32;clear&#32;mark&#32;*/</emphasis>
00831 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;res&#32;=&#32;!res;&#32;&#32;<emphasis role="comment">/*&#32;negate&#32;result&#32;*/</emphasis>
00832 &#32;&#32;&#32;&#32;&#32;&#32;}
00833 <emphasis role="preprocessor">#endif</emphasis>
00834 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_llimits_8h_1a5978f5fda715bd80e845df1e16ad7780">lua_assert</link>(<link linkend="_lopcodes_8h_1aaa146179c3677b790c5681dcd82f0acc">GET_OPCODE</link>(*ci-&gt;<link linkend="_struct_call_info_1af8751782b1a040b075c25cef0acb484a">u</link>.<link linkend="_struct_call_info_1a1abd0b31f495fcbdfaa1bb8ac5546d6d">l</link>.savedpc)&#32;==&#32;<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7afd679fab86e6a91d22c91734e287639b">OP_JMP</link>);
00835 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(res&#32;!=&#32;<link linkend="_lopcodes_8h_1aa9ce1e6169ccc23a1e9c783f61af343f">GETARG_k</link>(inst))&#32;&#32;<emphasis role="comment">/*&#32;condition&#32;failed?&#32;*/</emphasis>
00836 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ci-&gt;<link linkend="_struct_call_info_1af8751782b1a040b075c25cef0acb484a">u</link>.<link linkend="_struct_call_info_1a1abd0b31f495fcbdfaa1bb8ac5546d6d">l</link>.savedpc++;&#32;&#32;<emphasis role="comment">/*&#32;skip&#32;jump&#32;instruction&#32;*/</emphasis>
00837 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00838 &#32;&#32;&#32;&#32;}
00839 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7a28a7da14b1413b441cf2a5d433b43a51">OP_CONCAT</link>:&#32;{
00840 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_union_stack_value">StkId</link>&#32;top&#32;=&#32;L-&gt;<link linkend="_structlua___state_1afeb5dbe379fc406b35fe5f8a5fcfc5d7">top</link>&#32;-&#32;1;&#32;&#32;<emphasis role="comment">/*&#32;top&#32;when&#32;&apos;luaT_tryconcatTM&apos;&#32;was&#32;called&#32;*/</emphasis>
00841 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;a&#32;=&#32;<link linkend="_lopcodes_8h_1a1d504abc1e2246548f89977210dce0b9">GETARG_A</link>(inst);&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;first&#32;element&#32;to&#32;concatenate&#32;*/</emphasis>
00842 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;total&#32;=&#32;<link linkend="_llimits_8h_1a37a9e2c4b53433d34bad0f12a1500c08">cast_int</link>(top&#32;-&#32;1&#32;-&#32;(base&#32;+&#32;a));&#32;&#32;<emphasis role="comment">/*&#32;yet&#32;to&#32;concatenate&#32;*/</emphasis>
00843 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8h_1af9258d87e8f082be8a2adb731d90f1a5">setobjs2s</link>(L,&#32;top&#32;-&#32;2,&#32;top);&#32;&#32;<emphasis role="comment">/*&#32;put&#32;TM&#32;result&#32;in&#32;proper&#32;position&#32;*/</emphasis>
00844 &#32;&#32;&#32;&#32;&#32;&#32;L-&gt;<link linkend="_structlua___state_1afeb5dbe379fc406b35fe5f8a5fcfc5d7">top</link>&#32;=&#32;top&#32;-&#32;1;&#32;&#32;<emphasis role="comment">/*&#32;top&#32;is&#32;one&#32;after&#32;last&#32;element&#32;(at&#32;top-2)&#32;*/</emphasis>
00845 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a2f076040af405dcb50d661edd692eca7">luaV_concat</link>(L,&#32;total);&#32;&#32;<emphasis role="comment">/*&#32;concat&#32;them&#32;(may&#32;yield&#32;again)&#32;*/</emphasis>
00846 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00847 &#32;&#32;&#32;&#32;}
00848 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:&#32;{
00849 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;only&#32;these&#32;other&#32;opcodes&#32;can&#32;yield&#32;*/</emphasis>
00850 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_llimits_8h_1a5978f5fda715bd80e845df1e16ad7780">lua_assert</link>(op&#32;==&#32;<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7a899602d2c96443e08eec9e477071aa22">OP_TFORCALL</link>&#32;||&#32;op&#32;==&#32;<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7a098bbeea13096667b102f7fd90cbe38f">OP_CALL</link>&#32;||
00851 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;op&#32;==&#32;<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7aff2c07ebfd82aa22cc247e9855a16069">OP_TAILCALL</link>&#32;||&#32;op&#32;==&#32;<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7ac486cd83792b58a638e37cb249d54a7e">OP_SETTABUP</link>&#32;||&#32;op&#32;==&#32;<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7a34315d7408f31b006bf41c9e9c2d736e">OP_SETTABLE</link>&#32;||
00852 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;op&#32;==&#32;<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7a51eb594f07db275f5c6a77621b2de777">OP_SETI</link>&#32;||&#32;op&#32;==&#32;<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7a342ca5ec1477419948043acb24ef3032">OP_SETFIELD</link>);
00853 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00854 &#32;&#32;&#32;&#32;}
00855 &#32;&#32;}
00856 }
00857 
00858 
00859 
00860 
00861 <emphasis role="comment">/*</emphasis>
00862 <emphasis role="comment">**&#32;{==================================================================</emphasis>
00863 <emphasis role="comment">**&#32;Macros&#32;for&#32;arithmetic/bitwise/comparison&#32;opcodes&#32;in&#32;&apos;luaV_execute&apos;</emphasis>
00864 <emphasis role="comment">**&#32;===================================================================</emphasis>
00865 <emphasis role="comment">*/</emphasis>
00866 
<anchor xml:id="_lvm_8c_source_1l00867"/><link linkend="_lvm_8c_1ad15610968ca2288a0ee43de0ac00fc56">00867</link> <emphasis role="preprocessor">#define&#32;l_addi(L,a,b)&#32;&#32;&#32;intop(+,&#32;a,&#32;b)</emphasis>
<anchor xml:id="_lvm_8c_source_1l00868"/><link linkend="_lvm_8c_1adca3ee1c8bff66cff29c485a8b0f8d0b">00868</link> <emphasis role="preprocessor">#define&#32;l_subi(L,a,b)&#32;&#32;&#32;intop(-,&#32;a,&#32;b)</emphasis>
<anchor xml:id="_lvm_8c_source_1l00869"/><link linkend="_lvm_8c_1a87f648fd6055968d928dc2fef3e2d05b">00869</link> <emphasis role="preprocessor">#define&#32;l_muli(L,a,b)&#32;&#32;&#32;intop(*,&#32;a,&#32;b)</emphasis>
<anchor xml:id="_lvm_8c_source_1l00870"/><link linkend="_lvm_8c_1a2ae697e156c4a4f2c92f2d1e133a5255">00870</link> <emphasis role="preprocessor">#define&#32;l_band(a,b)&#32;intop(&amp;,&#32;a,&#32;b)</emphasis>
<anchor xml:id="_lvm_8c_source_1l00871"/><link linkend="_lvm_8c_1a2c1a2e4332f652bc78071b89b06b3d58">00871</link> <emphasis role="preprocessor">#define&#32;l_bor(a,b)&#32;&#32;intop(|,&#32;a,&#32;b)</emphasis>
<anchor xml:id="_lvm_8c_source_1l00872"/><link linkend="_lvm_8c_1a1719c71ba0a699fa728a6d3091114941">00872</link> <emphasis role="preprocessor">#define&#32;l_bxor(a,b)&#32;intop(^,&#32;a,&#32;b)</emphasis>
00873 
<anchor xml:id="_lvm_8c_source_1l00874"/><link linkend="_lvm_8c_1a52eace142e89aebd3cc76b2257bc1ac6">00874</link> <emphasis role="preprocessor">#define&#32;l_lti(a,b)&#32;&#32;(a&#32;&lt;&#32;b)</emphasis>
<anchor xml:id="_lvm_8c_source_1l00875"/><link linkend="_lvm_8c_1af018f58bdf08a419023bcb94d0fab609">00875</link> <emphasis role="preprocessor">#define&#32;l_lei(a,b)&#32;&#32;(a&#32;&lt;=&#32;b)</emphasis>
<anchor xml:id="_lvm_8c_source_1l00876"/><link linkend="_lvm_8c_1a8fdefcbe99129a14abac1d25be4794bc">00876</link> <emphasis role="preprocessor">#define&#32;l_gti(a,b)&#32;&#32;(a&#32;&gt;&#32;b)</emphasis>
<anchor xml:id="_lvm_8c_source_1l00877"/><link linkend="_lvm_8c_1a3890b28845d18e2c75d51b3e7fd85f9c">00877</link> <emphasis role="preprocessor">#define&#32;l_gei(a,b)&#32;&#32;(a&#32;&gt;=&#32;b)</emphasis>
00878 
00879 
00880 <emphasis role="comment">/*</emphasis>
00881 <emphasis role="comment">**&#32;Arithmetic&#32;operations&#32;with&#32;immediate&#32;operands.&#32;&apos;iop&apos;&#32;is&#32;the&#32;integer</emphasis>
00882 <emphasis role="comment">**&#32;operation,&#32;&apos;fop&apos;&#32;is&#32;the&#32;float&#32;operation.</emphasis>
00883 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lvm_8c_source_1l00884"/><link linkend="_lvm_8c_1a64f748f1270f46a82d9740b510e0cd3a">00884</link> <emphasis role="preprocessor">#define&#32;op_arithI(L,iop,fop)&#32;{&#32;&#32;\</emphasis>
00885 <emphasis role="preprocessor">&#32;&#32;TValue&#32;*v1&#32;=&#32;vRB(i);&#32;&#32;\</emphasis>
00886 <emphasis role="preprocessor">&#32;&#32;int&#32;imm&#32;=&#32;GETARG_sC(i);&#32;&#32;\</emphasis>
00887 <emphasis role="preprocessor">&#32;&#32;if&#32;(ttisinteger(v1))&#32;{&#32;&#32;\</emphasis>
00888 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;lua_Integer&#32;iv1&#32;=&#32;ivalue(v1);&#32;&#32;\</emphasis>
00889 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;pc++;&#32;setivalue(s2v(ra),&#32;iop(L,&#32;iv1,&#32;imm));&#32;&#32;\</emphasis>
00890 <emphasis role="preprocessor">&#32;&#32;}&#32;&#32;\</emphasis>
00891 <emphasis role="preprocessor">&#32;&#32;else&#32;if&#32;(ttisfloat(v1))&#32;{&#32;&#32;\</emphasis>
00892 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;lua_Number&#32;nb&#32;=&#32;fltvalue(v1);&#32;&#32;\</emphasis>
00893 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;lua_Number&#32;fimm&#32;=&#32;cast_num(imm);&#32;&#32;\</emphasis>
00894 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;pc++;&#32;setfltvalue(s2v(ra),&#32;fop(L,&#32;nb,&#32;fimm));&#32;\</emphasis>
00895 <emphasis role="preprocessor">&#32;&#32;}}</emphasis>
00896 
00897 
00898 <emphasis role="comment">/*</emphasis>
00899 <emphasis role="comment">**&#32;Auxiliary&#32;function&#32;for&#32;arithmetic&#32;operations&#32;over&#32;floats&#32;and&#32;others</emphasis>
00900 <emphasis role="comment">**&#32;with&#32;two&#32;register&#32;operands.</emphasis>
00901 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lvm_8c_source_1l00902"/><link linkend="_lvm_8c_1a27c82162e3bd29ab27ae1cd6660207ca">00902</link> <emphasis role="preprocessor">#define&#32;op_arithf_aux(L,v1,v2,fop)&#32;{&#32;&#32;\</emphasis>
00903 <emphasis role="preprocessor">&#32;&#32;lua_Number&#32;n1;&#32;lua_Number&#32;n2;&#32;&#32;\</emphasis>
00904 <emphasis role="preprocessor">&#32;&#32;if&#32;(tonumberns(v1,&#32;n1)&#32;&amp;&amp;&#32;tonumberns(v2,&#32;n2))&#32;{&#32;&#32;\</emphasis>
00905 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;pc++;&#32;setfltvalue(s2v(ra),&#32;fop(L,&#32;n1,&#32;n2));&#32;&#32;\</emphasis>
00906 <emphasis role="preprocessor">&#32;&#32;}}</emphasis>
00907 
00908 
00909 <emphasis role="comment">/*</emphasis>
00910 <emphasis role="comment">**&#32;Arithmetic&#32;operations&#32;over&#32;floats&#32;and&#32;others&#32;with&#32;register&#32;operands.</emphasis>
00911 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lvm_8c_source_1l00912"/><link linkend="_lvm_8c_1a3a4f9c96d42bbb54c163fd3f3799a53c">00912</link> <emphasis role="preprocessor">#define&#32;op_arithf(L,fop)&#32;{&#32;&#32;\</emphasis>
00913 <emphasis role="preprocessor">&#32;&#32;TValue&#32;*v1&#32;=&#32;vRB(i);&#32;&#32;\</emphasis>
00914 <emphasis role="preprocessor">&#32;&#32;TValue&#32;*v2&#32;=&#32;vRC(i);&#32;&#32;\</emphasis>
00915 <emphasis role="preprocessor">&#32;&#32;op_arithf_aux(L,&#32;v1,&#32;v2,&#32;fop);&#32;}</emphasis>
00916 
00917 
00918 <emphasis role="comment">/*</emphasis>
00919 <emphasis role="comment">**&#32;Arithmetic&#32;operations&#32;with&#32;K&#32;operands&#32;for&#32;floats.</emphasis>
00920 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lvm_8c_source_1l00921"/><link linkend="_lvm_8c_1a2bf3c022ca2f380a54b253dcb57ed4fc">00921</link> <emphasis role="preprocessor">#define&#32;op_arithfK(L,fop)&#32;{&#32;&#32;\</emphasis>
00922 <emphasis role="preprocessor">&#32;&#32;TValue&#32;*v1&#32;=&#32;vRB(i);&#32;&#32;\</emphasis>
00923 <emphasis role="preprocessor">&#32;&#32;TValue&#32;*v2&#32;=&#32;KC(i);&#32;&#32;\</emphasis>
00924 <emphasis role="preprocessor">&#32;&#32;op_arithf_aux(L,&#32;v1,&#32;v2,&#32;fop);&#32;}</emphasis>
00925 
00926 
00927 <emphasis role="comment">/*</emphasis>
00928 <emphasis role="comment">**&#32;Arithmetic&#32;operations&#32;over&#32;integers&#32;and&#32;floats.</emphasis>
00929 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lvm_8c_source_1l00930"/><link linkend="_lvm_8c_1a293974e782860ba3cc56e8357d0c2ac4">00930</link> <emphasis role="preprocessor">#define&#32;op_arith_aux(L,v1,v2,iop,fop)&#32;{&#32;&#32;\</emphasis>
00931 <emphasis role="preprocessor">&#32;&#32;if&#32;(ttisinteger(v1)&#32;&amp;&amp;&#32;ttisinteger(v2))&#32;{&#32;&#32;\</emphasis>
00932 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;lua_Integer&#32;i1&#32;=&#32;ivalue(v1);&#32;lua_Integer&#32;i2&#32;=&#32;ivalue(v2);&#32;&#32;\</emphasis>
00933 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;pc++;&#32;setivalue(s2v(ra),&#32;iop(L,&#32;i1,&#32;i2));&#32;&#32;\</emphasis>
00934 <emphasis role="preprocessor">&#32;&#32;}&#32;&#32;\</emphasis>
00935 <emphasis role="preprocessor">&#32;&#32;else&#32;op_arithf_aux(L,&#32;v1,&#32;v2,&#32;fop);&#32;}</emphasis>
00936 
00937 
00938 <emphasis role="comment">/*</emphasis>
00939 <emphasis role="comment">**&#32;Arithmetic&#32;operations&#32;with&#32;register&#32;operands.</emphasis>
00940 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lvm_8c_source_1l00941"/><link linkend="_lvm_8c_1accac296bbdd639e9a290dd90e6ee97bc">00941</link> <emphasis role="preprocessor">#define&#32;op_arith(L,iop,fop)&#32;{&#32;&#32;\</emphasis>
00942 <emphasis role="preprocessor">&#32;&#32;TValue&#32;*v1&#32;=&#32;vRB(i);&#32;&#32;\</emphasis>
00943 <emphasis role="preprocessor">&#32;&#32;TValue&#32;*v2&#32;=&#32;vRC(i);&#32;&#32;\</emphasis>
00944 <emphasis role="preprocessor">&#32;&#32;op_arith_aux(L,&#32;v1,&#32;v2,&#32;iop,&#32;fop);&#32;}</emphasis>
00945 
00946 
00947 <emphasis role="comment">/*</emphasis>
00948 <emphasis role="comment">**&#32;Arithmetic&#32;operations&#32;with&#32;K&#32;operands.</emphasis>
00949 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lvm_8c_source_1l00950"/><link linkend="_lvm_8c_1af99dda342975a0c5aa932cd408476008">00950</link> <emphasis role="preprocessor">#define&#32;op_arithK(L,iop,fop)&#32;{&#32;&#32;\</emphasis>
00951 <emphasis role="preprocessor">&#32;&#32;TValue&#32;*v1&#32;=&#32;vRB(i);&#32;&#32;\</emphasis>
00952 <emphasis role="preprocessor">&#32;&#32;TValue&#32;*v2&#32;=&#32;KC(i);&#32;&#32;\</emphasis>
00953 <emphasis role="preprocessor">&#32;&#32;op_arith_aux(L,&#32;v1,&#32;v2,&#32;iop,&#32;fop);&#32;}</emphasis>
00954 
00955 
00956 <emphasis role="comment">/*</emphasis>
00957 <emphasis role="comment">**&#32;Bitwise&#32;operations&#32;with&#32;constant&#32;operand.</emphasis>
00958 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lvm_8c_source_1l00959"/><link linkend="_lvm_8c_1a58d4f607b71631156a48372cf05d403e">00959</link> <emphasis role="preprocessor">#define&#32;op_bitwiseK(L,op)&#32;{&#32;&#32;\</emphasis>
00960 <emphasis role="preprocessor">&#32;&#32;TValue&#32;*v1&#32;=&#32;vRB(i);&#32;&#32;\</emphasis>
00961 <emphasis role="preprocessor">&#32;&#32;TValue&#32;*v2&#32;=&#32;KC(i);&#32;&#32;\</emphasis>
00962 <emphasis role="preprocessor">&#32;&#32;lua_Integer&#32;i1;&#32;&#32;\</emphasis>
00963 <emphasis role="preprocessor">&#32;&#32;lua_Integer&#32;i2&#32;=&#32;ivalue(v2);&#32;&#32;\</emphasis>
00964 <emphasis role="preprocessor">&#32;&#32;if&#32;(tointegerns(v1,&#32;&amp;i1))&#32;{&#32;&#32;\</emphasis>
00965 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;pc++;&#32;setivalue(s2v(ra),&#32;op(i1,&#32;i2));&#32;&#32;\</emphasis>
00966 <emphasis role="preprocessor">&#32;&#32;}}</emphasis>
00967 
00968 
00969 <emphasis role="comment">/*</emphasis>
00970 <emphasis role="comment">**&#32;Bitwise&#32;operations&#32;with&#32;register&#32;operands.</emphasis>
00971 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lvm_8c_source_1l00972"/><link linkend="_lvm_8c_1a65ec8fe21615050150ecc5aed115bc1b">00972</link> <emphasis role="preprocessor">#define&#32;op_bitwise(L,op)&#32;{&#32;&#32;\</emphasis>
00973 <emphasis role="preprocessor">&#32;&#32;TValue&#32;*v1&#32;=&#32;vRB(i);&#32;&#32;\</emphasis>
00974 <emphasis role="preprocessor">&#32;&#32;TValue&#32;*v2&#32;=&#32;vRC(i);&#32;&#32;\</emphasis>
00975 <emphasis role="preprocessor">&#32;&#32;lua_Integer&#32;i1;&#32;lua_Integer&#32;i2;&#32;&#32;\</emphasis>
00976 <emphasis role="preprocessor">&#32;&#32;if&#32;(tointegerns(v1,&#32;&amp;i1)&#32;&amp;&amp;&#32;tointegerns(v2,&#32;&amp;i2))&#32;{&#32;&#32;\</emphasis>
00977 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;pc++;&#32;setivalue(s2v(ra),&#32;op(i1,&#32;i2));&#32;&#32;\</emphasis>
00978 <emphasis role="preprocessor">&#32;&#32;}}</emphasis>
00979 
00980 
00981 <emphasis role="comment">/*</emphasis>
00982 <emphasis role="comment">**&#32;Order&#32;operations&#32;with&#32;register&#32;operands.&#32;&apos;opn&apos;&#32;actually&#32;works</emphasis>
00983 <emphasis role="comment">**&#32;for&#32;all&#32;numbers,&#32;but&#32;the&#32;fast&#32;track&#32;improves&#32;performance&#32;for</emphasis>
00984 <emphasis role="comment">**&#32;integers.</emphasis>
00985 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lvm_8c_source_1l00986"/><link linkend="_lvm_8c_1a427d042b492c9feb6beaeea80f6bd594">00986</link> <emphasis role="preprocessor">#define&#32;op_order(L,opi,opn,other)&#32;{&#32;&#32;\</emphasis>
00987 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;int&#32;cond;&#32;&#32;\</emphasis>
00988 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TValue&#32;*rb&#32;=&#32;vRB(i);&#32;&#32;\</emphasis>
00989 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(ttisinteger(s2v(ra))&#32;&amp;&amp;&#32;ttisinteger(rb))&#32;{&#32;&#32;\</emphasis>
00990 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lua_Integer&#32;ia&#32;=&#32;ivalue(s2v(ra));&#32;&#32;\</emphasis>
00991 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lua_Integer&#32;ib&#32;=&#32;ivalue(rb);&#32;&#32;\</emphasis>
00992 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cond&#32;=&#32;opi(ia,&#32;ib);&#32;&#32;\</emphasis>
00993 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;&#32;\</emphasis>
00994 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;else&#32;if&#32;(ttisnumber(s2v(ra))&#32;&amp;&amp;&#32;ttisnumber(rb))&#32;&#32;\</emphasis>
00995 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cond&#32;=&#32;opn(s2v(ra),&#32;rb);&#32;&#32;\</emphasis>
00996 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;else&#32;&#32;\</emphasis>
00997 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Protect(cond&#32;=&#32;other(L,&#32;s2v(ra),&#32;rb));&#32;&#32;\</emphasis>
00998 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;docondjump();&#32;}</emphasis>
00999 
01000 
01001 <emphasis role="comment">/*</emphasis>
01002 <emphasis role="comment">**&#32;Order&#32;operations&#32;with&#32;immediate&#32;operand.&#32;(Immediate&#32;operand&#32;is</emphasis>
01003 <emphasis role="comment">**&#32;always&#32;small&#32;enough&#32;to&#32;have&#32;an&#32;exact&#32;representation&#32;as&#32;a&#32;float.)</emphasis>
01004 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lvm_8c_source_1l01005"/><link linkend="_lvm_8c_1ac2b4fecc5abdaf3ec282df9a7b728e13">01005</link> <emphasis role="preprocessor">#define&#32;op_orderI(L,opi,opf,inv,tm)&#32;{&#32;&#32;\</emphasis>
01006 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;int&#32;cond;&#32;&#32;\</emphasis>
01007 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;int&#32;im&#32;=&#32;GETARG_sB(i);&#32;&#32;\</emphasis>
01008 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(ttisinteger(s2v(ra)))&#32;&#32;\</emphasis>
01009 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cond&#32;=&#32;opi(ivalue(s2v(ra)),&#32;im);&#32;&#32;\</emphasis>
01010 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;else&#32;if&#32;(ttisfloat(s2v(ra)))&#32;{&#32;&#32;\</emphasis>
01011 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lua_Number&#32;fa&#32;=&#32;fltvalue(s2v(ra));&#32;&#32;\</emphasis>
01012 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lua_Number&#32;fim&#32;=&#32;cast_num(im);&#32;&#32;\</emphasis>
01013 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cond&#32;=&#32;opf(fa,&#32;fim);&#32;&#32;\</emphasis>
01014 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;&#32;\</emphasis>
01015 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;else&#32;{&#32;&#32;\</emphasis>
01016 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;int&#32;isf&#32;=&#32;GETARG_C(i);&#32;&#32;\</emphasis>
01017 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Protect(cond&#32;=&#32;luaT_callorderiTM(L,&#32;s2v(ra),&#32;im,&#32;inv,&#32;isf,&#32;tm));&#32;&#32;\</emphasis>
01018 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;&#32;\</emphasis>
01019 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;docondjump();&#32;}</emphasis>
01020 
01021 <emphasis role="comment">/*&#32;}==================================================================&#32;*/</emphasis>
01022 
01023 
01024 <emphasis role="comment">/*</emphasis>
01025 <emphasis role="comment">**&#32;{==================================================================</emphasis>
01026 <emphasis role="comment">**&#32;Function&#32;&apos;luaV_execute&apos;:&#32;main&#32;interpreter&#32;loop</emphasis>
01027 <emphasis role="comment">**&#32;===================================================================</emphasis>
01028 <emphasis role="comment">*/</emphasis>
01029 
01030 <emphasis role="comment">/*</emphasis>
01031 <emphasis role="comment">**&#32;some&#32;macros&#32;for&#32;common&#32;tasks&#32;in&#32;&apos;luaV_execute&apos;</emphasis>
01032 <emphasis role="comment">*/</emphasis>
01033 
01034 
<anchor xml:id="_lvm_8c_source_1l01035"/><link linkend="_lvm_8c_1a721dd0af7e652d2d98b1f765f7860bcb">01035</link> <emphasis role="preprocessor">#define&#32;RA(i)&#32;&#32;&#32;(base+GETARG_A(i))</emphasis>
<anchor xml:id="_lvm_8c_source_1l01036"/><link linkend="_lvm_8c_1a2688e9bc2c975760015dd57956107eb4">01036</link> <emphasis role="preprocessor">#define&#32;RB(i)&#32;&#32;&#32;(base+GETARG_B(i))</emphasis>
<anchor xml:id="_lvm_8c_source_1l01037"/><link linkend="_lvm_8c_1a83fae87b4e07c8e466b98d2085582562">01037</link> <emphasis role="preprocessor">#define&#32;vRB(i)&#32;&#32;s2v(RB(i))</emphasis>
<anchor xml:id="_lvm_8c_source_1l01038"/><link linkend="_lvm_8c_1a11423b97da0e060b24d31d7e71534844">01038</link> <emphasis role="preprocessor">#define&#32;KB(i)&#32;&#32;&#32;(k+GETARG_B(i))</emphasis>
<anchor xml:id="_lvm_8c_source_1l01039"/><link linkend="_lvm_8c_1a316a781a03ac24357a00b0037fb38565">01039</link> <emphasis role="preprocessor">#define&#32;RC(i)&#32;&#32;&#32;(base+GETARG_C(i))</emphasis>
<anchor xml:id="_lvm_8c_source_1l01040"/><link linkend="_lvm_8c_1a0c07e0d29b6b7d24e42617450d7bff24">01040</link> <emphasis role="preprocessor">#define&#32;vRC(i)&#32;&#32;s2v(RC(i))</emphasis>
<anchor xml:id="_lvm_8c_source_1l01041"/><link linkend="_lvm_8c_1ac0b1105a4fbcaf1eaaeeb21fde493268">01041</link> <emphasis role="preprocessor">#define&#32;KC(i)&#32;&#32;&#32;(k+GETARG_C(i))</emphasis>
<anchor xml:id="_lvm_8c_source_1l01042"/><link linkend="_lvm_8c_1a621b920c2683748903f90d71a1fb157b">01042</link> <emphasis role="preprocessor">#define&#32;RKC(i)&#32;&#32;((TESTARG_k(i))&#32;?&#32;k&#32;+&#32;GETARG_C(i)&#32;:&#32;s2v(base&#32;+&#32;GETARG_C(i)))</emphasis>
01043 
01044 
01045 
<anchor xml:id="_lvm_8c_source_1l01046"/><link linkend="_lvm_8c_1abb4b554ff3bfb81c40e994b89c466728">01046</link> <emphasis role="preprocessor">#define&#32;updatetrap(ci)&#32;&#32;(trap&#32;=&#32;ci-&gt;u.l.trap)</emphasis>
01047 
<anchor xml:id="_lvm_8c_source_1l01048"/><link linkend="_lvm_8c_1a8e2f8e15f68c38d8c1a784fa79fbfe2d">01048</link> <emphasis role="preprocessor">#define&#32;updatebase(ci)&#32;&#32;(base&#32;=&#32;ci-&gt;func&#32;+&#32;1)</emphasis>
01049 
01050 
<anchor xml:id="_lvm_8c_source_1l01051"/><link linkend="_lvm_8c_1aa2532fb78de8437337c3a287df45a139">01051</link> <emphasis role="preprocessor">#define&#32;updatestack(ci)&#32;{&#32;if&#32;(trap)&#32;{&#32;updatebase(ci);&#32;ra&#32;=&#32;RA(i);&#32;}&#32;}</emphasis>
01052 
01053 
01054 <emphasis role="comment">/*</emphasis>
01055 <emphasis role="comment">**&#32;Execute&#32;a&#32;jump&#32;instruction.&#32;The&#32;&apos;updatetrap&apos;&#32;allows&#32;signals&#32;to&#32;stop</emphasis>
01056 <emphasis role="comment">**&#32;tight&#32;loops.&#32;(Without&#32;it,&#32;the&#32;local&#32;copy&#32;of&#32;&apos;trap&apos;&#32;could&#32;never&#32;change.)</emphasis>
01057 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lvm_8c_source_1l01058"/><link linkend="_lvm_8c_1a145a3aec07a6b2a6b78e91f83b810a9f">01058</link> <emphasis role="preprocessor">#define&#32;dojump(ci,i,e)&#32;&#32;{&#32;pc&#32;+=&#32;GETARG_sJ(i)&#32;+&#32;e;&#32;updatetrap(ci);&#32;}</emphasis>
01059 
01060 
01061 <emphasis role="comment">/*&#32;for&#32;test&#32;instructions,&#32;execute&#32;the&#32;jump&#32;instruction&#32;that&#32;follows&#32;it&#32;*/</emphasis>
<anchor xml:id="_lvm_8c_source_1l01062"/><link linkend="_lvm_8c_1ab6c6e5c0af31fccecc3464db950e8107">01062</link> <emphasis role="preprocessor">#define&#32;donextjump(ci)&#32;&#32;{&#32;Instruction&#32;ni&#32;=&#32;*pc;&#32;dojump(ci,&#32;ni,&#32;1);&#32;}</emphasis>
01063 
01064 <emphasis role="comment">/*</emphasis>
01065 <emphasis role="comment">**&#32;do&#32;a&#32;conditional&#32;jump:&#32;skip&#32;next&#32;instruction&#32;if&#32;&apos;cond&apos;&#32;is&#32;not&#32;what</emphasis>
01066 <emphasis role="comment">**&#32;was&#32;expected&#32;(parameter&#32;&apos;k&apos;),&#32;else&#32;do&#32;next&#32;instruction,&#32;which&#32;must</emphasis>
01067 <emphasis role="comment">**&#32;be&#32;a&#32;jump.</emphasis>
01068 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lvm_8c_source_1l01069"/><link linkend="_lvm_8c_1af4484c1945bfa516c6dec5382c7d3f20">01069</link> <emphasis role="preprocessor">#define&#32;docondjump()&#32;&#32;&#32;&#32;if&#32;(cond&#32;!=&#32;GETARG_k(i))&#32;pc++;&#32;else&#32;donextjump(ci);</emphasis>
01070 
01071 
01072 <emphasis role="comment">/*</emphasis>
01073 <emphasis role="comment">**&#32;Correct&#32;global&#32;&apos;pc&apos;.</emphasis>
01074 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lvm_8c_source_1l01075"/><link linkend="_lvm_8c_1af118f5c1afd189a53b6d967d5e2f5479">01075</link> <emphasis role="preprocessor">#define&#32;savepc(L)&#32;&#32;&#32;(ci-&gt;u.l.savedpc&#32;=&#32;pc)</emphasis>
01076 
01077 
01078 <emphasis role="comment">/*</emphasis>
01079 <emphasis role="comment">**&#32;Whenever&#32;code&#32;can&#32;raise&#32;errors,&#32;the&#32;global&#32;&apos;pc&apos;&#32;and&#32;the&#32;global</emphasis>
01080 <emphasis role="comment">**&#32;&apos;top&apos;&#32;must&#32;be&#32;correct&#32;to&#32;report&#32;occasional&#32;errors.</emphasis>
01081 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lvm_8c_source_1l01082"/><link linkend="_lvm_8c_1a59d34ce7e11dd5c6aa72c76fa2fe09a0">01082</link> <emphasis role="preprocessor">#define&#32;savestate(L,ci)&#32;&#32;&#32;&#32;&#32;(savepc(L),&#32;L-&gt;top&#32;=&#32;ci-&gt;top)</emphasis>
01083 
01084 
01085 <emphasis role="comment">/*</emphasis>
01086 <emphasis role="comment">**&#32;Protect&#32;code&#32;that,&#32;in&#32;general,&#32;can&#32;raise&#32;errors,&#32;reallocate&#32;the</emphasis>
01087 <emphasis role="comment">**&#32;stack,&#32;and&#32;change&#32;the&#32;hooks.</emphasis>
01088 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lvm_8c_source_1l01089"/><link linkend="_lvm_8c_1ae20e156330a1cdfb3738f042f7eae35a">01089</link> <emphasis role="preprocessor">#define&#32;Protect(exp)&#32;&#32;(savestate(L,ci),&#32;(exp),&#32;updatetrap(ci))</emphasis>
01090 
01091 <emphasis role="comment">/*&#32;special&#32;version&#32;that&#32;does&#32;not&#32;change&#32;the&#32;top&#32;*/</emphasis>
<anchor xml:id="_lvm_8c_source_1l01092"/><link linkend="_lvm_8c_1a240b167bd7f3ed903cd1518960b1489c">01092</link> <emphasis role="preprocessor">#define&#32;ProtectNT(exp)&#32;&#32;(savepc(L),&#32;(exp),&#32;updatetrap(ci))</emphasis>
01093 
01094 <emphasis role="comment">/*</emphasis>
01095 <emphasis role="comment">**&#32;Protect&#32;code&#32;that&#32;will&#32;finish&#32;the&#32;loop&#32;(returns)&#32;or&#32;can&#32;only&#32;raise</emphasis>
01096 <emphasis role="comment">**&#32;errors.&#32;(That&#32;is,&#32;it&#32;will&#32;not&#32;return&#32;to&#32;the&#32;interpreter&#32;main&#32;loop</emphasis>
01097 <emphasis role="comment">**&#32;after&#32;changing&#32;the&#32;stack&#32;or&#32;hooks.)</emphasis>
01098 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lvm_8c_source_1l01099"/><link linkend="_lvm_8c_1a89acfdec431169d8ad8bde3952bbd844">01099</link> <emphasis role="preprocessor">#define&#32;halfProtect(exp)&#32;&#32;(savestate(L,ci),&#32;(exp))</emphasis>
01100 
01101 <emphasis role="comment">/*&#32;idem,&#32;but&#32;without&#32;changing&#32;the&#32;stack&#32;*/</emphasis>
<anchor xml:id="_lvm_8c_source_1l01102"/><link linkend="_lvm_8c_1a8d3732d68d992f7662e63fedf2e781c9">01102</link> <emphasis role="preprocessor">#define&#32;halfProtectNT(exp)&#32;&#32;(savepc(L),&#32;(exp))</emphasis>
01103 
01104 <emphasis role="comment">/*&#32;&apos;c&apos;&#32;is&#32;the&#32;limit&#32;of&#32;live&#32;values&#32;in&#32;the&#32;stack&#32;*/</emphasis>
<anchor xml:id="_lvm_8c_source_1l01105"/><link linkend="_lvm_8c_1a05f520b99525b2ec56d5597ed4a15eb8">01105</link> <emphasis role="preprocessor">#define&#32;checkGC(L,c)&#32;&#32;\</emphasis>
01106 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;{&#32;luaC_condGC(L,&#32;(savepc(L),&#32;L-&gt;top&#32;=&#32;(c)),&#32;\</emphasis>
01107 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;updatetrap(ci));&#32;\</emphasis>
01108 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;luai_threadyield(L);&#32;}</emphasis>
01109 
01110 
01111 <emphasis role="comment">/*&#32;fetch&#32;an&#32;instruction&#32;and&#32;prepare&#32;its&#32;execution&#32;*/</emphasis>
<anchor xml:id="_lvm_8c_source_1l01112"/><link linkend="_lvm_8c_1ae2618898a2f8e320a173906bb811c9bd">01112</link> <emphasis role="preprocessor">#define&#32;vmfetch()&#32;&#32;&#32;{&#32;\</emphasis>
01113 <emphasis role="preprocessor">&#32;&#32;if&#32;(trap)&#32;{&#32;&#32;</emphasis><emphasis role="comment">/*&#32;stack&#32;reallocation&#32;or&#32;hooks?&#32;*/</emphasis><emphasis role="preprocessor">&#32;\</emphasis>
01114 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;trap&#32;=&#32;luaG_traceexec(L,&#32;pc);&#32;&#32;</emphasis><emphasis role="comment">/*&#32;handle&#32;hooks&#32;*/</emphasis><emphasis role="preprocessor">&#32;\</emphasis>
01115 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;updatebase(ci);&#32;&#32;</emphasis><emphasis role="comment">/*&#32;correct&#32;stack&#32;*/</emphasis><emphasis role="preprocessor">&#32;\</emphasis>
01116 <emphasis role="preprocessor">&#32;&#32;}&#32;\</emphasis>
01117 <emphasis role="preprocessor">&#32;&#32;i&#32;=&#32;*(pc++);&#32;\</emphasis>
01118 <emphasis role="preprocessor">&#32;&#32;ra&#32;=&#32;RA(i);&#32;</emphasis><emphasis role="comment">/*&#32;WARNING:&#32;any&#32;stack&#32;reallocation&#32;invalidates&#32;&apos;ra&apos;&#32;*/</emphasis><emphasis role="preprocessor">&#32;\</emphasis>
01119 <emphasis role="preprocessor">}</emphasis>
01120 
<anchor xml:id="_lvm_8c_source_1l01121"/><link linkend="_lvm_8c_1ae65c98d22c152f2d423102a999a821c9">01121</link> <emphasis role="preprocessor">#define&#32;vmdispatch(o)&#32;&#32;&#32;switch(o)</emphasis>
<anchor xml:id="_lvm_8c_source_1l01122"/><link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">01122</link> <emphasis role="preprocessor">#define&#32;vmcase(l)&#32;&#32;&#32;case&#32;l:</emphasis>
<anchor xml:id="_lvm_8c_source_1l01123"/><link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">01123</link> <emphasis role="preprocessor">#define&#32;vmbreak&#32;&#32;&#32;&#32;&#32;break</emphasis>
01124 
01125 
<anchor xml:id="_lvm_8c_source_1l01126"/><link linkend="_lvm_8h_1ac430e93ed874f6ab2449d7a16aa6b62f">01126</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_lvm_8c_1a221e6dd0bc488dc961e9007ed8e21189">luaV_execute</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<link linkend="_struct_call_info">CallInfo</link>&#32;*ci)&#32;{
01127 &#32;&#32;<link linkend="_struct_l_closure">LClosure</link>&#32;*cl;
01128 &#32;&#32;<link linkend="_struct_t_value">TValue</link>&#32;*k;
01129 &#32;&#32;<link linkend="_union_stack_value">StkId</link>&#32;base;
01130 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_llimits_8h_1aa81d2e7f7263ef29946852d4966a192e">Instruction</link>&#32;*pc;
01131 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;trap;
01132 <emphasis role="preprocessor">#if&#32;LUA_USE_JUMPTABLE</emphasis>
01133 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_ljumptab_8h">ljumptab.h</link>&quot;</emphasis>
01134 <emphasis role="preprocessor">#endif</emphasis>
01135 &#32;tailcall:
01136 &#32;&#32;trap&#32;=&#32;L-&gt;<link linkend="_structlua___state_1a081110fd5f9c1292f56fb2ef36e35c1a">hookmask</link>;
01137 &#32;&#32;cl&#32;=&#32;<link linkend="_lobject_8h_1afb9e65b01574a1135c582cf28883062e">clLvalue</link>(<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(ci-&gt;<link linkend="_struct_call_info_1a9d82a8ad04b0dd8837e621047972260a">func</link>));
01138 &#32;&#32;k&#32;=&#32;cl-&gt;<link linkend="_struct_l_closure_1aed1f50b9bdc5ce4c7cfa49529472b42c">p</link>-&gt;<link linkend="_struct_proto_1a5287370e219b50fe677549b4aafdc81d">k</link>;
01139 &#32;&#32;pc&#32;=&#32;ci-&gt;<link linkend="_struct_call_info_1af8751782b1a040b075c25cef0acb484a">u</link>.<link linkend="_struct_call_info_1a1abd0b31f495fcbdfaa1bb8ac5546d6d">l</link>.savedpc;
01140 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(trap)&#32;{
01141 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cl-&gt;<link linkend="_struct_l_closure_1aed1f50b9bdc5ce4c7cfa49529472b42c">p</link>-&gt;<link linkend="_struct_proto_1a75232df840e02cfa8134903745579657">is_vararg</link>)
01142 &#32;&#32;&#32;&#32;&#32;&#32;trap&#32;=&#32;0;&#32;&#32;<emphasis role="comment">/*&#32;hooks&#32;will&#32;start&#32;after&#32;VARARGPREP&#32;instruction&#32;*/</emphasis>
01143 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pc&#32;==&#32;cl-&gt;<link linkend="_struct_l_closure_1aed1f50b9bdc5ce4c7cfa49529472b42c">p</link>-&gt;<link linkend="_struct_proto_1a744e03861a6c76b7eeef213b73419ec7">code</link>)&#32;&#32;<emphasis role="comment">/*&#32;first&#32;instruction&#32;(not&#32;resuming)?&#32;*/</emphasis>
01144 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_ldo_8c_1a5f30116d7e47e3db1fd226e22e903d08">luaD_hookcall</link>(L,&#32;ci);
01145 &#32;&#32;&#32;&#32;ci-&gt;<link linkend="_struct_call_info_1af8751782b1a040b075c25cef0acb484a">u</link>.<link linkend="_struct_call_info_1a1abd0b31f495fcbdfaa1bb8ac5546d6d">l</link>.trap&#32;=&#32;1;&#32;&#32;<emphasis role="comment">/*&#32;there&#32;may&#32;be&#32;other&#32;hooks&#32;*/</emphasis>
01146 &#32;&#32;}
01147 &#32;&#32;base&#32;=&#32;ci-&gt;<link linkend="_struct_call_info_1a9d82a8ad04b0dd8837e621047972260a">func</link>&#32;+&#32;1;
01148 &#32;&#32;<emphasis role="comment">/*&#32;main&#32;loop&#32;of&#32;interpreter&#32;*/</emphasis>
01149 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;;)&#32;{
01150 &#32;&#32;&#32;&#32;<link linkend="_llimits_8h_1aa81d2e7f7263ef29946852d4966a192e">Instruction</link>&#32;i;&#32;&#32;<emphasis role="comment">/*&#32;instruction&#32;being&#32;executed&#32;*/</emphasis>
01151 &#32;&#32;&#32;&#32;<link linkend="_union_stack_value">StkId</link>&#32;ra;&#32;&#32;<emphasis role="comment">/*&#32;instruction&apos;s&#32;A&#32;register&#32;*/</emphasis>
01152 &#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1ae2618898a2f8e320a173906bb811c9bd">vmfetch</link>();
01153 &#32;&#32;&#32;&#32;<link linkend="_llimits_8h_1a5978f5fda715bd80e845df1e16ad7780">lua_assert</link>(base&#32;==&#32;ci-&gt;<link linkend="_struct_call_info_1a9d82a8ad04b0dd8837e621047972260a">func</link>&#32;+&#32;1);
01154 &#32;&#32;&#32;&#32;<link linkend="_llimits_8h_1a5978f5fda715bd80e845df1e16ad7780">lua_assert</link>(base&#32;&lt;=&#32;L-&gt;top&#32;&amp;&amp;&#32;L-&gt;<link linkend="_structlua___state_1afeb5dbe379fc406b35fe5f8a5fcfc5d7">top</link>&#32;&lt;&#32;L-&gt;<link linkend="_structlua___state_1a8d64aaa9257b553aae2e3e193c80a83f">stack</link>&#32;+&#32;L-&gt;<link linkend="_structlua___state_1a7fe5de65ffba2cb8917943b5811ae1cf">stacksize</link>);
01155 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;invalidate&#32;top&#32;for&#32;instructions&#32;not&#32;expecting&#32;it&#32;*/</emphasis>
01156 &#32;&#32;&#32;&#32;<link linkend="_llimits_8h_1a5978f5fda715bd80e845df1e16ad7780">lua_assert</link>(<link linkend="_lopcodes_8h_1ad8d4fbc03d23ff580e821c7fb6f07e3a">isIT</link>(i)&#32;||&#32;(<link linkend="_llimits_8h_1a52a5166d7dc0590b63a9331cfc0f4564">cast_void</link>(L-&gt;<link linkend="_structlua___state_1afeb5dbe379fc406b35fe5f8a5fcfc5d7">top</link>&#32;=&#32;base),&#32;1));
01157 &#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1ae65c98d22c152f2d423102a999a821c9">vmdispatch</link>&#32;(<link linkend="_lopcodes_8h_1aaa146179c3677b790c5681dcd82f0acc">GET_OPCODE</link>(i))&#32;{
01158 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7addf83bbc02b6a88d325135c880d12184">OP_MOVE</link>)&#32;{
01159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8h_1af9258d87e8f082be8a2adb731d90f1a5">setobjs2s</link>(L,&#32;ra,&#32;<link linkend="_lvm_8c_1a2688e9bc2c975760015dd57956107eb4">RB</link>(i));
01160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01161 &#32;&#32;&#32;&#32;&#32;&#32;}
01162 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7a60de4d2d9c05216369b32f22325ac26c">OP_LOADI</link>)&#32;{
01163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;b&#32;=&#32;<link linkend="_lopcodes_8h_1a1f61a823709ac7847e481290a596c480">GETARG_sBx</link>(i);
01164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8h_1af9dd109ba186841ab26efb2d62baf4f6">setivalue</link>(<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(ra),&#32;b);
01165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01166 &#32;&#32;&#32;&#32;&#32;&#32;}
01167 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7a82da04477198d0562981ddd7d3adda8b">OP_LOADF</link>)&#32;{
01168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;b&#32;=&#32;<link linkend="_lopcodes_8h_1a1f61a823709ac7847e481290a596c480">GETARG_sBx</link>(i);
01169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8h_1ae357382324a8220a3cf77607752de887">setfltvalue</link>(<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(ra),&#32;<link linkend="_llimits_8h_1ac92cecb12c5aba1164877e81e76e2cb6">cast_num</link>(b));
01170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01171 &#32;&#32;&#32;&#32;&#32;&#32;}
01172 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7ab34a8eaf6d32d3c41810653d9eb99c1a">OP_LOADK</link>)&#32;{
01173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_t_value">TValue</link>&#32;*rb&#32;=&#32;k&#32;+&#32;<link linkend="_lopcodes_8h_1acf8d228275fd2789dcf5f019bbabc019">GETARG_Bx</link>(i);
01174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8h_1add70d29b431f66a1dee29a0cb286de6e">setobj2s</link>(L,&#32;ra,&#32;rb);
01175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01176 &#32;&#32;&#32;&#32;&#32;&#32;}
01177 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7ae95580de7b3877b66fdf87366b8e5887">OP_LOADKX</link>)&#32;{
01178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_t_value">TValue</link>&#32;*rb;
01179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rb&#32;=&#32;k&#32;+&#32;<link linkend="_lopcodes_8h_1acfd578bba038b6682b924cf48012d80a">GETARG_Ax</link>(*pc);&#32;pc++;
01180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8h_1add70d29b431f66a1dee29a0cb286de6e">setobj2s</link>(L,&#32;ra,&#32;rb);
01181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01182 &#32;&#32;&#32;&#32;&#32;&#32;}
01183 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7a8653663e33ebaa8572c7e76c86c6539d">OP_LOADFALSE</link>)&#32;{
01184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8h_1ad0259526a10884432dd2e7ea10b90e0f">setbfvalue</link>(<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(ra));
01185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01186 &#32;&#32;&#32;&#32;&#32;&#32;}
01187 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7a1163876c1d6575f1f220aca5be6751b8">OP_LFALSESKIP</link>)&#32;{
01188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8h_1ad0259526a10884432dd2e7ea10b90e0f">setbfvalue</link>(<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(ra));
01189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pc++;&#32;&#32;<emphasis role="comment">/*&#32;skip&#32;next&#32;instruction&#32;*/</emphasis>
01190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01191 &#32;&#32;&#32;&#32;&#32;&#32;}
01192 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7ac1fc81b1c2650990762cf656ac42540d">OP_LOADTRUE</link>)&#32;{
01193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8h_1a1b86e0dccf6b92c4c89d47af26e3a8e3">setbtvalue</link>(<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(ra));
01194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01195 &#32;&#32;&#32;&#32;&#32;&#32;}
01196 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7a5c399a98a26c923cdae3971b5e5b6432">OP_LOADNIL</link>)&#32;{
01197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;b&#32;=&#32;<link linkend="_lopcodes_8h_1a7a343159ef7669a438c2097b839b2b13">GETARG_B</link>(i);
01198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>&#32;{
01199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8h_1ad9034def7bbc1965ec3d714d84620b07">setnilvalue</link>(<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(ra++));
01200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>&#32;(b--);
01201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01202 &#32;&#32;&#32;&#32;&#32;&#32;}
01203 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7ab48573533495922f053a7d1c9b0d00b4">OP_GETUPVAL</link>)&#32;{
01204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;b&#32;=&#32;<link linkend="_lopcodes_8h_1a7a343159ef7669a438c2097b839b2b13">GETARG_B</link>(i);
01205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8h_1add70d29b431f66a1dee29a0cb286de6e">setobj2s</link>(L,&#32;ra,&#32;cl-&gt;<link linkend="_struct_l_closure_1aa4734795813776a46167fe712dfd9506">upvals</link>[b]-&gt;<link linkend="_struct_up_val_1a507ba5be7778a879769a2718d6e4afa3">v</link>);
01206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01207 &#32;&#32;&#32;&#32;&#32;&#32;}
01208 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7a47df60373847890b47b447c870aea678">OP_SETUPVAL</link>)&#32;{
01209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_up_val">UpVal</link>&#32;*uv&#32;=&#32;cl-&gt;<link linkend="_struct_l_closure_1aa4734795813776a46167fe712dfd9506">upvals</link>[<link linkend="_lopcodes_8h_1a7a343159ef7669a438c2097b839b2b13">GETARG_B</link>(i)];
01210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8h_1acf2af15f3d5cceca8e8870f96634bc2d">setobj</link>(L,&#32;uv-&gt;<link linkend="_struct_up_val_1a507ba5be7778a879769a2718d6e4afa3">v</link>,&#32;<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(ra));
01211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lgc_8h_1a21660a316c42bc1aad10f115e2261bca">luaC_barrier</link>(L,&#32;uv,&#32;<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(ra));
01212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01213 &#32;&#32;&#32;&#32;&#32;&#32;}
01214 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7acba90301f3ac979a3edd23f74182367b">OP_GETTABUP</link>)&#32;{
01215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_value">TValue</link>&#32;*slot;
01216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_t_value">TValue</link>&#32;*upval&#32;=&#32;cl-&gt;<link linkend="_struct_l_closure_1aa4734795813776a46167fe712dfd9506">upvals</link>[<link linkend="_lopcodes_8h_1a7a343159ef7669a438c2097b839b2b13">GETARG_B</link>(i)]-&gt;<link linkend="_struct_up_val_1a507ba5be7778a879769a2718d6e4afa3">v</link>;
01217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_t_value">TValue</link>&#32;*rc&#32;=&#32;<link linkend="_lvm_8c_1ac0b1105a4fbcaf1eaaeeb21fde493268">KC</link>(i);
01218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_t_string">TString</link>&#32;*key&#32;=&#32;<link linkend="_lobject_8h_1a8661397faed512ccc9c70a4661f1a83d">tsvalue</link>(rc);&#32;&#32;<emphasis role="comment">/*&#32;key&#32;must&#32;be&#32;a&#32;string&#32;*/</emphasis>
01219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lvm_8h_1a16d42351ed7a1d0c0c1677bdfd3b123b">luaV_fastget</link>(L,&#32;upval,&#32;key,&#32;slot,&#32;<link linkend="_ltable_8c_1ae8a52507e1c8966d9cf3f2dd5a0c325f">luaH_getshortstr</link>))&#32;{
01220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8h_1add70d29b431f66a1dee29a0cb286de6e">setobj2s</link>(L,&#32;ra,&#32;slot);
01221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
01223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1ae20e156330a1cdfb3738f042f7eae35a">Protect</link>(<link linkend="_lvm_8c_1a45c30a70c51ed843f58bd446aa2096c9">luaV_finishget</link>(L,&#32;upval,&#32;rc,&#32;ra,&#32;slot));
01224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01225 &#32;&#32;&#32;&#32;&#32;&#32;}
01226 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7ab1ec2a36c59db7612249cc31e382fdd9">OP_GETTABLE</link>)&#32;{
01227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_value">TValue</link>&#32;*slot;
01228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_t_value">TValue</link>&#32;*rb&#32;=&#32;<link linkend="_lvm_8c_1a83fae87b4e07c8e466b98d2085582562">vRB</link>(i);
01229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_t_value">TValue</link>&#32;*rc&#32;=&#32;<link linkend="_lvm_8c_1a0c07e0d29b6b7d24e42617450d7bff24">vRC</link>(i);
01230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lua_8h_1a2357bdcd9af1aaef0a6895a9c3b7eccf">lua_Unsigned</link>&#32;n;
01231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lobject_8h_1abade243295a9140f7b86838fbb049054">ttisinteger</link>(rc)&#32;&#32;<emphasis role="comment">/*&#32;fast&#32;track&#32;for&#32;integers?&#32;*/</emphasis>
01232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;?&#32;(<link linkend="_llimits_8h_1a52a5166d7dc0590b63a9331cfc0f4564">cast_void</link>(n&#32;=&#32;<link linkend="_lobject_8h_1af1a59636db050b842a791cd19086d925">ivalue</link>(rc)),&#32;<link linkend="_lvm_8h_1a1caa2d08a594618bae645c93d3e21a56">luaV_fastgeti</link>(L,&#32;rb,&#32;n,&#32;slot))
01233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_lvm_8h_1a16d42351ed7a1d0c0c1677bdfd3b123b">luaV_fastget</link>(L,&#32;rb,&#32;rc,&#32;slot,&#32;<link linkend="_ltable_8c_1a8b4fce00d7db27ee9caac3d49863dea3">luaH_get</link>))&#32;{
01234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8h_1add70d29b431f66a1dee29a0cb286de6e">setobj2s</link>(L,&#32;ra,&#32;slot);
01235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
01237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1ae20e156330a1cdfb3738f042f7eae35a">Protect</link>(<link linkend="_lvm_8c_1a45c30a70c51ed843f58bd446aa2096c9">luaV_finishget</link>(L,&#32;rb,&#32;rc,&#32;ra,&#32;slot));
01238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01239 &#32;&#32;&#32;&#32;&#32;&#32;}
01240 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7a965a4251f6730e9c8e5ca9e4ba4d8568">OP_GETI</link>)&#32;{
01241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_value">TValue</link>&#32;*slot;
01242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_t_value">TValue</link>&#32;*rb&#32;=&#32;<link linkend="_lvm_8c_1a83fae87b4e07c8e466b98d2085582562">vRB</link>(i);
01243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;c&#32;=&#32;<link linkend="_lopcodes_8h_1af96cb84f2685fda7f36d3d099dba6a44">GETARG_C</link>(i);
01244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lvm_8h_1a1caa2d08a594618bae645c93d3e21a56">luaV_fastgeti</link>(L,&#32;rb,&#32;c,&#32;slot))&#32;{
01245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8h_1add70d29b431f66a1dee29a0cb286de6e">setobj2s</link>(L,&#32;ra,&#32;slot);
01246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
01248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_t_value">TValue</link>&#32;key;
01249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8h_1af9dd109ba186841ab26efb2d62baf4f6">setivalue</link>(&amp;key,&#32;c);
01250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1ae20e156330a1cdfb3738f042f7eae35a">Protect</link>(<link linkend="_lvm_8c_1a45c30a70c51ed843f58bd446aa2096c9">luaV_finishget</link>(L,&#32;rb,&#32;&amp;key,&#32;ra,&#32;slot));
01251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01253 &#32;&#32;&#32;&#32;&#32;&#32;}
01254 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7ab8cb85274c0cd7f8d8525953bd844207">OP_GETFIELD</link>)&#32;{
01255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_value">TValue</link>&#32;*slot;
01256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_t_value">TValue</link>&#32;*rb&#32;=&#32;<link linkend="_lvm_8c_1a83fae87b4e07c8e466b98d2085582562">vRB</link>(i);
01257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_t_value">TValue</link>&#32;*rc&#32;=&#32;<link linkend="_lvm_8c_1ac0b1105a4fbcaf1eaaeeb21fde493268">KC</link>(i);
01258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_t_string">TString</link>&#32;*key&#32;=&#32;<link linkend="_lobject_8h_1a8661397faed512ccc9c70a4661f1a83d">tsvalue</link>(rc);&#32;&#32;<emphasis role="comment">/*&#32;key&#32;must&#32;be&#32;a&#32;string&#32;*/</emphasis>
01259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lvm_8h_1a16d42351ed7a1d0c0c1677bdfd3b123b">luaV_fastget</link>(L,&#32;rb,&#32;key,&#32;slot,&#32;<link linkend="_ltable_8c_1ae8a52507e1c8966d9cf3f2dd5a0c325f">luaH_getshortstr</link>))&#32;{
01260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8h_1add70d29b431f66a1dee29a0cb286de6e">setobj2s</link>(L,&#32;ra,&#32;slot);
01261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
01263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1ae20e156330a1cdfb3738f042f7eae35a">Protect</link>(<link linkend="_lvm_8c_1a45c30a70c51ed843f58bd446aa2096c9">luaV_finishget</link>(L,&#32;rb,&#32;rc,&#32;ra,&#32;slot));
01264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01265 &#32;&#32;&#32;&#32;&#32;&#32;}
01266 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7ac486cd83792b58a638e37cb249d54a7e">OP_SETTABUP</link>)&#32;{
01267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_value">TValue</link>&#32;*slot;
01268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_t_value">TValue</link>&#32;*upval&#32;=&#32;cl-&gt;<link linkend="_struct_l_closure_1aa4734795813776a46167fe712dfd9506">upvals</link>[<link linkend="_lopcodes_8h_1a1d504abc1e2246548f89977210dce0b9">GETARG_A</link>(i)]-&gt;<link linkend="_struct_up_val_1a507ba5be7778a879769a2718d6e4afa3">v</link>;
01269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_t_value">TValue</link>&#32;*rb&#32;=&#32;<link linkend="_lvm_8c_1a11423b97da0e060b24d31d7e71534844">KB</link>(i);
01270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_t_value">TValue</link>&#32;*rc&#32;=&#32;<link linkend="_lvm_8c_1a621b920c2683748903f90d71a1fb157b">RKC</link>(i);
01271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_t_string">TString</link>&#32;*key&#32;=&#32;<link linkend="_lobject_8h_1a8661397faed512ccc9c70a4661f1a83d">tsvalue</link>(rb);&#32;&#32;<emphasis role="comment">/*&#32;key&#32;must&#32;be&#32;a&#32;string&#32;*/</emphasis>
01272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lvm_8h_1a16d42351ed7a1d0c0c1677bdfd3b123b">luaV_fastget</link>(L,&#32;upval,&#32;key,&#32;slot,&#32;<link linkend="_ltable_8c_1ae8a52507e1c8966d9cf3f2dd5a0c325f">luaH_getshortstr</link>))&#32;{
01273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8h_1a432c22e13223409ad55ed6c3aec12bcb">luaV_finishfastset</link>(L,&#32;upval,&#32;slot,&#32;rc);
01274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
01276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1ae20e156330a1cdfb3738f042f7eae35a">Protect</link>(<link linkend="_lvm_8c_1a190116824dc13c5d37a6b2962f425a0d">luaV_finishset</link>(L,&#32;upval,&#32;rb,&#32;rc,&#32;slot));
01277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01278 &#32;&#32;&#32;&#32;&#32;&#32;}
01279 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7a34315d7408f31b006bf41c9e9c2d736e">OP_SETTABLE</link>)&#32;{
01280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_value">TValue</link>&#32;*slot;
01281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_t_value">TValue</link>&#32;*rb&#32;=&#32;<link linkend="_lvm_8c_1a83fae87b4e07c8e466b98d2085582562">vRB</link>(i);&#32;&#32;<emphasis role="comment">/*&#32;key&#32;(table&#32;is&#32;in&#32;&apos;ra&apos;)&#32;*/</emphasis>
01282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_t_value">TValue</link>&#32;*rc&#32;=&#32;<link linkend="_lvm_8c_1a621b920c2683748903f90d71a1fb157b">RKC</link>(i);&#32;&#32;<emphasis role="comment">/*&#32;value&#32;*/</emphasis>
01283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lua_8h_1a2357bdcd9af1aaef0a6895a9c3b7eccf">lua_Unsigned</link>&#32;n;
01284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lobject_8h_1abade243295a9140f7b86838fbb049054">ttisinteger</link>(rb)&#32;&#32;<emphasis role="comment">/*&#32;fast&#32;track&#32;for&#32;integers?&#32;*/</emphasis>
01285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;?&#32;(<link linkend="_llimits_8h_1a52a5166d7dc0590b63a9331cfc0f4564">cast_void</link>(n&#32;=&#32;<link linkend="_lobject_8h_1af1a59636db050b842a791cd19086d925">ivalue</link>(rb)),&#32;<link linkend="_lvm_8h_1a1caa2d08a594618bae645c93d3e21a56">luaV_fastgeti</link>(L,&#32;<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(ra),&#32;n,&#32;slot))
01286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_lvm_8h_1a16d42351ed7a1d0c0c1677bdfd3b123b">luaV_fastget</link>(L,&#32;<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(ra),&#32;rb,&#32;slot,&#32;<link linkend="_ltable_8c_1a8b4fce00d7db27ee9caac3d49863dea3">luaH_get</link>))&#32;{
01287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8h_1a432c22e13223409ad55ed6c3aec12bcb">luaV_finishfastset</link>(L,&#32;<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(ra),&#32;slot,&#32;rc);
01288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
01290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1ae20e156330a1cdfb3738f042f7eae35a">Protect</link>(<link linkend="_lvm_8c_1a190116824dc13c5d37a6b2962f425a0d">luaV_finishset</link>(L,&#32;<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(ra),&#32;rb,&#32;rc,&#32;slot));
01291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01292 &#32;&#32;&#32;&#32;&#32;&#32;}
01293 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7a51eb594f07db275f5c6a77621b2de777">OP_SETI</link>)&#32;{
01294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_value">TValue</link>&#32;*slot;
01295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;c&#32;=&#32;<link linkend="_lopcodes_8h_1a7a343159ef7669a438c2097b839b2b13">GETARG_B</link>(i);
01296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_t_value">TValue</link>&#32;*rc&#32;=&#32;<link linkend="_lvm_8c_1a621b920c2683748903f90d71a1fb157b">RKC</link>(i);
01297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lvm_8h_1a1caa2d08a594618bae645c93d3e21a56">luaV_fastgeti</link>(L,&#32;<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(ra),&#32;c,&#32;slot))&#32;{
01298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8h_1a432c22e13223409ad55ed6c3aec12bcb">luaV_finishfastset</link>(L,&#32;<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(ra),&#32;slot,&#32;rc);
01299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
01301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_t_value">TValue</link>&#32;key;
01302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8h_1af9dd109ba186841ab26efb2d62baf4f6">setivalue</link>(&amp;key,&#32;c);
01303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1ae20e156330a1cdfb3738f042f7eae35a">Protect</link>(<link linkend="_lvm_8c_1a190116824dc13c5d37a6b2962f425a0d">luaV_finishset</link>(L,&#32;<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(ra),&#32;&amp;key,&#32;rc,&#32;slot));
01304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01306 &#32;&#32;&#32;&#32;&#32;&#32;}
01307 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7a342ca5ec1477419948043acb24ef3032">OP_SETFIELD</link>)&#32;{
01308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_value">TValue</link>&#32;*slot;
01309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_t_value">TValue</link>&#32;*rb&#32;=&#32;<link linkend="_lvm_8c_1a11423b97da0e060b24d31d7e71534844">KB</link>(i);
01310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_t_value">TValue</link>&#32;*rc&#32;=&#32;<link linkend="_lvm_8c_1a621b920c2683748903f90d71a1fb157b">RKC</link>(i);
01311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_t_string">TString</link>&#32;*key&#32;=&#32;<link linkend="_lobject_8h_1a8661397faed512ccc9c70a4661f1a83d">tsvalue</link>(rb);&#32;&#32;<emphasis role="comment">/*&#32;key&#32;must&#32;be&#32;a&#32;string&#32;*/</emphasis>
01312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lvm_8h_1a16d42351ed7a1d0c0c1677bdfd3b123b">luaV_fastget</link>(L,&#32;<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(ra),&#32;key,&#32;slot,&#32;<link linkend="_ltable_8c_1ae8a52507e1c8966d9cf3f2dd5a0c325f">luaH_getshortstr</link>))&#32;{
01313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8h_1a432c22e13223409ad55ed6c3aec12bcb">luaV_finishfastset</link>(L,&#32;<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(ra),&#32;slot,&#32;rc);
01314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
01316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1ae20e156330a1cdfb3738f042f7eae35a">Protect</link>(<link linkend="_lvm_8c_1a190116824dc13c5d37a6b2962f425a0d">luaV_finishset</link>(L,&#32;<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(ra),&#32;rb,&#32;rc,&#32;slot));
01317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01318 &#32;&#32;&#32;&#32;&#32;&#32;}
01319 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7af4ae9eb9a3c88596112a1d99d0c66280">OP_NEWTABLE</link>)&#32;{
01320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;b&#32;=&#32;<link linkend="_lopcodes_8h_1a7a343159ef7669a438c2097b839b2b13">GETARG_B</link>(i);&#32;&#32;<emphasis role="comment">/*&#32;log2(hash&#32;size)&#32;+&#32;1&#32;*/</emphasis>
01321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;c&#32;=&#32;<link linkend="_lopcodes_8h_1af96cb84f2685fda7f36d3d099dba6a44">GETARG_C</link>(i);&#32;&#32;<emphasis role="comment">/*&#32;array&#32;size&#32;*/</emphasis>
01322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_table">Table</link>&#32;*t;
01323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(b&#32;&gt;&#32;0)
01324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;b&#32;=&#32;1&#32;&lt;&lt;&#32;(b&#32;-&#32;1);&#32;&#32;<emphasis role="comment">/*&#32;size&#32;is&#32;2^(b&#32;-&#32;1)&#32;*/</emphasis>
01325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_llimits_8h_1a5978f5fda715bd80e845df1e16ad7780">lua_assert</link>((!<link linkend="_lopcodes_8h_1aa874f9aac8107c30bf683067661a988a">TESTARG_k</link>(i))&#32;==&#32;(<link linkend="_lopcodes_8h_1acfd578bba038b6682b924cf48012d80a">GETARG_Ax</link>(*pc)&#32;==&#32;0));
01326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lopcodes_8h_1aa874f9aac8107c30bf683067661a988a">TESTARG_k</link>(i))&#32;&#32;<emphasis role="comment">/*&#32;non-zero&#32;extra&#32;argument?&#32;*/</emphasis>
01327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;c&#32;+=&#32;<link linkend="_lopcodes_8h_1acfd578bba038b6682b924cf48012d80a">GETARG_Ax</link>(*pc)&#32;*&#32;(<link linkend="_lopcodes_8h_1a15a7daf14e4640990519e4e7f627900f">MAXARG_C</link>&#32;+&#32;1);&#32;&#32;<emphasis role="comment">/*&#32;add&#32;it&#32;to&#32;size&#32;*/</emphasis>
01328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pc++;&#32;&#32;<emphasis role="comment">/*&#32;skip&#32;extra&#32;argument&#32;*/</emphasis>
01329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;L-&gt;<link linkend="_structlua___state_1afeb5dbe379fc406b35fe5f8a5fcfc5d7">top</link>&#32;=&#32;ra&#32;+&#32;1;&#32;&#32;<emphasis role="comment">/*&#32;correct&#32;top&#32;in&#32;case&#32;of&#32;emergency&#32;GC&#32;*/</emphasis>
01330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t&#32;=&#32;<link linkend="_ltable_8c_1a6c97fb2d6a020b0a6f852562fef93d97">luaH_new</link>(L);&#32;&#32;<emphasis role="comment">/*&#32;memory&#32;allocation&#32;*/</emphasis>
01331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8h_1aea789832f6c549f64cb3903216a7aeac">sethvalue2s</link>(L,&#32;ra,&#32;t);
01332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(b&#32;!=&#32;0&#32;||&#32;c&#32;!=&#32;0)
01333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_ltable_8c_1aad3b771962cc13884bf7b45480e8f4e9">luaH_resize</link>(L,&#32;t,&#32;c,&#32;b);&#32;&#32;<emphasis role="comment">/*&#32;idem&#32;*/</emphasis>
01334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a05f520b99525b2ec56d5597ed4a15eb8">checkGC</link>(L,&#32;ra&#32;+&#32;1);
01335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01336 &#32;&#32;&#32;&#32;&#32;&#32;}
01337 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7a64bea18253f9e73c4c5fcfa6b0d5abd2">OP_SELF</link>)&#32;{
01338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_value">TValue</link>&#32;*slot;
01339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_t_value">TValue</link>&#32;*rb&#32;=&#32;<link linkend="_lvm_8c_1a83fae87b4e07c8e466b98d2085582562">vRB</link>(i);
01340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_t_value">TValue</link>&#32;*rc&#32;=&#32;<link linkend="_lvm_8c_1a621b920c2683748903f90d71a1fb157b">RKC</link>(i);
01341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_t_string">TString</link>&#32;*key&#32;=&#32;<link linkend="_lobject_8h_1a8661397faed512ccc9c70a4661f1a83d">tsvalue</link>(rc);&#32;&#32;<emphasis role="comment">/*&#32;key&#32;must&#32;be&#32;a&#32;string&#32;*/</emphasis>
01342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8h_1add70d29b431f66a1dee29a0cb286de6e">setobj2s</link>(L,&#32;ra&#32;+&#32;1,&#32;rb);
01343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lvm_8h_1a16d42351ed7a1d0c0c1677bdfd3b123b">luaV_fastget</link>(L,&#32;rb,&#32;key,&#32;slot,&#32;<link linkend="_ltable_8c_1ae273e09d2342a84f5cdfa976c66f28c0">luaH_getstr</link>))&#32;{
01344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8h_1add70d29b431f66a1dee29a0cb286de6e">setobj2s</link>(L,&#32;ra,&#32;slot);
01345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
01347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1ae20e156330a1cdfb3738f042f7eae35a">Protect</link>(<link linkend="_lvm_8c_1a45c30a70c51ed843f58bd446aa2096c9">luaV_finishget</link>(L,&#32;rb,&#32;rc,&#32;ra,&#32;slot));
01348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01349 &#32;&#32;&#32;&#32;&#32;&#32;}
01350 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7ae59b0459d271ccd33e3b5e525d8d82ec">OP_ADDI</link>)&#32;{
01351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64f748f1270f46a82d9740b510e0cd3a">op_arithI</link>(L,&#32;<link linkend="_lvm_8c_1ad15610968ca2288a0ee43de0ac00fc56">l_addi</link>,&#32;<link linkend="_llimits_8h_1af3eb5d1884e4512d2701bbc97bb82e81">luai_numadd</link>);
01352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01353 &#32;&#32;&#32;&#32;&#32;&#32;}
01354 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7aabeaee235c2d819809ba4179c9ad7c40">OP_ADDK</link>)&#32;{
01355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1af99dda342975a0c5aa932cd408476008">op_arithK</link>(L,&#32;<link linkend="_lvm_8c_1ad15610968ca2288a0ee43de0ac00fc56">l_addi</link>,&#32;<link linkend="_llimits_8h_1af3eb5d1884e4512d2701bbc97bb82e81">luai_numadd</link>);
01356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01357 &#32;&#32;&#32;&#32;&#32;&#32;}
01358 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7affb0b7800883712a266b8f74d7ed67de">OP_SUBK</link>)&#32;{
01359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1af99dda342975a0c5aa932cd408476008">op_arithK</link>(L,&#32;<link linkend="_lvm_8c_1adca3ee1c8bff66cff29c485a8b0f8d0b">l_subi</link>,&#32;<link linkend="_llimits_8h_1a93e733c7e860d7fb838b6af414405662">luai_numsub</link>);
01360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01361 &#32;&#32;&#32;&#32;&#32;&#32;}
01362 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7a2bb6b0300af606f3f17cc492e8a0fd9c">OP_MULK</link>)&#32;{
01363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1af99dda342975a0c5aa932cd408476008">op_arithK</link>(L,&#32;<link linkend="_lvm_8c_1a87f648fd6055968d928dc2fef3e2d05b">l_muli</link>,&#32;<link linkend="_llimits_8h_1a1cbcef9e269f0ac1a5f34898a7c4ae36">luai_nummul</link>);
01364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01365 &#32;&#32;&#32;&#32;&#32;&#32;}
01366 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7acdf979ebf1cab75f05b47c659568a2c2">OP_MODK</link>)&#32;{
01367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1af99dda342975a0c5aa932cd408476008">op_arithK</link>(L,&#32;<link linkend="_lvm_8c_1af1241d1650e114f39843626fd879d3d6">luaV_mod</link>,&#32;<link linkend="_lvm_8c_1ac0162e10dc7e235089eb3cbef4addca7">luaV_modf</link>);
01368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01369 &#32;&#32;&#32;&#32;&#32;&#32;}
01370 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7a20894c12c21a091fc6b3965894a66a29">OP_POWK</link>)&#32;{
01371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a2bf3c022ca2f380a54b253dcb57ed4fc">op_arithfK</link>(L,&#32;<link linkend="_llimits_8h_1a4a3b06f2c7239f8dcbd101ca20cc507a">luai_numpow</link>);
01372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01373 &#32;&#32;&#32;&#32;&#32;&#32;}
01374 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7a8ea5e5bf7705ac9d64a421520f641561">OP_DIVK</link>)&#32;{
01375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a2bf3c022ca2f380a54b253dcb57ed4fc">op_arithfK</link>(L,&#32;<link linkend="_llimits_8h_1a2a095b8d523b51332eb223df531367d2">luai_numdiv</link>);
01376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01377 &#32;&#32;&#32;&#32;&#32;&#32;}
01378 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7a9cf8f2bf4a89a2965fba615eb70da736">OP_IDIVK</link>)&#32;{
01379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1af99dda342975a0c5aa932cd408476008">op_arithK</link>(L,&#32;<link linkend="_lvm_8c_1a8815b6d106992c5713900b20a0da5e29">luaV_idiv</link>,&#32;<link linkend="_llimits_8h_1a9ca37a98a6032ab21dcfd63d42e66f89">luai_numidiv</link>);
01380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01381 &#32;&#32;&#32;&#32;&#32;&#32;}
01382 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7a257504b0bf681f2fbcb9395a3c4e7deb">OP_BANDK</link>)&#32;{
01383 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a58d4f607b71631156a48372cf05d403e">op_bitwiseK</link>(L,&#32;<link linkend="_lvm_8c_1a2ae697e156c4a4f2c92f2d1e133a5255">l_band</link>);
01384 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01385 &#32;&#32;&#32;&#32;&#32;&#32;}
01386 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7a57ac522387add616066acffc523b74f6">OP_BORK</link>)&#32;{
01387 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a58d4f607b71631156a48372cf05d403e">op_bitwiseK</link>(L,&#32;<link linkend="_lvm_8c_1a2c1a2e4332f652bc78071b89b06b3d58">l_bor</link>);
01388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01389 &#32;&#32;&#32;&#32;&#32;&#32;}
01390 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7af49936a7a3eb6346a7f200981837265c">OP_BXORK</link>)&#32;{
01391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a58d4f607b71631156a48372cf05d403e">op_bitwiseK</link>(L,&#32;<link linkend="_lvm_8c_1a1719c71ba0a699fa728a6d3091114941">l_bxor</link>);
01392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01393 &#32;&#32;&#32;&#32;&#32;&#32;}
01394 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7a9159011638ef566ddb323918488443e8">OP_SHRI</link>)&#32;{
01395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_t_value">TValue</link>&#32;*rb&#32;=&#32;<link linkend="_lvm_8c_1a83fae87b4e07c8e466b98d2085582562">vRB</link>(i);
01396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;ic&#32;=&#32;<link linkend="_lopcodes_8h_1a2dadd55729fda230ce1765caef7ea416">GETARG_sC</link>(i);
01397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;ib;
01398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lvm_8h_1a0b3a6eff12747eacea6551dbc2d42707">tointegerns</link>(rb,&#32;&amp;ib))&#32;{
01399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pc++;&#32;<link linkend="_lobject_8h_1af9dd109ba186841ab26efb2d62baf4f6">setivalue</link>(<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(ra),&#32;<link linkend="_lvm_8c_1ade6c9565152d0bb1f6116a90ea2c867a">luaV_shiftl</link>(ib,&#32;-ic));
01400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01402 &#32;&#32;&#32;&#32;&#32;&#32;}
01403 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7ab0da05be7645df562d8968b4f254df2b">OP_SHLI</link>)&#32;{
01404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_t_value">TValue</link>&#32;*rb&#32;=&#32;<link linkend="_lvm_8c_1a83fae87b4e07c8e466b98d2085582562">vRB</link>(i);
01405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;ic&#32;=&#32;<link linkend="_lopcodes_8h_1a2dadd55729fda230ce1765caef7ea416">GETARG_sC</link>(i);
01406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;ib;
01407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lvm_8h_1a0b3a6eff12747eacea6551dbc2d42707">tointegerns</link>(rb,&#32;&amp;ib))&#32;{
01408 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pc++;&#32;<link linkend="_lobject_8h_1af9dd109ba186841ab26efb2d62baf4f6">setivalue</link>(<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(ra),&#32;<link linkend="_lvm_8c_1ade6c9565152d0bb1f6116a90ea2c867a">luaV_shiftl</link>(ic,&#32;ib));
01409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01411 &#32;&#32;&#32;&#32;&#32;&#32;}
01412 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7a96186829480e5b34b1373288e956b1c8">OP_ADD</link>)&#32;{
01413 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1accac296bbdd639e9a290dd90e6ee97bc">op_arith</link>(L,&#32;<link linkend="_lvm_8c_1ad15610968ca2288a0ee43de0ac00fc56">l_addi</link>,&#32;<link linkend="_llimits_8h_1af3eb5d1884e4512d2701bbc97bb82e81">luai_numadd</link>);
01414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01415 &#32;&#32;&#32;&#32;&#32;&#32;}
01416 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7a6c224b456bd394d4d8bad0631ca8e2b7">OP_SUB</link>)&#32;{
01417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1accac296bbdd639e9a290dd90e6ee97bc">op_arith</link>(L,&#32;<link linkend="_lvm_8c_1adca3ee1c8bff66cff29c485a8b0f8d0b">l_subi</link>,&#32;<link linkend="_llimits_8h_1a93e733c7e860d7fb838b6af414405662">luai_numsub</link>);
01418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01419 &#32;&#32;&#32;&#32;&#32;&#32;}
01420 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7aa0e08a6f94350f03d29e4a55d543ba2f">OP_MUL</link>)&#32;{
01421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1accac296bbdd639e9a290dd90e6ee97bc">op_arith</link>(L,&#32;<link linkend="_lvm_8c_1a87f648fd6055968d928dc2fef3e2d05b">l_muli</link>,&#32;<link linkend="_llimits_8h_1a1cbcef9e269f0ac1a5f34898a7c4ae36">luai_nummul</link>);
01422 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01423 &#32;&#32;&#32;&#32;&#32;&#32;}
01424 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7a39c596fc7eae450b7218bd97126e37c9">OP_MOD</link>)&#32;{
01425 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1accac296bbdd639e9a290dd90e6ee97bc">op_arith</link>(L,&#32;<link linkend="_lvm_8c_1af1241d1650e114f39843626fd879d3d6">luaV_mod</link>,&#32;<link linkend="_lvm_8c_1ac0162e10dc7e235089eb3cbef4addca7">luaV_modf</link>);
01426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01427 &#32;&#32;&#32;&#32;&#32;&#32;}
01428 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7a35127684be890cfd81d556dc84d5f9db">OP_POW</link>)&#32;{
01429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a3a4f9c96d42bbb54c163fd3f3799a53c">op_arithf</link>(L,&#32;<link linkend="_llimits_8h_1a4a3b06f2c7239f8dcbd101ca20cc507a">luai_numpow</link>);
01430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01431 &#32;&#32;&#32;&#32;&#32;&#32;}
01432 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7a719aeab2140dd5f575d1559b95bf74e1">OP_DIV</link>)&#32;{&#32;&#32;<emphasis role="comment">/*&#32;float&#32;division&#32;(always&#32;with&#32;floats)&#32;*/</emphasis>
01433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a3a4f9c96d42bbb54c163fd3f3799a53c">op_arithf</link>(L,&#32;<link linkend="_llimits_8h_1a2a095b8d523b51332eb223df531367d2">luai_numdiv</link>);
01434 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01435 &#32;&#32;&#32;&#32;&#32;&#32;}
01436 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7ac813f8b860222d35f2d02410a84f53b3">OP_IDIV</link>)&#32;{&#32;&#32;<emphasis role="comment">/*&#32;floor&#32;division&#32;*/</emphasis>
01437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1accac296bbdd639e9a290dd90e6ee97bc">op_arith</link>(L,&#32;<link linkend="_lvm_8c_1a8815b6d106992c5713900b20a0da5e29">luaV_idiv</link>,&#32;<link linkend="_llimits_8h_1a9ca37a98a6032ab21dcfd63d42e66f89">luai_numidiv</link>);
01438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01439 &#32;&#32;&#32;&#32;&#32;&#32;}
01440 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7a6410f6c403b6cd759180c8b8be874cac">OP_BAND</link>)&#32;{
01441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a65ec8fe21615050150ecc5aed115bc1b">op_bitwise</link>(L,&#32;<link linkend="_lvm_8c_1a2ae697e156c4a4f2c92f2d1e133a5255">l_band</link>);
01442 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01443 &#32;&#32;&#32;&#32;&#32;&#32;}
01444 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7a2f4bd7bbcff0799872d56d31e258599b">OP_BOR</link>)&#32;{
01445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a65ec8fe21615050150ecc5aed115bc1b">op_bitwise</link>(L,&#32;<link linkend="_lvm_8c_1a2c1a2e4332f652bc78071b89b06b3d58">l_bor</link>);
01446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01447 &#32;&#32;&#32;&#32;&#32;&#32;}
01448 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7afd5cb32a2593241c564d2cdce914021b">OP_BXOR</link>)&#32;{
01449 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a65ec8fe21615050150ecc5aed115bc1b">op_bitwise</link>(L,&#32;<link linkend="_lvm_8c_1a1719c71ba0a699fa728a6d3091114941">l_bxor</link>);
01450 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01451 &#32;&#32;&#32;&#32;&#32;&#32;}
01452 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7a789f5e2846cb039c0273aff134011fd4">OP_SHR</link>)&#32;{
01453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a65ec8fe21615050150ecc5aed115bc1b">op_bitwise</link>(L,&#32;<link linkend="_lvm_8c_1a1696d36ebff18f8164f4aa2f993c2088">luaV_shiftr</link>);
01454 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01455 &#32;&#32;&#32;&#32;&#32;&#32;}
01456 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7a845012132d1f5f2d1cd125326476c25b">OP_SHL</link>)&#32;{
01457 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a65ec8fe21615050150ecc5aed115bc1b">op_bitwise</link>(L,&#32;<link linkend="_lvm_8c_1ade6c9565152d0bb1f6116a90ea2c867a">luaV_shiftl</link>);
01458 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01459 &#32;&#32;&#32;&#32;&#32;&#32;}
01460 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7a25acd5dff5083adb067889345ae100d6">OP_MMBIN</link>)&#32;{
01461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_llimits_8h_1aa81d2e7f7263ef29946852d4966a192e">Instruction</link>&#32;pi&#32;=&#32;*(pc&#32;-&#32;2);&#32;&#32;<emphasis role="comment">/*&#32;original&#32;arith.&#32;expression&#32;*/</emphasis>
01462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_t_value">TValue</link>&#32;*rb&#32;=&#32;<link linkend="_lvm_8c_1a83fae87b4e07c8e466b98d2085582562">vRB</link>(i);
01463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1">TMS</link>&#32;tm&#32;=&#32;(<link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1">TMS</link>)<link linkend="_lopcodes_8h_1af96cb84f2685fda7f36d3d099dba6a44">GETARG_C</link>(i);
01464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_union_stack_value">StkId</link>&#32;result&#32;=&#32;<link linkend="_lvm_8c_1a721dd0af7e652d2d98b1f765f7860bcb">RA</link>(pi);
01465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_llimits_8h_1a5978f5fda715bd80e845df1e16ad7780">lua_assert</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7a96186829480e5b34b1373288e956b1c8">OP_ADD</link>&#32;&lt;=&#32;<link linkend="_lopcodes_8h_1aaa146179c3677b790c5681dcd82f0acc">GET_OPCODE</link>(pi)&#32;&amp;&amp;&#32;<link linkend="_lopcodes_8h_1aaa146179c3677b790c5681dcd82f0acc">GET_OPCODE</link>(pi)&#32;&lt;=&#32;<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7a789f5e2846cb039c0273aff134011fd4">OP_SHR</link>);
01466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1ae20e156330a1cdfb3738f042f7eae35a">Protect</link>(<link linkend="_ltm_8c_1a2adc638eccb971b8abaf27f60611e913">luaT_trybinTM</link>(L,&#32;<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(ra),&#32;rb,&#32;result,&#32;tm));
01467 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01468 &#32;&#32;&#32;&#32;&#32;&#32;}
01469 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7a2068a8603e2904d2abd826877ab9e516">OP_MMBINI</link>)&#32;{
01470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_llimits_8h_1aa81d2e7f7263ef29946852d4966a192e">Instruction</link>&#32;pi&#32;=&#32;*(pc&#32;-&#32;2);&#32;&#32;<emphasis role="comment">/*&#32;original&#32;arith.&#32;expression&#32;*/</emphasis>
01471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;imm&#32;=&#32;<link linkend="_lopcodes_8h_1a7af64834446acb4afeec51438217c73d">GETARG_sB</link>(i);
01472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1">TMS</link>&#32;tm&#32;=&#32;(<link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1">TMS</link>)<link linkend="_lopcodes_8h_1af96cb84f2685fda7f36d3d099dba6a44">GETARG_C</link>(i);
01473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;flip&#32;=&#32;<link linkend="_lopcodes_8h_1aa9ce1e6169ccc23a1e9c783f61af343f">GETARG_k</link>(i);
01474 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_union_stack_value">StkId</link>&#32;result&#32;=&#32;<link linkend="_lvm_8c_1a721dd0af7e652d2d98b1f765f7860bcb">RA</link>(pi);
01475 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1ae20e156330a1cdfb3738f042f7eae35a">Protect</link>(<link linkend="_ltm_8c_1a18a26597986e82535c3d37fd5351eb6e">luaT_trybiniTM</link>(L,&#32;<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(ra),&#32;imm,&#32;flip,&#32;result,&#32;tm));
01476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01477 &#32;&#32;&#32;&#32;&#32;&#32;}
01478 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7a023d51bef94e0b9450cce3b76788a229">OP_MMBINK</link>)&#32;{
01479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_llimits_8h_1aa81d2e7f7263ef29946852d4966a192e">Instruction</link>&#32;pi&#32;=&#32;*(pc&#32;-&#32;2);&#32;&#32;<emphasis role="comment">/*&#32;original&#32;arith.&#32;expression&#32;*/</emphasis>
01480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_t_value">TValue</link>&#32;*imm&#32;=&#32;<link linkend="_lvm_8c_1a11423b97da0e060b24d31d7e71534844">KB</link>(i);
01481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1">TMS</link>&#32;tm&#32;=&#32;(<link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1">TMS</link>)<link linkend="_lopcodes_8h_1af96cb84f2685fda7f36d3d099dba6a44">GETARG_C</link>(i);
01482 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;flip&#32;=&#32;<link linkend="_lopcodes_8h_1aa9ce1e6169ccc23a1e9c783f61af343f">GETARG_k</link>(i);
01483 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_union_stack_value">StkId</link>&#32;result&#32;=&#32;<link linkend="_lvm_8c_1a721dd0af7e652d2d98b1f765f7860bcb">RA</link>(pi);
01484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1ae20e156330a1cdfb3738f042f7eae35a">Protect</link>(<link linkend="_ltm_8c_1a7846e77f88b80370e536c5d8d6fe4abf">luaT_trybinassocTM</link>(L,&#32;<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(ra),&#32;imm,&#32;flip,&#32;result,&#32;tm));
01485 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01486 &#32;&#32;&#32;&#32;&#32;&#32;}
01487 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7ae3fd0932f8be8e5e810d731fd60ab8ef">OP_UNM</link>)&#32;{
01488 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_t_value">TValue</link>&#32;*rb&#32;=&#32;<link linkend="_lvm_8c_1a83fae87b4e07c8e466b98d2085582562">vRB</link>(i);
01489 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lua_8h_1af0a6ed3b852d680769cfc410a0672172">lua_Number</link>&#32;nb;
01490 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lobject_8h_1abade243295a9140f7b86838fbb049054">ttisinteger</link>(rb))&#32;{
01491 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;ib&#32;=&#32;<link linkend="_lobject_8h_1af1a59636db050b842a791cd19086d925">ivalue</link>(rb);
01492 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8h_1af9dd109ba186841ab26efb2d62baf4f6">setivalue</link>(<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(ra),&#32;<link linkend="_lvm_8h_1a6c054eb9ce53c1b282e7ff0088895a37">intop</link>(-,&#32;0,&#32;ib));
01493 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01494 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lvm_8h_1a1c1072a8845c14cc7b5b7744ef4d18a4">tonumberns</link>(rb,&#32;nb))&#32;{
01495 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8h_1ae357382324a8220a3cf77607752de887">setfltvalue</link>(<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(ra),&#32;<link linkend="_llimits_8h_1a84c57a852cdc4b46c678cb3fab715846">luai_numunm</link>(L,&#32;nb));
01496 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01497 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
01498 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1ae20e156330a1cdfb3738f042f7eae35a">Protect</link>(<link linkend="_ltm_8c_1a2adc638eccb971b8abaf27f60611e913">luaT_trybinTM</link>(L,&#32;rb,&#32;rb,&#32;ra,&#32;<link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1a9ba35e1d71b4d8aca322d84a070528dd">TM_UNM</link>));
01499 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01500 &#32;&#32;&#32;&#32;&#32;&#32;}
01501 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7ada36dd48f6870a79b5998262341c57d6">OP_BNOT</link>)&#32;{
01502 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_t_value">TValue</link>&#32;*rb&#32;=&#32;<link linkend="_lvm_8c_1a83fae87b4e07c8e466b98d2085582562">vRB</link>(i);
01503 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;ib;
01504 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lvm_8h_1a0b3a6eff12747eacea6551dbc2d42707">tointegerns</link>(rb,&#32;&amp;ib))&#32;{
01505 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8h_1af9dd109ba186841ab26efb2d62baf4f6">setivalue</link>(<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(ra),&#32;<link linkend="_lvm_8h_1a6c054eb9ce53c1b282e7ff0088895a37">intop</link>(^,&#32;~<link linkend="_llimits_8h_1a5871309e671ba9f938fcb1e0d3bcbeca">l_castS2U</link>(0),&#32;ib));
01506 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01507 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
01508 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1ae20e156330a1cdfb3738f042f7eae35a">Protect</link>(<link linkend="_ltm_8c_1a2adc638eccb971b8abaf27f60611e913">luaT_trybinTM</link>(L,&#32;rb,&#32;rb,&#32;ra,&#32;<link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1a695b7da29958a1275089c619b5139091">TM_BNOT</link>));
01509 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01510 &#32;&#32;&#32;&#32;&#32;&#32;}
01511 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7a36a6b73cc4823f54891a013e2cc760d1">OP_NOT</link>)&#32;{
01512 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_t_value">TValue</link>&#32;*rb&#32;=&#32;<link linkend="_lvm_8c_1a83fae87b4e07c8e466b98d2085582562">vRB</link>(i);
01513 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lobject_8h_1a188e1a95c8c6d547a13431a6e1edd5b3">l_isfalse</link>(rb))
01514 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8h_1a1b86e0dccf6b92c4c89d47af26e3a8e3">setbtvalue</link>(<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(ra));
01515 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
01516 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8h_1ad0259526a10884432dd2e7ea10b90e0f">setbfvalue</link>(<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(ra));
01517 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01518 &#32;&#32;&#32;&#32;&#32;&#32;}
01519 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7a55406931f4958f887e6d966d154a1931">OP_LEN</link>)&#32;{
01520 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1ae20e156330a1cdfb3738f042f7eae35a">Protect</link>(<link linkend="_lvm_8c_1aae23b597659b2aae680f1d0a0b39ab3b">luaV_objlen</link>(L,&#32;ra,&#32;<link linkend="_lvm_8c_1a83fae87b4e07c8e466b98d2085582562">vRB</link>(i)));
01521 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01522 &#32;&#32;&#32;&#32;&#32;&#32;}
01523 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7a28a7da14b1413b441cf2a5d433b43a51">OP_CONCAT</link>)&#32;{
01524 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;n&#32;=&#32;<link linkend="_lopcodes_8h_1a7a343159ef7669a438c2097b839b2b13">GETARG_B</link>(i);&#32;&#32;<emphasis role="comment">/*&#32;number&#32;of&#32;elements&#32;to&#32;concatenate&#32;*/</emphasis>
01525 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;L-&gt;<link linkend="_structlua___state_1afeb5dbe379fc406b35fe5f8a5fcfc5d7">top</link>&#32;=&#32;ra&#32;+&#32;n;&#32;&#32;<emphasis role="comment">/*&#32;mark&#32;the&#32;end&#32;of&#32;concat&#32;operands&#32;*/</emphasis>
01526 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a240b167bd7f3ed903cd1518960b1489c">ProtectNT</link>(<link linkend="_lvm_8c_1a2f076040af405dcb50d661edd692eca7">luaV_concat</link>(L,&#32;n));
01527 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a05f520b99525b2ec56d5597ed4a15eb8">checkGC</link>(L,&#32;L-&gt;<link linkend="_structlua___state_1afeb5dbe379fc406b35fe5f8a5fcfc5d7">top</link>);&#32;<emphasis role="comment">/*&#32;&apos;luaV_concat&apos;&#32;ensures&#32;correct&#32;top&#32;*/</emphasis>
01528 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01529 &#32;&#32;&#32;&#32;&#32;&#32;}
01530 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7a9e771dc35104ec1246adba881d27e372">OP_CLOSE</link>)&#32;{
01531 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1ae20e156330a1cdfb3738f042f7eae35a">Protect</link>(<link linkend="_lfunc_8c_1ae9fcbf80b5969afd9412b9aed102f94e">luaF_close</link>(L,&#32;ra,&#32;<link linkend="_lua_8h_1ab969ff78cb1b63efa2bba3bdfa6fff5c">LUA_OK</link>));
01532 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01533 &#32;&#32;&#32;&#32;&#32;&#32;}
01534 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7a45ba48df2b6802b55eb5eef6bc66b749">OP_TBC</link>)&#32;{
01535 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;create&#32;new&#32;to-be-closed&#32;upvalue&#32;*/</emphasis>
01536 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a89acfdec431169d8ad8bde3952bbd844">halfProtect</link>(<link linkend="_lfunc_8c_1a0f1719e232a25ecfcafed14f8b39ad31">luaF_newtbcupval</link>(L,&#32;ra));
01537 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01538 &#32;&#32;&#32;&#32;&#32;&#32;}
01539 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7afd679fab86e6a91d22c91734e287639b">OP_JMP</link>)&#32;{
01540 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a145a3aec07a6b2a6b78e91f83b810a9f">dojump</link>(ci,&#32;i,&#32;0);
01541 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01542 &#32;&#32;&#32;&#32;&#32;&#32;}
01543 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7a1634898deb6e4d1bcb15416034c641c5">OP_EQ</link>)&#32;{
01544 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lparser_8c_1a24002c50a108445d916457eb3c21d5e1">cond</link>;
01545 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_t_value">TValue</link>&#32;*rb&#32;=&#32;<link linkend="_lvm_8c_1a83fae87b4e07c8e466b98d2085582562">vRB</link>(i);
01546 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1ae20e156330a1cdfb3738f042f7eae35a">Protect</link>(<link linkend="_lparser_8c_1a24002c50a108445d916457eb3c21d5e1">cond</link>&#32;=&#32;<link linkend="_lvm_8c_1a4826066036eb5f7cf0f8a33f7073f49e">luaV_equalobj</link>(L,&#32;<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(ra),&#32;rb));
01547 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1af4484c1945bfa516c6dec5382c7d3f20">docondjump</link>();
01548 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01549 &#32;&#32;&#32;&#32;&#32;&#32;}
01550 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7a7d5ed006824d331041dad8486e52df50">OP_LT</link>)&#32;{
01551 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a427d042b492c9feb6beaeea80f6bd594">op_order</link>(L,&#32;<link linkend="_lvm_8c_1a52eace142e89aebd3cc76b2257bc1ac6">l_lti</link>,&#32;<link linkend="_lvm_8c_1a1e3534dce31fc52f71f974802bc6ace2">LTnum</link>,&#32;<link linkend="_lvm_8c_1a13f124eec78027029d2e8fd9b83ee614">lessthanothers</link>);
01552 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01553 &#32;&#32;&#32;&#32;&#32;&#32;}
01554 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7acef6e71b662db063ff532d89500bb0c0">OP_LE</link>)&#32;{
01555 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a427d042b492c9feb6beaeea80f6bd594">op_order</link>(L,&#32;<link linkend="_lvm_8c_1af018f58bdf08a419023bcb94d0fab609">l_lei</link>,&#32;<link linkend="_lvm_8c_1aa531a8c826e4bbb1918f43bd84b9456a">LEnum</link>,&#32;<link linkend="_lvm_8c_1aa12d860dd59154d1952911589fd72fb2">lessequalothers</link>);
01556 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01557 &#32;&#32;&#32;&#32;&#32;&#32;}
01558 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7ac474caab30c580d7a336de092e3e8754">OP_EQK</link>)&#32;{
01559 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_t_value">TValue</link>&#32;*rb&#32;=&#32;<link linkend="_lvm_8c_1a11423b97da0e060b24d31d7e71534844">KB</link>(i);
01560 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;basic&#32;types&#32;do&#32;not&#32;use&#32;&apos;__eq&apos;;&#32;we&#32;can&#32;use&#32;raw&#32;equality&#32;*/</emphasis>
01561 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lparser_8c_1a24002c50a108445d916457eb3c21d5e1">cond</link>&#32;=&#32;<link linkend="_lvm_8h_1aedbcec0d2a0e951710844d11dfa59a07">luaV_rawequalobj</link>(<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(ra),&#32;rb);
01562 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1af4484c1945bfa516c6dec5382c7d3f20">docondjump</link>();
01563 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01564 &#32;&#32;&#32;&#32;&#32;&#32;}
01565 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7a073492f9f138556d12ee1020f01afa9d">OP_EQI</link>)&#32;{
01566 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lparser_8c_1a24002c50a108445d916457eb3c21d5e1">cond</link>;
01567 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;im&#32;=&#32;<link linkend="_lopcodes_8h_1a7af64834446acb4afeec51438217c73d">GETARG_sB</link>(i);
01568 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lobject_8h_1abade243295a9140f7b86838fbb049054">ttisinteger</link>(<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(ra)))
01569 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lparser_8c_1a24002c50a108445d916457eb3c21d5e1">cond</link>&#32;=&#32;(<link linkend="_lobject_8h_1af1a59636db050b842a791cd19086d925">ivalue</link>(<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(ra))&#32;==&#32;im);
01570 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lobject_8h_1ac1338b5ac67cadf27489f5ae7e939c29">ttisfloat</link>(<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(ra)))
01571 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lparser_8c_1a24002c50a108445d916457eb3c21d5e1">cond</link>&#32;=&#32;<link linkend="_llimits_8h_1ae06bbbe345c8bb028e233120466d387d">luai_numeq</link>(<link linkend="_lobject_8h_1a7d7d6b08f40350c9e7364e9cb984d744">fltvalue</link>(<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(ra)),&#32;<link linkend="_llimits_8h_1ac92cecb12c5aba1164877e81e76e2cb6">cast_num</link>(im));
01572 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
01573 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lparser_8c_1a24002c50a108445d916457eb3c21d5e1">cond</link>&#32;=&#32;0;&#32;&#32;<emphasis role="comment">/*&#32;other&#32;types&#32;cannot&#32;be&#32;equal&#32;to&#32;a&#32;number&#32;*/</emphasis>
01574 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1af4484c1945bfa516c6dec5382c7d3f20">docondjump</link>();
01575 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01576 &#32;&#32;&#32;&#32;&#32;&#32;}
01577 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7a7355d162e8b15877fe33c54e3b755746">OP_LTI</link>)&#32;{
01578 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1ac2b4fecc5abdaf3ec282df9a7b728e13">op_orderI</link>(L,&#32;<link linkend="_lvm_8c_1a52eace142e89aebd3cc76b2257bc1ac6">l_lti</link>,&#32;<link linkend="_llimits_8h_1ae035faaeb068720ee8540210870ee5c9">luai_numlt</link>,&#32;0,&#32;<link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1afa8fa71435d77125e294751a6ec36dc0">TM_LT</link>);
01579 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01580 &#32;&#32;&#32;&#32;&#32;&#32;}
01581 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7aec7e53f36f35ef810ecff8a7eb274877">OP_LEI</link>)&#32;{
01582 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1ac2b4fecc5abdaf3ec282df9a7b728e13">op_orderI</link>(L,&#32;<link linkend="_lvm_8c_1af018f58bdf08a419023bcb94d0fab609">l_lei</link>,&#32;<link linkend="_llimits_8h_1af803655e8c9be7ba1f3f3fb0c4f730d7">luai_numle</link>,&#32;0,&#32;<link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1acb92c94037b451f214223a4c57eccbdf">TM_LE</link>);
01583 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01584 &#32;&#32;&#32;&#32;&#32;&#32;}
01585 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7a4c9ef8190def252dc1e0deb1bf7e787e">OP_GTI</link>)&#32;{
01586 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1ac2b4fecc5abdaf3ec282df9a7b728e13">op_orderI</link>(L,&#32;<link linkend="_lvm_8c_1a8fdefcbe99129a14abac1d25be4794bc">l_gti</link>,&#32;<link linkend="_llimits_8h_1a252c8bc400dc44bd996b19e7cf487871">luai_numgt</link>,&#32;1,&#32;<link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1afa8fa71435d77125e294751a6ec36dc0">TM_LT</link>);
01587 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01588 &#32;&#32;&#32;&#32;&#32;&#32;}
01589 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7ade0bd78cc2f7ec9c1bf6c161759221fa">OP_GEI</link>)&#32;{
01590 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1ac2b4fecc5abdaf3ec282df9a7b728e13">op_orderI</link>(L,&#32;<link linkend="_lvm_8c_1a3890b28845d18e2c75d51b3e7fd85f9c">l_gei</link>,&#32;<link linkend="_llimits_8h_1a727a96f18bda273bd57dee105a274abe">luai_numge</link>,&#32;1,&#32;<link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1acb92c94037b451f214223a4c57eccbdf">TM_LE</link>);
01591 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01592 &#32;&#32;&#32;&#32;&#32;&#32;}
01593 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7a8952e66300f2660060e38c67ccd21c9d">OP_TEST</link>)&#32;{
01594 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lparser_8c_1a24002c50a108445d916457eb3c21d5e1">cond</link>&#32;=&#32;!<link linkend="_lobject_8h_1a188e1a95c8c6d547a13431a6e1edd5b3">l_isfalse</link>(<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(ra));
01595 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1af4484c1945bfa516c6dec5382c7d3f20">docondjump</link>();
01596 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01597 &#32;&#32;&#32;&#32;&#32;&#32;}
01598 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7a39b4077a15fb8fffc166f5045dddacee">OP_TESTSET</link>)&#32;{
01599 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_t_value">TValue</link>&#32;*rb&#32;=&#32;<link linkend="_lvm_8c_1a83fae87b4e07c8e466b98d2085582562">vRB</link>(i);
01600 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lobject_8h_1a188e1a95c8c6d547a13431a6e1edd5b3">l_isfalse</link>(rb)&#32;==&#32;<link linkend="_lopcodes_8h_1aa9ce1e6169ccc23a1e9c783f61af343f">GETARG_k</link>(i))
01601 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pc++;
01602 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
01603 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8h_1add70d29b431f66a1dee29a0cb286de6e">setobj2s</link>(L,&#32;ra,&#32;rb);
01604 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1ab6c6e5c0af31fccecc3464db950e8107">donextjump</link>(ci);
01605 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01606 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01607 &#32;&#32;&#32;&#32;&#32;&#32;}
01608 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7a098bbeea13096667b102f7fd90cbe38f">OP_CALL</link>)&#32;{
01609 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;b&#32;=&#32;<link linkend="_lopcodes_8h_1a7a343159ef7669a438c2097b839b2b13">GETARG_B</link>(i);
01610 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;nresults&#32;=&#32;<link linkend="_lopcodes_8h_1af96cb84f2685fda7f36d3d099dba6a44">GETARG_C</link>(i)&#32;-&#32;1;
01611 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(b&#32;!=&#32;0)&#32;&#32;<emphasis role="comment">/*&#32;fixed&#32;number&#32;of&#32;arguments?&#32;*/</emphasis>
01612 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;L-&gt;<link linkend="_structlua___state_1afeb5dbe379fc406b35fe5f8a5fcfc5d7">top</link>&#32;=&#32;ra&#32;+&#32;b;&#32;&#32;<emphasis role="comment">/*&#32;top&#32;signals&#32;number&#32;of&#32;arguments&#32;*/</emphasis>
01613 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;else&#32;previous&#32;instruction&#32;set&#32;top&#32;*/</emphasis>
01614 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a240b167bd7f3ed903cd1518960b1489c">ProtectNT</link>(<link linkend="_ldo_8c_1a9a82cbe1919eb0104a7249d6d7764061">luaD_call</link>(L,&#32;ra,&#32;nresults));
01615 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01616 &#32;&#32;&#32;&#32;&#32;&#32;}
01617 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7aff2c07ebfd82aa22cc247e9855a16069">OP_TAILCALL</link>)&#32;{
01618 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;b&#32;=&#32;<link linkend="_lopcodes_8h_1a7a343159ef7669a438c2097b839b2b13">GETARG_B</link>(i);&#32;&#32;<emphasis role="comment">/*&#32;number&#32;of&#32;arguments&#32;+&#32;1&#32;(function)&#32;*/</emphasis>
01619 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;nparams1&#32;=&#32;<link linkend="_lopcodes_8h_1af96cb84f2685fda7f36d3d099dba6a44">GETARG_C</link>(i);
01620 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;delat&#32;is&#32;virtual&#32;&apos;func&apos;&#32;-&#32;real&#32;&apos;func&apos;&#32;(vararg&#32;functions)&#32;*/</emphasis>
01621 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;delta&#32;=&#32;(nparams1)&#32;?&#32;ci-&gt;<link linkend="_struct_call_info_1af8751782b1a040b075c25cef0acb484a">u</link>.<link linkend="_struct_call_info_1a1abd0b31f495fcbdfaa1bb8ac5546d6d">l</link>.nextraargs&#32;+&#32;nparams1&#32;:&#32;0;
01622 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(b&#32;!=&#32;0)
01623 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;L-&gt;<link linkend="_structlua___state_1afeb5dbe379fc406b35fe5f8a5fcfc5d7">top</link>&#32;=&#32;ra&#32;+&#32;b;
01624 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;&#32;<emphasis role="comment">/*&#32;previous&#32;instruction&#32;set&#32;top&#32;*/</emphasis>
01625 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;b&#32;=&#32;<link linkend="_llimits_8h_1a37a9e2c4b53433d34bad0f12a1500c08">cast_int</link>(L-&gt;<link linkend="_structlua___state_1afeb5dbe379fc406b35fe5f8a5fcfc5d7">top</link>&#32;-&#32;ra);
01626 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1af118f5c1afd189a53b6d967d5e2f5479">savepc</link>(ci);&#32;&#32;<emphasis role="comment">/*&#32;some&#32;calls&#32;here&#32;can&#32;raise&#32;errors&#32;*/</emphasis>
01627 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lopcodes_8h_1aa874f9aac8107c30bf683067661a988a">TESTARG_k</link>(i))&#32;{
01628 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;close&#32;upvalues&#32;from&#32;current&#32;call;&#32;the&#32;compiler&#32;ensures</emphasis>
01629 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;that&#32;there&#32;are&#32;no&#32;to-be-closed&#32;variables&#32;here,&#32;so&#32;this</emphasis>
01630 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;call&#32;cannot&#32;change&#32;the&#32;stack&#32;*/</emphasis>
01631 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lfunc_8c_1ae9fcbf80b5969afd9412b9aed102f94e">luaF_close</link>(L,&#32;base,&#32;<link linkend="_lfunc_8h_1a361b650db587d8b527a90301a7d7a0d8">NOCLOSINGMETH</link>);
01632 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_llimits_8h_1a5978f5fda715bd80e845df1e16ad7780">lua_assert</link>(base&#32;==&#32;ci-&gt;<link linkend="_struct_call_info_1a9d82a8ad04b0dd8837e621047972260a">func</link>&#32;+&#32;1);
01633 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01634 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(!<link linkend="_lobject_8h_1a48587dcb78721d149d3184d0768f4950">ttisfunction</link>(<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(ra)))&#32;{&#32;&#32;<emphasis role="comment">/*&#32;not&#32;a&#32;function?&#32;*/</emphasis>
01635 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_ldo_8c_1ac468380c26188a69262776f07bdf7780">luaD_tryfuncTM</link>(L,&#32;ra);&#32;&#32;<emphasis role="comment">/*&#32;try&#32;&apos;__call&apos;&#32;metamethod&#32;*/</emphasis>
01636 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;b++;&#32;&#32;<emphasis role="comment">/*&#32;there&#32;is&#32;now&#32;one&#32;extra&#32;argument&#32;*/</emphasis>
01637 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_ldo_8h_1a9c4fce4aed370d62391e1d18577640a3">checkstackGCp</link>(L,&#32;1,&#32;ra);
01638 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01639 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_lobject_8h_1a6f8bada57bc9f224609af800d399693f">ttisLclosure</link>(<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(ra)))&#32;{&#32;&#32;<emphasis role="comment">/*&#32;C&#32;function?&#32;*/</emphasis>
01640 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_ldo_8c_1a9a82cbe1919eb0104a7249d6d7764061">luaD_call</link>(L,&#32;ra,&#32;<link linkend="_lua_8h_1ace3545adc11664c2f2b152fbe8b6283c">LUA_MULTRET</link>);&#32;&#32;<emphasis role="comment">/*&#32;call&#32;it&#32;*/</emphasis>
01641 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1abb4b554ff3bfb81c40e994b89c466728">updatetrap</link>(ci);
01642 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1aa2532fb78de8437337c3a287df45a139">updatestack</link>(ci);&#32;&#32;<emphasis role="comment">/*&#32;stack&#32;may&#32;have&#32;been&#32;relocated&#32;*/</emphasis>
01643 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ci-&gt;<link linkend="_struct_call_info_1a9d82a8ad04b0dd8837e621047972260a">func</link>&#32;-=&#32;delta;
01644 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_ldo_8c_1a93ef0e89dcfdd64224670aa54d7e4f5b">luaD_poscall</link>(L,&#32;ci,&#32;<link linkend="_llimits_8h_1a37a9e2c4b53433d34bad0f12a1500c08">cast_int</link>(L-&gt;<link linkend="_structlua___state_1afeb5dbe379fc406b35fe5f8a5fcfc5d7">top</link>&#32;-&#32;ra));
01645 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
01646 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01647 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ci-&gt;<link linkend="_struct_call_info_1a9d82a8ad04b0dd8837e621047972260a">func</link>&#32;-=&#32;delta;
01648 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_ldo_8c_1a1e02e896afbe22d3a4f25ea65fd0c339">luaD_pretailcall</link>(L,&#32;ci,&#32;ra,&#32;b);&#32;&#32;<emphasis role="comment">/*&#32;prepare&#32;call&#32;frame&#32;*/</emphasis>
01649 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">goto</emphasis>&#32;tailcall;
01650 &#32;&#32;&#32;&#32;&#32;&#32;}
01651 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7ad436c18b194473f5ec64c28b774e41b3">OP_RETURN</link>)&#32;{
01652 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;n&#32;=&#32;<link linkend="_lopcodes_8h_1a7a343159ef7669a438c2097b839b2b13">GETARG_B</link>(i)&#32;-&#32;1;&#32;&#32;<emphasis role="comment">/*&#32;number&#32;of&#32;results&#32;*/</emphasis>
01653 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;nparams1&#32;=&#32;<link linkend="_lopcodes_8h_1af96cb84f2685fda7f36d3d099dba6a44">GETARG_C</link>(i);
01654 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(n&#32;&lt;&#32;0)&#32;&#32;<emphasis role="comment">/*&#32;not&#32;fixed?&#32;*/</emphasis>
01655 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;n&#32;=&#32;<link linkend="_llimits_8h_1a37a9e2c4b53433d34bad0f12a1500c08">cast_int</link>(L-&gt;<link linkend="_structlua___state_1afeb5dbe379fc406b35fe5f8a5fcfc5d7">top</link>&#32;-&#32;ra);&#32;&#32;<emphasis role="comment">/*&#32;get&#32;what&#32;is&#32;available&#32;*/</emphasis>
01656 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1af118f5c1afd189a53b6d967d5e2f5479">savepc</link>(ci);
01657 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lopcodes_8h_1aa874f9aac8107c30bf683067661a988a">TESTARG_k</link>(i))&#32;{&#32;&#32;<emphasis role="comment">/*&#32;may&#32;there&#32;be&#32;open&#32;upvalues?&#32;*/</emphasis>
01658 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(L-&gt;<link linkend="_structlua___state_1afeb5dbe379fc406b35fe5f8a5fcfc5d7">top</link>&#32;&lt;&#32;ci-&gt;<link linkend="_struct_call_info_1afeb5dbe379fc406b35fe5f8a5fcfc5d7">top</link>)
01659 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;L-&gt;<link linkend="_structlua___state_1afeb5dbe379fc406b35fe5f8a5fcfc5d7">top</link>&#32;=&#32;ci-&gt;<link linkend="_struct_call_info_1afeb5dbe379fc406b35fe5f8a5fcfc5d7">top</link>;
01660 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lfunc_8c_1ae9fcbf80b5969afd9412b9aed102f94e">luaF_close</link>(L,&#32;base,&#32;<link linkend="_lua_8h_1ab969ff78cb1b63efa2bba3bdfa6fff5c">LUA_OK</link>);
01661 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1abb4b554ff3bfb81c40e994b89c466728">updatetrap</link>(ci);
01662 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1aa2532fb78de8437337c3a287df45a139">updatestack</link>(ci);
01663 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01664 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(nparams1)&#32;&#32;<emphasis role="comment">/*&#32;vararg&#32;function?&#32;*/</emphasis>
01665 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ci-&gt;<link linkend="_struct_call_info_1a9d82a8ad04b0dd8837e621047972260a">func</link>&#32;-=&#32;ci-&gt;<link linkend="_struct_call_info_1af8751782b1a040b075c25cef0acb484a">u</link>.<link linkend="_struct_call_info_1a1abd0b31f495fcbdfaa1bb8ac5546d6d">l</link>.nextraargs&#32;+&#32;nparams1;
01666 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;L-&gt;<link linkend="_structlua___state_1afeb5dbe379fc406b35fe5f8a5fcfc5d7">top</link>&#32;=&#32;ra&#32;+&#32;n;&#32;&#32;<emphasis role="comment">/*&#32;set&#32;call&#32;for&#32;&apos;luaD_poscall&apos;&#32;*/</emphasis>
01667 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_ldo_8c_1a93ef0e89dcfdd64224670aa54d7e4f5b">luaD_poscall</link>(L,&#32;ci,&#32;n);
01668 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
01669 &#32;&#32;&#32;&#32;&#32;&#32;}
01670 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7ae3f8033d220b543563720de9ab788e82">OP_RETURN0</link>)&#32;{
01671 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(L-&gt;<link linkend="_structlua___state_1a081110fd5f9c1292f56fb2ef36e35c1a">hookmask</link>)&#32;{
01672 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;L-&gt;<link linkend="_structlua___state_1afeb5dbe379fc406b35fe5f8a5fcfc5d7">top</link>&#32;=&#32;ra;
01673 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a8d3732d68d992f7662e63fedf2e781c9">halfProtectNT</link>(<link linkend="_ldo_8c_1a93ef0e89dcfdd64224670aa54d7e4f5b">luaD_poscall</link>(L,&#32;ci,&#32;0));&#32;&#32;<emphasis role="comment">/*&#32;no&#32;hurry...&#32;*/</emphasis>
01674 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01675 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{&#32;&#32;<emphasis role="comment">/*&#32;do&#32;the&#32;&apos;poscall&apos;&#32;here&#32;*/</emphasis>
01676 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;nres&#32;=&#32;ci-&gt;<link linkend="_struct_call_info_1a2c5cabcdf2f8f5b8e0c72171401e0430">nresults</link>;
01677 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;L-&gt;<link linkend="_structlua___state_1a8764223139091552413c85d3fc0bb1eb">ci</link>&#32;=&#32;ci-&gt;<link linkend="_struct_call_info_1acd0df27f40f3c6f546e29401fecaddb4">previous</link>;&#32;&#32;<emphasis role="comment">/*&#32;back&#32;to&#32;caller&#32;*/</emphasis>
01678 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;L-&gt;<link linkend="_structlua___state_1afeb5dbe379fc406b35fe5f8a5fcfc5d7">top</link>&#32;=&#32;base&#32;-&#32;1;
01679 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(nres--&#32;&gt;&#32;0)
01680 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8h_1ad9034def7bbc1965ec3d714d84620b07">setnilvalue</link>(<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(L-&gt;<link linkend="_structlua___state_1afeb5dbe379fc406b35fe5f8a5fcfc5d7">top</link>++));&#32;&#32;<emphasis role="comment">/*&#32;all&#32;results&#32;are&#32;nil&#32;*/</emphasis>
01681 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01682 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
01683 &#32;&#32;&#32;&#32;&#32;&#32;}
01684 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7a85801949afc11b7d95553fd0ee912f38">OP_RETURN1</link>)&#32;{
01685 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(L-&gt;<link linkend="_structlua___state_1a081110fd5f9c1292f56fb2ef36e35c1a">hookmask</link>)&#32;{
01686 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;L-&gt;<link linkend="_structlua___state_1afeb5dbe379fc406b35fe5f8a5fcfc5d7">top</link>&#32;=&#32;ra&#32;+&#32;1;
01687 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a8d3732d68d992f7662e63fedf2e781c9">halfProtectNT</link>(<link linkend="_ldo_8c_1a93ef0e89dcfdd64224670aa54d7e4f5b">luaD_poscall</link>(L,&#32;ci,&#32;1));&#32;&#32;<emphasis role="comment">/*&#32;no&#32;hurry...&#32;*/</emphasis>
01688 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01689 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{&#32;&#32;<emphasis role="comment">/*&#32;do&#32;the&#32;&apos;poscall&apos;&#32;here&#32;*/</emphasis>
01690 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;nres&#32;=&#32;ci-&gt;<link linkend="_struct_call_info_1a2c5cabcdf2f8f5b8e0c72171401e0430">nresults</link>;
01691 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;L-&gt;<link linkend="_structlua___state_1a8764223139091552413c85d3fc0bb1eb">ci</link>&#32;=&#32;ci-&gt;<link linkend="_struct_call_info_1acd0df27f40f3c6f546e29401fecaddb4">previous</link>;&#32;&#32;<emphasis role="comment">/*&#32;back&#32;to&#32;caller&#32;*/</emphasis>
01692 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(nres&#32;==&#32;0)
01693 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;L-&gt;<link linkend="_structlua___state_1afeb5dbe379fc406b35fe5f8a5fcfc5d7">top</link>&#32;=&#32;base&#32;-&#32;1;&#32;&#32;<emphasis role="comment">/*&#32;asked&#32;for&#32;no&#32;results&#32;*/</emphasis>
01694 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
01695 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8h_1af9258d87e8f082be8a2adb731d90f1a5">setobjs2s</link>(L,&#32;base&#32;-&#32;1,&#32;ra);&#32;&#32;<emphasis role="comment">/*&#32;at&#32;least&#32;this&#32;result&#32;*/</emphasis>
01696 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;L-&gt;<link linkend="_structlua___state_1afeb5dbe379fc406b35fe5f8a5fcfc5d7">top</link>&#32;=&#32;base;
01697 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(--nres&#32;&gt;&#32;0)&#32;&#32;<emphasis role="comment">/*&#32;complete&#32;missing&#32;results&#32;*/</emphasis>
01698 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8h_1ad9034def7bbc1965ec3d714d84620b07">setnilvalue</link>(<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(L-&gt;<link linkend="_structlua___state_1afeb5dbe379fc406b35fe5f8a5fcfc5d7">top</link>++));
01699 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01700 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01701 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
01702 &#32;&#32;&#32;&#32;&#32;&#32;}
01703 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7aa01470a2fc70a3f2dbd20c7c8f270802">OP_FORLOOP</link>)&#32;{
01704 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lobject_8h_1abade243295a9140f7b86838fbb049054">ttisinteger</link>(<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(ra&#32;+&#32;2)))&#32;{&#32;&#32;<emphasis role="comment">/*&#32;integer&#32;loop?&#32;*/</emphasis>
01705 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lua_8h_1a2357bdcd9af1aaef0a6895a9c3b7eccf">lua_Unsigned</link>&#32;count&#32;=&#32;<link linkend="_llimits_8h_1a5871309e671ba9f938fcb1e0d3bcbeca">l_castS2U</link>(<link linkend="_lobject_8h_1af1a59636db050b842a791cd19086d925">ivalue</link>(<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(ra&#32;+&#32;1)));
01706 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(count&#32;&gt;&#32;0)&#32;{&#32;&#32;<emphasis role="comment">/*&#32;still&#32;more&#32;iterations?&#32;*/</emphasis>
01707 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;step&#32;=&#32;<link linkend="_lobject_8h_1af1a59636db050b842a791cd19086d925">ivalue</link>(<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(ra&#32;+&#32;2));
01708 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;idx&#32;=&#32;<link linkend="_lobject_8h_1af1a59636db050b842a791cd19086d925">ivalue</link>(<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(ra));&#32;&#32;<emphasis role="comment">/*&#32;internal&#32;index&#32;*/</emphasis>
01709 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8h_1ad7adb5b383285a385eb64b01de30966e">chgivalue</link>(<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(ra&#32;+&#32;1),&#32;count&#32;-&#32;1);&#32;&#32;<emphasis role="comment">/*&#32;update&#32;counter&#32;*/</emphasis>
01710 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;idx&#32;=&#32;<link linkend="_lvm_8h_1a6c054eb9ce53c1b282e7ff0088895a37">intop</link>(+,&#32;idx,&#32;step);&#32;&#32;<emphasis role="comment">/*&#32;add&#32;step&#32;to&#32;index&#32;*/</emphasis>
01711 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8h_1ad7adb5b383285a385eb64b01de30966e">chgivalue</link>(<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(ra),&#32;idx);&#32;&#32;<emphasis role="comment">/*&#32;update&#32;internal&#32;index&#32;*/</emphasis>
01712 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8h_1af9dd109ba186841ab26efb2d62baf4f6">setivalue</link>(<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(ra&#32;+&#32;3),&#32;idx);&#32;&#32;<emphasis role="comment">/*&#32;and&#32;control&#32;variable&#32;*/</emphasis>
01713 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pc&#32;-=&#32;<link linkend="_lopcodes_8h_1acf8d228275fd2789dcf5f019bbabc019">GETARG_Bx</link>(i);&#32;&#32;<emphasis role="comment">/*&#32;jump&#32;back&#32;*/</emphasis>
01714 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01715 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01716 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lvm_8c_1ae1da05262daf2e1f5616c2f0e6472264">floatforloop</link>(ra))&#32;&#32;<emphasis role="comment">/*&#32;float&#32;loop&#32;*/</emphasis>
01717 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pc&#32;-=&#32;<link linkend="_lopcodes_8h_1acf8d228275fd2789dcf5f019bbabc019">GETARG_Bx</link>(i);&#32;&#32;<emphasis role="comment">/*&#32;jump&#32;back&#32;*/</emphasis>
01718 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1abb4b554ff3bfb81c40e994b89c466728">updatetrap</link>(ci);&#32;&#32;<emphasis role="comment">/*&#32;allows&#32;a&#32;signal&#32;to&#32;break&#32;the&#32;loop&#32;*/</emphasis>
01719 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01720 &#32;&#32;&#32;&#32;&#32;&#32;}
01721 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7a5277c6eb2b1ab790c4942fdccd749e33">OP_FORPREP</link>)&#32;{
01722 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a59d34ce7e11dd5c6aa72c76fa2fe09a0">savestate</link>(L,&#32;ci);&#32;&#32;<emphasis role="comment">/*&#32;in&#32;case&#32;of&#32;errors&#32;*/</emphasis>
01723 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lvm_8c_1a8d9c9746ae6f28dd1b17982a88589b51">forprep</link>(L,&#32;ra))
01724 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pc&#32;+=&#32;<link linkend="_lopcodes_8h_1acf8d228275fd2789dcf5f019bbabc019">GETARG_Bx</link>(i)&#32;+&#32;1;&#32;&#32;<emphasis role="comment">/*&#32;skip&#32;the&#32;loop&#32;*/</emphasis>
01725 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01726 &#32;&#32;&#32;&#32;&#32;&#32;}
01727 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7aafeb9e3e631d6f6c1700bf77134d425e">OP_TFORPREP</link>)&#32;{
01728 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;create&#32;to-be-closed&#32;upvalue&#32;(if&#32;needed)&#32;*/</emphasis>
01729 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a89acfdec431169d8ad8bde3952bbd844">halfProtect</link>(<link linkend="_lfunc_8c_1a0f1719e232a25ecfcafed14f8b39ad31">luaF_newtbcupval</link>(L,&#32;ra&#32;+&#32;3));
01730 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pc&#32;+=&#32;<link linkend="_lopcodes_8h_1acf8d228275fd2789dcf5f019bbabc019">GETARG_Bx</link>(i);
01731 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i&#32;=&#32;*(pc++);&#32;&#32;<emphasis role="comment">/*&#32;go&#32;to&#32;next&#32;instruction&#32;*/</emphasis>
01732 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_llimits_8h_1a5978f5fda715bd80e845df1e16ad7780">lua_assert</link>(<link linkend="_lopcodes_8h_1aaa146179c3677b790c5681dcd82f0acc">GET_OPCODE</link>(i)&#32;==&#32;<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7a899602d2c96443e08eec9e477071aa22">OP_TFORCALL</link>&#32;&amp;&amp;&#32;ra&#32;==&#32;<link linkend="_lvm_8c_1a721dd0af7e652d2d98b1f765f7860bcb">RA</link>(i));
01733 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">goto</emphasis>&#32;l_tforcall;
01734 &#32;&#32;&#32;&#32;&#32;&#32;}
01735 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7a899602d2c96443e08eec9e477071aa22">OP_TFORCALL</link>)&#32;{
01736 &#32;&#32;&#32;&#32;&#32;&#32;&#32;l_tforcall:
01737 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;&apos;ra&apos;&#32;has&#32;the&#32;iterator&#32;function,&#32;&apos;ra&#32;+&#32;1&apos;&#32;has&#32;the&#32;state,</emphasis>
01738 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&apos;ra&#32;+&#32;2&apos;&#32;has&#32;the&#32;control&#32;variable,&#32;and&#32;&apos;ra&#32;+&#32;3&apos;&#32;has&#32;the</emphasis>
01739 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;to-be-closed&#32;variable.&#32;The&#32;call&#32;will&#32;use&#32;the&#32;stack&#32;after</emphasis>
01740 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;these&#32;values&#32;(starting&#32;at&#32;&apos;ra&#32;+&#32;4&apos;)</emphasis>
01741 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
01742 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;push&#32;function,&#32;state,&#32;and&#32;control&#32;variable&#32;*/</emphasis>
01743 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;memcpy(ra&#32;+&#32;4,&#32;ra,&#32;3&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(*ra));
01744 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;L-&gt;<link linkend="_structlua___state_1afeb5dbe379fc406b35fe5f8a5fcfc5d7">top</link>&#32;=&#32;ra&#32;+&#32;4&#32;+&#32;3;
01745 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a240b167bd7f3ed903cd1518960b1489c">ProtectNT</link>(<link linkend="_ldo_8c_1a9a82cbe1919eb0104a7249d6d7764061">luaD_call</link>(L,&#32;ra&#32;+&#32;4,&#32;<link linkend="_lopcodes_8h_1af96cb84f2685fda7f36d3d099dba6a44">GETARG_C</link>(i)));&#32;&#32;<emphasis role="comment">/*&#32;do&#32;the&#32;call&#32;*/</emphasis>
01746 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1aa2532fb78de8437337c3a287df45a139">updatestack</link>(ci);&#32;&#32;<emphasis role="comment">/*&#32;stack&#32;may&#32;have&#32;changed&#32;*/</emphasis>
01747 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i&#32;=&#32;*(pc++);&#32;&#32;<emphasis role="comment">/*&#32;go&#32;to&#32;next&#32;instruction&#32;*/</emphasis>
01748 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_llimits_8h_1a5978f5fda715bd80e845df1e16ad7780">lua_assert</link>(<link linkend="_lopcodes_8h_1aaa146179c3677b790c5681dcd82f0acc">GET_OPCODE</link>(i)&#32;==&#32;<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7a7dabccd7671c8ff374cb4502a6edb9c0">OP_TFORLOOP</link>&#32;&amp;&amp;&#32;ra&#32;==&#32;<link linkend="_lvm_8c_1a721dd0af7e652d2d98b1f765f7860bcb">RA</link>(i));
01749 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">goto</emphasis>&#32;l_tforloop;
01750 &#32;&#32;&#32;&#32;&#32;&#32;}
01751 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7a7dabccd7671c8ff374cb4502a6edb9c0">OP_TFORLOOP</link>)&#32;{
01752 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;l_tforloop:
01753 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_lobject_8h_1a39af019fafa202841da3bf7c427bf090">ttisnil</link>(<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(ra&#32;+&#32;4)))&#32;{&#32;&#32;<emphasis role="comment">/*&#32;continue&#32;loop?&#32;*/</emphasis>
01754 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8h_1af9258d87e8f082be8a2adb731d90f1a5">setobjs2s</link>(L,&#32;ra&#32;+&#32;2,&#32;ra&#32;+&#32;4);&#32;&#32;<emphasis role="comment">/*&#32;save&#32;control&#32;variable&#32;*/</emphasis>
01755 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pc&#32;-=&#32;<link linkend="_lopcodes_8h_1acf8d228275fd2789dcf5f019bbabc019">GETARG_Bx</link>(i);&#32;&#32;<emphasis role="comment">/*&#32;jump&#32;back&#32;*/</emphasis>
01756 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01757 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01758 &#32;&#32;&#32;&#32;&#32;&#32;}
01759 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7a01618d8295953fd4ab2ef721b2051718">OP_SETLIST</link>)&#32;{
01760 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;n&#32;=&#32;<link linkend="_lopcodes_8h_1a7a343159ef7669a438c2097b839b2b13">GETARG_B</link>(i);
01761 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;last&#32;=&#32;<link linkend="_lopcodes_8h_1af96cb84f2685fda7f36d3d099dba6a44">GETARG_C</link>(i);
01762 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_table">Table</link>&#32;*h&#32;=&#32;<link linkend="_lobject_8h_1a336a6ce5e8340e6de133ec249cf47ebf">hvalue</link>(<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(ra));
01763 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(n&#32;==&#32;0)
01764 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;n&#32;=&#32;<link linkend="_llimits_8h_1a37a9e2c4b53433d34bad0f12a1500c08">cast_int</link>(L-&gt;<link linkend="_structlua___state_1afeb5dbe379fc406b35fe5f8a5fcfc5d7">top</link>&#32;-&#32;ra)&#32;-&#32;1;&#32;&#32;<emphasis role="comment">/*&#32;get&#32;up&#32;to&#32;the&#32;top&#32;*/</emphasis>
01765 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
01766 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;L-&gt;<link linkend="_structlua___state_1afeb5dbe379fc406b35fe5f8a5fcfc5d7">top</link>&#32;=&#32;ci-&gt;<link linkend="_struct_call_info_1afeb5dbe379fc406b35fe5f8a5fcfc5d7">top</link>;&#32;&#32;<emphasis role="comment">/*&#32;correct&#32;top&#32;in&#32;case&#32;of&#32;emergency&#32;GC&#32;*/</emphasis>
01767 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;last&#32;+=&#32;n;
01768 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lopcodes_8h_1aa874f9aac8107c30bf683067661a988a">TESTARG_k</link>(i))&#32;{
01769 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;last&#32;+=&#32;<link linkend="_lopcodes_8h_1acfd578bba038b6682b924cf48012d80a">GETARG_Ax</link>(*pc)&#32;*&#32;(<link linkend="_lopcodes_8h_1a15a7daf14e4640990519e4e7f627900f">MAXARG_C</link>&#32;+&#32;1);
01770 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pc++;
01771 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01772 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(last&#32;&gt;&#32;<link linkend="_ltable_8c_1a8f20a204b7a78780847939086b847781">luaH_realasize</link>(h))&#32;&#32;<emphasis role="comment">/*&#32;needs&#32;more&#32;space?&#32;*/</emphasis>
01773 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_ltable_8c_1aeb5ce72fe8d43709093264d6522a27d4">luaH_resizearray</link>(L,&#32;h,&#32;last);&#32;&#32;<emphasis role="comment">/*&#32;preallocate&#32;it&#32;at&#32;once&#32;*/</emphasis>
01774 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;&#32;n&#32;&gt;&#32;0;&#32;n--)&#32;{
01775 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_t_value">TValue</link>&#32;*val&#32;=&#32;<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(ra&#32;+&#32;n);
01776 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8h_1adefdd17d98f1f5734ee296395e1805d4">setobj2t</link>(L,&#32;&amp;h-&gt;<link linkend="_struct_table_1a6ce25078468c6681674e2f56432a27b9">array</link>[last&#32;-&#32;1],&#32;val);
01777 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;last--;
01778 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lgc_8h_1a60903f232a1c51d22de556ea4c144f3a">luaC_barrierback</link>(L,&#32;<link linkend="_lstate_8h_1a254ca29aba03e47440082d4591a9734e">obj2gco</link>(h),&#32;val);
01779 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01780 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01781 &#32;&#32;&#32;&#32;&#32;&#32;}
01782 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7a407a76cd8c503b0f4dc14603687a77a2">OP_CLOSURE</link>)&#32;{
01783 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_proto">Proto</link>&#32;*p&#32;=&#32;cl-&gt;<link linkend="_struct_l_closure_1aed1f50b9bdc5ce4c7cfa49529472b42c">p</link>-&gt;<link linkend="_struct_proto_1ab7af98f98f5cf674f6be5e3fc855af43">p</link>[<link linkend="_lopcodes_8h_1acf8d228275fd2789dcf5f019bbabc019">GETARG_Bx</link>(i)];
01784 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a89acfdec431169d8ad8bde3952bbd844">halfProtect</link>(<link linkend="_lvm_8c_1a4bcc07915cc8b4d397b6d411e4d2723c">pushclosure</link>(L,&#32;p,&#32;cl-&gt;<link linkend="_struct_l_closure_1aa4734795813776a46167fe712dfd9506">upvals</link>,&#32;base,&#32;ra));
01785 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a05f520b99525b2ec56d5597ed4a15eb8">checkGC</link>(L,&#32;ra&#32;+&#32;1);
01786 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01787 &#32;&#32;&#32;&#32;&#32;&#32;}
01788 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7a1856103c50818d72aaa506821a4ef004">OP_VARARG</link>)&#32;{
01789 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;n&#32;=&#32;<link linkend="_lopcodes_8h_1af96cb84f2685fda7f36d3d099dba6a44">GETARG_C</link>(i)&#32;-&#32;1;&#32;&#32;<emphasis role="comment">/*&#32;required&#32;results&#32;*/</emphasis>
01790 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1ae20e156330a1cdfb3738f042f7eae35a">Protect</link>(<link linkend="_ltm_8c_1aca3c9e53a1867994012af56282cb2b04">luaT_getvarargs</link>(L,&#32;ci,&#32;ra,&#32;n));
01791 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01792 &#32;&#32;&#32;&#32;&#32;&#32;}
01793 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7a0ac7fd650d101088cfc6beed3757ba44">OP_VARARGPREP</link>)&#32;{
01794 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a240b167bd7f3ed903cd1518960b1489c">ProtectNT</link>(<link linkend="_ltm_8c_1a1081ea0d2d04c01c3df1acf2bc7735f5">luaT_adjustvarargs</link>(L,&#32;<link linkend="_lopcodes_8h_1a1d504abc1e2246548f89977210dce0b9">GETARG_A</link>(i),&#32;ci,&#32;cl-&gt;<link linkend="_struct_l_closure_1aed1f50b9bdc5ce4c7cfa49529472b42c">p</link>));
01795 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(trap)&#32;{
01796 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_ldo_8c_1a5f30116d7e47e3db1fd226e22e903d08">luaD_hookcall</link>(L,&#32;ci);
01797 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;L-&gt;<link linkend="_structlua___state_1af1ac56c8c869bc5401c5de137f643033">oldpc</link>&#32;=&#32;1;&#32;&#32;<emphasis role="comment">/*&#32;next&#32;opcode&#32;will&#32;be&#32;seen&#32;as&#32;a&#32;&quot;new&quot;&#32;line&#32;*/</emphasis>
01798 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01799 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a8e2f8e15f68c38d8c1a784fa79fbfe2d">updatebase</link>(ci);&#32;&#32;<emphasis role="comment">/*&#32;function&#32;has&#32;new&#32;base&#32;after&#32;adjustment&#32;*/</emphasis>
01800 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01801 &#32;&#32;&#32;&#32;&#32;&#32;}
01802 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a64ed762fd3da016b8792d4ac0d0cf17f">vmcase</link>(<link linkend="_lopcodes_8h_1abeb7dfb0e9e2b3114e240a405d046ea7ae7a29a9b5e1490453da04cba95b39bea">OP_EXTRAARG</link>)&#32;{
01803 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_llimits_8h_1a5978f5fda715bd80e845df1e16ad7780">lua_assert</link>(0);
01804 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lvm_8c_1a362451cac7ed1e9ebf8978cd761a01fb">vmbreak</link>;
01805 &#32;&#32;&#32;&#32;&#32;&#32;}
01806 &#32;&#32;&#32;&#32;}
01807 &#32;&#32;}
01808 }
01809 
01810 <emphasis role="comment">/*&#32;}==================================================================&#32;*/</emphasis>
</programlisting></section>
