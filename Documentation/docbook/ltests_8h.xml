<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_ltests_8h" xml:lang="zh">
<title>D:/gitworkspace/lua/ltests.h 文件参考</title>
<indexterm><primary>D:/gitworkspace/lua/ltests.h</primary></indexterm>
<programlisting>#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
</programlisting>ltests.h 的引用(Include)关系图:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="ltests_8h__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>结构体    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_struct_memcontrol">Memcontrol</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct_l___e_x_t_r_a">L_EXTRA</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>宏定义    </title>
        <itemizedlist>
            <listitem><para>#define <link linkend="_ltests_8h_1ada4d60462c5b759d152da3c47cbe41ac">LUA_COMPAT_MATHLIB</link></para>
</listitem>
            <listitem><para>#define <link linkend="_ltests_8h_1aaef8a207dee1d3d7c285b91abc26dd45">LUA_COMPAT_LT_LE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_ltests_8h_1a546773d34eb6b66cf99f8ebcdf55cc9d">LUA_DEBUG</link></para>
</listitem>
            <listitem><para>#define <link linkend="_ltests_8h_1a8b0b5e240b0680432895db37ef6aed4a">LUAI_ASSERT</link></para>
</listitem>
            <listitem><para>#define <link linkend="_ltests_8h_1aad7d9b351cde290eb12c180d03ec71e4">LUAI_MAXCSTACK</link>   400</para>
</listitem>
            <listitem><para>#define <link linkend="_ltests_8h_1a86d500a34c624c2cae56bc25a31b12f3">UNUSED</link>(x)   (x=0, (void)(x))</para>
</listitem>
            <listitem><para>#define <link linkend="_ltests_8h_1a66e2cc299fcf55c169a67b5b3781a955">l_sprintf</link>(s,  sz,  f,  i)   (memset(s,0xAB,sz), snprintf(s,sz,f,i))</para>
</listitem>
            <listitem><para>#define <link linkend="_ltests_8h_1a23db0b8d14efa41ab925d3c939eff24b">LUA_USE_JUMPTABLE</link>   0</para>
</listitem>
            <listitem><para>#define <link linkend="_ltests_8h_1af4decaf7912e6d82bfe8f69d80b000fc">LUA_RAND32</link></para>
</listitem>
            <listitem><para>#define <link linkend="_ltests_8h_1ae25668dff58d6257a4fc5b01c1e5820b">LUA_EXTRASPACE</link>   sizeof(struct <link linkend="_struct_l___e_x_t_r_a">L_EXTRA</link>)</para>
</listitem>
            <listitem><para>#define <link linkend="_ltests_8h_1a2be71daa061f2a182f14d90e6d7e2867">getlock</link>(l)   <link linkend="_llimits_8h_1af17d62ec9e237a7644de6b9b34a48a34">cast</link>(struct <link linkend="_struct_l___e_x_t_r_a">L_EXTRA</link>*, <link linkend="_lua_8h_1ab1c3cbd392803fa526251bea4867dee1">lua_getextraspace</link>(l))</para>
</listitem>
            <listitem><para>#define <link linkend="_ltests_8h_1a0e459721c051bbff9c1f068542543931">luai_userstateopen</link>(l)   	(<link linkend="_ltests_8h_1a2be71daa061f2a182f14d90e6d7e2867">getlock</link>(l)-&gt;lock = 0, <link linkend="_ltests_8h_1a2be71daa061f2a182f14d90e6d7e2867">getlock</link>(l)-&gt;plock = &amp;(<link linkend="_ltests_8h_1a2be71daa061f2a182f14d90e6d7e2867">getlock</link>(l)-&gt;lock))</para>
</listitem>
            <listitem><para>#define <link linkend="_ltests_8h_1a7b95e38f89244e394b2943edeb4948d5">luai_userstateclose</link>(l)     <link linkend="_lualib_8h_1abea1f576564ec516f6efe8c014bdef2d">lua_assert</link>(<link linkend="_ltests_8h_1a2be71daa061f2a182f14d90e6d7e2867">getlock</link>(l)-&gt;lock == 1 &amp;&amp; <link linkend="_ltests_8h_1a2be71daa061f2a182f14d90e6d7e2867">getlock</link>(l)-&gt;plock == &amp;(<link linkend="_ltests_8h_1a2be71daa061f2a182f14d90e6d7e2867">getlock</link>(l)-&gt;lock))</para>
</listitem>
            <listitem><para>#define <link linkend="_ltests_8h_1a12057942e6ef80fa71f455ba6aee03f0">luai_userstatethread</link>(l,  l1)     <link linkend="_lualib_8h_1abea1f576564ec516f6efe8c014bdef2d">lua_assert</link>(<link linkend="_ltests_8h_1a2be71daa061f2a182f14d90e6d7e2867">getlock</link>(l1)-&gt;plock == <link linkend="_ltests_8h_1a2be71daa061f2a182f14d90e6d7e2867">getlock</link>(l)-&gt;plock)</para>
</listitem>
            <listitem><para>#define <link linkend="_ltests_8h_1aaf546c6564ac2ea8312b67870182fd44">luai_userstatefree</link>(l,  l1)     <link linkend="_lualib_8h_1abea1f576564ec516f6efe8c014bdef2d">lua_assert</link>(<link linkend="_ltests_8h_1a2be71daa061f2a182f14d90e6d7e2867">getlock</link>(l)-&gt;plock == <link linkend="_ltests_8h_1a2be71daa061f2a182f14d90e6d7e2867">getlock</link>(l1)-&gt;plock)</para>
</listitem>
            <listitem><para>#define <link linkend="_ltests_8h_1a459a2c5b3654fe38a83017e14b3fa63b">lua_lock</link>(l)   <link linkend="_lualib_8h_1abea1f576564ec516f6efe8c014bdef2d">lua_assert</link>((*<link linkend="_ltests_8h_1a2be71daa061f2a182f14d90e6d7e2867">getlock</link>(l)-&gt;plock)++ == 0)</para>
</listitem>
            <listitem><para>#define <link linkend="_ltests_8h_1af24b94f132c4ba762750f4237d7bbba5">lua_unlock</link>(l)   <link linkend="_lualib_8h_1abea1f576564ec516f6efe8c014bdef2d">lua_assert</link>(--(*<link linkend="_ltests_8h_1a2be71daa061f2a182f14d90e6d7e2867">getlock</link>(l)-&gt;plock) == 0)</para>
</listitem>
            <listitem><para>#define <link linkend="_ltests_8h_1af360ad37a770dfdc29291a99c398f42d">LUAL_BUFFERSIZE</link>   23</para>
</listitem>
            <listitem><para>#define <link linkend="_ltests_8h_1a91604f8876fd042d7b1cdbade17927e6">MINSTRTABSIZE</link>   2</para>
</listitem>
            <listitem><para>#define <link linkend="_ltests_8h_1ad5413b8b64cce6bf8cab6fa1e54d2464">MAXIWTHABS</link>   3</para>
</listitem>
            <listitem><para>#define <link linkend="_ltests_8h_1aa8382779dd8eeb2dea3deb97dec0ed1c">STRCACHE_N</link>   23</para>
</listitem>
            <listitem><para>#define <link linkend="_ltests_8h_1a3e028bcc45ab536a37bb6860caf3d2ca">STRCACHE_M</link>   5</para>
</listitem>
            <listitem><para>#define <link linkend="_ltests_8h_1a5a7113f97995c9150d121892030b4656">LUAI_USER_ALIGNMENT_T</link>   union { char b[sizeof(void*) * 8]; }</para>
</listitem>
            <listitem><para>#define <link linkend="_ltests_8h_1ad7b065ae58f10bfa5800866b84de5f1e">LUAI_MAXSTACK</link>   50000</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>类型定义    </title>
        <itemizedlist>
            <listitem><para>typedef struct <link linkend="_struct_memcontrol">Memcontrol</link> <link linkend="_ltests_8h_1ac4584e620eadf3a17ed80ee3c4f650bf">Memcontrol</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>函数    </title>
        <itemizedlist>
            <listitem><para><link linkend="_onelua_8c_1a3f43b35a70c93f2cfde1db42a5a24f1e">LUAI_FUNC</link> int <link linkend="_ltests_8h_1a749fe8c5cac80b7e60393e1a0e1934ab">lua_checkmemory</link> (<link linkend="_structlua___state">lua_State</link> *L)</para>
</listitem>
            <listitem><para><link linkend="_onelua_8c_1a3f43b35a70c93f2cfde1db42a5a24f1e">LUAI_FUNC</link> void <link linkend="_ltests_8h_1a424e6fc1410a08d49bb66e9c3e68dd2c">lua_printobj</link> (<link linkend="_structlua___state">lua_State</link> *L, struct <link linkend="_struct_g_c_object">GCObject</link> *o)</para>
</listitem>
            <listitem><para><link linkend="_luaconf_8h_1af88575eb79fdd88b1cce4533ab5cbe69">LUA_API</link> int <link linkend="_ltests_8h_1a939daca9bf454e4f374d1d04ff7b161c">luaB_opentests</link> (<link linkend="_structlua___state">lua_State</link> *L)</para>
</listitem>
            <listitem><para><link linkend="_luaconf_8h_1af88575eb79fdd88b1cce4533ab5cbe69">LUA_API</link> void * <link linkend="_ltests_8h_1a841f1ad3aefdf611dc771b4786868f59">debug_realloc</link> (void *ud, void *<link linkend="_lparser_8c_1a235428bed4c6be6cb6d2760cd0fa9d34">block</link>, size_t osize, size_t nsize)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>变量    </title>
        <itemizedlist>
            <listitem><para><link linkend="_luaconf_8h_1af88575eb79fdd88b1cce4533ab5cbe69">LUA_API</link> <link linkend="_struct_memcontrol">Memcontrol</link> <link linkend="_ltests_8h_1ad1e377d0e533a8cb13f2e8194142224f">l_memcontrol</link></para>
</listitem>
            <listitem><para>void * <link linkend="_ltests_8h_1aff7135f2cb3e0acfe05a83a41e66a53e">l_Trick</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>宏定义说明</title>
<anchor xml:id="_ltests_8h_1a2be71daa061f2a182f14d90e6d7e2867"/>    <section>
    <title>getlock</title>
<indexterm><primary>getlock</primary><secondary>ltests.h</secondary></indexterm>
<indexterm><primary>ltests.h</primary><secondary>getlock</secondary></indexterm>
<para><computeroutput>#define getlock( l)   <link linkend="_llimits_8h_1af17d62ec9e237a7644de6b9b34a48a34">cast</link>(struct <link linkend="_struct_l___e_x_t_r_a">L_EXTRA</link>*, <link linkend="_lua_8h_1ab1c3cbd392803fa526251bea4867dee1">lua_getextraspace</link>(l))</computeroutput></para><para>
在文件 <link linkend="_ltests_8h_source">ltests.h</link> 第 <link linkend="_ltests_8h_source_1l00090">90</link> 行定义.</para>
    </section><anchor xml:id="_ltests_8h_1a66e2cc299fcf55c169a67b5b3781a955"/>    <section>
    <title>l_sprintf</title>
<indexterm><primary>l_sprintf</primary><secondary>ltests.h</secondary></indexterm>
<indexterm><primary>ltests.h</primary><secondary>l_sprintf</secondary></indexterm>
<para><computeroutput>#define l_sprintf( s,  sz,  f,  i)   (memset(s,0xAB,sz), snprintf(s,sz,f,i))</computeroutput></para><para>
在文件 <link linkend="_ltests_8h_source">ltests.h</link> 第 <link linkend="_ltests_8h_source_1l00038">38</link> 行定义.</para>
    </section><anchor xml:id="_ltests_8h_1aaef8a207dee1d3d7c285b91abc26dd45"/>    <section>
    <title>LUA_COMPAT_LT_LE</title>
<indexterm><primary>LUA_COMPAT_LT_LE</primary><secondary>ltests.h</secondary></indexterm>
<indexterm><primary>ltests.h</primary><secondary>LUA_COMPAT_LT_LE</secondary></indexterm>
<para><computeroutput>#define LUA_COMPAT_LT_LE</computeroutput></para><para>
在文件 <link linkend="_ltests_8h_source">ltests.h</link> 第 <link linkend="_ltests_8h_source_1l00016">16</link> 行定义.</para>
    </section><anchor xml:id="_ltests_8h_1ada4d60462c5b759d152da3c47cbe41ac"/>    <section>
    <title>LUA_COMPAT_MATHLIB</title>
<indexterm><primary>LUA_COMPAT_MATHLIB</primary><secondary>ltests.h</secondary></indexterm>
<indexterm><primary>ltests.h</primary><secondary>LUA_COMPAT_MATHLIB</secondary></indexterm>
<para><computeroutput>#define LUA_COMPAT_MATHLIB</computeroutput></para><para>
在文件 <link linkend="_ltests_8h_source">ltests.h</link> 第 <link linkend="_ltests_8h_source_1l00015">15</link> 行定义.</para>
    </section><anchor xml:id="_ltests_8h_1a546773d34eb6b66cf99f8ebcdf55cc9d"/>    <section>
    <title>LUA_DEBUG</title>
<indexterm><primary>LUA_DEBUG</primary><secondary>ltests.h</secondary></indexterm>
<indexterm><primary>ltests.h</primary><secondary>LUA_DEBUG</secondary></indexterm>
<para><computeroutput>#define LUA_DEBUG</computeroutput></para><para>
在文件 <link linkend="_ltests_8h_source">ltests.h</link> 第 <link linkend="_ltests_8h_source_1l00019">19</link> 行定义.</para>
    </section><anchor xml:id="_ltests_8h_1ae25668dff58d6257a4fc5b01c1e5820b"/>    <section>
    <title>LUA_EXTRASPACE</title>
<indexterm><primary>LUA_EXTRASPACE</primary><secondary>ltests.h</secondary></indexterm>
<indexterm><primary>ltests.h</primary><secondary>LUA_EXTRASPACE</secondary></indexterm>
<para><computeroutput>#define LUA_EXTRASPACE   sizeof(struct <link linkend="_struct_l___e_x_t_r_a">L_EXTRA</link>)</computeroutput></para><para>
在文件 <link linkend="_ltests_8h_source">ltests.h</link> 第 <link linkend="_ltests_8h_source_1l00089">89</link> 行定义.</para>
    </section><anchor xml:id="_ltests_8h_1a459a2c5b3654fe38a83017e14b3fa63b"/>    <section>
    <title>lua_lock</title>
<indexterm><primary>lua_lock</primary><secondary>ltests.h</secondary></indexterm>
<indexterm><primary>ltests.h</primary><secondary>lua_lock</secondary></indexterm>
<para><computeroutput>#define lua_lock( l)   <link linkend="_lualib_8h_1abea1f576564ec516f6efe8c014bdef2d">lua_assert</link>((*<link linkend="_ltests_8h_1a2be71daa061f2a182f14d90e6d7e2867">getlock</link>(l)-&gt;plock)++ == 0)</computeroutput></para><para>
在文件 <link linkend="_ltests_8h_source">ltests.h</link> 第 <link linkend="_ltests_8h_source_1l00099">99</link> 行定义.</para>
    </section><anchor xml:id="_ltests_8h_1af4decaf7912e6d82bfe8f69d80b000fc"/>    <section>
    <title>LUA_RAND32</title>
<indexterm><primary>LUA_RAND32</primary><secondary>ltests.h</secondary></indexterm>
<indexterm><primary>ltests.h</primary><secondary>LUA_RAND32</secondary></indexterm>
<para><computeroutput>#define LUA_RAND32</computeroutput></para><para>
在文件 <link linkend="_ltests_8h_source">ltests.h</link> 第 <link linkend="_ltests_8h_source_1l00049">49</link> 行定义.</para>
    </section><anchor xml:id="_ltests_8h_1af24b94f132c4ba762750f4237d7bbba5"/>    <section>
    <title>lua_unlock</title>
<indexterm><primary>lua_unlock</primary><secondary>ltests.h</secondary></indexterm>
<indexterm><primary>ltests.h</primary><secondary>lua_unlock</secondary></indexterm>
<para><computeroutput>#define lua_unlock( l)   <link linkend="_lualib_8h_1abea1f576564ec516f6efe8c014bdef2d">lua_assert</link>(--(*<link linkend="_ltests_8h_1a2be71daa061f2a182f14d90e6d7e2867">getlock</link>(l)-&gt;plock) == 0)</computeroutput></para><para>
在文件 <link linkend="_ltests_8h_source">ltests.h</link> 第 <link linkend="_ltests_8h_source_1l00100">100</link> 行定义.</para>
    </section><anchor xml:id="_ltests_8h_1a23db0b8d14efa41ab925d3c939eff24b"/>    <section>
    <title>LUA_USE_JUMPTABLE</title>
<indexterm><primary>LUA_USE_JUMPTABLE</primary><secondary>ltests.h</secondary></indexterm>
<indexterm><primary>ltests.h</primary><secondary>LUA_USE_JUMPTABLE</secondary></indexterm>
<para><computeroutput>#define LUA_USE_JUMPTABLE   0</computeroutput></para><para>
在文件 <link linkend="_ltests_8h_source">ltests.h</link> 第 <link linkend="_ltests_8h_source_1l00045">45</link> 行定义.</para>
    </section><anchor xml:id="_ltests_8h_1a8b0b5e240b0680432895db37ef6aed4a"/>    <section>
    <title>LUAI_ASSERT</title>
<indexterm><primary>LUAI_ASSERT</primary><secondary>ltests.h</secondary></indexterm>
<indexterm><primary>ltests.h</primary><secondary>LUAI_ASSERT</secondary></indexterm>
<para><computeroutput>#define LUAI_ASSERT</computeroutput></para><para>
在文件 <link linkend="_ltests_8h_source">ltests.h</link> 第 <link linkend="_ltests_8h_source_1l00023">23</link> 行定义.</para>
    </section><anchor xml:id="_ltests_8h_1aad7d9b351cde290eb12c180d03ec71e4"/>    <section>
    <title>LUAI_MAXCSTACK</title>
<indexterm><primary>LUAI_MAXCSTACK</primary><secondary>ltests.h</secondary></indexterm>
<indexterm><primary>ltests.h</primary><secondary>LUAI_MAXCSTACK</secondary></indexterm>
<para><computeroutput>#define LUAI_MAXCSTACK   400</computeroutput></para><para>
在文件 <link linkend="_ltests_8h_source">ltests.h</link> 第 <link linkend="_ltests_8h_source_1l00029">29</link> 行定义.</para>
    </section><anchor xml:id="_ltests_8h_1ad7b065ae58f10bfa5800866b84de5f1e"/>    <section>
    <title>LUAI_MAXSTACK</title>
<indexterm><primary>LUAI_MAXSTACK</primary><secondary>ltests.h</secondary></indexterm>
<indexterm><primary>ltests.h</primary><secondary>LUAI_MAXSTACK</secondary></indexterm>
<para><computeroutput>#define LUAI_MAXSTACK   50000</computeroutput></para><para>
在文件 <link linkend="_ltests_8h_source">ltests.h</link> 第 <link linkend="_ltests_8h_source_1l00135">135</link> 行定义.</para>
    </section><anchor xml:id="_ltests_8h_1a5a7113f97995c9150d121892030b4656"/>    <section>
    <title>LUAI_USER_ALIGNMENT_T</title>
<indexterm><primary>LUAI_USER_ALIGNMENT_T</primary><secondary>ltests.h</secondary></indexterm>
<indexterm><primary>ltests.h</primary><secondary>LUAI_USER_ALIGNMENT_T</secondary></indexterm>
<para><computeroutput>#define LUAI_USER_ALIGNMENT_T   union { char b[sizeof(void*) * 8]; }</computeroutput></para><para>
在文件 <link linkend="_ltests_8h_source">ltests.h</link> 第 <link linkend="_ltests_8h_source_1l00130">130</link> 行定义.</para>
    </section><anchor xml:id="_ltests_8h_1a7b95e38f89244e394b2943edeb4948d5"/>    <section>
    <title>luai_userstateclose</title>
<indexterm><primary>luai_userstateclose</primary><secondary>ltests.h</secondary></indexterm>
<indexterm><primary>ltests.h</primary><secondary>luai_userstateclose</secondary></indexterm>
<para><computeroutput>#define luai_userstateclose( l)     <link linkend="_lualib_8h_1abea1f576564ec516f6efe8c014bdef2d">lua_assert</link>(<link linkend="_ltests_8h_1a2be71daa061f2a182f14d90e6d7e2867">getlock</link>(l)-&gt;lock == 1 &amp;&amp; <link linkend="_ltests_8h_1a2be71daa061f2a182f14d90e6d7e2867">getlock</link>(l)-&gt;plock == &amp;(<link linkend="_ltests_8h_1a2be71daa061f2a182f14d90e6d7e2867">getlock</link>(l)-&gt;lock))</computeroutput></para><para>
在文件 <link linkend="_ltests_8h_source">ltests.h</link> 第 <link linkend="_ltests_8h_source_1l00093">93</link> 行定义.</para>
    </section><anchor xml:id="_ltests_8h_1aaf546c6564ac2ea8312b67870182fd44"/>    <section>
    <title>luai_userstatefree</title>
<indexterm><primary>luai_userstatefree</primary><secondary>ltests.h</secondary></indexterm>
<indexterm><primary>ltests.h</primary><secondary>luai_userstatefree</secondary></indexterm>
<para><computeroutput>#define luai_userstatefree( l,  l1)     <link linkend="_lualib_8h_1abea1f576564ec516f6efe8c014bdef2d">lua_assert</link>(<link linkend="_ltests_8h_1a2be71daa061f2a182f14d90e6d7e2867">getlock</link>(l)-&gt;plock == <link linkend="_ltests_8h_1a2be71daa061f2a182f14d90e6d7e2867">getlock</link>(l1)-&gt;plock)</computeroutput></para><para>
在文件 <link linkend="_ltests_8h_source">ltests.h</link> 第 <link linkend="_ltests_8h_source_1l00097">97</link> 行定义.</para>
    </section><anchor xml:id="_ltests_8h_1a0e459721c051bbff9c1f068542543931"/>    <section>
    <title>luai_userstateopen</title>
<indexterm><primary>luai_userstateopen</primary><secondary>ltests.h</secondary></indexterm>
<indexterm><primary>ltests.h</primary><secondary>luai_userstateopen</secondary></indexterm>
<para><computeroutput>#define luai_userstateopen( l)   	(<link linkend="_ltests_8h_1a2be71daa061f2a182f14d90e6d7e2867">getlock</link>(l)-&gt;lock = 0, <link linkend="_ltests_8h_1a2be71daa061f2a182f14d90e6d7e2867">getlock</link>(l)-&gt;plock = &amp;(<link linkend="_ltests_8h_1a2be71daa061f2a182f14d90e6d7e2867">getlock</link>(l)-&gt;lock))</computeroutput></para><para>
在文件 <link linkend="_ltests_8h_source">ltests.h</link> 第 <link linkend="_ltests_8h_source_1l00091">91</link> 行定义.</para>
    </section><anchor xml:id="_ltests_8h_1a12057942e6ef80fa71f455ba6aee03f0"/>    <section>
    <title>luai_userstatethread</title>
<indexterm><primary>luai_userstatethread</primary><secondary>ltests.h</secondary></indexterm>
<indexterm><primary>ltests.h</primary><secondary>luai_userstatethread</secondary></indexterm>
<para><computeroutput>#define luai_userstatethread( l,  l1)     <link linkend="_lualib_8h_1abea1f576564ec516f6efe8c014bdef2d">lua_assert</link>(<link linkend="_ltests_8h_1a2be71daa061f2a182f14d90e6d7e2867">getlock</link>(l1)-&gt;plock == <link linkend="_ltests_8h_1a2be71daa061f2a182f14d90e6d7e2867">getlock</link>(l)-&gt;plock)</computeroutput></para><para>
在文件 <link linkend="_ltests_8h_source">ltests.h</link> 第 <link linkend="_ltests_8h_source_1l00095">95</link> 行定义.</para>
    </section><anchor xml:id="_ltests_8h_1af360ad37a770dfdc29291a99c398f42d"/>    <section>
    <title>LUAL_BUFFERSIZE</title>
<indexterm><primary>LUAL_BUFFERSIZE</primary><secondary>ltests.h</secondary></indexterm>
<indexterm><primary>ltests.h</primary><secondary>LUAL_BUFFERSIZE</secondary></indexterm>
<para><computeroutput>#define LUAL_BUFFERSIZE   23</computeroutput></para><para>
在文件 <link linkend="_ltests_8h_source">ltests.h</link> 第 <link linkend="_ltests_8h_source_1l00122">122</link> 行定义.</para>
    </section><anchor xml:id="_ltests_8h_1ad5413b8b64cce6bf8cab6fa1e54d2464"/>    <section>
    <title>MAXIWTHABS</title>
<indexterm><primary>MAXIWTHABS</primary><secondary>ltests.h</secondary></indexterm>
<indexterm><primary>ltests.h</primary><secondary>MAXIWTHABS</secondary></indexterm>
<para><computeroutput>#define MAXIWTHABS   3</computeroutput></para><para>
在文件 <link linkend="_ltests_8h_source">ltests.h</link> 第 <link linkend="_ltests_8h_source_1l00124">124</link> 行定义.</para>
    </section><anchor xml:id="_ltests_8h_1a91604f8876fd042d7b1cdbade17927e6"/>    <section>
    <title>MINSTRTABSIZE</title>
<indexterm><primary>MINSTRTABSIZE</primary><secondary>ltests.h</secondary></indexterm>
<indexterm><primary>ltests.h</primary><secondary>MINSTRTABSIZE</secondary></indexterm>
<para><computeroutput>#define MINSTRTABSIZE   2</computeroutput></para><para>
在文件 <link linkend="_ltests_8h_source">ltests.h</link> 第 <link linkend="_ltests_8h_source_1l00123">123</link> 行定义.</para>
    </section><anchor xml:id="_ltests_8h_1a3e028bcc45ab536a37bb6860caf3d2ca"/>    <section>
    <title>STRCACHE_M</title>
<indexterm><primary>STRCACHE_M</primary><secondary>ltests.h</secondary></indexterm>
<indexterm><primary>ltests.h</primary><secondary>STRCACHE_M</secondary></indexterm>
<para><computeroutput>#define STRCACHE_M   5</computeroutput></para><para>
在文件 <link linkend="_ltests_8h_source">ltests.h</link> 第 <link linkend="_ltests_8h_source_1l00127">127</link> 行定义.</para>
    </section><anchor xml:id="_ltests_8h_1aa8382779dd8eeb2dea3deb97dec0ed1c"/>    <section>
    <title>STRCACHE_N</title>
<indexterm><primary>STRCACHE_N</primary><secondary>ltests.h</secondary></indexterm>
<indexterm><primary>ltests.h</primary><secondary>STRCACHE_N</secondary></indexterm>
<para><computeroutput>#define STRCACHE_N   23</computeroutput></para><para>
在文件 <link linkend="_ltests_8h_source">ltests.h</link> 第 <link linkend="_ltests_8h_source_1l00126">126</link> 行定义.</para>
    </section><anchor xml:id="_ltests_8h_1a86d500a34c624c2cae56bc25a31b12f3"/>    <section>
    <title>UNUSED</title>
<indexterm><primary>UNUSED</primary><secondary>ltests.h</secondary></indexterm>
<indexterm><primary>ltests.h</primary><secondary>UNUSED</secondary></indexterm>
<para><computeroutput>#define UNUSED( x)   (x=0, (void)(x))</computeroutput></para><para>
在文件 <link linkend="_ltests_8h_source">ltests.h</link> 第 <link linkend="_ltests_8h_source_1l00032">32</link> 行定义.</para>
</section>
</section>
<section>
<title>类型定义说明</title>
<anchor xml:id="_ltests_8h_1ac4584e620eadf3a17ed80ee3c4f650bf"/>    <section>
    <title>Memcontrol</title>
<indexterm><primary>Memcontrol</primary><secondary>ltests.h</secondary></indexterm>
<indexterm><primary>ltests.h</primary><secondary>Memcontrol</secondary></indexterm>
<para><computeroutput>typedef struct <link linkend="_struct_memcontrol">Memcontrol</link> <link linkend="_struct_memcontrol">Memcontrol</link></computeroutput></para></section>
</section>
<section>
<title>函数说明</title>
<anchor xml:id="_ltests_8h_1a841f1ad3aefdf611dc771b4786868f59"/>    <section>
    <title>debug_realloc()</title>
<indexterm><primary>debug_realloc</primary><secondary>ltests.h</secondary></indexterm>
<indexterm><primary>ltests.h</primary><secondary>debug_realloc</secondary></indexterm>
<para><computeroutput><link linkend="_luaconf_8h_1af88575eb79fdd88b1cce4533ab5cbe69">LUA_API</link> void* debug_realloc (void * ud, void * block, size_t osize, size_t nsize)</computeroutput></para>    </section><anchor xml:id="_ltests_8h_1a749fe8c5cac80b7e60393e1a0e1934ab"/>    <section>
    <title>lua_checkmemory()</title>
<indexterm><primary>lua_checkmemory</primary><secondary>ltests.h</secondary></indexterm>
<indexterm><primary>ltests.h</primary><secondary>lua_checkmemory</secondary></indexterm>
<para><computeroutput><link linkend="_onelua_8c_1a3f43b35a70c93f2cfde1db42a5a24f1e">LUAI_FUNC</link> int lua_checkmemory (<link linkend="_structlua___state">lua_State</link> * L)</computeroutput></para>    </section><anchor xml:id="_ltests_8h_1a424e6fc1410a08d49bb66e9c3e68dd2c"/>    <section>
    <title>lua_printobj()</title>
<indexterm><primary>lua_printobj</primary><secondary>ltests.h</secondary></indexterm>
<indexterm><primary>ltests.h</primary><secondary>lua_printobj</secondary></indexterm>
<para><computeroutput><link linkend="_onelua_8c_1a3f43b35a70c93f2cfde1db42a5a24f1e">LUAI_FUNC</link> void lua_printobj (<link linkend="_structlua___state">lua_State</link> * L, struct <link linkend="_struct_g_c_object">GCObject</link> * o)</computeroutput></para>    </section><anchor xml:id="_ltests_8h_1a939daca9bf454e4f374d1d04ff7b161c"/>    <section>
    <title>luaB_opentests()</title>
<indexterm><primary>luaB_opentests</primary><secondary>ltests.h</secondary></indexterm>
<indexterm><primary>ltests.h</primary><secondary>luaB_opentests</secondary></indexterm>
<para><computeroutput><link linkend="_luaconf_8h_1af88575eb79fdd88b1cce4533ab5cbe69">LUA_API</link> int luaB_opentests (<link linkend="_structlua___state">lua_State</link> * L)</computeroutput></para></section>
</section>
<section>
<title>变量说明</title>
<anchor xml:id="_ltests_8h_1ad1e377d0e533a8cb13f2e8194142224f"/>    <section>
    <title>l_memcontrol</title>
<indexterm><primary>l_memcontrol</primary><secondary>ltests.h</secondary></indexterm>
<indexterm><primary>ltests.h</primary><secondary>l_memcontrol</secondary></indexterm>
<para><computeroutput><link linkend="_luaconf_8h_1af88575eb79fdd88b1cce4533ab5cbe69">LUA_API</link> <link linkend="_struct_memcontrol">Memcontrol</link> l_memcontrol</computeroutput></para><para>
在文件 <link linkend="_ltests_8h_source">ltests.h</link> 第 <link linkend="_ltests_8h_source_1l00063">63</link> 行定义.</para>
    </section><anchor xml:id="_ltests_8h_1aff7135f2cb3e0acfe05a83a41e66a53e"/>    <section>
    <title>l_Trick</title>
<indexterm><primary>l_Trick</primary><secondary>ltests.h</secondary></indexterm>
<indexterm><primary>ltests.h</primary><secondary>l_Trick</secondary></indexterm>
<para><computeroutput>void* l_Trick<computeroutput>[extern]</computeroutput></computeroutput></para></section>
</section>
</section>
