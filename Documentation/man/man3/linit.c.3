.TH "C:/Users/longyg/Documents/gitprojects/lua/src/linit.c" 3 "2020年 九月 9日 星期三" "Version 1.0" "Lua_Docmention" \" -*- nroff -*-
.ad l
.nh
.SH NAME
C:/Users/longyg/Documents/gitprojects/lua/src/linit.c
.SH SYNOPSIS
.br
.PP
\fC#include 'lprefix\&.h'\fP
.br
\fC#include <stddef\&.h>\fP
.br
\fC#include 'lua\&.h'\fP
.br
\fC#include 'lualib\&.h'\fP
.br
\fC#include 'lauxlib\&.h'\fP
.br

.SS "宏定义"

.in +1c
.ti -1c
.RI "#define \fBlinit_c\fP"
.br
.ti -1c
.RI "#define \fBLUA_LIB\fP"
.br
.in -1c
.SS "函数"

.in +1c
.ti -1c
.RI "\fBLUALIB_API\fP void \fBluaL_openlibs\fP (\fBlua_State\fP *L)"
.br
.in -1c
.SS "变量"

.in +1c
.ti -1c
.RI "static const \fBluaL_Reg\fP \fBloadedlibs\fP []"
.br
.in -1c
.SH "宏定义说明"
.PP 
.SS "#define linit_c"

.PP
在文件 linit\&.c 第 8 行定义\&.
.SS "#define LUA_LIB"

.PP
在文件 linit\&.c 第 9 行定义\&.
.SH "函数说明"
.PP 
.SS "\fBLUALIB_API\fP void luaL_openlibs (\fBlua_State\fP * L)"
加载lua库方法 @detail 导出的openlibs函数 
.PP
\fB参数\fP
.RS 4
\fIluaState\fP 除了base TODO lua方法 加载库方法  _G luaopen_base package luaopen_package coroutine luaopen_coroutine table luaopen_table io luaopen_io os luaopen_os string luaopen_string math luaopen_math utf8 luaopen_utf8 debug luaopen_debug 
.RE
.PP

.PP
在文件 linit\&.c 第 74 行定义\&.
.SH "变量说明"
.PP 
.SS "const \fBluaL_Reg\fP loadedlibs[]\fC [static]\fP"
\fB初始值:\fP
.PP
.nf
= {
  {LUA_GNAME, luaopen_base},
  {LUA_LOADLIBNAME, luaopen_package},
  {LUA_COLIBNAME, luaopen_coroutine},
  {LUA_TABLIBNAME, luaopen_table},
  {LUA_IOLIBNAME, luaopen_io},
  {LUA_OSLIBNAME, luaopen_os},
  {LUA_STRLIBNAME, luaopen_string},
  {LUA_MATHLIBNAME, luaopen_math},
  {LUA_UTF8LIBNAME, luaopen_utf8},
  {LUA_DBLIBNAME, luaopen_debug},
  {NULL, NULL}
}
.fi
.PP
在文件 linit\&.c 第 42 行定义\&.
.SH "作者"
.PP 
由 Doyxgen 通过分析 Lua_Docmention 的 源代码自动生成\&.
