<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_lobject_8c_source" xml:lang="zh">
<title>D:/gitworkspace/lua/lobject.c</title>
<programlisting>00001 <emphasis role="comment">/*</emphasis>
00002 <emphasis role="comment">**&#32;$Id:&#32;lobject.c&#32;$</emphasis>
00003 <emphasis role="comment">**&#32;Some&#32;generic&#32;functions&#32;over&#32;Lua&#32;objects</emphasis>
00004 <emphasis role="comment">**&#32;See&#32;Copyright&#32;Notice&#32;in&#32;lua.h</emphasis>
00005 <emphasis role="comment">*/</emphasis>
00006 
<anchor xml:id="_lobject_8c_source_1l00007"/><link linkend="_lobject_8c_1a38dc0318b49040ead76a3cbd8bdc573f">00007</link> <emphasis role="preprocessor">#define&#32;lobject_c</emphasis>
<anchor xml:id="_lobject_8c_source_1l00008"/><link linkend="_lobject_8c_1abf0b3947b59218777a8e928a10be205b">00008</link> <emphasis role="preprocessor">#define&#32;LUA_CORE</emphasis>
00009 
00010 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_lprefix_8h">lprefix.h</link>&quot;</emphasis>
00011 
00012 
00013 <emphasis role="preprocessor">#include&#32;&lt;locale.h&gt;</emphasis>
00014 <emphasis role="preprocessor">#include&#32;&lt;math.h&gt;</emphasis>
00015 <emphasis role="preprocessor">#include&#32;&lt;stdarg.h&gt;</emphasis>
00016 <emphasis role="preprocessor">#include&#32;&lt;stdio.h&gt;</emphasis>
00017 <emphasis role="preprocessor">#include&#32;&lt;stdlib.h&gt;</emphasis>
00018 <emphasis role="preprocessor">#include&#32;&lt;string.h&gt;</emphasis>
00019 
00020 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_lua_8h">lua.h</link>&quot;</emphasis>
00021 
00022 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_lctype_8h">lctype.h</link>&quot;</emphasis>
00023 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_ldebug_8h">ldebug.h</link>&quot;</emphasis>
00024 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_ldo_8h">ldo.h</link>&quot;</emphasis>
00025 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_lmem_8h">lmem.h</link>&quot;</emphasis>
00026 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_lobject_8h">lobject.h</link>&quot;</emphasis>
00027 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_lstate_8h">lstate.h</link>&quot;</emphasis>
00028 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_lstring_8h">lstring.h</link>&quot;</emphasis>
00029 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_lvm_8h">lvm.h</link>&quot;</emphasis>
00030 
00031 
00032 <emphasis role="comment">/*</emphasis>
00033 <emphasis role="comment">**&#32;Computes&#32;ceil(log2(x))</emphasis>
00034 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lobject_8c_source_1l00035"/><link linkend="_lobject_8h_1ae17e893f7b1221fd82d37a51bcc5ad3c">00035</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lobject_8c_1a731a3a2f9db35aaddeadf8cb19d507bd">luaO_ceillog2</link>&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;x)&#32;{
00036 &#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_llimits_8h_1ae1fe9ac10d9803bd1d7bdf30b18bad68">lu_byte</link>&#32;log_2[256]&#32;=&#32;{&#32;&#32;<emphasis role="comment">/*&#32;log_2[i]&#32;=&#32;ceil(log2(i&#32;-&#32;1))&#32;*/</emphasis>
00037 &#32;&#32;&#32;&#32;0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
00038 &#32;&#32;&#32;&#32;6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
00039 &#32;&#32;&#32;&#32;7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
00040 &#32;&#32;&#32;&#32;7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
00041 &#32;&#32;&#32;&#32;8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,
00042 &#32;&#32;&#32;&#32;8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,
00043 &#32;&#32;&#32;&#32;8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,
00044 &#32;&#32;&#32;&#32;8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8
00045 &#32;&#32;};
00046 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;l&#32;=&#32;0;
00047 &#32;&#32;x--;
00048 &#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(x&#32;&gt;=&#32;256)&#32;{&#32;l&#32;+=&#32;8;&#32;x&#32;&gt;&gt;=&#32;8;&#32;}
00049 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;l&#32;+&#32;log_2[x];
00050 }
00051 
00052 
<anchor xml:id="_lobject_8c_source_1l00053"/><link linkend="_lobject_8c_1aa6eb9701fada64e32960f82c8d24d8da">00053</link> <emphasis role="keyword">static</emphasis>&#32;<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;<link linkend="_lobject_8c_1aa6eb9701fada64e32960f82c8d24d8da">intarith</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<emphasis role="keywordtype">int</emphasis>&#32;op,&#32;<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;v1,
00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;v2)&#32;{
00055 &#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(op)&#32;{
00056 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lua_8h_1acfd183382ff4ae12fc5f987e969f9e30">LUA_OPADD</link>:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_lvm_8h_1a6c054eb9ce53c1b282e7ff0088895a37">intop</link>(+,&#32;v1,&#32;v2);
00057 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lua_8h_1a4f3cb6128bd199ff110a205f9807be29">LUA_OPSUB</link>:<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_lvm_8h_1a6c054eb9ce53c1b282e7ff0088895a37">intop</link>(-,&#32;v1,&#32;v2);
00058 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lua_8h_1a62ad68cacfd4a6add7757e7c9515389f">LUA_OPMUL</link>:<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_lvm_8h_1a6c054eb9ce53c1b282e7ff0088895a37">intop</link>(*,&#32;v1,&#32;v2);
00059 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lua_8h_1a92ae2587e93cb450c82ce23682e4a222">LUA_OPMOD</link>:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_lvm_8c_1af1241d1650e114f39843626fd879d3d6">luaV_mod</link>(L,&#32;v1,&#32;v2);
00060 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lua_8h_1af47e0652301e786beec5c429ae6ac5ea">LUA_OPIDIV</link>:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_lvm_8c_1a8815b6d106992c5713900b20a0da5e29">luaV_idiv</link>(L,&#32;v1,&#32;v2);
00061 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lua_8h_1a77e346c2c567a526f648076bebe49784">LUA_OPBAND</link>:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_lvm_8h_1a6c054eb9ce53c1b282e7ff0088895a37">intop</link>(&amp;,&#32;v1,&#32;v2);
00062 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lua_8h_1a1209ad5d9fd73655cb81d30a9e10762e">LUA_OPBOR</link>:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_lvm_8h_1a6c054eb9ce53c1b282e7ff0088895a37">intop</link>(|,&#32;v1,&#32;v2);
00063 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lua_8h_1a0891e610cda9a66b8e914ff8646da47b">LUA_OPBXOR</link>:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_lvm_8h_1a6c054eb9ce53c1b282e7ff0088895a37">intop</link>(^,&#32;v1,&#32;v2);
00064 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lua_8h_1a08b0a2e07d6449b3424453f32283319c">LUA_OPSHL</link>:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_lvm_8c_1ade6c9565152d0bb1f6116a90ea2c867a">luaV_shiftl</link>(v1,&#32;v2);
00065 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lua_8h_1a2544bce8f2417ba242131c8dc466f454">LUA_OPSHR</link>:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_lvm_8c_1ade6c9565152d0bb1f6116a90ea2c867a">luaV_shiftl</link>(v1,&#32;-v2);
00066 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lua_8h_1ae976b4a61ff4d4b3bb8cd85cdcceda10">LUA_OPUNM</link>:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_lvm_8h_1a6c054eb9ce53c1b282e7ff0088895a37">intop</link>(-,&#32;0,&#32;v1);
00067 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lua_8h_1a57e9cb582d0a570cd482936771be1ead">LUA_OPBNOT</link>:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_lvm_8h_1a6c054eb9ce53c1b282e7ff0088895a37">intop</link>(^,&#32;~<link linkend="_llimits_8h_1a5871309e671ba9f938fcb1e0d3bcbeca">l_castS2U</link>(0),&#32;v1);
00068 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:&#32;<link linkend="_llimits_8h_1a5978f5fda715bd80e845df1e16ad7780">lua_assert</link>(0);&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
00069 &#32;&#32;}
00070 }
00071 
00072 
<anchor xml:id="_lobject_8c_source_1l00073"/><link linkend="_lobject_8c_1adf4b8d51ae5cde26912864b83cdf6e36">00073</link> <emphasis role="keyword">static</emphasis>&#32;<link linkend="_lua_8h_1af0a6ed3b852d680769cfc410a0672172">lua_Number</link>&#32;<link linkend="_lobject_8c_1adf4b8d51ae5cde26912864b83cdf6e36">numarith</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<emphasis role="keywordtype">int</emphasis>&#32;op,&#32;<link linkend="_lua_8h_1af0a6ed3b852d680769cfc410a0672172">lua_Number</link>&#32;v1,
00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lua_8h_1af0a6ed3b852d680769cfc410a0672172">lua_Number</link>&#32;v2)&#32;{
00075 &#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(op)&#32;{
00076 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lua_8h_1acfd183382ff4ae12fc5f987e969f9e30">LUA_OPADD</link>:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_llimits_8h_1af3eb5d1884e4512d2701bbc97bb82e81">luai_numadd</link>(L,&#32;v1,&#32;v2);
00077 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lua_8h_1a4f3cb6128bd199ff110a205f9807be29">LUA_OPSUB</link>:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_llimits_8h_1a93e733c7e860d7fb838b6af414405662">luai_numsub</link>(L,&#32;v1,&#32;v2);
00078 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lua_8h_1a62ad68cacfd4a6add7757e7c9515389f">LUA_OPMUL</link>:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_llimits_8h_1a1cbcef9e269f0ac1a5f34898a7c4ae36">luai_nummul</link>(L,&#32;v1,&#32;v2);
00079 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lua_8h_1aec6bf4df427174d6e5f1eb67fa2a39b5">LUA_OPDIV</link>:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_llimits_8h_1a2a095b8d523b51332eb223df531367d2">luai_numdiv</link>(L,&#32;v1,&#32;v2);
00080 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lua_8h_1ad9cff37d2d620494406c11d285c166a6">LUA_OPPOW</link>:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_llimits_8h_1a4a3b06f2c7239f8dcbd101ca20cc507a">luai_numpow</link>(L,&#32;v1,&#32;v2);
00081 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lua_8h_1af47e0652301e786beec5c429ae6ac5ea">LUA_OPIDIV</link>:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_llimits_8h_1a9ca37a98a6032ab21dcfd63d42e66f89">luai_numidiv</link>(L,&#32;v1,&#32;v2);
00082 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lua_8h_1ae976b4a61ff4d4b3bb8cd85cdcceda10">LUA_OPUNM</link>:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_llimits_8h_1a84c57a852cdc4b46c678cb3fab715846">luai_numunm</link>(L,&#32;v1);
00083 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lua_8h_1a92ae2587e93cb450c82ce23682e4a222">LUA_OPMOD</link>:&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_lvm_8c_1ac0162e10dc7e235089eb3cbef4addca7">luaV_modf</link>(L,&#32;v1,&#32;v2);
00084 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:&#32;<link linkend="_llimits_8h_1a5978f5fda715bd80e845df1e16ad7780">lua_assert</link>(0);&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
00085 &#32;&#32;}
00086 }
00087 
00088 
<anchor xml:id="_lobject_8c_source_1l00089"/><link linkend="_lobject_8h_1a5ea49a125e2848e4303dc10929302865">00089</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lobject_8c_1aae42f4eba2d45e27d6f217f4497d106d">luaO_rawarith</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<emphasis role="keywordtype">int</emphasis>&#32;op,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_value">TValue</link>&#32;*p1,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_value">TValue</link>&#32;*p2,
00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_t_value">TValue</link>&#32;*res)&#32;{
00091 &#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(op)&#32;{
00092 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lua_8h_1a77e346c2c567a526f648076bebe49784">LUA_OPBAND</link>:&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lua_8h_1a1209ad5d9fd73655cb81d30a9e10762e">LUA_OPBOR</link>:&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lua_8h_1a0891e610cda9a66b8e914ff8646da47b">LUA_OPBXOR</link>:
00093 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lua_8h_1a08b0a2e07d6449b3424453f32283319c">LUA_OPSHL</link>:&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lua_8h_1a2544bce8f2417ba242131c8dc466f454">LUA_OPSHR</link>:
00094 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lua_8h_1a57e9cb582d0a570cd482936771be1ead">LUA_OPBNOT</link>:&#32;{&#32;&#32;<emphasis role="comment">/*&#32;operate&#32;only&#32;on&#32;integers&#32;*/</emphasis>
00095 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;i1;&#32;<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;i2;
00096 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lvm_8h_1a0b3a6eff12747eacea6551dbc2d42707">tointegerns</link>(p1,&#32;&amp;i1)&#32;&amp;&amp;&#32;<link linkend="_lvm_8h_1a0b3a6eff12747eacea6551dbc2d42707">tointegerns</link>(p2,&#32;&amp;i2))&#32;{
00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8h_1af9dd109ba186841ab26efb2d62baf4f6">setivalue</link>(res,&#32;<link linkend="_lobject_8c_1aa6eb9701fada64e32960f82c8d24d8da">intarith</link>(L,&#32;op,&#32;i1,&#32;i2));
00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
00099 &#32;&#32;&#32;&#32;&#32;&#32;}
00100 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;&#32;&#32;<emphasis role="comment">/*&#32;fail&#32;*/</emphasis>
00101 &#32;&#32;&#32;&#32;}
00102 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lua_8h_1aec6bf4df427174d6e5f1eb67fa2a39b5">LUA_OPDIV</link>:&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lua_8h_1ad9cff37d2d620494406c11d285c166a6">LUA_OPPOW</link>:&#32;{&#32;&#32;<emphasis role="comment">/*&#32;operate&#32;only&#32;on&#32;floats&#32;*/</emphasis>
00103 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lua_8h_1af0a6ed3b852d680769cfc410a0672172">lua_Number</link>&#32;n1;&#32;<link linkend="_lua_8h_1af0a6ed3b852d680769cfc410a0672172">lua_Number</link>&#32;n2;
00104 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lvm_8h_1a1c1072a8845c14cc7b5b7744ef4d18a4">tonumberns</link>(p1,&#32;n1)&#32;&amp;&amp;&#32;<link linkend="_lvm_8h_1a1c1072a8845c14cc7b5b7744ef4d18a4">tonumberns</link>(p2,&#32;n2))&#32;{
00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8h_1ae357382324a8220a3cf77607752de887">setfltvalue</link>(res,&#32;<link linkend="_lobject_8c_1adf4b8d51ae5cde26912864b83cdf6e36">numarith</link>(L,&#32;op,&#32;n1,&#32;n2));
00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
00107 &#32;&#32;&#32;&#32;&#32;&#32;}
00108 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;&#32;&#32;<emphasis role="comment">/*&#32;fail&#32;*/</emphasis>
00109 &#32;&#32;&#32;&#32;}
00110 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:&#32;{&#32;&#32;<emphasis role="comment">/*&#32;other&#32;operations&#32;*/</emphasis>
00111 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lua_8h_1af0a6ed3b852d680769cfc410a0672172">lua_Number</link>&#32;n1;&#32;<link linkend="_lua_8h_1af0a6ed3b852d680769cfc410a0672172">lua_Number</link>&#32;n2;
00112 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lobject_8h_1abade243295a9140f7b86838fbb049054">ttisinteger</link>(p1)&#32;&amp;&amp;&#32;<link linkend="_lobject_8h_1abade243295a9140f7b86838fbb049054">ttisinteger</link>(p2))&#32;{
00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8h_1af9dd109ba186841ab26efb2d62baf4f6">setivalue</link>(res,&#32;<link linkend="_lobject_8c_1aa6eb9701fada64e32960f82c8d24d8da">intarith</link>(L,&#32;op,&#32;<link linkend="_lobject_8h_1af1a59636db050b842a791cd19086d925">ivalue</link>(p1),&#32;<link linkend="_lobject_8h_1af1a59636db050b842a791cd19086d925">ivalue</link>(p2)));
00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
00115 &#32;&#32;&#32;&#32;&#32;&#32;}
00116 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lvm_8h_1a1c1072a8845c14cc7b5b7744ef4d18a4">tonumberns</link>(p1,&#32;n1)&#32;&amp;&amp;&#32;<link linkend="_lvm_8h_1a1c1072a8845c14cc7b5b7744ef4d18a4">tonumberns</link>(p2,&#32;n2))&#32;{
00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8h_1ae357382324a8220a3cf77607752de887">setfltvalue</link>(res,&#32;<link linkend="_lobject_8c_1adf4b8d51ae5cde26912864b83cdf6e36">numarith</link>(L,&#32;op,&#32;n1,&#32;n2));
00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
00119 &#32;&#32;&#32;&#32;&#32;&#32;}
00120 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;&#32;&#32;<emphasis role="comment">/*&#32;fail&#32;*/</emphasis>
00121 &#32;&#32;&#32;&#32;}
00122 &#32;&#32;}
00123 }
00124 
00125 
<anchor xml:id="_lobject_8c_source_1l00126"/><link linkend="_lobject_8h_1afb09097c7bc4723a274863f6a811edf5">00126</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_lobject_8c_1a70e6a84042c5cf25f3812cba16e1fc3d">luaO_arith</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<emphasis role="keywordtype">int</emphasis>&#32;op,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_value">TValue</link>&#32;*p1,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_value">TValue</link>&#32;*p2,
00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_union_stack_value">StkId</link>&#32;res)&#32;{
00128 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_lobject_8c_1aae42f4eba2d45e27d6f217f4497d106d">luaO_rawarith</link>(L,&#32;op,&#32;p1,&#32;p2,&#32;<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(res)))&#32;{
00129 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;could&#32;not&#32;perform&#32;raw&#32;operation;&#32;try&#32;metamethod&#32;*/</emphasis>
00130 &#32;&#32;&#32;&#32;<link linkend="_ltm_8c_1a2adc638eccb971b8abaf27f60611e913">luaT_trybinTM</link>(L,&#32;p1,&#32;p2,&#32;res,&#32;<link linkend="_llimits_8h_1af17d62ec9e237a7644de6b9b34a48a34">cast</link>(<link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1">TMS</link>,&#32;(op&#32;-&#32;<link linkend="_lua_8h_1acfd183382ff4ae12fc5f987e969f9e30">LUA_OPADD</link>)&#32;+&#32;<link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1ab9351e0ba5143d069dfb4dea793676b5">TM_ADD</link>));
00131 &#32;&#32;}
00132 }
00133 
00134 
<anchor xml:id="_lobject_8c_source_1l00135"/><link linkend="_lobject_8h_1a621e15ee90edbdb71f1161b92617fcb9">00135</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lobject_8c_1ab73b1325bd3b1a6f9affc08fb46c07ec">luaO_hexavalue</link>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;c)&#32;{
00136 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lctype_8h_1aee1d27a5eac398ec2c9c8b80281041e6">lisdigit</link>(c))&#32;<emphasis role="keywordflow">return</emphasis>&#32;c&#32;-&#32;<emphasis role="charliteral">&apos;0&apos;</emphasis>;
00137 &#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="_lctype_8h_1a951ea98d03894d36dd2efed11ec9d973">ltolower</link>(c)&#32;-&#32;<emphasis role="charliteral">&apos;a&apos;</emphasis>)&#32;+&#32;10;
00138 }
00139 
00140 
<anchor xml:id="_lobject_8c_source_1l00141"/><link linkend="_lobject_8c_1a3234b1ccb9cfbbd0892dcc6190a45876">00141</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lobject_8c_1a3234b1ccb9cfbbd0892dcc6190a45876">isneg</link>&#32;(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;**s)&#32;{
00142 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(**s&#32;==&#32;<emphasis role="charliteral">&apos;-&apos;</emphasis>)&#32;{&#32;(*s)++;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;&#32;}
00143 &#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(**s&#32;==&#32;<emphasis role="charliteral">&apos;+&apos;</emphasis>)&#32;(*s)++;
00144 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
00145 }
00146 
00147 
00148 
00149 <emphasis role="comment">/*</emphasis>
00150 <emphasis role="comment">**&#32;{==================================================================</emphasis>
00151 <emphasis role="comment">**&#32;Lua&apos;s&#32;implementation&#32;for&#32;&apos;lua_strx2number&apos;</emphasis>
00152 <emphasis role="comment">**&#32;===================================================================</emphasis>
00153 <emphasis role="comment">*/</emphasis>
00154 
00155 <emphasis role="preprocessor">#if&#32;!defined(lua_strx2number)</emphasis>
00156 
00157 <emphasis role="comment">/*&#32;maximum&#32;number&#32;of&#32;significant&#32;digits&#32;to&#32;read&#32;(to&#32;avoid&#32;overflows</emphasis>
00158 <emphasis role="comment">&#32;&#32;&#32;even&#32;with&#32;single&#32;floats)&#32;*/</emphasis>
00159 <emphasis role="preprocessor">#define&#32;MAXSIGDIG&#32;&#32;&#32;30</emphasis>
00160 
00161 <emphasis role="comment">/*</emphasis>
00162 <emphasis role="comment">**&#32;convert&#32;a&#32;hexadecimal&#32;numeric&#32;string&#32;to&#32;a&#32;number,&#32;following</emphasis>
00163 <emphasis role="comment">**&#32;C99&#32;specification&#32;for&#32;&apos;strtod&apos;</emphasis>
00164 <emphasis role="comment">*/</emphasis>
00165 <emphasis role="keyword">static</emphasis>&#32;<link linkend="_lua_8h_1af0a6ed3b852d680769cfc410a0672172">lua_Number</link>&#32;<link linkend="_luaconf_8h_1a4b53a01f7ac167204d227cb6e8d8c1e2">lua_strx2number</link>&#32;(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*s,&#32;<emphasis role="keywordtype">char</emphasis>&#32;**endptr)&#32;{
00166 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;dot&#32;=&#32;<link linkend="_luaconf_8h_1a20bcdecbc9221570e70455f767061698">lua_getlocaledecpoint</link>();
00167 &#32;&#32;<link linkend="_lua_8h_1af0a6ed3b852d680769cfc410a0672172">lua_Number</link>&#32;r&#32;=&#32;0.0;&#32;&#32;<emphasis role="comment">/*&#32;result&#32;(accumulator)&#32;*/</emphasis>
00168 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;sigdig&#32;=&#32;0;&#32;&#32;<emphasis role="comment">/*&#32;number&#32;of&#32;significant&#32;digits&#32;*/</emphasis>
00169 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;nosigdig&#32;=&#32;0;&#32;&#32;<emphasis role="comment">/*&#32;number&#32;of&#32;non-significant&#32;digits&#32;*/</emphasis>
00170 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;e&#32;=&#32;0;&#32;&#32;<emphasis role="comment">/*&#32;exponent&#32;correction&#32;*/</emphasis>
00171 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;neg;&#32;&#32;<emphasis role="comment">/*&#32;1&#32;if&#32;number&#32;is&#32;negative&#32;*/</emphasis>
00172 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;hasdot&#32;=&#32;0;&#32;&#32;<emphasis role="comment">/*&#32;true&#32;after&#32;seen&#32;a&#32;dot&#32;*/</emphasis>
00173 &#32;&#32;*endptr&#32;=&#32;<link linkend="_llimits_8h_1a1d905979f8c901b7143b43ee98341206">cast_charp</link>(s);&#32;&#32;<emphasis role="comment">/*&#32;nothing&#32;is&#32;valid&#32;yet&#32;*/</emphasis>
00174 &#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(<link linkend="_lctype_8h_1a768801f115261ae5ad51fdf6e54904e2">lisspace</link>(<link linkend="_llimits_8h_1aa0c49a2b32329cc39df5ccafd1f720e0">cast_uchar</link>(*s)))&#32;s++;&#32;&#32;<emphasis role="comment">/*&#32;skip&#32;initial&#32;spaces&#32;*/</emphasis>
00175 &#32;&#32;neg&#32;=&#32;<link linkend="_lobject_8c_1a3234b1ccb9cfbbd0892dcc6190a45876">isneg</link>(&amp;s);&#32;&#32;<emphasis role="comment">/*&#32;check&#32;sign&#32;*/</emphasis>
00176 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!(*s&#32;==&#32;<emphasis role="charliteral">&apos;0&apos;</emphasis>&#32;&amp;&amp;&#32;(*(s&#32;+&#32;1)&#32;==&#32;<emphasis role="charliteral">&apos;x&apos;</emphasis>&#32;||&#32;*(s&#32;+&#32;1)&#32;==&#32;<emphasis role="charliteral">&apos;X&apos;</emphasis>)))&#32;&#32;<emphasis role="comment">/*&#32;check&#32;&apos;0x&apos;&#32;*/</emphasis>
00177 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0.0;&#32;&#32;<emphasis role="comment">/*&#32;invalid&#32;format&#32;(no&#32;&apos;0x&apos;)&#32;*/</emphasis>
00178 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(s&#32;+=&#32;2;&#32;;&#32;s++)&#32;{&#32;&#32;<emphasis role="comment">/*&#32;skip&#32;&apos;0x&apos;&#32;and&#32;read&#32;numeral&#32;*/</emphasis>
00179 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(*s&#32;==&#32;dot)&#32;{
00180 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(hasdot)&#32;<emphasis role="keywordflow">break</emphasis>;&#32;&#32;<emphasis role="comment">/*&#32;second&#32;dot?&#32;stop&#32;loop&#32;*/</emphasis>
00181 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;hasdot&#32;=&#32;1;
00182 &#32;&#32;&#32;&#32;}
00183 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lctype_8h_1a72e55b66d80325fb20cbc098d3448996">lisxdigit</link>(<link linkend="_llimits_8h_1aa0c49a2b32329cc39df5ccafd1f720e0">cast_uchar</link>(*s)))&#32;{
00184 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sigdig&#32;==&#32;0&#32;&amp;&amp;&#32;*s&#32;==&#32;<emphasis role="charliteral">&apos;0&apos;</emphasis>)&#32;&#32;<emphasis role="comment">/*&#32;non-significant&#32;digit&#32;(zero)?&#32;*/</emphasis>
00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nosigdig++;
00186 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(++sigdig&#32;&lt;=&#32;MAXSIGDIG)&#32;&#32;<emphasis role="comment">/*&#32;can&#32;read&#32;it&#32;without&#32;overflow?&#32;*/</emphasis>
00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;r&#32;=&#32;(r&#32;*&#32;<link linkend="_llimits_8h_1ac92cecb12c5aba1164877e81e76e2cb6">cast_num</link>(16.0))&#32;+&#32;<link linkend="_lobject_8c_1ab73b1325bd3b1a6f9affc08fb46c07ec">luaO_hexavalue</link>(*s);
00188 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;e++;&#32;<emphasis role="comment">/*&#32;too&#32;many&#32;digits;&#32;ignore,&#32;but&#32;still&#32;count&#32;for&#32;exponent&#32;*/</emphasis>
00189 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(hasdot)&#32;e--;&#32;&#32;<emphasis role="comment">/*&#32;decimal&#32;digit?&#32;correct&#32;exponent&#32;*/</emphasis>
00190 &#32;&#32;&#32;&#32;}
00191 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">break</emphasis>;&#32;&#32;<emphasis role="comment">/*&#32;neither&#32;a&#32;dot&#32;nor&#32;a&#32;digit&#32;*/</emphasis>
00192 &#32;&#32;}
00193 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(nosigdig&#32;+&#32;sigdig&#32;==&#32;0)&#32;&#32;<emphasis role="comment">/*&#32;no&#32;digits?&#32;*/</emphasis>
00194 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0.0;&#32;&#32;<emphasis role="comment">/*&#32;invalid&#32;format&#32;*/</emphasis>
00195 &#32;&#32;*endptr&#32;=&#32;<link linkend="_llimits_8h_1a1d905979f8c901b7143b43ee98341206">cast_charp</link>(s);&#32;&#32;<emphasis role="comment">/*&#32;valid&#32;up&#32;to&#32;here&#32;*/</emphasis>
00196 &#32;&#32;e&#32;*=&#32;4;&#32;&#32;<emphasis role="comment">/*&#32;each&#32;digit&#32;multiplies/divides&#32;value&#32;by&#32;2^4&#32;*/</emphasis>
00197 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(*s&#32;==&#32;<emphasis role="charliteral">&apos;p&apos;</emphasis>&#32;||&#32;*s&#32;==&#32;<emphasis role="charliteral">&apos;P&apos;</emphasis>)&#32;{&#32;&#32;<emphasis role="comment">/*&#32;exponent&#32;part?&#32;*/</emphasis>
00198 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lparser_8c_1ad7daced5a038385200486346caea6d96">exp1</link>&#32;=&#32;0;&#32;&#32;<emphasis role="comment">/*&#32;exponent&#32;value&#32;*/</emphasis>
00199 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;neg1;&#32;&#32;<emphasis role="comment">/*&#32;exponent&#32;sign&#32;*/</emphasis>
00200 &#32;&#32;&#32;&#32;s++;&#32;&#32;<emphasis role="comment">/*&#32;skip&#32;&apos;p&apos;&#32;*/</emphasis>
00201 &#32;&#32;&#32;&#32;neg1&#32;=&#32;<link linkend="_lobject_8c_1a3234b1ccb9cfbbd0892dcc6190a45876">isneg</link>(&amp;s);&#32;&#32;<emphasis role="comment">/*&#32;sign&#32;*/</emphasis>
00202 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="_lctype_8h_1aee1d27a5eac398ec2c9c8b80281041e6">lisdigit</link>(<link linkend="_llimits_8h_1aa0c49a2b32329cc39df5ccafd1f720e0">cast_uchar</link>(*s)))
00203 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0.0;&#32;&#32;<emphasis role="comment">/*&#32;invalid;&#32;must&#32;have&#32;at&#32;least&#32;one&#32;digit&#32;*/</emphasis>
00204 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(<link linkend="_lctype_8h_1aee1d27a5eac398ec2c9c8b80281041e6">lisdigit</link>(<link linkend="_llimits_8h_1aa0c49a2b32329cc39df5ccafd1f720e0">cast_uchar</link>(*s)))&#32;&#32;<emphasis role="comment">/*&#32;read&#32;exponent&#32;*/</emphasis>
00205 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lparser_8c_1ad7daced5a038385200486346caea6d96">exp1</link>&#32;=&#32;<link linkend="_lparser_8c_1ad7daced5a038385200486346caea6d96">exp1</link>&#32;*&#32;10&#32;+&#32;*(s++)&#32;-&#32;<emphasis role="charliteral">&apos;0&apos;</emphasis>;
00206 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(neg1)&#32;<link linkend="_lparser_8c_1ad7daced5a038385200486346caea6d96">exp1</link>&#32;=&#32;-<link linkend="_lparser_8c_1ad7daced5a038385200486346caea6d96">exp1</link>;
00207 &#32;&#32;&#32;&#32;e&#32;+=&#32;<link linkend="_lparser_8c_1ad7daced5a038385200486346caea6d96">exp1</link>;
00208 &#32;&#32;&#32;&#32;*endptr&#32;=&#32;<link linkend="_llimits_8h_1a1d905979f8c901b7143b43ee98341206">cast_charp</link>(s);&#32;&#32;<emphasis role="comment">/*&#32;valid&#32;up&#32;to&#32;here&#32;*/</emphasis>
00209 &#32;&#32;}
00210 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(neg)&#32;r&#32;=&#32;-r;
00211 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_luaconf_8h_1a919f548d82dc9a0681dd0ba8996d986d">l_mathop</link>(ldexp)(r,&#32;e);
00212 }
00213 
00214 <emphasis role="preprocessor">#endif</emphasis>
00215 <emphasis role="comment">/*&#32;}======================================================&#32;*/</emphasis>
00216 
00217 
00218 <emphasis role="comment">/*&#32;maximum&#32;length&#32;of&#32;a&#32;numeral&#32;to&#32;be&#32;converted&#32;to&#32;a&#32;number&#32;*/</emphasis>
00219 <emphasis role="preprocessor">#if&#32;!defined&#32;(L_MAXLENNUM)</emphasis>
<anchor xml:id="_lobject_8c_source_1l00220"/><link linkend="_lobject_8c_1a98d71ac135df4047b2f051fcc7a1f40f">00220</link> <emphasis role="preprocessor">#define&#32;L_MAXLENNUM&#32;200</emphasis>
00221 <emphasis role="preprocessor">#endif</emphasis>
00222 
00223 <emphasis role="comment">/*</emphasis>
00224 <emphasis role="comment">**&#32;Convert&#32;string&#32;&apos;s&apos;&#32;to&#32;a&#32;Lua&#32;number&#32;(put&#32;in&#32;&apos;result&apos;).&#32;Return&#32;NULL&#32;on</emphasis>
00225 <emphasis role="comment">**&#32;fail&#32;or&#32;the&#32;address&#32;of&#32;the&#32;ending&#32;&apos;\0&apos;&#32;on&#32;success.&#32;(&apos;mode&apos;&#32;==&#32;&apos;x&apos;)</emphasis>
00226 <emphasis role="comment">**&#32;means&#32;a&#32;hexadecimal&#32;numeral.</emphasis>
00227 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lobject_8c_source_1l00228"/><link linkend="_lobject_8c_1a58b5660686590a5ed833cc0f89fbe832">00228</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="_lobject_8c_1a58b5660686590a5ed833cc0f89fbe832">l_str2dloc</link>&#32;(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*s,&#32;<link linkend="_lua_8h_1af0a6ed3b852d680769cfc410a0672172">lua_Number</link>&#32;*result,&#32;<emphasis role="keywordtype">int</emphasis>&#32;mode)&#32;{
00229 &#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;*endptr;
00230 &#32;&#32;*result&#32;=&#32;(mode&#32;==&#32;<emphasis role="charliteral">&apos;x&apos;</emphasis>)&#32;?&#32;<link linkend="_luaconf_8h_1a4b53a01f7ac167204d227cb6e8d8c1e2">lua_strx2number</link>(s,&#32;&amp;endptr)&#32;&#32;<emphasis role="comment">/*&#32;try&#32;to&#32;convert&#32;*/</emphasis>
00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_luaconf_8h_1a4b751913c0b1598d6de4acb99ae48f5a">lua_str2number</link>(s,&#32;&amp;endptr);
00232 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(endptr&#32;==&#32;s)&#32;<emphasis role="keywordflow">return</emphasis>&#32;NULL;&#32;&#32;<emphasis role="comment">/*&#32;nothing&#32;recognized?&#32;*/</emphasis>
00233 &#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(<link linkend="_lctype_8h_1a768801f115261ae5ad51fdf6e54904e2">lisspace</link>(<link linkend="_llimits_8h_1aa0c49a2b32329cc39df5ccafd1f720e0">cast_uchar</link>(*endptr)))&#32;endptr++;&#32;&#32;<emphasis role="comment">/*&#32;skip&#32;trailing&#32;spaces&#32;*/</emphasis>
00234 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(*endptr&#32;==&#32;<emphasis role="charliteral">&apos;\0&apos;</emphasis>)&#32;?&#32;endptr&#32;:&#32;NULL;&#32;&#32;<emphasis role="comment">/*&#32;OK&#32;iff&#32;no&#32;trailing&#32;chars&#32;*/</emphasis>
00235 }
00236 
00237 
00238 <emphasis role="comment">/*</emphasis>
00239 <emphasis role="comment">**&#32;Convert&#32;string&#32;&apos;s&apos;&#32;to&#32;a&#32;Lua&#32;number&#32;(put&#32;in&#32;&apos;result&apos;)&#32;handling&#32;the</emphasis>
00240 <emphasis role="comment">**&#32;current&#32;locale.</emphasis>
00241 <emphasis role="comment">**&#32;This&#32;function&#32;accepts&#32;both&#32;the&#32;current&#32;locale&#32;or&#32;a&#32;dot&#32;as&#32;the&#32;radix</emphasis>
00242 <emphasis role="comment">**&#32;mark.&#32;If&#32;the&#32;conversion&#32;fails,&#32;it&#32;may&#32;mean&#32;number&#32;has&#32;a&#32;dot&#32;but</emphasis>
00243 <emphasis role="comment">**&#32;locale&#32;accepts&#32;something&#32;else.&#32;In&#32;that&#32;case,&#32;the&#32;code&#32;copies&#32;&apos;s&apos;</emphasis>
00244 <emphasis role="comment">**&#32;to&#32;a&#32;buffer&#32;(because&#32;&apos;s&apos;&#32;is&#32;read-only),&#32;changes&#32;the&#32;dot&#32;to&#32;the</emphasis>
00245 <emphasis role="comment">**&#32;current&#32;locale&#32;radix&#32;mark,&#32;and&#32;tries&#32;to&#32;convert&#32;again.</emphasis>
00246 <emphasis role="comment">**&#32;The&#32;variable&#32;&apos;mode&apos;&#32;checks&#32;for&#32;special&#32;characters&#32;in&#32;the&#32;string:</emphasis>
00247 <emphasis role="comment">**&#32;-&#32;&apos;n&apos;&#32;means&#32;&apos;inf&apos;&#32;or&#32;&apos;nan&apos;&#32;(which&#32;should&#32;be&#32;rejected)</emphasis>
00248 <emphasis role="comment">**&#32;-&#32;&apos;x&apos;&#32;means&#32;a&#32;hexadecimal&#32;numeral</emphasis>
00249 <emphasis role="comment">**&#32;-&#32;&apos;.&apos;&#32;just&#32;optimizes&#32;the&#32;search&#32;for&#32;the&#32;common&#32;case&#32;(no&#32;special&#32;chars)</emphasis>
00250 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lobject_8c_source_1l00251"/><link linkend="_lobject_8c_1a331ebab44d182775ef47eeebeeb58dbd">00251</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="_lobject_8c_1a331ebab44d182775ef47eeebeeb58dbd">l_str2d</link>&#32;(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*s,&#32;<link linkend="_lua_8h_1af0a6ed3b852d680769cfc410a0672172">lua_Number</link>&#32;*result)&#32;{
00252 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*endptr;
00253 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*pmode&#32;=&#32;strpbrk(s,&#32;<emphasis role="stringliteral">&quot;.xXnN&quot;</emphasis>);&#32;&#32;<emphasis role="comment">/*&#32;look&#32;for&#32;special&#32;chars&#32;*/</emphasis>
00254 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;mode&#32;=&#32;pmode&#32;?&#32;<link linkend="_lctype_8h_1a951ea98d03894d36dd2efed11ec9d973">ltolower</link>(<link linkend="_llimits_8h_1aa0c49a2b32329cc39df5ccafd1f720e0">cast_uchar</link>(*pmode))&#32;:&#32;0;
00255 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(mode&#32;==&#32;<emphasis role="charliteral">&apos;n&apos;</emphasis>)&#32;&#32;<emphasis role="comment">/*&#32;reject&#32;&apos;inf&apos;&#32;and&#32;&apos;nan&apos;&#32;*/</emphasis>
00256 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;NULL;
00257 &#32;&#32;endptr&#32;=&#32;<link linkend="_lobject_8c_1a58b5660686590a5ed833cc0f89fbe832">l_str2dloc</link>(s,&#32;result,&#32;mode);&#32;&#32;<emphasis role="comment">/*&#32;try&#32;to&#32;convert&#32;*/</emphasis>
00258 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(endptr&#32;==&#32;NULL)&#32;{&#32;&#32;<emphasis role="comment">/*&#32;failed?&#32;may&#32;be&#32;a&#32;different&#32;locale&#32;*/</emphasis>
00259 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;buff[<link linkend="_lobject_8c_1a98d71ac135df4047b2f051fcc7a1f40f">L_MAXLENNUM</link>&#32;+&#32;1];
00260 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*pdot&#32;=&#32;strchr(s,&#32;<emphasis role="charliteral">&apos;.&apos;</emphasis>);
00261 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(strlen(s)&#32;&gt;&#32;<link linkend="_lobject_8c_1a98d71ac135df4047b2f051fcc7a1f40f">L_MAXLENNUM</link>&#32;||&#32;pdot&#32;==&#32;NULL)
00262 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;NULL;&#32;&#32;<emphasis role="comment">/*&#32;string&#32;too&#32;long&#32;or&#32;no&#32;dot;&#32;fail&#32;*/</emphasis>
00263 &#32;&#32;&#32;&#32;strcpy(buff,&#32;s);&#32;&#32;<emphasis role="comment">/*&#32;copy&#32;string&#32;to&#32;buffer&#32;*/</emphasis>
00264 &#32;&#32;&#32;&#32;buff[pdot&#32;-&#32;s]&#32;=&#32;<link linkend="_luaconf_8h_1a20bcdecbc9221570e70455f767061698">lua_getlocaledecpoint</link>();&#32;&#32;<emphasis role="comment">/*&#32;correct&#32;decimal&#32;point&#32;*/</emphasis>
00265 &#32;&#32;&#32;&#32;endptr&#32;=&#32;<link linkend="_lobject_8c_1a58b5660686590a5ed833cc0f89fbe832">l_str2dloc</link>(buff,&#32;result,&#32;mode);&#32;&#32;<emphasis role="comment">/*&#32;try&#32;again&#32;*/</emphasis>
00266 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(endptr&#32;!=&#32;NULL)
00267 &#32;&#32;&#32;&#32;&#32;&#32;endptr&#32;=&#32;s&#32;+&#32;(endptr&#32;-&#32;buff);&#32;&#32;<emphasis role="comment">/*&#32;make&#32;relative&#32;to&#32;&apos;s&apos;&#32;*/</emphasis>
00268 &#32;&#32;}
00269 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;endptr;
00270 }
00271 
00272 
<anchor xml:id="_lobject_8c_source_1l00273"/><link linkend="_lobject_8c_1a35cd00c271dac7479b5a1812648be3a6">00273</link> <emphasis role="preprocessor">#define&#32;MAXBY10&#32;&#32;&#32;&#32;&#32;cast(lua_Unsigned,&#32;LUA_MAXINTEGER&#32;/&#32;10)</emphasis>
<anchor xml:id="_lobject_8c_source_1l00274"/><link linkend="_lobject_8c_1a3a297bd7005980375f9df0c1f8204aca">00274</link> <emphasis role="preprocessor">#define&#32;MAXLASTD&#32;&#32;&#32;&#32;cast_int(LUA_MAXINTEGER&#32;%&#32;10)</emphasis>
00275 
<anchor xml:id="_lobject_8c_source_1l00276"/><link linkend="_lobject_8c_1ac5f6271088cb629a2359a93c283dc6ce">00276</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="_lobject_8c_1ac5f6271088cb629a2359a93c283dc6ce">l_str2int</link>&#32;(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*s,&#32;<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;*result)&#32;{
00277 &#32;&#32;<link linkend="_lua_8h_1a2357bdcd9af1aaef0a6895a9c3b7eccf">lua_Unsigned</link>&#32;a&#32;=&#32;0;
00278 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;empty&#32;=&#32;1;
00279 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;neg;
00280 &#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(<link linkend="_lctype_8h_1a768801f115261ae5ad51fdf6e54904e2">lisspace</link>(<link linkend="_llimits_8h_1aa0c49a2b32329cc39df5ccafd1f720e0">cast_uchar</link>(*s)))&#32;s++;&#32;&#32;<emphasis role="comment">/*&#32;skip&#32;initial&#32;spaces&#32;*/</emphasis>
00281 &#32;&#32;neg&#32;=&#32;<link linkend="_lobject_8c_1a3234b1ccb9cfbbd0892dcc6190a45876">isneg</link>(&amp;s);
00282 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(s[0]&#32;==&#32;<emphasis role="charliteral">&apos;0&apos;</emphasis>&#32;&amp;&amp;
00283 &#32;&#32;&#32;&#32;&#32;&#32;(s[1]&#32;==&#32;<emphasis role="charliteral">&apos;x&apos;</emphasis>&#32;||&#32;s[1]&#32;==&#32;<emphasis role="charliteral">&apos;X&apos;</emphasis>))&#32;{&#32;&#32;<emphasis role="comment">/*&#32;hex?&#32;*/</emphasis>
00284 &#32;&#32;&#32;&#32;s&#32;+=&#32;2;&#32;&#32;<emphasis role="comment">/*&#32;skip&#32;&apos;0x&apos;&#32;*/</emphasis>
00285 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;&#32;<link linkend="_lctype_8h_1a72e55b66d80325fb20cbc098d3448996">lisxdigit</link>(<link linkend="_llimits_8h_1aa0c49a2b32329cc39df5ccafd1f720e0">cast_uchar</link>(*s));&#32;s++)&#32;{
00286 &#32;&#32;&#32;&#32;&#32;&#32;a&#32;=&#32;a&#32;*&#32;16&#32;+&#32;<link linkend="_lobject_8c_1ab73b1325bd3b1a6f9affc08fb46c07ec">luaO_hexavalue</link>(*s);
00287 &#32;&#32;&#32;&#32;&#32;&#32;empty&#32;=&#32;0;
00288 &#32;&#32;&#32;&#32;}
00289 &#32;&#32;}
00290 &#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{&#32;&#32;<emphasis role="comment">/*&#32;decimal&#32;*/</emphasis>
00291 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;&#32;<link linkend="_lctype_8h_1aee1d27a5eac398ec2c9c8b80281041e6">lisdigit</link>(<link linkend="_llimits_8h_1aa0c49a2b32329cc39df5ccafd1f720e0">cast_uchar</link>(*s));&#32;s++)&#32;{
00292 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;d&#32;=&#32;*s&#32;-&#32;<emphasis role="charliteral">&apos;0&apos;</emphasis>;
00293 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(a&#32;&gt;=&#32;<link linkend="_lobject_8c_1a35cd00c271dac7479b5a1812648be3a6">MAXBY10</link>&#32;&amp;&amp;&#32;(a&#32;&gt;&#32;<link linkend="_lobject_8c_1a35cd00c271dac7479b5a1812648be3a6">MAXBY10</link>&#32;||&#32;d&#32;&gt;&#32;<link linkend="_lobject_8c_1a3a297bd7005980375f9df0c1f8204aca">MAXLASTD</link>&#32;+&#32;neg))&#32;&#32;<emphasis role="comment">/*&#32;overflow?&#32;*/</emphasis>
00294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;NULL;&#32;&#32;<emphasis role="comment">/*&#32;do&#32;not&#32;accept&#32;it&#32;(as&#32;integer)&#32;*/</emphasis>
00295 &#32;&#32;&#32;&#32;&#32;&#32;a&#32;=&#32;a&#32;*&#32;10&#32;+&#32;d;
00296 &#32;&#32;&#32;&#32;&#32;&#32;empty&#32;=&#32;0;
00297 &#32;&#32;&#32;&#32;}
00298 &#32;&#32;}
00299 &#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(<link linkend="_lctype_8h_1a768801f115261ae5ad51fdf6e54904e2">lisspace</link>(<link linkend="_llimits_8h_1aa0c49a2b32329cc39df5ccafd1f720e0">cast_uchar</link>(*s)))&#32;s++;&#32;&#32;<emphasis role="comment">/*&#32;skip&#32;trailing&#32;spaces&#32;*/</emphasis>
00300 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(empty&#32;||&#32;*s&#32;!=&#32;<emphasis role="charliteral">&apos;\0&apos;</emphasis>)&#32;<emphasis role="keywordflow">return</emphasis>&#32;NULL;&#32;&#32;<emphasis role="comment">/*&#32;something&#32;wrong&#32;in&#32;the&#32;numeral&#32;*/</emphasis>
00301 &#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00302 &#32;&#32;&#32;&#32;*result&#32;=&#32;<link linkend="_llimits_8h_1a873fa1b216f8caed046edbcebd4c1bc8">l_castU2S</link>((neg)&#32;?&#32;0u&#32;-&#32;a&#32;:&#32;a);
00303 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;s;
00304 &#32;&#32;}
00305 }
00306 
00307 
<anchor xml:id="_lobject_8c_source_1l00308"/><link linkend="_lobject_8h_1ab56d8211e48dc3c70c3fa21d92d009af">00308</link> <emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_lobject_8c_1ab1956c979ca7ff39b07534390714505d">luaO_str2num</link>&#32;(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*s,&#32;<link linkend="_struct_t_value">TValue</link>&#32;*o)&#32;{
00309 &#32;&#32;<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;i;&#32;<link linkend="_lua_8h_1af0a6ed3b852d680769cfc410a0672172">lua_Number</link>&#32;n;
00310 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*e;
00311 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((e&#32;=&#32;<link linkend="_lobject_8c_1ac5f6271088cb629a2359a93c283dc6ce">l_str2int</link>(s,&#32;&amp;i))&#32;!=&#32;NULL)&#32;{&#32;&#32;<emphasis role="comment">/*&#32;try&#32;as&#32;an&#32;integer&#32;*/</emphasis>
00312 &#32;&#32;&#32;&#32;<link linkend="_lobject_8h_1af9dd109ba186841ab26efb2d62baf4f6">setivalue</link>(o,&#32;i);
00313 &#32;&#32;}
00314 &#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;((e&#32;=&#32;<link linkend="_lobject_8c_1a331ebab44d182775ef47eeebeeb58dbd">l_str2d</link>(s,&#32;&amp;n))&#32;!=&#32;NULL)&#32;{&#32;&#32;<emphasis role="comment">/*&#32;else&#32;try&#32;as&#32;a&#32;float&#32;*/</emphasis>
00315 &#32;&#32;&#32;&#32;<link linkend="_lobject_8h_1ae357382324a8220a3cf77607752de887">setfltvalue</link>(o,&#32;n);
00316 &#32;&#32;}
00317 &#32;&#32;<emphasis role="keywordflow">else</emphasis>
00318 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;&#32;&#32;<emphasis role="comment">/*&#32;conversion&#32;failed&#32;*/</emphasis>
00319 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(e&#32;-&#32;s)&#32;+&#32;1;&#32;&#32;<emphasis role="comment">/*&#32;success;&#32;return&#32;string&#32;size&#32;*/</emphasis>
00320 }
00321 
00322 
<anchor xml:id="_lobject_8c_source_1l00323"/><link linkend="_lobject_8h_1a6376bff8a65affbbeb7dba84a34d3a87">00323</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lobject_8c_1af3136de4693789b08f78aafda9604676">luaO_utf8esc</link>&#32;(<emphasis role="keywordtype">char</emphasis>&#32;*buff,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;x)&#32;{
00324 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;n&#32;=&#32;1;&#32;&#32;<emphasis role="comment">/*&#32;number&#32;of&#32;bytes&#32;put&#32;in&#32;buffer&#32;(backwards)&#32;*/</emphasis>
00325 &#32;&#32;<link linkend="_llimits_8h_1a5978f5fda715bd80e845df1e16ad7780">lua_assert</link>(x&#32;&lt;=&#32;0x7FFFFFFFu);
00326 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(x&#32;&lt;&#32;0x80)&#32;&#32;<emphasis role="comment">/*&#32;ascii?&#32;*/</emphasis>
00327 &#32;&#32;&#32;&#32;buff[<link linkend="_lobject_8h_1ae0741e99030a23e3c24b0eb828fbbe4b">UTF8BUFFSZ</link>&#32;-&#32;1]&#32;=&#32;<link linkend="_llimits_8h_1a045e548576226e8c7e9ab5de8a59f4bc">cast_char</link>(x);
00328 &#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{&#32;&#32;<emphasis role="comment">/*&#32;need&#32;continuation&#32;bytes&#32;*/</emphasis>
00329 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;mfb&#32;=&#32;0x3f;&#32;&#32;<emphasis role="comment">/*&#32;maximum&#32;that&#32;fits&#32;in&#32;first&#32;byte&#32;*/</emphasis>
00330 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>&#32;{&#32;&#32;<emphasis role="comment">/*&#32;add&#32;continuation&#32;bytes&#32;*/</emphasis>
00331 &#32;&#32;&#32;&#32;&#32;&#32;buff[<link linkend="_lobject_8h_1ae0741e99030a23e3c24b0eb828fbbe4b">UTF8BUFFSZ</link>&#32;-&#32;(n++)]&#32;=&#32;<link linkend="_llimits_8h_1a045e548576226e8c7e9ab5de8a59f4bc">cast_char</link>(0x80&#32;|&#32;(x&#32;&amp;&#32;0x3f));
00332 &#32;&#32;&#32;&#32;&#32;&#32;x&#32;&gt;&gt;=&#32;6;&#32;&#32;<emphasis role="comment">/*&#32;remove&#32;added&#32;bits&#32;*/</emphasis>
00333 &#32;&#32;&#32;&#32;&#32;&#32;mfb&#32;&gt;&gt;=&#32;1;&#32;&#32;<emphasis role="comment">/*&#32;now&#32;there&#32;is&#32;one&#32;less&#32;bit&#32;available&#32;in&#32;first&#32;byte&#32;*/</emphasis>
00334 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>&#32;(x&#32;&gt;&#32;mfb);&#32;&#32;<emphasis role="comment">/*&#32;still&#32;needs&#32;continuation&#32;byte?&#32;*/</emphasis>
00335 &#32;&#32;&#32;&#32;buff[<link linkend="_lobject_8h_1ae0741e99030a23e3c24b0eb828fbbe4b">UTF8BUFFSZ</link>&#32;-&#32;n]&#32;=&#32;<link linkend="_llimits_8h_1a045e548576226e8c7e9ab5de8a59f4bc">cast_char</link>((~mfb&#32;&lt;&lt;&#32;1)&#32;|&#32;x);&#32;&#32;<emphasis role="comment">/*&#32;add&#32;first&#32;byte&#32;*/</emphasis>
00336 &#32;&#32;}
00337 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;n;
00338 }
00339 
00340 
00341 <emphasis role="comment">/*</emphasis>
00342 <emphasis role="comment">**&#32;Maximum&#32;length&#32;of&#32;the&#32;conversion&#32;of&#32;a&#32;number&#32;to&#32;a&#32;string.&#32;Must&#32;be</emphasis>
00343 <emphasis role="comment">**&#32;enough&#32;to&#32;accommodate&#32;both&#32;LUA_INTEGER_FMT&#32;and&#32;LUA_NUMBER_FMT.</emphasis>
00344 <emphasis role="comment">**&#32;(For&#32;a&#32;long&#32;long&#32;int,&#32;this&#32;is&#32;19&#32;digits&#32;plus&#32;a&#32;sign&#32;and&#32;a&#32;final&#32;&apos;\0&apos;,</emphasis>
00345 <emphasis role="comment">**&#32;adding&#32;to&#32;21.&#32;For&#32;a&#32;long&#32;double,&#32;it&#32;can&#32;go&#32;to&#32;a&#32;sign,&#32;33&#32;digits,</emphasis>
00346 <emphasis role="comment">**&#32;the&#32;dot,&#32;an&#32;exponent&#32;letter,&#32;an&#32;exponent&#32;sign,&#32;5&#32;exponent&#32;digits,</emphasis>
00347 <emphasis role="comment">**&#32;and&#32;a&#32;final&#32;&apos;\0&apos;,&#32;adding&#32;to&#32;43.)</emphasis>
00348 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lobject_8c_source_1l00349"/><link linkend="_lobject_8c_1a1b113179539a4006182c822ee7da5d0c">00349</link> <emphasis role="preprocessor">#define&#32;MAXNUMBER2STR&#32;&#32;&#32;44</emphasis>
00350 
00351 
00352 <emphasis role="comment">/*</emphasis>
00353 <emphasis role="comment">**&#32;Convert&#32;a&#32;number&#32;object&#32;to&#32;a&#32;string,&#32;adding&#32;it&#32;to&#32;a&#32;buffer</emphasis>
00354 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lobject_8c_source_1l00355"/><link linkend="_lobject_8c_1a8a7886b6335aca97db23dfe3e220c728">00355</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_lobject_8c_1a8a7886b6335aca97db23dfe3e220c728">tostringbuff</link>&#32;(<link linkend="_struct_t_value">TValue</link>&#32;*obj,&#32;<emphasis role="keywordtype">char</emphasis>&#32;*buff)&#32;{
00356 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;len;
00357 &#32;&#32;<link linkend="_llimits_8h_1a5978f5fda715bd80e845df1e16ad7780">lua_assert</link>(<link linkend="_lobject_8h_1a7a1392f89b1f29ed3b1afa37a22d0be2">ttisnumber</link>(obj));
00358 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_lobject_8h_1abade243295a9140f7b86838fbb049054">ttisinteger</link>(obj))
00359 &#32;&#32;&#32;&#32;len&#32;=&#32;<link linkend="_luaconf_8h_1a6bd94665fb1db85f2bb6aed3fa1cb455">lua_integer2str</link>(buff,&#32;<link linkend="_lobject_8c_1a1b113179539a4006182c822ee7da5d0c">MAXNUMBER2STR</link>,&#32;<link linkend="_lobject_8h_1af1a59636db050b842a791cd19086d925">ivalue</link>(obj));
00360 &#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00361 &#32;&#32;&#32;&#32;len&#32;=&#32;<link linkend="_luaconf_8h_1a2981eb06b0460773fb1c1a21c93c8d8d">lua_number2str</link>(buff,&#32;<link linkend="_lobject_8c_1a1b113179539a4006182c822ee7da5d0c">MAXNUMBER2STR</link>,&#32;<link linkend="_lobject_8h_1a7d7d6b08f40350c9e7364e9cb984d744">fltvalue</link>(obj));
00362 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(buff[strspn(buff,&#32;<emphasis role="stringliteral">&quot;-0123456789&quot;</emphasis>)]&#32;==&#32;<emphasis role="charliteral">&apos;\0&apos;</emphasis>)&#32;{&#32;&#32;<emphasis role="comment">/*&#32;looks&#32;like&#32;an&#32;int?&#32;*/</emphasis>
00363 &#32;&#32;&#32;&#32;&#32;&#32;buff[len++]&#32;=&#32;<link linkend="_luaconf_8h_1a20bcdecbc9221570e70455f767061698">lua_getlocaledecpoint</link>();
00364 &#32;&#32;&#32;&#32;&#32;&#32;buff[len++]&#32;=&#32;<emphasis role="charliteral">&apos;0&apos;</emphasis>;&#32;&#32;<emphasis role="comment">/*&#32;adds&#32;&apos;.0&apos;&#32;to&#32;result&#32;*/</emphasis>
00365 &#32;&#32;&#32;&#32;}
00366 &#32;&#32;}
00367 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;len;
00368 }
00369 
00370 
00371 <emphasis role="comment">/*</emphasis>
00372 <emphasis role="comment">**&#32;Convert&#32;a&#32;number&#32;object&#32;to&#32;a&#32;Lua&#32;string,&#32;replacing&#32;the&#32;value&#32;at&#32;&apos;obj&apos;</emphasis>
00373 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lobject_8c_source_1l00374"/><link linkend="_lobject_8h_1a007d2c6293fee953f3af21f60f8133ba">00374</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_lobject_8c_1a53824ade5220a50d44148175f7787199">luaO_tostring</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<link linkend="_struct_t_value">TValue</link>&#32;*obj)&#32;{
00375 &#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;buff[<link linkend="_lobject_8c_1a1b113179539a4006182c822ee7da5d0c">MAXNUMBER2STR</link>];
00376 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;len&#32;=&#32;<link linkend="_lobject_8c_1a8a7886b6335aca97db23dfe3e220c728">tostringbuff</link>(obj,&#32;buff);
00377 &#32;&#32;<link linkend="_lobject_8h_1a251a2d3bada66aaed6249a89a0afe5f0">setsvalue</link>(L,&#32;obj,&#32;<link linkend="_lstring_8c_1ab41fb084ce3ea5e2779f6659ccc2484d">luaS_newlstr</link>(L,&#32;buff,&#32;len));
00378 }
00379 
00380 
00381 
00382 
00383 <emphasis role="comment">/*</emphasis>
00384 <emphasis role="comment">**&#32;{==================================================================</emphasis>
00385 <emphasis role="comment">**&#32;&apos;luaO_pushvfstring&apos;</emphasis>
00386 <emphasis role="comment">**&#32;===================================================================</emphasis>
00387 <emphasis role="comment">*/</emphasis>
00388 
00389 <emphasis role="comment">/*&#32;size&#32;for&#32;buffer&#32;space&#32;used&#32;by&#32;&apos;luaO_pushvfstring&apos;&#32;*/</emphasis>
<anchor xml:id="_lobject_8c_source_1l00390"/><link linkend="_lobject_8c_1a5df23b13777a59c7db57ba5ed55a5d98">00390</link> <emphasis role="preprocessor">#define&#32;BUFVFS&#32;&#32;&#32;&#32;&#32;&#32;200</emphasis>
00391 
00392 <emphasis role="comment">/*&#32;buffer&#32;used&#32;by&#32;&apos;luaO_pushvfstring&apos;&#32;*/</emphasis>
<anchor xml:id="_lobject_8c_source_1l00393"/><link linkend="_struct_buff_f_s">00393</link> <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_buff_f_s">BuffFS</link>&#32;{
<anchor xml:id="_lobject_8c_source_1l00394"/><link linkend="_struct_buff_f_s_1a62f94dfc0036bec0c14106c2f15caf3e">00394</link> &#32;&#32;<link linkend="_structlua___state">lua_State</link>&#32;*<link linkend="_struct_buff_f_s_1a62f94dfc0036bec0c14106c2f15caf3e">L</link>;
<anchor xml:id="_lobject_8c_source_1l00395"/><link linkend="_struct_buff_f_s_1ad6de49c3753d8d10a70b5483ee6e3ef8">00395</link> &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_struct_buff_f_s_1ad6de49c3753d8d10a70b5483ee6e3ef8">pushed</link>;&#32;&#32;<emphasis role="comment">/*&#32;number&#32;of&#32;string&#32;pieces&#32;already&#32;on&#32;the&#32;stack&#32;*/</emphasis>
<anchor xml:id="_lobject_8c_source_1l00396"/><link linkend="_struct_buff_f_s_1abf478535d20cf92ccdba662a135e6c1b">00396</link> &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_struct_buff_f_s_1abf478535d20cf92ccdba662a135e6c1b">blen</link>;&#32;&#32;<emphasis role="comment">/*&#32;length&#32;of&#32;partial&#32;string&#32;in&#32;&apos;space&apos;&#32;*/</emphasis>
<anchor xml:id="_lobject_8c_source_1l00397"/><link linkend="_struct_buff_f_s_1a966508e54e4779fb69907152f69026c0">00397</link> &#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="_struct_buff_f_s_1a966508e54e4779fb69907152f69026c0">space</link>[<link linkend="_lobject_8c_1a5df23b13777a59c7db57ba5ed55a5d98">BUFVFS</link>];&#32;&#32;<emphasis role="comment">/*&#32;holds&#32;last&#32;part&#32;of&#32;the&#32;result&#32;*/</emphasis>
<anchor xml:id="_lobject_8c_source_1l00398"/><link linkend="_lobject_8c_1a15e052831e7638ed8e7fc07b1bc1e67a">00398</link> }&#32;<link linkend="_lobject_8c_1a15e052831e7638ed8e7fc07b1bc1e67a">BuffFS</link>;
00399 
00400 
00401 <emphasis role="comment">/*</emphasis>
00402 <emphasis role="comment">**&#32;Push&#32;given&#32;string&#32;to&#32;the&#32;stack,&#32;as&#32;part&#32;of&#32;the&#32;buffer,&#32;and</emphasis>
00403 <emphasis role="comment">**&#32;join&#32;the&#32;partial&#32;strings&#32;in&#32;the&#32;stack&#32;into&#32;one.</emphasis>
00404 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lobject_8c_source_1l00405"/><link linkend="_lobject_8c_1a90720e7e38c0e352e9b97d3f8def9e1a">00405</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_lobject_8c_1a90720e7e38c0e352e9b97d3f8def9e1a">pushstr</link>&#32;(<link linkend="_struct_buff_f_s">BuffFS</link>&#32;*buff,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*str,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;l)&#32;{
00406 &#32;&#32;<link linkend="_structlua___state">lua_State</link>&#32;*L&#32;=&#32;buff-&gt;<link linkend="_struct_buff_f_s_1a62f94dfc0036bec0c14106c2f15caf3e">L</link>;
00407 &#32;&#32;<link linkend="_lobject_8h_1aa60b4c3bb90063dcaa2f90e77d4a61f6">setsvalue2s</link>(L,&#32;L-&gt;<link linkend="_structlua___state_1afeb5dbe379fc406b35fe5f8a5fcfc5d7">top</link>,&#32;<link linkend="_lstring_8c_1ab41fb084ce3ea5e2779f6659ccc2484d">luaS_newlstr</link>(L,&#32;str,&#32;l));
00408 &#32;&#32;L-&gt;<link linkend="_structlua___state_1afeb5dbe379fc406b35fe5f8a5fcfc5d7">top</link>++;&#32;&#32;<emphasis role="comment">/*&#32;may&#32;use&#32;one&#32;extra&#32;slot&#32;*/</emphasis>
00409 &#32;&#32;buff-&gt;<link linkend="_struct_buff_f_s_1ad6de49c3753d8d10a70b5483ee6e3ef8">pushed</link>++;
00410 &#32;&#32;<link linkend="_lvm_8c_1a2f076040af405dcb50d661edd692eca7">luaV_concat</link>(L,&#32;buff-&gt;<link linkend="_struct_buff_f_s_1ad6de49c3753d8d10a70b5483ee6e3ef8">pushed</link>);&#32;&#32;<emphasis role="comment">/*&#32;join&#32;partial&#32;results&#32;into&#32;one&#32;*/</emphasis>
00411 &#32;&#32;buff-&gt;<link linkend="_struct_buff_f_s_1ad6de49c3753d8d10a70b5483ee6e3ef8">pushed</link>&#32;=&#32;1;
00412 }
00413 
00414 
00415 <emphasis role="comment">/*</emphasis>
00416 <emphasis role="comment">**&#32;empty&#32;the&#32;buffer&#32;space&#32;into&#32;the&#32;stack</emphasis>
00417 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lobject_8c_source_1l00418"/><link linkend="_lobject_8c_1a6ec2716e64cd75e3e6614a87ee92e4d2">00418</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_lobject_8c_1a6ec2716e64cd75e3e6614a87ee92e4d2">clearbuff</link>&#32;(<link linkend="_struct_buff_f_s">BuffFS</link>&#32;*buff)&#32;{
00419 &#32;&#32;<link linkend="_lobject_8c_1a90720e7e38c0e352e9b97d3f8def9e1a">pushstr</link>(buff,&#32;buff-&gt;<link linkend="_struct_buff_f_s_1a966508e54e4779fb69907152f69026c0">space</link>,&#32;buff-&gt;<link linkend="_struct_buff_f_s_1abf478535d20cf92ccdba662a135e6c1b">blen</link>);&#32;&#32;<emphasis role="comment">/*&#32;push&#32;buffer&#32;contents&#32;*/</emphasis>
00420 &#32;&#32;buff-&gt;<link linkend="_struct_buff_f_s_1abf478535d20cf92ccdba662a135e6c1b">blen</link>&#32;=&#32;0;&#32;&#32;<emphasis role="comment">/*&#32;space&#32;now&#32;is&#32;empty&#32;*/</emphasis>
00421 }
00422 
00423 
00424 <emphasis role="comment">/*</emphasis>
00425 <emphasis role="comment">**&#32;Get&#32;a&#32;space&#32;of&#32;size&#32;&apos;sz&apos;&#32;in&#32;the&#32;buffer.&#32;If&#32;buffer&#32;has&#32;not&#32;enough</emphasis>
00426 <emphasis role="comment">**&#32;space,&#32;empty&#32;it.&#32;&apos;sz&apos;&#32;must&#32;fit&#32;in&#32;an&#32;empty&#32;buffer.</emphasis>
00427 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lobject_8c_source_1l00428"/><link linkend="_lobject_8c_1ac4ab924f2ea45ef73319f1159033eab1">00428</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="_lobject_8c_1ac4ab924f2ea45ef73319f1159033eab1">getbuff</link>&#32;(<link linkend="_struct_buff_f_s">BuffFS</link>&#32;*buff,&#32;<emphasis role="keywordtype">int</emphasis>&#32;sz)&#32;{
00429 &#32;&#32;<link linkend="_llimits_8h_1a5978f5fda715bd80e845df1e16ad7780">lua_assert</link>(buff-&gt;<link linkend="_struct_buff_f_s_1abf478535d20cf92ccdba662a135e6c1b">blen</link>&#32;&lt;=&#32;<link linkend="_lobject_8c_1a5df23b13777a59c7db57ba5ed55a5d98">BUFVFS</link>);&#32;<link linkend="_llimits_8h_1a5978f5fda715bd80e845df1e16ad7780">lua_assert</link>(sz&#32;&lt;=&#32;<link linkend="_lobject_8c_1a5df23b13777a59c7db57ba5ed55a5d98">BUFVFS</link>);
00430 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sz&#32;&gt;&#32;<link linkend="_lobject_8c_1a5df23b13777a59c7db57ba5ed55a5d98">BUFVFS</link>&#32;-&#32;buff-&gt;<link linkend="_struct_buff_f_s_1abf478535d20cf92ccdba662a135e6c1b">blen</link>)&#32;&#32;<emphasis role="comment">/*&#32;not&#32;enough&#32;space?&#32;*/</emphasis>
00431 &#32;&#32;&#32;&#32;<link linkend="_lobject_8c_1a6ec2716e64cd75e3e6614a87ee92e4d2">clearbuff</link>(buff);
00432 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;buff-&gt;<link linkend="_struct_buff_f_s_1a966508e54e4779fb69907152f69026c0">space</link>&#32;+&#32;buff-&gt;<link linkend="_struct_buff_f_s_1abf478535d20cf92ccdba662a135e6c1b">blen</link>;
00433 }
00434 
00435 
<anchor xml:id="_lobject_8c_source_1l00436"/><link linkend="_lobject_8c_1a5fa009dd087e1c8394b09e5bd9087bc7">00436</link> <emphasis role="preprocessor">#define&#32;addsize(b,sz)&#32;&#32;&#32;((b)-&gt;blen&#32;+=&#32;(sz))</emphasis>
00437 
00438 
00439 <emphasis role="comment">/*</emphasis>
00440 <emphasis role="comment">**&#32;Add&#32;&apos;str&apos;&#32;to&#32;the&#32;buffer.&#32;If&#32;string&#32;is&#32;larger&#32;than&#32;the&#32;buffer&#32;space,</emphasis>
00441 <emphasis role="comment">**&#32;push&#32;the&#32;string&#32;directly&#32;to&#32;the&#32;stack.</emphasis>
00442 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lobject_8c_source_1l00443"/><link linkend="_lobject_8c_1a874ab64f433ee35f2197a81e10452cb1">00443</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_lobject_8c_1a874ab64f433ee35f2197a81e10452cb1">addstr2buff</link>&#32;(<link linkend="_struct_buff_f_s">BuffFS</link>&#32;*buff,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*str,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;slen)&#32;{
00444 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(slen&#32;&lt;=&#32;<link linkend="_lobject_8c_1a5df23b13777a59c7db57ba5ed55a5d98">BUFVFS</link>)&#32;{&#32;&#32;<emphasis role="comment">/*&#32;does&#32;string&#32;fit&#32;into&#32;buffer?&#32;*/</emphasis>
00445 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;*bf&#32;=&#32;<link linkend="_lobject_8c_1ac4ab924f2ea45ef73319f1159033eab1">getbuff</link>(buff,&#32;<link linkend="_llimits_8h_1a37a9e2c4b53433d34bad0f12a1500c08">cast_int</link>(slen));
00446 &#32;&#32;&#32;&#32;memcpy(bf,&#32;str,&#32;slen);&#32;&#32;<emphasis role="comment">/*&#32;add&#32;string&#32;to&#32;buffer&#32;*/</emphasis>
00447 &#32;&#32;&#32;&#32;<link linkend="_lobject_8c_1a5fa009dd087e1c8394b09e5bd9087bc7">addsize</link>(buff,&#32;<link linkend="_llimits_8h_1a37a9e2c4b53433d34bad0f12a1500c08">cast_int</link>(slen));
00448 &#32;&#32;}
00449 &#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{&#32;&#32;<emphasis role="comment">/*&#32;string&#32;larger&#32;than&#32;buffer&#32;*/</emphasis>
00450 &#32;&#32;&#32;&#32;<link linkend="_lobject_8c_1a6ec2716e64cd75e3e6614a87ee92e4d2">clearbuff</link>(buff);&#32;&#32;<emphasis role="comment">/*&#32;string&#32;comes&#32;after&#32;buffer&apos;s&#32;content&#32;*/</emphasis>
00451 &#32;&#32;&#32;&#32;<link linkend="_lobject_8c_1a90720e7e38c0e352e9b97d3f8def9e1a">pushstr</link>(buff,&#32;str,&#32;slen);&#32;&#32;<emphasis role="comment">/*&#32;push&#32;string&#32;*/</emphasis>
00452 &#32;&#32;}
00453 }
00454 
00455 
00456 <emphasis role="comment">/*</emphasis>
00457 <emphasis role="comment">**&#32;Add&#32;a&#32;number&#32;to&#32;the&#32;buffer.</emphasis>
00458 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lobject_8c_source_1l00459"/><link linkend="_lobject_8c_1a1d02fb9304e4700ce1fd20e34ae68784">00459</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_lobject_8c_1a1d02fb9304e4700ce1fd20e34ae68784">addnum2buff</link>&#32;(<link linkend="_struct_buff_f_s">BuffFS</link>&#32;*buff,&#32;<link linkend="_struct_t_value">TValue</link>&#32;*num)&#32;{
00460 &#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;*numbuff&#32;=&#32;<link linkend="_lobject_8c_1ac4ab924f2ea45ef73319f1159033eab1">getbuff</link>(buff,&#32;<link linkend="_lobject_8c_1a1b113179539a4006182c822ee7da5d0c">MAXNUMBER2STR</link>);
00461 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;len&#32;=&#32;<link linkend="_lobject_8c_1a8a7886b6335aca97db23dfe3e220c728">tostringbuff</link>(num,&#32;numbuff);&#32;&#32;<emphasis role="comment">/*&#32;format&#32;number&#32;into&#32;&apos;numbuff&apos;&#32;*/</emphasis>
00462 &#32;&#32;<link linkend="_lobject_8c_1a5fa009dd087e1c8394b09e5bd9087bc7">addsize</link>(buff,&#32;len);
00463 }
00464 
00465 
00466 <emphasis role="comment">/*</emphasis>
00467 <emphasis role="comment">**&#32;this&#32;function&#32;handles&#32;only&#32;&apos;%d&apos;,&#32;&apos;%c&apos;,&#32;&apos;%f&apos;,&#32;&apos;%p&apos;,&#32;&apos;%s&apos;,&#32;and&#32;&apos;%%&apos;</emphasis>
00468 <emphasis role="comment">&#32;&#32;&#32;conventional&#32;formats,&#32;plus&#32;Lua-specific&#32;&apos;%I&apos;&#32;and&#32;&apos;%U&apos;</emphasis>
00469 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_lobject_8c_source_1l00470"/><link linkend="_lobject_8h_1a0d323372aa00f179e1c070d305f879f3">00470</link> <emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="_lobject_8c_1aa83fa444a36d79521e846a766fa083d5">luaO_pushvfstring</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*fmt,&#32;va_list&#32;argp)&#32;{
00471 &#32;&#32;<link linkend="_struct_buff_f_s">BuffFS</link>&#32;buff;&#32;&#32;<emphasis role="comment">/*&#32;holds&#32;last&#32;part&#32;of&#32;the&#32;result&#32;*/</emphasis>
00472 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*e;&#32;&#32;<emphasis role="comment">/*&#32;points&#32;to&#32;next&#32;&apos;%&apos;&#32;*/</emphasis>
00473 &#32;&#32;buff.<link linkend="_struct_buff_f_s_1ad6de49c3753d8d10a70b5483ee6e3ef8">pushed</link>&#32;=&#32;buff.<link linkend="_struct_buff_f_s_1abf478535d20cf92ccdba662a135e6c1b">blen</link>&#32;=&#32;0;
00474 &#32;&#32;buff.<link linkend="_struct_buff_f_s_1a62f94dfc0036bec0c14106c2f15caf3e">L</link>&#32;=&#32;L;
00475 &#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;((e&#32;=&#32;strchr(fmt,&#32;<emphasis role="charliteral">&apos;%&apos;</emphasis>))&#32;!=&#32;NULL)&#32;{
00476 &#32;&#32;&#32;&#32;<link linkend="_lobject_8c_1a874ab64f433ee35f2197a81e10452cb1">addstr2buff</link>(&amp;buff,&#32;fmt,&#32;e&#32;-&#32;fmt);&#32;&#32;<emphasis role="comment">/*&#32;add&#32;&apos;fmt&apos;&#32;up&#32;to&#32;&apos;%&apos;&#32;*/</emphasis>
00477 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(*(e&#32;+&#32;1))&#32;{&#32;&#32;<emphasis role="comment">/*&#32;conversion&#32;specifier&#32;*/</emphasis>
00478 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<emphasis role="charliteral">&apos;s&apos;</emphasis>:&#32;{&#32;&#32;<emphasis role="comment">/*&#32;zero-terminated&#32;string&#32;*/</emphasis>
00479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*s&#32;=&#32;va_arg(argp,&#32;<emphasis role="keywordtype">char</emphasis>&#32;*);
00480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(s&#32;==&#32;NULL)&#32;s&#32;=&#32;<emphasis role="stringliteral">&quot;(null)&quot;</emphasis>;
00481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8c_1a874ab64f433ee35f2197a81e10452cb1">addstr2buff</link>(&amp;buff,&#32;s,&#32;strlen(s));
00482 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00483 &#32;&#32;&#32;&#32;&#32;&#32;}
00484 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<emphasis role="charliteral">&apos;c&apos;</emphasis>:&#32;{&#32;&#32;<emphasis role="comment">/*&#32;an&#32;&apos;int&apos;&#32;as&#32;a&#32;character&#32;*/</emphasis>
00485 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;c&#32;=&#32;<link linkend="_llimits_8h_1aa0c49a2b32329cc39df5ccafd1f720e0">cast_uchar</link>(va_arg(argp,&#32;<emphasis role="keywordtype">int</emphasis>));
00486 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8c_1a874ab64f433ee35f2197a81e10452cb1">addstr2buff</link>(&amp;buff,&#32;&amp;c,&#32;<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">char</emphasis>));
00487 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00488 &#32;&#32;&#32;&#32;&#32;&#32;}
00489 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<emphasis role="charliteral">&apos;d&apos;</emphasis>:&#32;{&#32;&#32;<emphasis role="comment">/*&#32;an&#32;&apos;int&apos;&#32;*/</emphasis>
00490 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_t_value">TValue</link>&#32;num;
00491 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8h_1af9dd109ba186841ab26efb2d62baf4f6">setivalue</link>(&amp;num,&#32;va_arg(argp,&#32;<emphasis role="keywordtype">int</emphasis>));
00492 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8c_1a1d02fb9304e4700ce1fd20e34ae68784">addnum2buff</link>(&amp;buff,&#32;&amp;num);
00493 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00494 &#32;&#32;&#32;&#32;&#32;&#32;}
00495 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<emphasis role="charliteral">&apos;I&apos;</emphasis>:&#32;{&#32;&#32;<emphasis role="comment">/*&#32;a&#32;&apos;lua_Integer&apos;&#32;*/</emphasis>
00496 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_t_value">TValue</link>&#32;num;
00497 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8h_1af9dd109ba186841ab26efb2d62baf4f6">setivalue</link>(&amp;num,&#32;<link linkend="_llimits_8h_1af17d62ec9e237a7644de6b9b34a48a34">cast</link>(<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>,&#32;va_arg(argp,&#32;<link linkend="_llimits_8h_1ac8d5f795aedd7e084ef2dab7b5d81bde">l_uacInt</link>)));
00498 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8c_1a1d02fb9304e4700ce1fd20e34ae68784">addnum2buff</link>(&amp;buff,&#32;&amp;num);
00499 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00500 &#32;&#32;&#32;&#32;&#32;&#32;}
00501 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<emphasis role="charliteral">&apos;f&apos;</emphasis>:&#32;{&#32;&#32;<emphasis role="comment">/*&#32;a&#32;&apos;lua_Number&apos;&#32;*/</emphasis>
00502 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_t_value">TValue</link>&#32;num;
00503 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8h_1ae357382324a8220a3cf77607752de887">setfltvalue</link>(&amp;num,&#32;<link linkend="_llimits_8h_1ac92cecb12c5aba1164877e81e76e2cb6">cast_num</link>(va_arg(argp,&#32;<link linkend="_llimits_8h_1a792eefbf119f914b73400c314411c3e2">l_uacNumber</link>)));
00504 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8c_1a1d02fb9304e4700ce1fd20e34ae68784">addnum2buff</link>(&amp;buff,&#32;&amp;num);
00505 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00506 &#32;&#32;&#32;&#32;&#32;&#32;}
00507 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<emphasis role="charliteral">&apos;p&apos;</emphasis>:&#32;{&#32;&#32;<emphasis role="comment">/*&#32;a&#32;pointer&#32;*/</emphasis>
00508 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;sz&#32;=&#32;3&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">void</emphasis>*)&#32;+&#32;8;&#32;<emphasis role="comment">/*&#32;enough&#32;space&#32;for&#32;&apos;%p&apos;&#32;*/</emphasis>
00509 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;*bf&#32;=&#32;<link linkend="_lobject_8c_1ac4ab924f2ea45ef73319f1159033eab1">getbuff</link>(&amp;buff,&#32;sz);
00510 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;*p&#32;=&#32;va_arg(argp,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*);
00511 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;len&#32;=&#32;<link linkend="_luaconf_8h_1a927f26920bfa5ced499783fca8cf1e2f">lua_pointer2str</link>(bf,&#32;sz,&#32;p);
00512 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8c_1a5fa009dd087e1c8394b09e5bd9087bc7">addsize</link>(&amp;buff,&#32;len);
00513 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00514 &#32;&#32;&#32;&#32;&#32;&#32;}
00515 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<emphasis role="charliteral">&apos;U&apos;</emphasis>:&#32;{&#32;&#32;<emphasis role="comment">/*&#32;a&#32;&apos;long&apos;&#32;as&#32;a&#32;UTF-8&#32;sequence&#32;*/</emphasis>
00516 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;bf[<link linkend="_lobject_8h_1ae0741e99030a23e3c24b0eb828fbbe4b">UTF8BUFFSZ</link>];
00517 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;len&#32;=&#32;<link linkend="_lobject_8c_1af3136de4693789b08f78aafda9604676">luaO_utf8esc</link>(bf,&#32;va_arg(argp,&#32;<emphasis role="keywordtype">long</emphasis>));
00518 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8c_1a874ab64f433ee35f2197a81e10452cb1">addstr2buff</link>(&amp;buff,&#32;bf&#32;+&#32;<link linkend="_lobject_8h_1ae0741e99030a23e3c24b0eb828fbbe4b">UTF8BUFFSZ</link>&#32;-&#32;len,&#32;len);
00519 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00520 &#32;&#32;&#32;&#32;&#32;&#32;}
00521 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<emphasis role="charliteral">&apos;%&apos;</emphasis>:&#32;{
00522 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8c_1a874ab64f433ee35f2197a81e10452cb1">addstr2buff</link>(&amp;buff,&#32;<emphasis role="stringliteral">&quot;%&quot;</emphasis>,&#32;1);
00523 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00524 &#32;&#32;&#32;&#32;&#32;&#32;}
00525 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:&#32;{
00526 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_ldebug_8c_1a88d38ca5da2e7a1492fc9d5ad70c32c5">luaG_runerror</link>(L,&#32;<emphasis role="stringliteral">&quot;invalid&#32;option&#32;&apos;%%%c&apos;&#32;to&#32;&apos;lua_pushfstring&apos;&quot;</emphasis>,
00527 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*(e&#32;+&#32;1));
00528 &#32;&#32;&#32;&#32;&#32;&#32;}
00529 &#32;&#32;&#32;&#32;}
00530 &#32;&#32;&#32;&#32;fmt&#32;=&#32;e&#32;+&#32;2;&#32;&#32;<emphasis role="comment">/*&#32;skip&#32;&apos;%&apos;&#32;and&#32;the&#32;specifier&#32;*/</emphasis>
00531 &#32;&#32;}
00532 &#32;&#32;<link linkend="_lobject_8c_1a874ab64f433ee35f2197a81e10452cb1">addstr2buff</link>(&amp;buff,&#32;fmt,&#32;strlen(fmt));&#32;&#32;<emphasis role="comment">/*&#32;rest&#32;of&#32;&apos;fmt&apos;&#32;*/</emphasis>
00533 &#32;&#32;<link linkend="_lobject_8c_1a6ec2716e64cd75e3e6614a87ee92e4d2">clearbuff</link>(&amp;buff);&#32;&#32;<emphasis role="comment">/*&#32;empty&#32;buffer&#32;into&#32;the&#32;stack&#32;*/</emphasis>
00534 &#32;&#32;<link linkend="_llimits_8h_1a5978f5fda715bd80e845df1e16ad7780">lua_assert</link>(buff.<link linkend="_struct_buff_f_s_1ad6de49c3753d8d10a70b5483ee6e3ef8">pushed</link>&#32;==&#32;1);
00535 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_lobject_8h_1ac2c9eedf3ff2c3042445b3b534f161e1">svalue</link>(<link linkend="_lobject_8h_1a8c21cbb67def90b23342840cd08a5cfd">s2v</link>(L-&gt;<link linkend="_structlua___state_1afeb5dbe379fc406b35fe5f8a5fcfc5d7">top</link>&#32;-&#32;1));
00536 }
00537 
00538 
<anchor xml:id="_lobject_8c_source_1l00539"/><link linkend="_lobject_8h_1a8622279ff260ff226d9663c85ca467dd">00539</link> <emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="_lobject_8c_1a8e224db7123c74d695076a96d1bfda61">luaO_pushfstring</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*fmt,&#32;...)&#32;{
00540 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*msg;
00541 &#32;&#32;va_list&#32;argp;
00542 &#32;&#32;va_start(argp,&#32;fmt);
00543 &#32;&#32;msg&#32;=&#32;<link linkend="_lobject_8c_1aa83fa444a36d79521e846a766fa083d5">luaO_pushvfstring</link>(L,&#32;fmt,&#32;argp);
00544 &#32;&#32;va_end(argp);
00545 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;msg;
00546 }
00547 
00548 <emphasis role="comment">/*&#32;}==================================================================&#32;*/</emphasis>
00549 
00550 
<anchor xml:id="_lobject_8c_source_1l00551"/><link linkend="_lobject_8c_1aa932c88a1737cf31f4e16c6d72254f59">00551</link> <emphasis role="preprocessor">#define&#32;RETS&#32;&#32;&#32;&#32;&quot;...&quot;</emphasis>
<anchor xml:id="_lobject_8c_source_1l00552"/><link linkend="_lobject_8c_1a349316092037fdd0773335fab4e15ee8">00552</link> <emphasis role="preprocessor">#define&#32;PRE&#32;&quot;[string&#32;\&quot;&quot;</emphasis>
<anchor xml:id="_lobject_8c_source_1l00553"/><link linkend="_lobject_8c_1a63cb3834e6075ddad87f8ce324e53988">00553</link> <emphasis role="preprocessor">#define&#32;POS&#32;&quot;\&quot;]&quot;</emphasis>
00554 
<anchor xml:id="_lobject_8c_source_1l00555"/><link linkend="_lobject_8c_1a0cbd5d41f14d898a5bacbe8935b01d0c">00555</link> <emphasis role="preprocessor">#define&#32;addstr(a,b,l)&#32;&#32;&#32;(&#32;memcpy(a,b,(l)&#32;*&#32;sizeof(char)),&#32;a&#32;+=&#32;(l)&#32;)</emphasis>
00556 
<anchor xml:id="_lobject_8c_source_1l00557"/><link linkend="_lobject_8h_1aa83e4edb8b62b06537c43c2ec8b97221">00557</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_lobject_8c_1ac331b4119bbeb45a8a7e5a1afe553b2e">luaO_chunkid</link>&#32;(<emphasis role="keywordtype">char</emphasis>&#32;*out,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*source,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;srclen)&#32;{
00558 &#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;bufflen&#32;=&#32;<link linkend="_luaconf_8h_1a49c31c00aa2852af25a2c43046a21aeb">LUA_IDSIZE</link>;&#32;&#32;<emphasis role="comment">/*&#32;free&#32;space&#32;in&#32;buffer&#32;*/</emphasis>
00559 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(*source&#32;==&#32;<emphasis role="charliteral">&apos;=&apos;</emphasis>)&#32;{&#32;&#32;<emphasis role="comment">/*&#32;&apos;literal&apos;&#32;source&#32;*/</emphasis>
00560 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(srclen&#32;&lt;=&#32;bufflen)&#32;&#32;<emphasis role="comment">/*&#32;small&#32;enough?&#32;*/</emphasis>
00561 &#32;&#32;&#32;&#32;&#32;&#32;memcpy(out,&#32;source&#32;+&#32;1,&#32;srclen&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">char</emphasis>));
00562 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{&#32;&#32;<emphasis role="comment">/*&#32;truncate&#32;it&#32;*/</emphasis>
00563 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8c_1a0cbd5d41f14d898a5bacbe8935b01d0c">addstr</link>(out,&#32;source&#32;+&#32;1,&#32;bufflen&#32;-&#32;1);
00564 &#32;&#32;&#32;&#32;&#32;&#32;*out&#32;=&#32;<emphasis role="charliteral">&apos;\0&apos;</emphasis>;
00565 &#32;&#32;&#32;&#32;}
00566 &#32;&#32;}
00567 &#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(*source&#32;==&#32;<emphasis role="charliteral">&apos;@&apos;</emphasis>)&#32;{&#32;&#32;<emphasis role="comment">/*&#32;file&#32;name&#32;*/</emphasis>
00568 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(srclen&#32;&lt;=&#32;bufflen)&#32;&#32;<emphasis role="comment">/*&#32;small&#32;enough?&#32;*/</emphasis>
00569 &#32;&#32;&#32;&#32;&#32;&#32;memcpy(out,&#32;source&#32;+&#32;1,&#32;srclen&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">char</emphasis>));
00570 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{&#32;&#32;<emphasis role="comment">/*&#32;add&#32;&apos;...&apos;&#32;before&#32;rest&#32;of&#32;name&#32;*/</emphasis>
00571 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8c_1a0cbd5d41f14d898a5bacbe8935b01d0c">addstr</link>(out,&#32;<link linkend="_lobject_8c_1aa932c88a1737cf31f4e16c6d72254f59">RETS</link>,&#32;<link linkend="_llimits_8h_1a6185afb135442b229d91201b1a3c6eb2">LL</link>(<link linkend="_lobject_8c_1aa932c88a1737cf31f4e16c6d72254f59">RETS</link>));
00572 &#32;&#32;&#32;&#32;&#32;&#32;bufflen&#32;-=&#32;<link linkend="_llimits_8h_1a6185afb135442b229d91201b1a3c6eb2">LL</link>(<link linkend="_lobject_8c_1aa932c88a1737cf31f4e16c6d72254f59">RETS</link>);
00573 &#32;&#32;&#32;&#32;&#32;&#32;memcpy(out,&#32;source&#32;+&#32;1&#32;+&#32;srclen&#32;-&#32;bufflen,&#32;bufflen&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">char</emphasis>));
00574 &#32;&#32;&#32;&#32;}
00575 &#32;&#32;}
00576 &#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{&#32;&#32;<emphasis role="comment">/*&#32;string;&#32;format&#32;as&#32;[string&#32;&quot;source&quot;]&#32;*/</emphasis>
00577 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*nl&#32;=&#32;strchr(source,&#32;<emphasis role="charliteral">&apos;\n&apos;</emphasis>);&#32;&#32;<emphasis role="comment">/*&#32;find&#32;first&#32;new&#32;line&#32;(if&#32;any)&#32;*/</emphasis>
00578 &#32;&#32;&#32;&#32;<link linkend="_lobject_8c_1a0cbd5d41f14d898a5bacbe8935b01d0c">addstr</link>(out,&#32;<link linkend="_lobject_8c_1a349316092037fdd0773335fab4e15ee8">PRE</link>,&#32;<link linkend="_llimits_8h_1a6185afb135442b229d91201b1a3c6eb2">LL</link>(<link linkend="_lobject_8c_1a349316092037fdd0773335fab4e15ee8">PRE</link>));&#32;&#32;<emphasis role="comment">/*&#32;add&#32;prefix&#32;*/</emphasis>
00579 &#32;&#32;&#32;&#32;bufflen&#32;-=&#32;<link linkend="_llimits_8h_1a6185afb135442b229d91201b1a3c6eb2">LL</link>(<link linkend="_lobject_8c_1a349316092037fdd0773335fab4e15ee8">PRE</link>&#32;<link linkend="_lobject_8c_1aa932c88a1737cf31f4e16c6d72254f59">RETS</link>&#32;<link linkend="_lobject_8c_1a63cb3834e6075ddad87f8ce324e53988">POS</link>)&#32;+&#32;1;&#32;&#32;<emphasis role="comment">/*&#32;save&#32;space&#32;for&#32;prefix+suffix+&apos;\0&apos;&#32;*/</emphasis>
00580 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(srclen&#32;&lt;&#32;bufflen&#32;&amp;&amp;&#32;nl&#32;==&#32;NULL)&#32;{&#32;&#32;<emphasis role="comment">/*&#32;small&#32;one-line&#32;source?&#32;*/</emphasis>
00581 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8c_1a0cbd5d41f14d898a5bacbe8935b01d0c">addstr</link>(out,&#32;source,&#32;srclen);&#32;&#32;<emphasis role="comment">/*&#32;keep&#32;it&#32;*/</emphasis>
00582 &#32;&#32;&#32;&#32;}
00583 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00584 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(nl&#32;!=&#32;NULL)&#32;srclen&#32;=&#32;nl&#32;-&#32;source;&#32;&#32;<emphasis role="comment">/*&#32;stop&#32;at&#32;first&#32;newline&#32;*/</emphasis>
00585 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(srclen&#32;&gt;&#32;bufflen)&#32;srclen&#32;=&#32;bufflen;
00586 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8c_1a0cbd5d41f14d898a5bacbe8935b01d0c">addstr</link>(out,&#32;source,&#32;srclen);
00587 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_lobject_8c_1a0cbd5d41f14d898a5bacbe8935b01d0c">addstr</link>(out,&#32;<link linkend="_lobject_8c_1aa932c88a1737cf31f4e16c6d72254f59">RETS</link>,&#32;<link linkend="_llimits_8h_1a6185afb135442b229d91201b1a3c6eb2">LL</link>(<link linkend="_lobject_8c_1aa932c88a1737cf31f4e16c6d72254f59">RETS</link>));
00588 &#32;&#32;&#32;&#32;}
00589 &#32;&#32;&#32;&#32;memcpy(out,&#32;<link linkend="_lobject_8c_1a63cb3834e6075ddad87f8ce324e53988">POS</link>,&#32;(<link linkend="_llimits_8h_1a6185afb135442b229d91201b1a3c6eb2">LL</link>(<link linkend="_lobject_8c_1a63cb3834e6075ddad87f8ce324e53988">POS</link>)&#32;+&#32;1)&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">char</emphasis>));
00590 &#32;&#32;}
00591 }
00592 
</programlisting></section>
