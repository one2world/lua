.TH "C:/Users/longyg/Documents/gitprojects/lua/src/lstring.c" 3 "2020年 九月 9日 星期三" "Version 1.0" "Lua_Docmention" \" -*- nroff -*-
.ad l
.nh
.SH NAME
C:/Users/longyg/Documents/gitprojects/lua/src/lstring.c
.SH SYNOPSIS
.br
.PP
\fC#include 'lprefix\&.h'\fP
.br
\fC#include <string\&.h>\fP
.br
\fC#include 'lua\&.h'\fP
.br
\fC#include 'ldebug\&.h'\fP
.br
\fC#include 'ldo\&.h'\fP
.br
\fC#include 'lmem\&.h'\fP
.br
\fC#include 'lobject\&.h'\fP
.br
\fC#include 'lstate\&.h'\fP
.br
\fC#include 'lstring\&.h'\fP
.br

.SS "宏定义"

.in +1c
.ti -1c
.RI "#define \fBlstring_c\fP"
.br
.ti -1c
.RI "#define \fBLUA_CORE\fP"
.br
.ti -1c
.RI "#define \fBLUAI_HASHLIMIT\fP   5"
.br
.ti -1c
.RI "#define \fBMAXSTRTB\fP   \fBcast_int\fP(\fBluaM_limitN\fP(\fBMAX_INT\fP, \fBTString\fP*))"
.br
.in -1c
.SS "函数"

.in +1c
.ti -1c
.RI "int \fBluaS_eqlngstr\fP (\fBTString\fP *a, \fBTString\fP *b)"
.br
.ti -1c
.RI "unsigned int \fBluaS_hash\fP (const char *str, size_t l, unsigned int seed, size_t step)"
.br
.ti -1c
.RI "unsigned int \fBluaS_hashlongstr\fP (\fBTString\fP *ts)"
.br
.ti -1c
.RI "static void \fBtablerehash\fP (\fBTString\fP **vect, int osize, int nsize)"
.br
.ti -1c
.RI "void \fBluaS_resize\fP (\fBlua_State\fP *L, int nsize)"
.br
.ti -1c
.RI "void \fBluaS_clearcache\fP (\fBglobal_State\fP *g)"
.br
.ti -1c
.RI "void \fBluaS_init\fP (\fBlua_State\fP *L)"
.br
.ti -1c
.RI "static \fBTString\fP * \fBcreatestrobj\fP (\fBlua_State\fP *L, size_t l, int tag, unsigned int h)"
.br
.ti -1c
.RI "\fBTString\fP * \fBluaS_createlngstrobj\fP (\fBlua_State\fP *L, size_t l)"
.br
.ti -1c
.RI "void \fBluaS_remove\fP (\fBlua_State\fP *L, \fBTString\fP *ts)"
.br
.ti -1c
.RI "static void \fBgrowstrtab\fP (\fBlua_State\fP *L, \fBstringtable\fP *tb)"
.br
.ti -1c
.RI "static \fBTString\fP * \fBinternshrstr\fP (\fBlua_State\fP *L, const char *str, size_t l)"
.br
.ti -1c
.RI "\fBTString\fP * \fBluaS_newlstr\fP (\fBlua_State\fP *L, const char *str, size_t l)"
.br
.ti -1c
.RI "\fBTString\fP * \fBluaS_new\fP (\fBlua_State\fP *L, const char *str)"
.br
.ti -1c
.RI "\fBUdata\fP * \fBluaS_newudata\fP (\fBlua_State\fP *L, size_t s, int nuvalue)"
.br
.in -1c
.SH "宏定义说明"
.PP 
.SS "#define lstring_c"

.PP
在文件 lstring\&.c 第 7 行定义\&.
.SS "#define LUA_CORE"

.PP
在文件 lstring\&.c 第 8 行定义\&.
.SS "#define LUAI_HASHLIMIT   5"

.PP
在文件 lstring\&.c 第 30 行定义\&.
.SS "#define MAXSTRTB   \fBcast_int\fP(\fBluaM_limitN\fP(\fBMAX_INT\fP, \fBTString\fP*))"

.PP
在文件 lstring\&.c 第 38 行定义\&.
.SH "函数说明"
.PP 
.SS "static \fBTString\fP* createstrobj (\fBlua_State\fP * L, size_t l, int tag, unsigned int h)\fC [static]\fP"

.PP
在文件 lstring\&.c 第 155 行定义\&.
.SS "static void growstrtab (\fBlua_State\fP * L, \fBstringtable\fP * tb)\fC [static]\fP"

.PP
在文件 lstring\&.c 第 186 行定义\&.
.SS "static \fBTString\fP* internshrstr (\fBlua_State\fP * L, const char * str, size_t l)\fC [static]\fP"

.PP
在文件 lstring\&.c 第 200 行定义\&.
.SS "void luaS_clearcache (\fBglobal_State\fP * g)"

.PP
在文件 lstring\&.c 第 122 行定义\&.
.SS "\fBTString\fP* luaS_createlngstrobj (\fBlua_State\fP * L, size_t l)"

.PP
在文件 lstring\&.c 第 169 行定义\&.
.SS "int luaS_eqlngstr (\fBTString\fP * a, \fBTString\fP * b)"

.PP
在文件 lstring\&.c 第 44 行定义\&.
.SS "unsigned int luaS_hash (const char * str, size_t l, unsigned int seed, size_t step)"

.PP
在文件 lstring\&.c 第 53 行定义\&.
.SS "unsigned int luaS_hashlongstr (\fBTString\fP * ts)"

.PP
在文件 lstring\&.c 第 62 行定义\&.
.SS "void luaS_init (\fBlua_State\fP * L)"

.PP
在文件 lstring\&.c 第 135 行定义\&.
.SS "\fBTString\fP* luaS_new (\fBlua_State\fP * L, const char * str)"

.PP
在文件 lstring\&.c 第 253 行定义\&.
.SS "\fBTString\fP* luaS_newlstr (\fBlua_State\fP * L, const char * str, size_t l)"

.PP
在文件 lstring\&.c 第 233 行定义\&.
.SS "\fBUdata\fP* luaS_newudata (\fBlua_State\fP * L, size_t s, int nuvalue)"

.PP
在文件 lstring\&.c 第 270 行定义\&.
.SS "void luaS_remove (\fBlua_State\fP * L, \fBTString\fP * ts)"

.PP
在文件 lstring\&.c 第 176 行定义\&.
.SS "void luaS_resize (\fBlua_State\fP * L, int nsize)"

.PP
在文件 lstring\&.c 第 97 行定义\&.
.SS "static void tablerehash (\fBTString\fP ** vect, int osize, int nsize)\fC [static]\fP"

.PP
在文件 lstring\&.c 第 74 行定义\&.
.SH "作者"
.PP 
由 Doyxgen 通过分析 Lua_Docmention 的 源代码自动生成\&.
