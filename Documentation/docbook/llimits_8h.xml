<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_llimits_8h" xml:lang="zh">
<title>D:/gitworkspace/lua/llimits.h 文件参考</title>
<indexterm><primary>D:/gitworkspace/lua/llimits.h</primary></indexterm>
<programlisting>#include &lt;limits.h&gt;
#include &lt;stddef.h&gt;
#include &quot;lua.h&quot;
</programlisting>llimits.h 的引用(Include)关系图:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="llimits_8h__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
此图展示该文件直接或间接的被哪些文件引用了:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="llimits_8h__dep__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>宏定义    </title>
        <itemizedlist>
            <listitem><para>#define <link linkend="_llimits_8h_1aa927c7bf177c162feda3483e1e972b3a">MAX_SIZET</link>   ((size_t)(~(size_t)0))</para>
</listitem>
            <listitem><para>#define <link linkend="_llimits_8h_1a0592dba56693fad79136250c11e5a7fe">MAX_SIZE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_llimits_8h_1a5e67dd5554c315bda4b54cd5ed0e846e">MAX_LUMEM</link>   ((<link linkend="_llimits_8h_1aac8c50ca0aa51c80523376da77c2c4d8">lu_mem</link>)(~(<link linkend="_llimits_8h_1aac8c50ca0aa51c80523376da77c2c4d8">lu_mem</link>)0))</para>
</listitem>
            <listitem><para>#define <link linkend="_llimits_8h_1a99e52005f8b99ce8e36df841b281078e">MAX_LMEM</link>   ((<link linkend="_llimits_8h_1a24fc195087e262c99a4cf0f9b346a684">l_mem</link>)(<link linkend="_llimits_8h_1a5e67dd5554c315bda4b54cd5ed0e846e">MAX_LUMEM</link> &gt;&gt; 1))</para>
</listitem>
            <listitem><para>#define <link linkend="_llimits_8h_1aaa1ac5caef84256eaeb39594e58e096f">MAX_INT</link>   INT_MAX  /* maximum value of an int */</para>
</listitem>
            <listitem><para>#define <link linkend="_llimits_8h_1a201d8e40e2923328862d720d0dc6a952">log2maxs</link>(t)   (sizeof(t) * 8 - 2)</para>
</listitem>
            <listitem><para>#define <link linkend="_llimits_8h_1ada65e002d4b7df9ebfa7dde2d12357db">ispow2</link>(x)   (((x) &amp; ((x) - 1)) == 0)</para>
</listitem>
            <listitem><para>#define <link linkend="_llimits_8h_1a6185afb135442b229d91201b1a3c6eb2">LL</link>(x)   (sizeof(x)/sizeof(char) - 1)</para>
</listitem>
            <listitem><para>#define <link linkend="_llimits_8h_1ad861f24ac9e8c32f78455aab3d2e7b51">point2uint</link>(p)   ((unsigned int)((size_t)(p) &amp; UINT_MAX))</para>
</listitem>
            <listitem><para>#define <link linkend="_llimits_8h_1a5978f5fda715bd80e845df1e16ad7780">lua_assert</link>(c)   ((void)0)</para>
</listitem>
            <listitem><para>#define <link linkend="_llimits_8h_1afac1404af62451f8653440ecb6e773fc">check_exp</link>(c,  e)   (e)</para>
</listitem>
            <listitem><para>#define <link linkend="_llimits_8h_1a825f22ba1e16fd60e3aae8fe8efc1c4d">lua_longassert</link>(c)   ((void)0)</para>
</listitem>
            <listitem><para>#define <link linkend="_llimits_8h_1a5e99efda77b5660d36828d61d92b5cdf">luai_apicheck</link>(l,  e)   ((void)l, <link linkend="_lualib_8h_1abea1f576564ec516f6efe8c014bdef2d">lua_assert</link>(e))</para>
</listitem>
            <listitem><para>#define <link linkend="_llimits_8h_1ad7a42e1cc11f94e1f06ed80814fcb606">api_check</link>(l,  e,  msg)   <link linkend="_llimits_8h_1a5e99efda77b5660d36828d61d92b5cdf">luai_apicheck</link>(l,(e) &amp;&amp; msg)</para>
</listitem>
            <listitem><para>#define <link linkend="_llimits_8h_1a86d500a34c624c2cae56bc25a31b12f3">UNUSED</link>(x)   ((void)(x))</para>
</listitem>
            <listitem><para>#define <link linkend="_llimits_8h_1af17d62ec9e237a7644de6b9b34a48a34">cast</link>(t,  exp)   ((t)(exp))</para>
</listitem>
            <listitem><para>#define <link linkend="_llimits_8h_1a52a5166d7dc0590b63a9331cfc0f4564">cast_void</link>(i)   <link linkend="_llimits_8h_1af17d62ec9e237a7644de6b9b34a48a34">cast</link>(void, (i))</para>
</listitem>
            <listitem><para>#define <link linkend="_llimits_8h_1a672c0fddf71f33d86ed8aa62ad914d52">cast_voidp</link>(i)   <link linkend="_llimits_8h_1af17d62ec9e237a7644de6b9b34a48a34">cast</link>(void *, (i))</para>
</listitem>
            <listitem><para>#define <link linkend="_llimits_8h_1ac92cecb12c5aba1164877e81e76e2cb6">cast_num</link>(i)   <link linkend="_llimits_8h_1af17d62ec9e237a7644de6b9b34a48a34">cast</link>(<link linkend="_lua_8h_1af0a6ed3b852d680769cfc410a0672172">lua_Number</link>, (i))</para>
</listitem>
            <listitem><para>#define <link linkend="_llimits_8h_1a37a9e2c4b53433d34bad0f12a1500c08">cast_int</link>(i)   <link linkend="_llimits_8h_1af17d62ec9e237a7644de6b9b34a48a34">cast</link>(int, (i))</para>
</listitem>
            <listitem><para>#define <link linkend="_llimits_8h_1a6ce2ddc5b419ed6f302573db3cc03e56">cast_uint</link>(i)   <link linkend="_llimits_8h_1af17d62ec9e237a7644de6b9b34a48a34">cast</link>(unsigned int, (i))</para>
</listitem>
            <listitem><para>#define <link linkend="_llimits_8h_1a596f5b6e992f53a5a4e5732083448dd4">cast_byte</link>(i)   <link linkend="_llimits_8h_1af17d62ec9e237a7644de6b9b34a48a34">cast</link>(<link linkend="_llimits_8h_1ae1fe9ac10d9803bd1d7bdf30b18bad68">lu_byte</link>, (i))</para>
</listitem>
            <listitem><para>#define <link linkend="_llimits_8h_1aa0c49a2b32329cc39df5ccafd1f720e0">cast_uchar</link>(i)   <link linkend="_llimits_8h_1af17d62ec9e237a7644de6b9b34a48a34">cast</link>(unsigned char, (i))</para>
</listitem>
            <listitem><para>#define <link linkend="_llimits_8h_1a045e548576226e8c7e9ab5de8a59f4bc">cast_char</link>(i)   <link linkend="_llimits_8h_1af17d62ec9e237a7644de6b9b34a48a34">cast</link>(char, (i))</para>
</listitem>
            <listitem><para>#define <link linkend="_llimits_8h_1a1d905979f8c901b7143b43ee98341206">cast_charp</link>(i)   <link linkend="_llimits_8h_1af17d62ec9e237a7644de6b9b34a48a34">cast</link>(char *, (i))</para>
</listitem>
            <listitem><para>#define <link linkend="_llimits_8h_1a025d385a5ce274fa6eade82b6e1458d1">cast_sizet</link>(i)   <link linkend="_llimits_8h_1af17d62ec9e237a7644de6b9b34a48a34">cast</link>(size_t, (i))</para>
</listitem>
            <listitem><para>#define <link linkend="_llimits_8h_1a5871309e671ba9f938fcb1e0d3bcbeca">l_castS2U</link>(i)   ((<link linkend="_lua_8h_1a2357bdcd9af1aaef0a6895a9c3b7eccf">lua_Unsigned</link>)(i))</para>
</listitem>
            <listitem><para>#define <link linkend="_llimits_8h_1a873fa1b216f8caed046edbcebd4c1bc8">l_castU2S</link>(i)   ((<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>)(i))</para>
</listitem>
            <listitem><para>#define <link linkend="_llimits_8h_1a217a0bd562b98ae8c2ffce44935351e1">likely</link>(x)   (x)</para>
</listitem>
            <listitem><para>#define <link linkend="_llimits_8h_1ac6c45889010c1bd68631771b64f18101">unlikely</link>(x)   (x)</para>
</listitem>
            <listitem><para>#define <link linkend="_llimits_8h_1a9f743fcc9a5278cb9ee10355f09f7302">l_noret</link>   void</para>
</listitem>
            <listitem><para>#define <link linkend="_llimits_8h_1a54fe4797308d6b24bf84fa0129a155bd">LUAI_MAXSHORTLEN</link>   40</para>
</listitem>
            <listitem><para>#define <link linkend="_llimits_8h_1a91604f8876fd042d7b1cdbade17927e6">MINSTRTABSIZE</link>   128</para>
</listitem>
            <listitem><para>#define <link linkend="_llimits_8h_1aa8382779dd8eeb2dea3deb97dec0ed1c">STRCACHE_N</link>   53</para>
</listitem>
            <listitem><para>#define <link linkend="_llimits_8h_1a3e028bcc45ab536a37bb6860caf3d2ca">STRCACHE_M</link>   2</para>
</listitem>
            <listitem><para>#define <link linkend="_llimits_8h_1aa0320f75a72bf131ae24d39111ac9938">LUA_MINBUFFER</link>   32</para>
</listitem>
            <listitem><para>#define <link linkend="_llimits_8h_1aa68a48b9104aeadf4842c25c12a9b8c9">lua_lock</link>(L)   ((void) 0)</para>
</listitem>
            <listitem><para>#define <link linkend="_llimits_8h_1a1781f2a7d9161848a246d475a9171875">lua_unlock</link>(L)   ((void) 0)</para>
</listitem>
            <listitem><para>#define <link linkend="_llimits_8h_1a7bf655fe36dca3227f9e7e04226d3e6a">luai_threadyield</link>(L)   {<link linkend="_ltests_8h_1af24b94f132c4ba762750f4237d7bbba5">lua_unlock</link>(L); <link linkend="_ltests_8h_1a459a2c5b3654fe38a83017e14b3fa63b">lua_lock</link>(L);}</para>
</listitem>
            <listitem><para>#define <link linkend="_llimits_8h_1a05bbfa34e58a82e39cc19701e5359881">luai_userstateopen</link>(L)   ((void)L)</para>
</listitem>
            <listitem><para>#define <link linkend="_llimits_8h_1ae269d75893fce50868b37c32214648e5">luai_userstateclose</link>(L)   ((void)L)</para>
</listitem>
            <listitem><para>#define <link linkend="_llimits_8h_1a533eae4cf709fa76f3974823354e4067">luai_userstatethread</link>(L,  L1)   ((void)L)</para>
</listitem>
            <listitem><para>#define <link linkend="_llimits_8h_1a7c5595955dfef0964d1286b3f29e2aad">luai_userstatefree</link>(L,  L1)   ((void)L)</para>
</listitem>
            <listitem><para>#define <link linkend="_llimits_8h_1af110e056a602175437e5cda45dd7db5e">luai_userstateresume</link>(L,  n)   ((void)L)</para>
</listitem>
            <listitem><para>#define <link linkend="_llimits_8h_1ade427932b2d70d9f0b04c4d6a2af177a">luai_userstateyield</link>(L,  n)   ((void)L)</para>
</listitem>
            <listitem><para>#define <link linkend="_llimits_8h_1a9ca37a98a6032ab21dcfd63d42e66f89">luai_numidiv</link>(L,  a,  b)   ((void)L, <link linkend="_luaconf_8h_1a89e74d547b8879cf8d10c3e956c283b9">l_floor</link>(<link linkend="_llimits_8h_1a2a095b8d523b51332eb223df531367d2">luai_numdiv</link>(L,a,b)))</para>
</listitem>
            <listitem><para>#define <link linkend="_llimits_8h_1a2a095b8d523b51332eb223df531367d2">luai_numdiv</link>(L,  a,  b)   ((a)/(b))</para>
</listitem>
            <listitem><para>#define <link linkend="_llimits_8h_1ac6e6bfca420c761a89eee023103c34f4">luai_nummod</link>(L,  a,  b,  m)</para>
</listitem>
            <listitem><para>#define <link linkend="_llimits_8h_1a4a3b06f2c7239f8dcbd101ca20cc507a">luai_numpow</link>(L,  a,  b)   ((void)L, <link linkend="_luaconf_8h_1a919f548d82dc9a0681dd0ba8996d986d">l_mathop</link>(pow)(a,b))</para>
</listitem>
            <listitem><para>#define <link linkend="_llimits_8h_1af3eb5d1884e4512d2701bbc97bb82e81">luai_numadd</link>(L,  a,  b)   ((a)+(b))</para>
</listitem>
            <listitem><para>#define <link linkend="_llimits_8h_1a93e733c7e860d7fb838b6af414405662">luai_numsub</link>(L,  a,  b)   ((a)-(b))</para>
</listitem>
            <listitem><para>#define <link linkend="_llimits_8h_1a1cbcef9e269f0ac1a5f34898a7c4ae36">luai_nummul</link>(L,  a,  b)   ((a)*(b))</para>
</listitem>
            <listitem><para>#define <link linkend="_llimits_8h_1a84c57a852cdc4b46c678cb3fab715846">luai_numunm</link>(L,  a)   (-(a))</para>
</listitem>
            <listitem><para>#define <link linkend="_llimits_8h_1ae06bbbe345c8bb028e233120466d387d">luai_numeq</link>(a,  b)   ((a)==(b))</para>
</listitem>
            <listitem><para>#define <link linkend="_llimits_8h_1ae035faaeb068720ee8540210870ee5c9">luai_numlt</link>(a,  b)   ((a)&lt;(b))</para>
</listitem>
            <listitem><para>#define <link linkend="_llimits_8h_1af803655e8c9be7ba1f3f3fb0c4f730d7">luai_numle</link>(a,  b)   ((a)&lt;=(b))</para>
</listitem>
            <listitem><para>#define <link linkend="_llimits_8h_1a252c8bc400dc44bd996b19e7cf487871">luai_numgt</link>(a,  b)   ((a)&gt;(b))</para>
</listitem>
            <listitem><para>#define <link linkend="_llimits_8h_1a727a96f18bda273bd57dee105a274abe">luai_numge</link>(a,  b)   ((a)&gt;=(b))</para>
</listitem>
            <listitem><para>#define <link linkend="_llimits_8h_1a5ec99a344dba64c30c3ddc6eed8e2e51">luai_numisnan</link>(a)   (!<link linkend="_llimits_8h_1ae06bbbe345c8bb028e233120466d387d">luai_numeq</link>((a), (a)))</para>
</listitem>
            <listitem><para>#define <link linkend="_llimits_8h_1a51890ff33a337eee53fc73934fa7ba89">condmovestack</link>(L,  pre,  pos)   ((void)0)</para>
</listitem>
            <listitem><para>#define <link linkend="_llimits_8h_1ac9968fbda6cf783c96a635cd891931f8">condchangemem</link>(L,  pre,  pos)   ((void)0)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>类型定义    </title>
        <itemizedlist>
            <listitem><para>typedef unsigned long <link linkend="_llimits_8h_1aac8c50ca0aa51c80523376da77c2c4d8">lu_mem</link></para>
</listitem>
            <listitem><para>typedef long <link linkend="_llimits_8h_1a24fc195087e262c99a4cf0f9b346a684">l_mem</link></para>
</listitem>
            <listitem><para>typedef unsigned char <link linkend="_llimits_8h_1ae1fe9ac10d9803bd1d7bdf30b18bad68">lu_byte</link></para>
</listitem>
            <listitem><para>typedef signed char <link linkend="_llimits_8h_1aab58a246c9e0a85c4c2ed0fd8d6724bb">ls_byte</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_luaconf_8h_1ae3594e990592ab0bf7243dad64c76d2a">LUAI_UACNUMBER</link> <link linkend="_llimits_8h_1a792eefbf119f914b73400c314411c3e2">l_uacNumber</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_luaconf_8h_1a7a9d650ef5ea12d81160db595fe9f177">LUAI_UACINT</link> <link linkend="_llimits_8h_1ac8d5f795aedd7e084ef2dab7b5d81bde">l_uacInt</link></para>
</listitem>
            <listitem><para>typedef unsigned long <link linkend="_llimits_8h_1abeb00a444eb1dc99a4a2baee15bd898a">l_uint32</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_llimits_8h_1abeb00a444eb1dc99a4a2baee15bd898a">l_uint32</link> <link linkend="_llimits_8h_1aa81d2e7f7263ef29946852d4966a192e">Instruction</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>宏定义说明</title>
<anchor xml:id="_llimits_8h_1ad7a42e1cc11f94e1f06ed80814fcb606"/>    <section>
    <title>api_check</title>
<indexterm><primary>api_check</primary><secondary>llimits.h</secondary></indexterm>
<indexterm><primary>llimits.h</primary><secondary>api_check</secondary></indexterm>
<para><computeroutput>#define api_check( l,  e,  msg)   <link linkend="_llimits_8h_1a5e99efda77b5660d36828d61d92b5cdf">luai_apicheck</link>(l,(e) &amp;&amp; msg)</computeroutput></para><para>
在文件 <link linkend="_llimits_8h_source">llimits.h</link> 第 <link linkend="_llimits_8h_source_1l00113">113</link> 行定义.</para>
    </section><anchor xml:id="_llimits_8h_1af17d62ec9e237a7644de6b9b34a48a34"/>    <section>
    <title>cast</title>
<indexterm><primary>cast</primary><secondary>llimits.h</secondary></indexterm>
<indexterm><primary>llimits.h</primary><secondary>cast</secondary></indexterm>
<para><computeroutput>#define cast( t,  exp)   ((t)(exp))</computeroutput></para><para>
在文件 <link linkend="_llimits_8h_source">llimits.h</link> 第 <link linkend="_llimits_8h_source_1l00123">123</link> 行定义.</para>
    </section><anchor xml:id="_llimits_8h_1a596f5b6e992f53a5a4e5732083448dd4"/>    <section>
    <title>cast_byte</title>
<indexterm><primary>cast_byte</primary><secondary>llimits.h</secondary></indexterm>
<indexterm><primary>llimits.h</primary><secondary>cast_byte</secondary></indexterm>
<para><computeroutput>#define cast_byte( i)   <link linkend="_llimits_8h_1af17d62ec9e237a7644de6b9b34a48a34">cast</link>(<link linkend="_llimits_8h_1ae1fe9ac10d9803bd1d7bdf30b18bad68">lu_byte</link>, (i))</computeroutput></para><para>
在文件 <link linkend="_llimits_8h_source">llimits.h</link> 第 <link linkend="_llimits_8h_source_1l00130">130</link> 行定义.</para>
    </section><anchor xml:id="_llimits_8h_1a045e548576226e8c7e9ab5de8a59f4bc"/>    <section>
    <title>cast_char</title>
<indexterm><primary>cast_char</primary><secondary>llimits.h</secondary></indexterm>
<indexterm><primary>llimits.h</primary><secondary>cast_char</secondary></indexterm>
<para><computeroutput>#define cast_char( i)   <link linkend="_llimits_8h_1af17d62ec9e237a7644de6b9b34a48a34">cast</link>(char, (i))</computeroutput></para><para>
在文件 <link linkend="_llimits_8h_source">llimits.h</link> 第 <link linkend="_llimits_8h_source_1l00132">132</link> 行定义.</para>
    </section><anchor xml:id="_llimits_8h_1a1d905979f8c901b7143b43ee98341206"/>    <section>
    <title>cast_charp</title>
<indexterm><primary>cast_charp</primary><secondary>llimits.h</secondary></indexterm>
<indexterm><primary>llimits.h</primary><secondary>cast_charp</secondary></indexterm>
<para><computeroutput>#define cast_charp( i)   <link linkend="_llimits_8h_1af17d62ec9e237a7644de6b9b34a48a34">cast</link>(char *, (i))</computeroutput></para><para>
在文件 <link linkend="_llimits_8h_source">llimits.h</link> 第 <link linkend="_llimits_8h_source_1l00133">133</link> 行定义.</para>
    </section><anchor xml:id="_llimits_8h_1a37a9e2c4b53433d34bad0f12a1500c08"/>    <section>
    <title>cast_int</title>
<indexterm><primary>cast_int</primary><secondary>llimits.h</secondary></indexterm>
<indexterm><primary>llimits.h</primary><secondary>cast_int</secondary></indexterm>
<para><computeroutput>#define cast_int( i)   <link linkend="_llimits_8h_1af17d62ec9e237a7644de6b9b34a48a34">cast</link>(int, (i))</computeroutput></para><para>
在文件 <link linkend="_llimits_8h_source">llimits.h</link> 第 <link linkend="_llimits_8h_source_1l00128">128</link> 行定义.</para>
    </section><anchor xml:id="_llimits_8h_1ac92cecb12c5aba1164877e81e76e2cb6"/>    <section>
    <title>cast_num</title>
<indexterm><primary>cast_num</primary><secondary>llimits.h</secondary></indexterm>
<indexterm><primary>llimits.h</primary><secondary>cast_num</secondary></indexterm>
<para><computeroutput>#define cast_num( i)   <link linkend="_llimits_8h_1af17d62ec9e237a7644de6b9b34a48a34">cast</link>(<link linkend="_lua_8h_1af0a6ed3b852d680769cfc410a0672172">lua_Number</link>, (i))</computeroutput></para><para>
在文件 <link linkend="_llimits_8h_source">llimits.h</link> 第 <link linkend="_llimits_8h_source_1l00127">127</link> 行定义.</para>
    </section><anchor xml:id="_llimits_8h_1a025d385a5ce274fa6eade82b6e1458d1"/>    <section>
    <title>cast_sizet</title>
<indexterm><primary>cast_sizet</primary><secondary>llimits.h</secondary></indexterm>
<indexterm><primary>llimits.h</primary><secondary>cast_sizet</secondary></indexterm>
<para><computeroutput>#define cast_sizet( i)   <link linkend="_llimits_8h_1af17d62ec9e237a7644de6b9b34a48a34">cast</link>(size_t, (i))</computeroutput></para><para>
在文件 <link linkend="_llimits_8h_source">llimits.h</link> 第 <link linkend="_llimits_8h_source_1l00134">134</link> 行定义.</para>
    </section><anchor xml:id="_llimits_8h_1aa0c49a2b32329cc39df5ccafd1f720e0"/>    <section>
    <title>cast_uchar</title>
<indexterm><primary>cast_uchar</primary><secondary>llimits.h</secondary></indexterm>
<indexterm><primary>llimits.h</primary><secondary>cast_uchar</secondary></indexterm>
<para><computeroutput>#define cast_uchar( i)   <link linkend="_llimits_8h_1af17d62ec9e237a7644de6b9b34a48a34">cast</link>(unsigned char, (i))</computeroutput></para><para>
在文件 <link linkend="_llimits_8h_source">llimits.h</link> 第 <link linkend="_llimits_8h_source_1l00131">131</link> 行定义.</para>
    </section><anchor xml:id="_llimits_8h_1a6ce2ddc5b419ed6f302573db3cc03e56"/>    <section>
    <title>cast_uint</title>
<indexterm><primary>cast_uint</primary><secondary>llimits.h</secondary></indexterm>
<indexterm><primary>llimits.h</primary><secondary>cast_uint</secondary></indexterm>
<para><computeroutput>#define cast_uint( i)   <link linkend="_llimits_8h_1af17d62ec9e237a7644de6b9b34a48a34">cast</link>(unsigned int, (i))</computeroutput></para><para>
在文件 <link linkend="_llimits_8h_source">llimits.h</link> 第 <link linkend="_llimits_8h_source_1l00129">129</link> 行定义.</para>
    </section><anchor xml:id="_llimits_8h_1a52a5166d7dc0590b63a9331cfc0f4564"/>    <section>
    <title>cast_void</title>
<indexterm><primary>cast_void</primary><secondary>llimits.h</secondary></indexterm>
<indexterm><primary>llimits.h</primary><secondary>cast_void</secondary></indexterm>
<para><computeroutput>#define cast_void( i)   <link linkend="_llimits_8h_1af17d62ec9e237a7644de6b9b34a48a34">cast</link>(void, (i))</computeroutput></para><para>
在文件 <link linkend="_llimits_8h_source">llimits.h</link> 第 <link linkend="_llimits_8h_source_1l00125">125</link> 行定义.</para>
    </section><anchor xml:id="_llimits_8h_1a672c0fddf71f33d86ed8aa62ad914d52"/>    <section>
    <title>cast_voidp</title>
<indexterm><primary>cast_voidp</primary><secondary>llimits.h</secondary></indexterm>
<indexterm><primary>llimits.h</primary><secondary>cast_voidp</secondary></indexterm>
<para><computeroutput>#define cast_voidp( i)   <link linkend="_llimits_8h_1af17d62ec9e237a7644de6b9b34a48a34">cast</link>(void *, (i))</computeroutput></para><para>
在文件 <link linkend="_llimits_8h_source">llimits.h</link> 第 <link linkend="_llimits_8h_source_1l00126">126</link> 行定义.</para>
    </section><anchor xml:id="_llimits_8h_1afac1404af62451f8653440ecb6e773fc"/>    <section>
    <title>check_exp</title>
<indexterm><primary>check_exp</primary><secondary>llimits.h</secondary></indexterm>
<indexterm><primary>llimits.h</primary><secondary>check_exp</secondary></indexterm>
<para><computeroutput>#define check_exp( c,  e)   (e)</computeroutput></para><para>
在文件 <link linkend="_llimits_8h_source">llimits.h</link> 第 <link linkend="_llimits_8h_source_1l00102">102</link> 行定义.</para>
    </section><anchor xml:id="_llimits_8h_1ac9968fbda6cf783c96a635cd891931f8"/>    <section>
    <title>condchangemem</title>
<indexterm><primary>condchangemem</primary><secondary>llimits.h</secondary></indexterm>
<indexterm><primary>llimits.h</primary><secondary>condchangemem</secondary></indexterm>
<para><computeroutput>#define condchangemem( L,  pre,  pos)   ((void)0)</computeroutput></para><para>
在文件 <link linkend="_llimits_8h_source">llimits.h</link> 第 <link linkend="_llimits_8h_source_1l00351">351</link> 行定义.</para>
    </section><anchor xml:id="_llimits_8h_1a51890ff33a337eee53fc73934fa7ba89"/>    <section>
    <title>condmovestack</title>
<indexterm><primary>condmovestack</primary><secondary>llimits.h</secondary></indexterm>
<indexterm><primary>llimits.h</primary><secondary>condmovestack</secondary></indexterm>
<para><computeroutput>#define condmovestack( L,  pre,  pos)   ((void)0)</computeroutput></para><para>
在文件 <link linkend="_llimits_8h_source">llimits.h</link> 第 <link linkend="_llimits_8h_source_1l00343">343</link> 行定义.</para>
    </section><anchor xml:id="_llimits_8h_1ada65e002d4b7df9ebfa7dde2d12357db"/>    <section>
    <title>ispow2</title>
<indexterm><primary>ispow2</primary><secondary>llimits.h</secondary></indexterm>
<indexterm><primary>llimits.h</primary><secondary>ispow2</secondary></indexterm>
<para><computeroutput>#define ispow2( x)   (((x) &amp; ((x) - 1)) == 0)</computeroutput></para><para>
在文件 <link linkend="_llimits_8h_source">llimits.h</link> 第 <link linkend="_llimits_8h_source_1l00066">66</link> 行定义.</para>
    </section><anchor xml:id="_llimits_8h_1a5871309e671ba9f938fcb1e0d3bcbeca"/>    <section>
    <title>l_castS2U</title>
<indexterm><primary>l_castS2U</primary><secondary>llimits.h</secondary></indexterm>
<indexterm><primary>llimits.h</primary><secondary>l_castS2U</secondary></indexterm>
<para><computeroutput>#define l_castS2U( i)   ((<link linkend="_lua_8h_1a2357bdcd9af1aaef0a6895a9c3b7eccf">lua_Unsigned</link>)(i))</computeroutput></para><para>
在文件 <link linkend="_llimits_8h_source">llimits.h</link> 第 <link linkend="_llimits_8h_source_1l00139">139</link> 行定义.</para>
    </section><anchor xml:id="_llimits_8h_1a873fa1b216f8caed046edbcebd4c1bc8"/>    <section>
    <title>l_castU2S</title>
<indexterm><primary>l_castU2S</primary><secondary>llimits.h</secondary></indexterm>
<indexterm><primary>llimits.h</primary><secondary>l_castU2S</secondary></indexterm>
<para><computeroutput>#define l_castU2S( i)   ((<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>)(i))</computeroutput></para><para>
在文件 <link linkend="_llimits_8h_source">llimits.h</link> 第 <link linkend="_llimits_8h_source_1l00148">148</link> 行定义.</para>
    </section><anchor xml:id="_llimits_8h_1a9f743fcc9a5278cb9ee10355f09f7302"/>    <section>
    <title>l_noret</title>
<indexterm><primary>l_noret</primary><secondary>llimits.h</secondary></indexterm>
<indexterm><primary>llimits.h</primary><secondary>l_noret</secondary></indexterm>
<para><computeroutput>#define l_noret   void</computeroutput></para><para>
在文件 <link linkend="_llimits_8h_source">llimits.h</link> 第 <link linkend="_llimits_8h_source_1l00178">178</link> 行定义.</para>
    </section><anchor xml:id="_llimits_8h_1a217a0bd562b98ae8c2ffce44935351e1"/>    <section>
    <title>likely</title>
<indexterm><primary>likely</primary><secondary>llimits.h</secondary></indexterm>
<indexterm><primary>llimits.h</primary><secondary>likely</secondary></indexterm>
<para><computeroutput>#define likely( x)   (x)</computeroutput></para><para>
在文件 <link linkend="_llimits_8h_source">llimits.h</link> 第 <link linkend="_llimits_8h_source_1l00161">161</link> 行定义.</para>
    </section><anchor xml:id="_llimits_8h_1a6185afb135442b229d91201b1a3c6eb2"/>    <section>
    <title>LL</title>
<indexterm><primary>LL</primary><secondary>llimits.h</secondary></indexterm>
<indexterm><primary>llimits.h</primary><secondary>LL</secondary></indexterm>
<para><computeroutput>#define LL( x)   (sizeof(x)/sizeof(char) - 1)</computeroutput></para><para>
在文件 <link linkend="_llimits_8h_source">llimits.h</link> 第 <link linkend="_llimits_8h_source_1l00070">70</link> 行定义.</para>
    </section><anchor xml:id="_llimits_8h_1a201d8e40e2923328862d720d0dc6a952"/>    <section>
    <title>log2maxs</title>
<indexterm><primary>log2maxs</primary><secondary>llimits.h</secondary></indexterm>
<indexterm><primary>llimits.h</primary><secondary>log2maxs</secondary></indexterm>
<para><computeroutput>#define log2maxs( t)   (sizeof(t) * 8 - 2)</computeroutput></para><para>
在文件 <link linkend="_llimits_8h_source">llimits.h</link> 第 <link linkend="_llimits_8h_source_1l00060">60</link> 行定义.</para>
    </section><anchor xml:id="_llimits_8h_1a5978f5fda715bd80e845df1e16ad7780"/>    <section>
    <title>lua_assert</title>
<indexterm><primary>lua_assert</primary><secondary>llimits.h</secondary></indexterm>
<indexterm><primary>llimits.h</primary><secondary>lua_assert</secondary></indexterm>
<para><computeroutput>#define lua_assert( c)   ((void)0)</computeroutput></para><para>
在文件 <link linkend="_llimits_8h_source">llimits.h</link> 第 <link linkend="_llimits_8h_source_1l00101">101</link> 行定义.</para>
    </section><anchor xml:id="_llimits_8h_1aa68a48b9104aeadf4842c25c12a9b8c9"/>    <section>
    <title>lua_lock</title>
<indexterm><primary>lua_lock</primary><secondary>llimits.h</secondary></indexterm>
<indexterm><primary>llimits.h</primary><secondary>lua_lock</secondary></indexterm>
<para><computeroutput>#define lua_lock( L)   ((void) 0)</computeroutput></para><para>
在文件 <link linkend="_llimits_8h_source">llimits.h</link> 第 <link linkend="_llimits_8h_source_1l00242">242</link> 行定义.</para>
    </section><anchor xml:id="_llimits_8h_1a825f22ba1e16fd60e3aae8fe8efc1c4d"/>    <section>
    <title>lua_longassert</title>
<indexterm><primary>lua_longassert</primary><secondary>llimits.h</secondary></indexterm>
<indexterm><primary>llimits.h</primary><secondary>lua_longassert</secondary></indexterm>
<para><computeroutput>#define lua_longassert( c)   ((void)0)</computeroutput></para><para>
在文件 <link linkend="_llimits_8h_source">llimits.h</link> 第 <link linkend="_llimits_8h_source_1l00103">103</link> 行定义.</para>
    </section><anchor xml:id="_llimits_8h_1aa0320f75a72bf131ae24d39111ac9938"/>    <section>
    <title>LUA_MINBUFFER</title>
<indexterm><primary>LUA_MINBUFFER</primary><secondary>llimits.h</secondary></indexterm>
<indexterm><primary>llimits.h</primary><secondary>LUA_MINBUFFER</secondary></indexterm>
<para><computeroutput>#define LUA_MINBUFFER   32</computeroutput></para><para>
在文件 <link linkend="_llimits_8h_source">llimits.h</link> 第 <link linkend="_llimits_8h_source_1l00233">233</link> 行定义.</para>
    </section><anchor xml:id="_llimits_8h_1a1781f2a7d9161848a246d475a9171875"/>    <section>
    <title>lua_unlock</title>
<indexterm><primary>lua_unlock</primary><secondary>llimits.h</secondary></indexterm>
<indexterm><primary>llimits.h</primary><secondary>lua_unlock</secondary></indexterm>
<para><computeroutput>#define lua_unlock( L)   ((void) 0)</computeroutput></para><para>
在文件 <link linkend="_llimits_8h_source">llimits.h</link> 第 <link linkend="_llimits_8h_source_1l00243">243</link> 行定义.</para>
    </section><anchor xml:id="_llimits_8h_1a5e99efda77b5660d36828d61d92b5cdf"/>    <section>
    <title>luai_apicheck</title>
<indexterm><primary>luai_apicheck</primary><secondary>llimits.h</secondary></indexterm>
<indexterm><primary>llimits.h</primary><secondary>luai_apicheck</secondary></indexterm>
<para><computeroutput>#define luai_apicheck( l,  e)   ((void)l, <link linkend="_lualib_8h_1abea1f576564ec516f6efe8c014bdef2d">lua_assert</link>(e))</computeroutput></para><para>
在文件 <link linkend="_llimits_8h_source">llimits.h</link> 第 <link linkend="_llimits_8h_source_1l00110">110</link> 行定义.</para>
    </section><anchor xml:id="_llimits_8h_1a54fe4797308d6b24bf84fa0129a155bd"/>    <section>
    <title>LUAI_MAXSHORTLEN</title>
<indexterm><primary>LUAI_MAXSHORTLEN</primary><secondary>llimits.h</secondary></indexterm>
<indexterm><primary>llimits.h</primary><secondary>LUAI_MAXSHORTLEN</secondary></indexterm>
<para><computeroutput>#define LUAI_MAXSHORTLEN   40</computeroutput></para><para>
在文件 <link linkend="_llimits_8h_source">llimits.h</link> 第 <link linkend="_llimits_8h_source_1l00205">205</link> 行定义.</para>
    </section><anchor xml:id="_llimits_8h_1af3eb5d1884e4512d2701bbc97bb82e81"/>    <section>
    <title>luai_numadd</title>
<indexterm><primary>luai_numadd</primary><secondary>llimits.h</secondary></indexterm>
<indexterm><primary>llimits.h</primary><secondary>luai_numadd</secondary></indexterm>
<para><computeroutput>#define luai_numadd( L,  a,  b)   ((a)+(b))</computeroutput></para><para>
在文件 <link linkend="_llimits_8h_source">llimits.h</link> 第 <link linkend="_llimits_8h_source_1l00323">323</link> 行定义.</para>
    </section><anchor xml:id="_llimits_8h_1a2a095b8d523b51332eb223df531367d2"/>    <section>
    <title>luai_numdiv</title>
<indexterm><primary>luai_numdiv</primary><secondary>llimits.h</secondary></indexterm>
<indexterm><primary>llimits.h</primary><secondary>luai_numdiv</secondary></indexterm>
<para><computeroutput>#define luai_numdiv( L,  a,  b)   ((a)/(b))</computeroutput></para><para>
在文件 <link linkend="_llimits_8h_source">llimits.h</link> 第 <link linkend="_llimits_8h_source_1l00296">296</link> 行定义.</para>
    </section><anchor xml:id="_llimits_8h_1ae06bbbe345c8bb028e233120466d387d"/>    <section>
    <title>luai_numeq</title>
<indexterm><primary>luai_numeq</primary><secondary>llimits.h</secondary></indexterm>
<indexterm><primary>llimits.h</primary><secondary>luai_numeq</secondary></indexterm>
<para><computeroutput>#define luai_numeq( a,  b)   ((a)==(b))</computeroutput></para><para>
在文件 <link linkend="_llimits_8h_source">llimits.h</link> 第 <link linkend="_llimits_8h_source_1l00327">327</link> 行定义.</para>
    </section><anchor xml:id="_llimits_8h_1a727a96f18bda273bd57dee105a274abe"/>    <section>
    <title>luai_numge</title>
<indexterm><primary>luai_numge</primary><secondary>llimits.h</secondary></indexterm>
<indexterm><primary>llimits.h</primary><secondary>luai_numge</secondary></indexterm>
<para><computeroutput>#define luai_numge( a,  b)   ((a)&gt;=(b))</computeroutput></para><para>
在文件 <link linkend="_llimits_8h_source">llimits.h</link> 第 <link linkend="_llimits_8h_source_1l00331">331</link> 行定义.</para>
    </section><anchor xml:id="_llimits_8h_1a252c8bc400dc44bd996b19e7cf487871"/>    <section>
    <title>luai_numgt</title>
<indexterm><primary>luai_numgt</primary><secondary>llimits.h</secondary></indexterm>
<indexterm><primary>llimits.h</primary><secondary>luai_numgt</secondary></indexterm>
<para><computeroutput>#define luai_numgt( a,  b)   ((a)&gt;(b))</computeroutput></para><para>
在文件 <link linkend="_llimits_8h_source">llimits.h</link> 第 <link linkend="_llimits_8h_source_1l00330">330</link> 行定义.</para>
    </section><anchor xml:id="_llimits_8h_1a9ca37a98a6032ab21dcfd63d42e66f89"/>    <section>
    <title>luai_numidiv</title>
<indexterm><primary>luai_numidiv</primary><secondary>llimits.h</secondary></indexterm>
<indexterm><primary>llimits.h</primary><secondary>luai_numidiv</secondary></indexterm>
<para><computeroutput>#define luai_numidiv( L,  a,  b)   ((void)L, <link linkend="_luaconf_8h_1a89e74d547b8879cf8d10c3e956c283b9">l_floor</link>(<link linkend="_llimits_8h_1a2a095b8d523b51332eb223df531367d2">luai_numdiv</link>(L,a,b)))</computeroutput></para><para>
在文件 <link linkend="_llimits_8h_source">llimits.h</link> 第 <link linkend="_llimits_8h_source_1l00291">291</link> 行定义.</para>
    </section><anchor xml:id="_llimits_8h_1a5ec99a344dba64c30c3ddc6eed8e2e51"/>    <section>
    <title>luai_numisnan</title>
<indexterm><primary>luai_numisnan</primary><secondary>llimits.h</secondary></indexterm>
<indexterm><primary>llimits.h</primary><secondary>luai_numisnan</secondary></indexterm>
<para><computeroutput>#define luai_numisnan( a)   (!<link linkend="_llimits_8h_1ae06bbbe345c8bb028e233120466d387d">luai_numeq</link>((a), (a)))</computeroutput></para><para>
在文件 <link linkend="_llimits_8h_source">llimits.h</link> 第 <link linkend="_llimits_8h_source_1l00332">332</link> 行定义.</para>
    </section><anchor xml:id="_llimits_8h_1af803655e8c9be7ba1f3f3fb0c4f730d7"/>    <section>
    <title>luai_numle</title>
<indexterm><primary>luai_numle</primary><secondary>llimits.h</secondary></indexterm>
<indexterm><primary>llimits.h</primary><secondary>luai_numle</secondary></indexterm>
<para><computeroutput>#define luai_numle( a,  b)   ((a)&lt;=(b))</computeroutput></para><para>
在文件 <link linkend="_llimits_8h_source">llimits.h</link> 第 <link linkend="_llimits_8h_source_1l00329">329</link> 行定义.</para>
    </section><anchor xml:id="_llimits_8h_1ae035faaeb068720ee8540210870ee5c9"/>    <section>
    <title>luai_numlt</title>
<indexterm><primary>luai_numlt</primary><secondary>llimits.h</secondary></indexterm>
<indexterm><primary>llimits.h</primary><secondary>luai_numlt</secondary></indexterm>
<para><computeroutput>#define luai_numlt( a,  b)   ((a)&lt;(b))</computeroutput></para><para>
在文件 <link linkend="_llimits_8h_source">llimits.h</link> 第 <link linkend="_llimits_8h_source_1l00328">328</link> 行定义.</para>
    </section><anchor xml:id="_llimits_8h_1ac6e6bfca420c761a89eee023103c34f4"/>    <section>
    <title>luai_nummod</title>
<indexterm><primary>luai_nummod</primary><secondary>llimits.h</secondary></indexterm>
<indexterm><primary>llimits.h</primary><secondary>luai_nummod</secondary></indexterm>
<para><computeroutput>#define luai_nummod( L,  a,  b,  m)</computeroutput></para><emphasis role="strong">值:</emphasis><programlisting>&#32;&#32;{&#32;(void)L;&#32;(m)&#32;=&#32;<link linkend="_luaconf_8h_1a919f548d82dc9a0681dd0ba8996d986d">l_mathop</link>(fmod)(a,b);&#32;\
&#32;&#32;&#32;&#32;if&#32;(((m)&#32;&gt;&#32;0)&#32;?&#32;(b)&#32;&lt;&#32;0&#32;:&#32;((m)&#32;&lt;&#32;0&#32;&amp;&amp;&#32;(b)&#32;&gt;&#32;0))&#32;(m)&#32;+=&#32;(b);&#32;}
</programlisting><para>
在文件 <link linkend="_llimits_8h_source">llimits.h</link> 第 <link linkend="_llimits_8h_source_1l00311">311</link> 行定义.</para>
    </section><anchor xml:id="_llimits_8h_1a1cbcef9e269f0ac1a5f34898a7c4ae36"/>    <section>
    <title>luai_nummul</title>
<indexterm><primary>luai_nummul</primary><secondary>llimits.h</secondary></indexterm>
<indexterm><primary>llimits.h</primary><secondary>luai_nummul</secondary></indexterm>
<para><computeroutput>#define luai_nummul( L,  a,  b)   ((a)*(b))</computeroutput></para><para>
在文件 <link linkend="_llimits_8h_source">llimits.h</link> 第 <link linkend="_llimits_8h_source_1l00325">325</link> 行定义.</para>
    </section><anchor xml:id="_llimits_8h_1a4a3b06f2c7239f8dcbd101ca20cc507a"/>    <section>
    <title>luai_numpow</title>
<indexterm><primary>luai_numpow</primary><secondary>llimits.h</secondary></indexterm>
<indexterm><primary>llimits.h</primary><secondary>luai_numpow</secondary></indexterm>
<para><computeroutput>#define luai_numpow( L,  a,  b)   ((void)L, <link linkend="_luaconf_8h_1a919f548d82dc9a0681dd0ba8996d986d">l_mathop</link>(pow)(a,b))</computeroutput></para><para>
在文件 <link linkend="_llimits_8h_source">llimits.h</link> 第 <link linkend="_llimits_8h_source_1l00318">318</link> 行定义.</para>
    </section><anchor xml:id="_llimits_8h_1a93e733c7e860d7fb838b6af414405662"/>    <section>
    <title>luai_numsub</title>
<indexterm><primary>luai_numsub</primary><secondary>llimits.h</secondary></indexterm>
<indexterm><primary>llimits.h</primary><secondary>luai_numsub</secondary></indexterm>
<para><computeroutput>#define luai_numsub( L,  a,  b)   ((a)-(b))</computeroutput></para><para>
在文件 <link linkend="_llimits_8h_source">llimits.h</link> 第 <link linkend="_llimits_8h_source_1l00324">324</link> 行定义.</para>
    </section><anchor xml:id="_llimits_8h_1a84c57a852cdc4b46c678cb3fab715846"/>    <section>
    <title>luai_numunm</title>
<indexterm><primary>luai_numunm</primary><secondary>llimits.h</secondary></indexterm>
<indexterm><primary>llimits.h</primary><secondary>luai_numunm</secondary></indexterm>
<para><computeroutput>#define luai_numunm( L,  a)   (-(a))</computeroutput></para><para>
在文件 <link linkend="_llimits_8h_source">llimits.h</link> 第 <link linkend="_llimits_8h_source_1l00326">326</link> 行定义.</para>
    </section><anchor xml:id="_llimits_8h_1a7bf655fe36dca3227f9e7e04226d3e6a"/>    <section>
    <title>luai_threadyield</title>
<indexterm><primary>luai_threadyield</primary><secondary>llimits.h</secondary></indexterm>
<indexterm><primary>llimits.h</primary><secondary>luai_threadyield</secondary></indexterm>
<para><computeroutput>#define luai_threadyield( L)   {<link linkend="_ltests_8h_1af24b94f132c4ba762750f4237d7bbba5">lua_unlock</link>(L); <link linkend="_ltests_8h_1a459a2c5b3654fe38a83017e14b3fa63b">lua_lock</link>(L);}</computeroutput></para><para>
在文件 <link linkend="_llimits_8h_source">llimits.h</link> 第 <link linkend="_llimits_8h_source_1l00251">251</link> 行定义.</para>
    </section><anchor xml:id="_llimits_8h_1ae269d75893fce50868b37c32214648e5"/>    <section>
    <title>luai_userstateclose</title>
<indexterm><primary>luai_userstateclose</primary><secondary>llimits.h</secondary></indexterm>
<indexterm><primary>llimits.h</primary><secondary>luai_userstateclose</secondary></indexterm>
<para><computeroutput>#define luai_userstateclose( L)   ((void)L)</computeroutput></para><para>
在文件 <link linkend="_llimits_8h_source">llimits.h</link> 第 <link linkend="_llimits_8h_source_1l00264">264</link> 行定义.</para>
    </section><anchor xml:id="_llimits_8h_1a7c5595955dfef0964d1286b3f29e2aad"/>    <section>
    <title>luai_userstatefree</title>
<indexterm><primary>luai_userstatefree</primary><secondary>llimits.h</secondary></indexterm>
<indexterm><primary>llimits.h</primary><secondary>luai_userstatefree</secondary></indexterm>
<para><computeroutput>#define luai_userstatefree( L,  L1)   ((void)L)</computeroutput></para><para>
在文件 <link linkend="_llimits_8h_source">llimits.h</link> 第 <link linkend="_llimits_8h_source_1l00272">272</link> 行定义.</para>
    </section><anchor xml:id="_llimits_8h_1a05bbfa34e58a82e39cc19701e5359881"/>    <section>
    <title>luai_userstateopen</title>
<indexterm><primary>luai_userstateopen</primary><secondary>llimits.h</secondary></indexterm>
<indexterm><primary>llimits.h</primary><secondary>luai_userstateopen</secondary></indexterm>
<para><computeroutput>#define luai_userstateopen( L)   ((void)L)</computeroutput></para><para>
在文件 <link linkend="_llimits_8h_source">llimits.h</link> 第 <link linkend="_llimits_8h_source_1l00260">260</link> 行定义.</para>
    </section><anchor xml:id="_llimits_8h_1af110e056a602175437e5cda45dd7db5e"/>    <section>
    <title>luai_userstateresume</title>
<indexterm><primary>luai_userstateresume</primary><secondary>llimits.h</secondary></indexterm>
<indexterm><primary>llimits.h</primary><secondary>luai_userstateresume</secondary></indexterm>
<para><computeroutput>#define luai_userstateresume( L,  n)   ((void)L)</computeroutput></para><para>
在文件 <link linkend="_llimits_8h_source">llimits.h</link> 第 <link linkend="_llimits_8h_source_1l00276">276</link> 行定义.</para>
    </section><anchor xml:id="_llimits_8h_1a533eae4cf709fa76f3974823354e4067"/>    <section>
    <title>luai_userstatethread</title>
<indexterm><primary>luai_userstatethread</primary><secondary>llimits.h</secondary></indexterm>
<indexterm><primary>llimits.h</primary><secondary>luai_userstatethread</secondary></indexterm>
<para><computeroutput>#define luai_userstatethread( L,  L1)   ((void)L)</computeroutput></para><para>
在文件 <link linkend="_llimits_8h_source">llimits.h</link> 第 <link linkend="_llimits_8h_source_1l00268">268</link> 行定义.</para>
    </section><anchor xml:id="_llimits_8h_1ade427932b2d70d9f0b04c4d6a2af177a"/>    <section>
    <title>luai_userstateyield</title>
<indexterm><primary>luai_userstateyield</primary><secondary>llimits.h</secondary></indexterm>
<indexterm><primary>llimits.h</primary><secondary>luai_userstateyield</secondary></indexterm>
<para><computeroutput>#define luai_userstateyield( L,  n)   ((void)L)</computeroutput></para><para>
在文件 <link linkend="_llimits_8h_source">llimits.h</link> 第 <link linkend="_llimits_8h_source_1l00280">280</link> 行定义.</para>
    </section><anchor xml:id="_llimits_8h_1aaa1ac5caef84256eaeb39594e58e096f"/>    <section>
    <title>MAX_INT</title>
<indexterm><primary>MAX_INT</primary><secondary>llimits.h</secondary></indexterm>
<indexterm><primary>llimits.h</primary><secondary>MAX_INT</secondary></indexterm>
<para><computeroutput>#define MAX_INT   INT_MAX  /* maximum value of an int */</computeroutput></para><para>
在文件 <link linkend="_llimits_8h_source">llimits.h</link> 第 <link linkend="_llimits_8h_source_1l00053">53</link> 行定义.</para>
    </section><anchor xml:id="_llimits_8h_1a99e52005f8b99ce8e36df841b281078e"/>    <section>
    <title>MAX_LMEM</title>
<indexterm><primary>MAX_LMEM</primary><secondary>llimits.h</secondary></indexterm>
<indexterm><primary>llimits.h</primary><secondary>MAX_LMEM</secondary></indexterm>
<para><computeroutput>#define MAX_LMEM   ((<link linkend="_llimits_8h_1a24fc195087e262c99a4cf0f9b346a684">l_mem</link>)(<link linkend="_llimits_8h_1a5e67dd5554c315bda4b54cd5ed0e846e">MAX_LUMEM</link> &gt;&gt; 1))</computeroutput></para><para>
在文件 <link linkend="_llimits_8h_source">llimits.h</link> 第 <link linkend="_llimits_8h_source_1l00050">50</link> 行定义.</para>
    </section><anchor xml:id="_llimits_8h_1a5e67dd5554c315bda4b54cd5ed0e846e"/>    <section>
    <title>MAX_LUMEM</title>
<indexterm><primary>MAX_LUMEM</primary><secondary>llimits.h</secondary></indexterm>
<indexterm><primary>llimits.h</primary><secondary>MAX_LUMEM</secondary></indexterm>
<para><computeroutput>#define MAX_LUMEM   ((<link linkend="_llimits_8h_1aac8c50ca0aa51c80523376da77c2c4d8">lu_mem</link>)(~(<link linkend="_llimits_8h_1aac8c50ca0aa51c80523376da77c2c4d8">lu_mem</link>)0))</computeroutput></para><para>
在文件 <link linkend="_llimits_8h_source">llimits.h</link> 第 <link linkend="_llimits_8h_source_1l00048">48</link> 行定义.</para>
    </section><anchor xml:id="_llimits_8h_1a0592dba56693fad79136250c11e5a7fe"/>    <section>
    <title>MAX_SIZE</title>
<indexterm><primary>MAX_SIZE</primary><secondary>llimits.h</secondary></indexterm>
<indexterm><primary>llimits.h</primary><secondary>MAX_SIZE</secondary></indexterm>
<para><computeroutput>#define MAX_SIZE</computeroutput></para><emphasis role="strong">值:</emphasis><programlisting>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(<emphasis role="keyword">sizeof</emphasis>(size_t)&#32;&lt;&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>)&#32;?&#32;<link linkend="_llimits_8h_1aa927c7bf177c162feda3483e1e972b3a">MAX_SIZET</link>&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;(size_t)(LUA_MAXINTEGER))
</programlisting><para>
在文件 <link linkend="_llimits_8h_source">llimits.h</link> 第 <link linkend="_llimits_8h_source_1l00044">44</link> 行定义.</para>
    </section><anchor xml:id="_llimits_8h_1aa927c7bf177c162feda3483e1e972b3a"/>    <section>
    <title>MAX_SIZET</title>
<indexterm><primary>MAX_SIZET</primary><secondary>llimits.h</secondary></indexterm>
<indexterm><primary>llimits.h</primary><secondary>MAX_SIZET</secondary></indexterm>
<para><computeroutput>#define MAX_SIZET   ((size_t)(~(size_t)0))</computeroutput></para><para>
在文件 <link linkend="_llimits_8h_source">llimits.h</link> 第 <link linkend="_llimits_8h_source_1l00041">41</link> 行定义.</para>
    </section><anchor xml:id="_llimits_8h_1a91604f8876fd042d7b1cdbade17927e6"/>    <section>
    <title>MINSTRTABSIZE</title>
<indexterm><primary>MINSTRTABSIZE</primary><secondary>llimits.h</secondary></indexterm>
<indexterm><primary>llimits.h</primary><secondary>MINSTRTABSIZE</secondary></indexterm>
<para><computeroutput>#define MINSTRTABSIZE   128</computeroutput></para><para>
在文件 <link linkend="_llimits_8h_source">llimits.h</link> 第 <link linkend="_llimits_8h_source_1l00216">216</link> 行定义.</para>
    </section><anchor xml:id="_llimits_8h_1ad861f24ac9e8c32f78455aab3d2e7b51"/>    <section>
    <title>point2uint</title>
<indexterm><primary>point2uint</primary><secondary>llimits.h</secondary></indexterm>
<indexterm><primary>llimits.h</primary><secondary>point2uint</secondary></indexterm>
<para><computeroutput>#define point2uint( p)   ((unsigned int)((size_t)(p) &amp; UINT_MAX))</computeroutput></para><para>
在文件 <link linkend="_llimits_8h_source">llimits.h</link> 第 <link linkend="_llimits_8h_source_1l00078">78</link> 行定义.</para>
    </section><anchor xml:id="_llimits_8h_1a3e028bcc45ab536a37bb6860caf3d2ca"/>    <section>
    <title>STRCACHE_M</title>
<indexterm><primary>STRCACHE_M</primary><secondary>llimits.h</secondary></indexterm>
<indexterm><primary>llimits.h</primary><secondary>STRCACHE_M</secondary></indexterm>
<para><computeroutput>#define STRCACHE_M   2</computeroutput></para><para>
在文件 <link linkend="_llimits_8h_source">llimits.h</link> 第 <link linkend="_llimits_8h_source_1l00227">227</link> 行定义.</para>
    </section><anchor xml:id="_llimits_8h_1aa8382779dd8eeb2dea3deb97dec0ed1c"/>    <section>
    <title>STRCACHE_N</title>
<indexterm><primary>STRCACHE_N</primary><secondary>llimits.h</secondary></indexterm>
<indexterm><primary>llimits.h</primary><secondary>STRCACHE_N</secondary></indexterm>
<para><computeroutput>#define STRCACHE_N   53</computeroutput></para><para>
在文件 <link linkend="_llimits_8h_source">llimits.h</link> 第 <link linkend="_llimits_8h_source_1l00226">226</link> 行定义.</para>
    </section><anchor xml:id="_llimits_8h_1ac6c45889010c1bd68631771b64f18101"/>    <section>
    <title>unlikely</title>
<indexterm><primary>unlikely</primary><secondary>llimits.h</secondary></indexterm>
<indexterm><primary>llimits.h</primary><secondary>unlikely</secondary></indexterm>
<para><computeroutput>#define unlikely( x)   (x)</computeroutput></para><para>
在文件 <link linkend="_llimits_8h_source">llimits.h</link> 第 <link linkend="_llimits_8h_source_1l00162">162</link> 行定义.</para>
    </section><anchor xml:id="_llimits_8h_1a86d500a34c624c2cae56bc25a31b12f3"/>    <section>
    <title>UNUSED</title>
<indexterm><primary>UNUSED</primary><secondary>llimits.h</secondary></indexterm>
<indexterm><primary>llimits.h</primary><secondary>UNUSED</secondary></indexterm>
<para><computeroutput>#define UNUSED( x)   ((void)(x))</computeroutput></para><para>
在文件 <link linkend="_llimits_8h_source">llimits.h</link> 第 <link linkend="_llimits_8h_source_1l00118">118</link> 行定义.</para>
</section>
</section>
<section>
<title>类型定义说明</title>
<anchor xml:id="_llimits_8h_1aa81d2e7f7263ef29946852d4966a192e"/>    <section>
    <title>Instruction</title>
<indexterm><primary>Instruction</primary><secondary>llimits.h</secondary></indexterm>
<indexterm><primary>llimits.h</primary><secondary>Instruction</secondary></indexterm>
<para><computeroutput>typedef <link linkend="_llimits_8h_1abeb00a444eb1dc99a4a2baee15bd898a">l_uint32</link> <link linkend="_llimits_8h_1aa81d2e7f7263ef29946852d4966a192e">Instruction</link></computeroutput></para><para>
在文件 <link linkend="_llimits_8h_source">llimits.h</link> 第 <link linkend="_llimits_8h_source_1l00194">194</link> 行定义.</para>
    </section><anchor xml:id="_llimits_8h_1a24fc195087e262c99a4cf0f9b346a684"/>    <section>
    <title>l_mem</title>
<indexterm><primary>l_mem</primary><secondary>llimits.h</secondary></indexterm>
<indexterm><primary>llimits.h</primary><secondary>l_mem</secondary></indexterm>
<para><computeroutput>typedef long <link linkend="_llimits_8h_1a24fc195087e262c99a4cf0f9b346a684">l_mem</link></computeroutput></para><para>
在文件 <link linkend="_llimits_8h_source">llimits.h</link> 第 <link linkend="_llimits_8h_source_1l00031">31</link> 行定义.</para>
    </section><anchor xml:id="_llimits_8h_1ac8d5f795aedd7e084ef2dab7b5d81bde"/>    <section>
    <title>l_uacInt</title>
<indexterm><primary>l_uacInt</primary><secondary>llimits.h</secondary></indexterm>
<indexterm><primary>llimits.h</primary><secondary>l_uacInt</secondary></indexterm>
<para><computeroutput>typedef <link linkend="_luaconf_8h_1a7a9d650ef5ea12d81160db595fe9f177">LUAI_UACINT</link> <link linkend="_llimits_8h_1ac8d5f795aedd7e084ef2dab7b5d81bde">l_uacInt</link></computeroutput></para><para>
在文件 <link linkend="_llimits_8h_source">llimits.h</link> 第 <link linkend="_llimits_8h_source_1l00084">84</link> 行定义.</para>
    </section><anchor xml:id="_llimits_8h_1a792eefbf119f914b73400c314411c3e2"/>    <section>
    <title>l_uacNumber</title>
<indexterm><primary>l_uacNumber</primary><secondary>llimits.h</secondary></indexterm>
<indexterm><primary>llimits.h</primary><secondary>l_uacNumber</secondary></indexterm>
<para><computeroutput>typedef <link linkend="_luaconf_8h_1ae3594e990592ab0bf7243dad64c76d2a">LUAI_UACNUMBER</link> <link linkend="_llimits_8h_1a792eefbf119f914b73400c314411c3e2">l_uacNumber</link></computeroutput></para><para>
在文件 <link linkend="_llimits_8h_source">llimits.h</link> 第 <link linkend="_llimits_8h_source_1l00083">83</link> 行定义.</para>
    </section><anchor xml:id="_llimits_8h_1abeb00a444eb1dc99a4a2baee15bd898a"/>    <section>
    <title>l_uint32</title>
<indexterm><primary>l_uint32</primary><secondary>llimits.h</secondary></indexterm>
<indexterm><primary>llimits.h</primary><secondary>l_uint32</secondary></indexterm>
<para><computeroutput>typedef unsigned long <link linkend="_llimits_8h_1abeb00a444eb1dc99a4a2baee15bd898a">l_uint32</link></computeroutput></para><para>
在文件 <link linkend="_llimits_8h_source">llimits.h</link> 第 <link linkend="_llimits_8h_source_1l00191">191</link> 行定义.</para>
    </section><anchor xml:id="_llimits_8h_1aab58a246c9e0a85c4c2ed0fd8d6724bb"/>    <section>
    <title>ls_byte</title>
<indexterm><primary>ls_byte</primary><secondary>llimits.h</secondary></indexterm>
<indexterm><primary>llimits.h</primary><secondary>ls_byte</secondary></indexterm>
<para><computeroutput>typedef signed char <link linkend="_llimits_8h_1aab58a246c9e0a85c4c2ed0fd8d6724bb">ls_byte</link></computeroutput></para><para>
在文件 <link linkend="_llimits_8h_source">llimits.h</link> 第 <link linkend="_llimits_8h_source_1l00037">37</link> 行定义.</para>
    </section><anchor xml:id="_llimits_8h_1ae1fe9ac10d9803bd1d7bdf30b18bad68"/>    <section>
    <title>lu_byte</title>
<indexterm><primary>lu_byte</primary><secondary>llimits.h</secondary></indexterm>
<indexterm><primary>llimits.h</primary><secondary>lu_byte</secondary></indexterm>
<para><computeroutput>typedef unsigned char <link linkend="_llimits_8h_1ae1fe9ac10d9803bd1d7bdf30b18bad68">lu_byte</link></computeroutput></para><para>
在文件 <link linkend="_llimits_8h_source">llimits.h</link> 第 <link linkend="_llimits_8h_source_1l00036">36</link> 行定义.</para>
    </section><anchor xml:id="_llimits_8h_1aac8c50ca0aa51c80523376da77c2c4d8"/>    <section>
    <title>lu_mem</title>
<indexterm><primary>lu_mem</primary><secondary>llimits.h</secondary></indexterm>
<indexterm><primary>llimits.h</primary><secondary>lu_mem</secondary></indexterm>
<para><computeroutput>typedef unsigned long <link linkend="_llimits_8h_1aac8c50ca0aa51c80523376da77c2c4d8">lu_mem</link></computeroutput></para><para>
在文件 <link linkend="_llimits_8h_source">llimits.h</link> 第 <link linkend="_llimits_8h_source_1l00030">30</link> 行定义.</para>
</section>
</section>
</section>
