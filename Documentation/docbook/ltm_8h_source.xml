<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_ltm_8h_source" xml:lang="zh">
<title>D:/gitworkspace/lua/ltm.h</title>
<programlisting>00001 <emphasis role="comment">/*</emphasis>
00002 <emphasis role="comment">**&#32;$Id:&#32;ltm.h&#32;$</emphasis>
00003 <emphasis role="comment">**&#32;Tag&#32;methods</emphasis>
00004 <emphasis role="comment">**&#32;See&#32;Copyright&#32;Notice&#32;in&#32;lua.h</emphasis>
00005 <emphasis role="comment">*/</emphasis>
00006 
00007 <emphasis role="preprocessor">#ifndef&#32;ltm_h</emphasis>
00008 <emphasis role="preprocessor">#define&#32;ltm_h</emphasis>
00009 
00010 
00011 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_lobject_8h">lobject.h</link>&quot;</emphasis>
00012 
00013 
00014 <emphasis role="comment">/*</emphasis>
00015 <emphasis role="comment">*&#32;WARNING:&#32;if&#32;you&#32;change&#32;the&#32;order&#32;of&#32;this&#32;enumeration,</emphasis>
00016 <emphasis role="comment">*&#32;grep&#32;&quot;ORDER&#32;TM&quot;&#32;and&#32;&quot;ORDER&#32;OP&quot;</emphasis>
00017 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_ltm_8h_source_1l00018"/><link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1">00018</link> <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">enum</emphasis>&#32;{
<anchor xml:id="_ltm_8h_source_1l00019"/><link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1a9adb5d2c8bad970dff73ee1b9df1242e">00019</link> &#32;&#32;<link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1a9adb5d2c8bad970dff73ee1b9df1242e">TM_INDEX</link>,
<anchor xml:id="_ltm_8h_source_1l00020"/><link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1a256e00a44fb438064c2eb7a8b7df206d">00020</link> &#32;&#32;<link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1a256e00a44fb438064c2eb7a8b7df206d">TM_NEWINDEX</link>,
<anchor xml:id="_ltm_8h_source_1l00021"/><link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1a01e1b0be5e2785471e19db3665960536">00021</link> &#32;&#32;<link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1a01e1b0be5e2785471e19db3665960536">TM_GC</link>,
<anchor xml:id="_ltm_8h_source_1l00022"/><link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1a5cd07c76b9aff7450d8052363ff2db4e">00022</link> &#32;&#32;<link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1a5cd07c76b9aff7450d8052363ff2db4e">TM_MODE</link>,
<anchor xml:id="_ltm_8h_source_1l00023"/><link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1aadbac1e8e363dc76eb94aac5c8e7a7a4">00023</link> &#32;&#32;<link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1aadbac1e8e363dc76eb94aac5c8e7a7a4">TM_LEN</link>,
<anchor xml:id="_ltm_8h_source_1l00024"/><link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1aa0074eac874e7e19d5e7c0c8a22ea592">00024</link> &#32;&#32;<link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1aa0074eac874e7e19d5e7c0c8a22ea592">TM_EQ</link>,&#32;&#32;<emphasis role="comment">/*&#32;last&#32;tag&#32;method&#32;with&#32;fast&#32;access&#32;*/</emphasis>
<anchor xml:id="_ltm_8h_source_1l00025"/><link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1ab9351e0ba5143d069dfb4dea793676b5">00025</link> &#32;&#32;<link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1ab9351e0ba5143d069dfb4dea793676b5">TM_ADD</link>,
<anchor xml:id="_ltm_8h_source_1l00026"/><link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1aae0e4c65a5c4797c1dbb82609504f0f6">00026</link> &#32;&#32;<link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1aae0e4c65a5c4797c1dbb82609504f0f6">TM_SUB</link>,
<anchor xml:id="_ltm_8h_source_1l00027"/><link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1a6291d50fca67ff97d7092975c2ab2dc4">00027</link> &#32;&#32;<link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1a6291d50fca67ff97d7092975c2ab2dc4">TM_MUL</link>,
<anchor xml:id="_ltm_8h_source_1l00028"/><link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1afbd50be6cf5042cdf520fb50627081ae">00028</link> &#32;&#32;<link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1afbd50be6cf5042cdf520fb50627081ae">TM_MOD</link>,
<anchor xml:id="_ltm_8h_source_1l00029"/><link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1aa4846ab09831f6b351671be81cef3e5d">00029</link> &#32;&#32;<link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1aa4846ab09831f6b351671be81cef3e5d">TM_POW</link>,
<anchor xml:id="_ltm_8h_source_1l00030"/><link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1aa5bfa1609bcf15e4105b991a7975ac03">00030</link> &#32;&#32;<link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1aa5bfa1609bcf15e4105b991a7975ac03">TM_DIV</link>,
<anchor xml:id="_ltm_8h_source_1l00031"/><link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1a23a0c8647ff6e501d7430900a08f343b">00031</link> &#32;&#32;<link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1a23a0c8647ff6e501d7430900a08f343b">TM_IDIV</link>,
<anchor xml:id="_ltm_8h_source_1l00032"/><link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1a31cb5bcae367d5cfec150a489c6472b6">00032</link> &#32;&#32;<link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1a31cb5bcae367d5cfec150a489c6472b6">TM_BAND</link>,
<anchor xml:id="_ltm_8h_source_1l00033"/><link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1a8f1f4fdbc05573cd376bf9704c31d494">00033</link> &#32;&#32;<link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1a8f1f4fdbc05573cd376bf9704c31d494">TM_BOR</link>,
<anchor xml:id="_ltm_8h_source_1l00034"/><link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1a7c95694d2607b50b86ef8cf1a4f2eb05">00034</link> &#32;&#32;<link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1a7c95694d2607b50b86ef8cf1a4f2eb05">TM_BXOR</link>,
<anchor xml:id="_ltm_8h_source_1l00035"/><link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1ac0c09418341a5d115650a2cb4a6724a1">00035</link> &#32;&#32;<link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1ac0c09418341a5d115650a2cb4a6724a1">TM_SHL</link>,
<anchor xml:id="_ltm_8h_source_1l00036"/><link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1a893cb9ea636210f2e65dbf0bf784121b">00036</link> &#32;&#32;<link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1a893cb9ea636210f2e65dbf0bf784121b">TM_SHR</link>,
<anchor xml:id="_ltm_8h_source_1l00037"/><link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1a9ba35e1d71b4d8aca322d84a070528dd">00037</link> &#32;&#32;<link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1a9ba35e1d71b4d8aca322d84a070528dd">TM_UNM</link>,
<anchor xml:id="_ltm_8h_source_1l00038"/><link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1a695b7da29958a1275089c619b5139091">00038</link> &#32;&#32;<link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1a695b7da29958a1275089c619b5139091">TM_BNOT</link>,
<anchor xml:id="_ltm_8h_source_1l00039"/><link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1afa8fa71435d77125e294751a6ec36dc0">00039</link> &#32;&#32;<link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1afa8fa71435d77125e294751a6ec36dc0">TM_LT</link>,
<anchor xml:id="_ltm_8h_source_1l00040"/><link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1acb92c94037b451f214223a4c57eccbdf">00040</link> &#32;&#32;<link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1acb92c94037b451f214223a4c57eccbdf">TM_LE</link>,
<anchor xml:id="_ltm_8h_source_1l00041"/><link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1aef8c5f56efb01cf7a514270559237343">00041</link> &#32;&#32;<link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1aef8c5f56efb01cf7a514270559237343">TM_CONCAT</link>,
<anchor xml:id="_ltm_8h_source_1l00042"/><link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1abdcb5cf63c297351b7dbd68b16b0c22b">00042</link> &#32;&#32;<link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1abdcb5cf63c297351b7dbd68b16b0c22b">TM_CALL</link>,
<anchor xml:id="_ltm_8h_source_1l00043"/><link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1ae986ac24deb0443eb62f40fb5d895edd">00043</link> &#32;&#32;<link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1ae986ac24deb0443eb62f40fb5d895edd">TM_CLOSE</link>,
00044 &#32;&#32;<link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1a0d06a30ffbc1d1f7e21a96f52da3ef56">TM_N</link>&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;number&#32;of&#32;elements&#32;in&#32;the&#32;enum&#32;*/</emphasis>
<anchor xml:id="_ltm_8h_source_1l00045"/><link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1a0d06a30ffbc1d1f7e21a96f52da3ef56">00045</link> }&#32;<link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1">TMS</link>;
00046 
00047 
00048 <emphasis role="comment">/*</emphasis>
00049 <emphasis role="comment">**&#32;Mask&#32;with&#32;1&#32;in&#32;all&#32;fast-access&#32;methods.&#32;A&#32;1&#32;in&#32;any&#32;of&#32;these&#32;bits</emphasis>
00050 <emphasis role="comment">**&#32;in&#32;the&#32;flag&#32;of&#32;a&#32;(meta)table&#32;means&#32;the&#32;metatable&#32;does&#32;not&#32;have&#32;the</emphasis>
00051 <emphasis role="comment">**&#32;corresponding&#32;metamethod&#32;field.&#32;(Bit&#32;7&#32;of&#32;the&#32;flag&#32;is&#32;used&#32;for</emphasis>
00052 <emphasis role="comment">**&#32;&apos;isrealasize&apos;.)</emphasis>
00053 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_ltm_8h_source_1l00054"/><link linkend="_ltm_8h_1aedcd44ed828c5c7060bc7140ec669753">00054</link> <emphasis role="preprocessor">#define&#32;maskflags&#32;&#32;&#32;(~(~0u&#32;&lt;&lt;&#32;(TM_EQ&#32;+&#32;1)))</emphasis>
00055 
00056 
00057 <emphasis role="comment">/*</emphasis>
00058 <emphasis role="comment">**&#32;Test&#32;whether&#32;there&#32;is&#32;no&#32;tagmethod.</emphasis>
00059 <emphasis role="comment">**&#32;(Because&#32;tagmethods&#32;use&#32;raw&#32;accesses,&#32;the&#32;result&#32;may&#32;be&#32;an&#32;&quot;empty&quot;&#32;nil.)</emphasis>
00060 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_ltm_8h_source_1l00061"/><link linkend="_ltm_8h_1a219a766ba661fa51758627615c22e632">00061</link> <emphasis role="preprocessor">#define&#32;notm(tm)&#32;&#32;&#32;&#32;ttisnil(tm)</emphasis>
00062 
00063 
<anchor xml:id="_ltm_8h_source_1l00064"/><link linkend="_ltm_8h_1ab067446141992fa1bfa2f1ca720197fc">00064</link> <emphasis role="preprocessor">#define&#32;gfasttm(g,et,e)&#32;((et)&#32;==&#32;NULL&#32;?&#32;NULL&#32;:&#32;\</emphasis>
00065 <emphasis role="preprocessor">&#32;&#32;((et)-&gt;flags&#32;&amp;&#32;(1u&lt;&lt;(e)))&#32;?&#32;NULL&#32;:&#32;luaT_gettm(et,&#32;e,&#32;(g)-&gt;tmname[e]))</emphasis>
00066 
<anchor xml:id="_ltm_8h_source_1l00067"/><link linkend="_ltm_8h_1a0a29ed88450f8f92330a6a411a9c8134">00067</link> <emphasis role="preprocessor">#define&#32;fasttm(l,et,e)&#32;&#32;gfasttm(G(l),&#32;et,&#32;e)</emphasis>
00068 
<anchor xml:id="_ltm_8h_source_1l00069"/><link linkend="_ltm_8h_1a7e8b7062137f42da8f8478d7e48004b3">00069</link> <emphasis role="preprocessor">#define&#32;ttypename(x)&#32;&#32;&#32;&#32;luaT_typenames_[(x)&#32;+&#32;1]</emphasis>
00070 
00071 <link linkend="_luaconf_8h_1a3f2cdf96bb04b9d2a9a318a126f99182">LUAI_DDEC</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<emphasis role="keyword">const</emphasis>&#32;<link linkend="_ltm_8c_1a56a6ffbcfc64ddd03dca836db6463705">luaT_typenames_</link>[<link linkend="_lobject_8h_1a19bae920c9c442143f021d1c4301b8cb">LUA_TOTALTYPES</link>];)
00072 
00073 
00074 <link linkend="_luaconf_8h_1a3f43b35a70c93f2cfde1db42a5a24f1e">LUAI_FUNC</link>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="_ltm_8h_1a98684f08704c2f0fefcc4e191e33212d">luaT_objtypename</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_value">TValue</link>&#32;*o);
00075 
00076 <link linkend="_luaconf_8h_1a3f43b35a70c93f2cfde1db42a5a24f1e">LUAI_FUNC</link>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_value">TValue</link>&#32;*<link linkend="_ltm_8h_1a161791309c5c4c2011be595a751d0252">luaT_gettm</link>&#32;(<link linkend="_struct_table">Table</link>&#32;*events,&#32;<link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1">TMS</link>&#32;event,&#32;<link linkend="_struct_t_string">TString</link>&#32;*ename);
00077 <link linkend="_luaconf_8h_1a3f43b35a70c93f2cfde1db42a5a24f1e">LUAI_FUNC</link>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_value">TValue</link>&#32;*<link linkend="_ltm_8h_1a838fb2244ed83c7e793d45b6bd06ac73">luaT_gettmbyobj</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_value">TValue</link>&#32;*o,
00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1">TMS</link>&#32;event);
00079 <link linkend="_luaconf_8h_1a3f43b35a70c93f2cfde1db42a5a24f1e">LUAI_FUNC</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_ltm_8h_1adadf25053747df0beeec91a8836b2dfc">luaT_init</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L);
00080 
00081 <link linkend="_luaconf_8h_1a3f43b35a70c93f2cfde1db42a5a24f1e">LUAI_FUNC</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_ltm_8h_1a4380eceaa582fe847011b265423c8fa4">luaT_callTM</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_value">TValue</link>&#32;*f,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_value">TValue</link>&#32;*p1,
00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_value">TValue</link>&#32;*p2,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_value">TValue</link>&#32;*p3);
00083 <link linkend="_luaconf_8h_1a3f43b35a70c93f2cfde1db42a5a24f1e">LUAI_FUNC</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_ltm_8h_1a672b3605311190ae7ed802d566daa1fa">luaT_callTMres</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_value">TValue</link>&#32;*f,
00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_value">TValue</link>&#32;*p1,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_value">TValue</link>&#32;*p2,&#32;<link linkend="_union_stack_value">StkId</link>&#32;p3);
00085 <link linkend="_luaconf_8h_1a3f43b35a70c93f2cfde1db42a5a24f1e">LUAI_FUNC</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_ltm_8h_1a52f9c211746126a08117801bd7e2d826">luaT_trybinTM</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_value">TValue</link>&#32;*p1,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_value">TValue</link>&#32;*p2,
00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_union_stack_value">StkId</link>&#32;res,&#32;<link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1">TMS</link>&#32;event);
00087 <link linkend="_luaconf_8h_1a3f43b35a70c93f2cfde1db42a5a24f1e">LUAI_FUNC</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_ltm_8h_1a57603cad2e23d236a640ef8d7569d18f">luaT_tryconcatTM</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L);
00088 <link linkend="_luaconf_8h_1a3f43b35a70c93f2cfde1db42a5a24f1e">LUAI_FUNC</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_ltm_8h_1af6ca076ae3f6c830e06852712950d0f7">luaT_trybinassocTM</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_value">TValue</link>&#32;*p1,
00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_value">TValue</link>&#32;*p2,&#32;<emphasis role="keywordtype">int</emphasis>&#32;inv,&#32;<link linkend="_union_stack_value">StkId</link>&#32;res,&#32;<link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1">TMS</link>&#32;event);
00090 <link linkend="_luaconf_8h_1a3f43b35a70c93f2cfde1db42a5a24f1e">LUAI_FUNC</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_ltm_8h_1a8cf869ab5c4e507b6c72df4bf30d1438">luaT_trybiniTM</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_value">TValue</link>&#32;*p1,&#32;<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;i2,
00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;inv,&#32;<link linkend="_union_stack_value">StkId</link>&#32;res,&#32;<link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1">TMS</link>&#32;event);
00092 <link linkend="_luaconf_8h_1a3f43b35a70c93f2cfde1db42a5a24f1e">LUAI_FUNC</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_ltm_8h_1a42fa775919957ebfb826d96c80e65f92">luaT_callorderTM</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_value">TValue</link>&#32;*p1,
00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_value">TValue</link>&#32;*p2,&#32;<link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1">TMS</link>&#32;event);
00094 <link linkend="_luaconf_8h_1a3f43b35a70c93f2cfde1db42a5a24f1e">LUAI_FUNC</link>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_ltm_8h_1a16f52862d54db7359c09dcec396f066a">luaT_callorderiTM</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_value">TValue</link>&#32;*p1,&#32;<emphasis role="keywordtype">int</emphasis>&#32;v2,
00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;inv,&#32;<emphasis role="keywordtype">int</emphasis>&#32;isfloat,&#32;<link linkend="_ltm_8h_1a69e345ae253d250b61a03f1d6871c8d1">TMS</link>&#32;event);
00096 
00097 <link linkend="_luaconf_8h_1a3f43b35a70c93f2cfde1db42a5a24f1e">LUAI_FUNC</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_ltm_8h_1ac30fc475f98b5ffd761f46a723780a4d">luaT_adjustvarargs</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<emphasis role="keywordtype">int</emphasis>&#32;nfixparams,
00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct</emphasis>&#32;<link linkend="_struct_call_info">CallInfo</link>&#32;*ci,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_proto">Proto</link>&#32;*p);
00099 <link linkend="_luaconf_8h_1a3f43b35a70c93f2cfde1db42a5a24f1e">LUAI_FUNC</link>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_ltm_8h_1a1336879da98ca7913313e32cc6edddd6">luaT_getvarargs</link>&#32;(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<emphasis role="keyword">struct</emphasis>&#32;<link linkend="_struct_call_info">CallInfo</link>&#32;*ci,
00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_union_stack_value">StkId</link>&#32;where,&#32;<emphasis role="keywordtype">int</emphasis>&#32;wanted);
00101 
00102 
00103 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
