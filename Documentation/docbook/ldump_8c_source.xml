<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_ldump_8c_source" xml:lang="zh">
<title>D:/gitworkspace/lua/ldump.c</title>
<programlisting>00001 <emphasis role="comment">/*</emphasis>
00002 <emphasis role="comment">**&#32;$Id:&#32;ldump.c&#32;$</emphasis>
00003 <emphasis role="comment">**&#32;save&#32;precompiled&#32;Lua&#32;chunks</emphasis>
00004 <emphasis role="comment">**&#32;See&#32;Copyright&#32;Notice&#32;in&#32;lua.h</emphasis>
00005 <emphasis role="comment">*/</emphasis>
00006 
<anchor xml:id="_ldump_8c_source_1l00007"/><link linkend="_ldump_8c_1a305a0bdaea32b19e7f6d2cb6dce1cc81">00007</link> <emphasis role="preprocessor">#define&#32;ldump_c</emphasis>
<anchor xml:id="_ldump_8c_source_1l00008"/><link linkend="_ldump_8c_1abf0b3947b59218777a8e928a10be205b">00008</link> <emphasis role="preprocessor">#define&#32;LUA_CORE</emphasis>
00009 
00010 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_lprefix_8h">lprefix.h</link>&quot;</emphasis>
00011 
00012 
00013 <emphasis role="preprocessor">#include&#32;&lt;stddef.h&gt;</emphasis>
00014 
00015 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_lua_8h">lua.h</link>&quot;</emphasis>
00016 
00017 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_lobject_8h">lobject.h</link>&quot;</emphasis>
00018 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_lstate_8h">lstate.h</link>&quot;</emphasis>
00019 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_lundump_8h">lundump.h</link>&quot;</emphasis>
00020 
00021 
<anchor xml:id="_ldump_8c_source_1l00022"/><link linkend="_struct_dump_state">00022</link> <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis>{
<anchor xml:id="_ldump_8c_source_1l00023"/><link linkend="_struct_dump_state_1a62f94dfc0036bec0c14106c2f15caf3e">00023</link> &#32;&#32;<link linkend="_structlua___state">lua_State</link>&#32;*<link linkend="_struct_dump_state_1a62f94dfc0036bec0c14106c2f15caf3e">L</link>;
<anchor xml:id="_ldump_8c_source_1l00024"/><link linkend="_struct_dump_state_1affca24c5f900e5840eacb95ed06ae5b2">00024</link> &#32;&#32;<link linkend="_lua_8h_1a855729196d7066b2da21178284868a8d">lua_Writer</link>&#32;<link linkend="_struct_dump_state_1affca24c5f900e5840eacb95ed06ae5b2">writer</link>;
<anchor xml:id="_ldump_8c_source_1l00025"/><link linkend="_struct_dump_state_1a735984d41155bc1032e09bece8f8d66d">00025</link> &#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;*<link linkend="_struct_dump_state_1a735984d41155bc1032e09bece8f8d66d">data</link>;
<anchor xml:id="_ldump_8c_source_1l00026"/><link linkend="_struct_dump_state_1a6e958fbc233c7ac8487110ad21718cf0">00026</link> &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_struct_dump_state_1a6e958fbc233c7ac8487110ad21718cf0">strip</link>;
<anchor xml:id="_ldump_8c_source_1l00027"/><link linkend="_struct_dump_state_1a6e27f49150e9a14580fb313cc2777e00">00027</link> &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_struct_dump_state_1a6e27f49150e9a14580fb313cc2777e00">status</link>;
00028 }&#32;<link linkend="_struct_dump_state">DumpState</link>;
00029 
00030 
00031 <emphasis role="comment">/*</emphasis>
00032 <emphasis role="comment">**&#32;All&#32;high-level&#32;dumps&#32;go&#32;through&#32;dumpVector;&#32;you&#32;can&#32;change&#32;it&#32;to</emphasis>
00033 <emphasis role="comment">**&#32;change&#32;the&#32;endianness&#32;of&#32;the&#32;result</emphasis>
00034 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_ldump_8c_source_1l00035"/><link linkend="_ldump_8c_1aa57836f656453350c7d2b6b89df1b003">00035</link> <emphasis role="preprocessor">#define&#32;dumpVector(D,v,n)&#32;&#32;&#32;dumpBlock(D,v,(n)*sizeof((v)[0]))</emphasis>
00036 
<anchor xml:id="_ldump_8c_source_1l00037"/><link linkend="_ldump_8c_1a05e931c17f007b1c9d54080d6243af18">00037</link> <emphasis role="preprocessor">#define&#32;dumpLiteral(D,&#32;s)&#32;&#32;&#32;dumpBlock(D,s,sizeof(s)&#32;-&#32;sizeof(char))</emphasis>
00038 
00039 
<anchor xml:id="_ldump_8c_source_1l00040"/><link linkend="_ldump_8c_1adeca46278a770e7418d0eff725770e04">00040</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_ldump_8c_1adeca46278a770e7418d0eff725770e04">dumpBlock</link>&#32;(<link linkend="_struct_dump_state">DumpState</link>&#32;*D,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*b,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;size)&#32;{
00041 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(D-&gt;<link linkend="_struct_dump_state_1a6e27f49150e9a14580fb313cc2777e00">status</link>&#32;==&#32;0&#32;&amp;&amp;&#32;size&#32;&gt;&#32;0)&#32;{
00042 &#32;&#32;&#32;&#32;<link linkend="_llimits_8h_1a1781f2a7d9161848a246d475a9171875">lua_unlock</link>(D-&gt;<link linkend="_struct_dump_state_1a62f94dfc0036bec0c14106c2f15caf3e">L</link>);
00043 &#32;&#32;&#32;&#32;D-&gt;<link linkend="_struct_dump_state_1a6e27f49150e9a14580fb313cc2777e00">status</link>&#32;=&#32;(*D-&gt;<link linkend="_struct_dump_state_1affca24c5f900e5840eacb95ed06ae5b2">writer</link>)(D-&gt;<link linkend="_struct_dump_state_1a62f94dfc0036bec0c14106c2f15caf3e">L</link>,&#32;b,&#32;size,&#32;D-&gt;<link linkend="_struct_dump_state_1a735984d41155bc1032e09bece8f8d66d">data</link>);
00044 &#32;&#32;&#32;&#32;<link linkend="_llimits_8h_1aa68a48b9104aeadf4842c25c12a9b8c9">lua_lock</link>(D-&gt;<link linkend="_struct_dump_state_1a62f94dfc0036bec0c14106c2f15caf3e">L</link>);
00045 &#32;&#32;}
00046 }
00047 
00048 
<anchor xml:id="_ldump_8c_source_1l00049"/><link linkend="_ldump_8c_1ad2bf75eb38f1f5a5a7f71818fbb04098">00049</link> <emphasis role="preprocessor">#define&#32;dumpVar(D,x)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dumpVector(D,&amp;x,1)</emphasis>
00050 
00051 
<anchor xml:id="_ldump_8c_source_1l00052"/><link linkend="_ldump_8c_1a4838cac003905fc2e95b522a03d4adfc">00052</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_ldump_8c_1a4838cac003905fc2e95b522a03d4adfc">dumpByte</link>&#32;(<link linkend="_struct_dump_state">DumpState</link>&#32;*D,&#32;<emphasis role="keywordtype">int</emphasis>&#32;y)&#32;{
00053 &#32;&#32;<link linkend="_llimits_8h_1ae1fe9ac10d9803bd1d7bdf30b18bad68">lu_byte</link>&#32;x&#32;=&#32;(<link linkend="_llimits_8h_1ae1fe9ac10d9803bd1d7bdf30b18bad68">lu_byte</link>)y;
00054 &#32;&#32;<link linkend="_ldump_8c_1ad2bf75eb38f1f5a5a7f71818fbb04098">dumpVar</link>(D,&#32;x);
00055 }
00056 
00057 
00058 <emphasis role="comment">/*&#32;dumpInt&#32;Buff&#32;Size&#32;*/</emphasis>
<anchor xml:id="_ldump_8c_source_1l00059"/><link linkend="_ldump_8c_1a2a1ad4360d7023093f769ebda9341597">00059</link> <emphasis role="preprocessor">#define&#32;DIBS&#32;&#32;&#32;&#32;((sizeof(size_t)&#32;*&#32;8&#32;/&#32;7)&#32;+&#32;1)</emphasis>
00060 
<anchor xml:id="_ldump_8c_source_1l00061"/><link linkend="_ldump_8c_1ad8b3745ee530db686c5503e69e93c0e6">00061</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_ldump_8c_1ad8b3745ee530db686c5503e69e93c0e6">dumpSize</link>&#32;(<link linkend="_struct_dump_state">DumpState</link>&#32;*D,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;x)&#32;{
00062 &#32;&#32;<link linkend="_llimits_8h_1ae1fe9ac10d9803bd1d7bdf30b18bad68">lu_byte</link>&#32;buff[<link linkend="_ldump_8c_1a2a1ad4360d7023093f769ebda9341597">DIBS</link>];
00063 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;n&#32;=&#32;0;
00064 &#32;&#32;<emphasis role="keywordflow">do</emphasis>&#32;{
00065 &#32;&#32;&#32;&#32;buff[<link linkend="_ldump_8c_1a2a1ad4360d7023093f769ebda9341597">DIBS</link>&#32;-&#32;(++n)]&#32;=&#32;x&#32;&amp;&#32;0x7f;&#32;&#32;<emphasis role="comment">/*&#32;fill&#32;buffer&#32;in&#32;reverse&#32;order&#32;*/</emphasis>
00066 &#32;&#32;&#32;&#32;x&#32;&gt;&gt;=&#32;7;
00067 &#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>&#32;(x&#32;!=&#32;0);
00068 &#32;&#32;buff[<link linkend="_ldump_8c_1a2a1ad4360d7023093f769ebda9341597">DIBS</link>&#32;-&#32;1]&#32;|=&#32;0x80;&#32;&#32;<emphasis role="comment">/*&#32;mark&#32;last&#32;byte&#32;*/</emphasis>
00069 &#32;&#32;<link linkend="_ldump_8c_1aa57836f656453350c7d2b6b89df1b003">dumpVector</link>(D,&#32;buff&#32;+&#32;<link linkend="_ldump_8c_1a2a1ad4360d7023093f769ebda9341597">DIBS</link>&#32;-&#32;n,&#32;n);
00070 }
00071 
00072 
<anchor xml:id="_ldump_8c_source_1l00073"/><link linkend="_ldump_8c_1af18972a3be9ad820b0d677891405d15b">00073</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_ldump_8c_1af18972a3be9ad820b0d677891405d15b">dumpInt</link>&#32;(<link linkend="_struct_dump_state">DumpState</link>&#32;*D,&#32;<emphasis role="keywordtype">int</emphasis>&#32;x)&#32;{
00074 &#32;&#32;<link linkend="_ldump_8c_1ad8b3745ee530db686c5503e69e93c0e6">dumpSize</link>(D,&#32;x);
00075 }
00076 
00077 
<anchor xml:id="_ldump_8c_source_1l00078"/><link linkend="_ldump_8c_1a671751477d7f491c5e9b2affbcd517a0">00078</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_ldump_8c_1a671751477d7f491c5e9b2affbcd517a0">dumpNumber</link>&#32;(<link linkend="_struct_dump_state">DumpState</link>&#32;*D,&#32;<link linkend="_lua_8h_1af0a6ed3b852d680769cfc410a0672172">lua_Number</link>&#32;x)&#32;{
00079 &#32;&#32;<link linkend="_ldump_8c_1ad2bf75eb38f1f5a5a7f71818fbb04098">dumpVar</link>(D,&#32;x);
00080 }
00081 
00082 
<anchor xml:id="_ldump_8c_source_1l00083"/><link linkend="_ldump_8c_1a5bc42c8666f45652f5716243028c4b39">00083</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_ldump_8c_1a5bc42c8666f45652f5716243028c4b39">dumpInteger</link>&#32;(<link linkend="_struct_dump_state">DumpState</link>&#32;*D,&#32;<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>&#32;x)&#32;{
00084 &#32;&#32;<link linkend="_ldump_8c_1ad2bf75eb38f1f5a5a7f71818fbb04098">dumpVar</link>(D,&#32;x);
00085 }
00086 
00087 
<anchor xml:id="_ldump_8c_source_1l00088"/><link linkend="_ldump_8c_1a62dae3e1e70f0ded796f53a1571a3352">00088</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_ldump_8c_1a62dae3e1e70f0ded796f53a1571a3352">dumpString</link>&#32;(<link linkend="_struct_dump_state">DumpState</link>&#32;*D,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_string">TString</link>&#32;*s)&#32;{
00089 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(s&#32;==&#32;NULL)
00090 &#32;&#32;&#32;&#32;<link linkend="_ldump_8c_1ad8b3745ee530db686c5503e69e93c0e6">dumpSize</link>(D,&#32;0);
00091 &#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00092 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;size&#32;=&#32;<link linkend="_lobject_8h_1a3a62185cfa9345aedfc3a581dfdbb4f3">tsslen</link>(s);
00093 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*str&#32;=&#32;<link linkend="_lobject_8h_1acb05d3ab238923581a9c629b8e11a6ac">getstr</link>(s);
00094 &#32;&#32;&#32;&#32;<link linkend="_ldump_8c_1ad8b3745ee530db686c5503e69e93c0e6">dumpSize</link>(D,&#32;size&#32;+&#32;1);
00095 &#32;&#32;&#32;&#32;<link linkend="_ldump_8c_1aa57836f656453350c7d2b6b89df1b003">dumpVector</link>(D,&#32;str,&#32;size);
00096 &#32;&#32;}
00097 }
00098 
00099 
<anchor xml:id="_ldump_8c_source_1l00100"/><link linkend="_ldump_8c_1af4e6b3cad1a6436e065a811a3e6d4573">00100</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_ldump_8c_1af4e6b3cad1a6436e065a811a3e6d4573">dumpCode</link>&#32;(<link linkend="_struct_dump_state">DumpState</link>&#32;*D,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_proto">Proto</link>&#32;*f)&#32;{
00101 &#32;&#32;<link linkend="_ldump_8c_1af18972a3be9ad820b0d677891405d15b">dumpInt</link>(D,&#32;f-&gt;<link linkend="_struct_proto_1aa3cefdf204c272e3a1a3aa8bc12f4e3e">sizecode</link>);
00102 &#32;&#32;<link linkend="_ldump_8c_1aa57836f656453350c7d2b6b89df1b003">dumpVector</link>(D,&#32;f-&gt;<link linkend="_struct_proto_1a744e03861a6c76b7eeef213b73419ec7">code</link>,&#32;f-&gt;<link linkend="_struct_proto_1aa3cefdf204c272e3a1a3aa8bc12f4e3e">sizecode</link>);
00103 }
00104 
00105 
00106 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_ldump_8c_1a2e1db7ac1fa976eb7e3b90ec15a576b2">dumpFunction</link>(<link linkend="_struct_dump_state">DumpState</link>&#32;*D,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_proto">Proto</link>&#32;*f,&#32;<link linkend="_struct_t_string">TString</link>&#32;*psource);
00107 
<anchor xml:id="_ldump_8c_source_1l00108"/><link linkend="_ldump_8c_1a03c1c48bb784b200a4f8e982c9235456">00108</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_ldump_8c_1a03c1c48bb784b200a4f8e982c9235456">dumpConstants</link>&#32;(<link linkend="_struct_dump_state">DumpState</link>&#32;*D,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_proto">Proto</link>&#32;*f)&#32;{
00109 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
00110 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;n&#32;=&#32;f-&gt;<link linkend="_struct_proto_1a207b8b69ed4d393dd3c20925febd29e4">sizek</link>;
00111 &#32;&#32;<link linkend="_ldump_8c_1af18972a3be9ad820b0d677891405d15b">dumpInt</link>(D,&#32;n);
00112 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;n;&#32;i++)&#32;{
00113 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_t_value">TValue</link>&#32;*o&#32;=&#32;&amp;f-&gt;<link linkend="_struct_proto_1a5287370e219b50fe677549b4aafdc81d">k</link>[i];
00114 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;tt&#32;=&#32;<link linkend="_lobject_8h_1a01db083f8bc8b2eb51a45c0ba9967043">ttypetag</link>(o);
00115 &#32;&#32;&#32;&#32;<link linkend="_ldump_8c_1a4838cac003905fc2e95b522a03d4adfc">dumpByte</link>(D,&#32;tt);
00116 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(tt)&#32;{
00117 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lobject_8h_1a19aaaf978586be9032b63b7a8807631a">LUA_VNUMFLT</link>:
00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_ldump_8c_1a671751477d7f491c5e9b2affbcd517a0">dumpNumber</link>(D,&#32;<link linkend="_lobject_8h_1a7d7d6b08f40350c9e7364e9cb984d744">fltvalue</link>(o));
00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00120 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lobject_8h_1a69aa5cae89d634d458e0da4957257745">LUA_VNUMINT</link>:
00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_ldump_8c_1a5bc42c8666f45652f5716243028c4b39">dumpInteger</link>(D,&#32;<link linkend="_lobject_8h_1af1a59636db050b842a791cd19086d925">ivalue</link>(o));
00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00123 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lobject_8h_1a794410ffd7267ef873eb05ac695b1ba6">LUA_VSHRSTR</link>:
00124 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;<link linkend="_lobject_8h_1a6869fcb0a0178b6d70d431eae1683199">LUA_VLNGSTR</link>:
00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_ldump_8c_1a62dae3e1e70f0ded796f53a1571a3352">dumpString</link>(D,&#32;<link linkend="_lobject_8h_1a8661397faed512ccc9c70a4661f1a83d">tsvalue</link>(o));
00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00127 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">default</emphasis>:
00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_llimits_8h_1a5978f5fda715bd80e845df1e16ad7780">lua_assert</link>(tt&#32;==&#32;<link linkend="_lobject_8h_1aac7a0aeb62c96ba16c7638e707bfaac0">LUA_VNIL</link>&#32;||&#32;tt&#32;==&#32;<link linkend="_lobject_8h_1a95236d400066ed64a37c72d3dada7e9d">LUA_VFALSE</link>&#32;||&#32;tt&#32;==&#32;<link linkend="_lobject_8h_1aed66cd95aa3f518c947b5bd9e17bab47">LUA_VTRUE</link>);
00129 &#32;&#32;&#32;&#32;}
00130 &#32;&#32;}
00131 }
00132 
00133 
<anchor xml:id="_ldump_8c_source_1l00134"/><link linkend="_ldump_8c_1a34567bcb1204f914b0316d5ac5532ae0">00134</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_ldump_8c_1a34567bcb1204f914b0316d5ac5532ae0">dumpProtos</link>&#32;(<link linkend="_struct_dump_state">DumpState</link>&#32;*D,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_proto">Proto</link>&#32;*f)&#32;{
00135 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
00136 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;n&#32;=&#32;f-&gt;<link linkend="_struct_proto_1aea0f5dcb02517aa08aa2ffa58c396260">sizep</link>;
00137 &#32;&#32;<link linkend="_ldump_8c_1af18972a3be9ad820b0d677891405d15b">dumpInt</link>(D,&#32;n);
00138 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;n;&#32;i++)
00139 &#32;&#32;&#32;&#32;<link linkend="_ldump_8c_1a2e1db7ac1fa976eb7e3b90ec15a576b2">dumpFunction</link>(D,&#32;f-&gt;<link linkend="_struct_proto_1ab7af98f98f5cf674f6be5e3fc855af43">p</link>[i],&#32;f-&gt;<link linkend="_struct_proto_1a47b5f25d6c53f3892e43702659c6de69">source</link>);
00140 }
00141 
00142 
<anchor xml:id="_ldump_8c_source_1l00143"/><link linkend="_ldump_8c_1aa91ee935a3a398fdb0228107f579fb75">00143</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_ldump_8c_1aa91ee935a3a398fdb0228107f579fb75">dumpUpvalues</link>&#32;(<link linkend="_struct_dump_state">DumpState</link>&#32;*D,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_proto">Proto</link>&#32;*f)&#32;{
00144 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,&#32;n&#32;=&#32;f-&gt;<link linkend="_struct_proto_1a2e13a98343ef0d1233bb3e62ae519c5f">sizeupvalues</link>;
00145 &#32;&#32;<link linkend="_ldump_8c_1af18972a3be9ad820b0d677891405d15b">dumpInt</link>(D,&#32;n);
00146 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;n;&#32;i++)&#32;{
00147 &#32;&#32;&#32;&#32;<link linkend="_ldump_8c_1a4838cac003905fc2e95b522a03d4adfc">dumpByte</link>(D,&#32;f-&gt;<link linkend="_struct_proto_1ac3b891662880254a7e0a3dc0afa86254">upvalues</link>[i].<link linkend="_struct_upvaldesc_1acfbdd39f714ffdb714bddda46b7ae744">instack</link>);
00148 &#32;&#32;&#32;&#32;<link linkend="_ldump_8c_1a4838cac003905fc2e95b522a03d4adfc">dumpByte</link>(D,&#32;f-&gt;<link linkend="_struct_proto_1ac3b891662880254a7e0a3dc0afa86254">upvalues</link>[i].<link linkend="_struct_upvaldesc_1a6234b462bcd2f6c2e6f5e537b2793b84">idx</link>);
00149 &#32;&#32;&#32;&#32;<link linkend="_ldump_8c_1a4838cac003905fc2e95b522a03d4adfc">dumpByte</link>(D,&#32;f-&gt;<link linkend="_struct_proto_1ac3b891662880254a7e0a3dc0afa86254">upvalues</link>[i].<link linkend="_struct_upvaldesc_1a85f4000f0b6d1a7e3ff5f1612472db29">kind</link>);
00150 &#32;&#32;}
00151 }
00152 
00153 
<anchor xml:id="_ldump_8c_source_1l00154"/><link linkend="_ldump_8c_1a57223a49768a740530eddd2f3ef19699">00154</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_ldump_8c_1a57223a49768a740530eddd2f3ef19699">dumpDebug</link>&#32;(<link linkend="_struct_dump_state">DumpState</link>&#32;*D,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_proto">Proto</link>&#32;*f)&#32;{
00155 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,&#32;n;
00156 &#32;&#32;n&#32;=&#32;(D-&gt;<link linkend="_struct_dump_state_1a6e958fbc233c7ac8487110ad21718cf0">strip</link>)&#32;?&#32;0&#32;:&#32;f-&gt;<link linkend="_struct_proto_1a53f346647cd2060380dad39c9d5caebe">sizelineinfo</link>;
00157 &#32;&#32;<link linkend="_ldump_8c_1af18972a3be9ad820b0d677891405d15b">dumpInt</link>(D,&#32;n);
00158 &#32;&#32;<link linkend="_ldump_8c_1aa57836f656453350c7d2b6b89df1b003">dumpVector</link>(D,&#32;f-&gt;<link linkend="_struct_proto_1a0d5af822069e8cdb2bd7f17f3cdcf575">lineinfo</link>,&#32;n);
00159 &#32;&#32;n&#32;=&#32;(D-&gt;<link linkend="_struct_dump_state_1a6e958fbc233c7ac8487110ad21718cf0">strip</link>)&#32;?&#32;0&#32;:&#32;f-&gt;<link linkend="_struct_proto_1ab443243fa7dd09b9c08117626c3f8a61">sizeabslineinfo</link>;
00160 &#32;&#32;<link linkend="_ldump_8c_1af18972a3be9ad820b0d677891405d15b">dumpInt</link>(D,&#32;n);
00161 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;n;&#32;i++)&#32;{
00162 &#32;&#32;&#32;&#32;<link linkend="_ldump_8c_1af18972a3be9ad820b0d677891405d15b">dumpInt</link>(D,&#32;f-&gt;<link linkend="_struct_proto_1a731ed18a38cc12a903582b927104c883">abslineinfo</link>[i].<link linkend="_struct_abs_line_info_1ac8c81e61335635fa4709d82412b31f06">pc</link>);
00163 &#32;&#32;&#32;&#32;<link linkend="_ldump_8c_1af18972a3be9ad820b0d677891405d15b">dumpInt</link>(D,&#32;f-&gt;<link linkend="_struct_proto_1a731ed18a38cc12a903582b927104c883">abslineinfo</link>[i].<link linkend="_struct_abs_line_info_1a41ebd28ef1d7c6ade45642cb6acc1039">line</link>);
00164 &#32;&#32;}
00165 &#32;&#32;n&#32;=&#32;(D-&gt;<link linkend="_struct_dump_state_1a6e958fbc233c7ac8487110ad21718cf0">strip</link>)&#32;?&#32;0&#32;:&#32;f-&gt;<link linkend="_struct_proto_1af9147ae18b522811714aeb19036f639d">sizelocvars</link>;
00166 &#32;&#32;<link linkend="_ldump_8c_1af18972a3be9ad820b0d677891405d15b">dumpInt</link>(D,&#32;n);
00167 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;n;&#32;i++)&#32;{
00168 &#32;&#32;&#32;&#32;<link linkend="_ldump_8c_1a62dae3e1e70f0ded796f53a1571a3352">dumpString</link>(D,&#32;f-&gt;<link linkend="_struct_proto_1a7a727780b57a02cd42e7ef902f6e7f90">locvars</link>[i].<link linkend="_struct_loc_var_1ac2450e0899ac889b040f20956221cd83">varname</link>);
00169 &#32;&#32;&#32;&#32;<link linkend="_ldump_8c_1af18972a3be9ad820b0d677891405d15b">dumpInt</link>(D,&#32;f-&gt;<link linkend="_struct_proto_1a7a727780b57a02cd42e7ef902f6e7f90">locvars</link>[i].<link linkend="_struct_loc_var_1aede5156df384666bb10ffffe4e8c2d8f">startpc</link>);
00170 &#32;&#32;&#32;&#32;<link linkend="_ldump_8c_1af18972a3be9ad820b0d677891405d15b">dumpInt</link>(D,&#32;f-&gt;<link linkend="_struct_proto_1a7a727780b57a02cd42e7ef902f6e7f90">locvars</link>[i].<link linkend="_struct_loc_var_1a4531ef6d4151bc1400f288a004323700">endpc</link>);
00171 &#32;&#32;}
00172 &#32;&#32;n&#32;=&#32;(D-&gt;<link linkend="_struct_dump_state_1a6e958fbc233c7ac8487110ad21718cf0">strip</link>)&#32;?&#32;0&#32;:&#32;f-&gt;<link linkend="_struct_proto_1a2e13a98343ef0d1233bb3e62ae519c5f">sizeupvalues</link>;
00173 &#32;&#32;<link linkend="_ldump_8c_1af18972a3be9ad820b0d677891405d15b">dumpInt</link>(D,&#32;n);
00174 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(i&#32;=&#32;0;&#32;i&#32;&lt;&#32;n;&#32;i++)
00175 &#32;&#32;&#32;&#32;<link linkend="_ldump_8c_1a62dae3e1e70f0ded796f53a1571a3352">dumpString</link>(D,&#32;f-&gt;<link linkend="_struct_proto_1ac3b891662880254a7e0a3dc0afa86254">upvalues</link>[i].<link linkend="_struct_upvaldesc_1aa249fce0e5297641aa43f45e48bb1548">name</link>);
00176 }
00177 
00178 
<anchor xml:id="_ldump_8c_source_1l00179"/><link linkend="_ldump_8c_1a2e1db7ac1fa976eb7e3b90ec15a576b2">00179</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_ldump_8c_1a2e1db7ac1fa976eb7e3b90ec15a576b2">dumpFunction</link>&#32;(<link linkend="_struct_dump_state">DumpState</link>&#32;*D,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_proto">Proto</link>&#32;*f,&#32;<link linkend="_struct_t_string">TString</link>&#32;*psource)&#32;{
00180 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(D-&gt;<link linkend="_struct_dump_state_1a6e958fbc233c7ac8487110ad21718cf0">strip</link>&#32;||&#32;f-&gt;<link linkend="_struct_proto_1a47b5f25d6c53f3892e43702659c6de69">source</link>&#32;==&#32;psource)
00181 &#32;&#32;&#32;&#32;<link linkend="_ldump_8c_1a62dae3e1e70f0ded796f53a1571a3352">dumpString</link>(D,&#32;NULL);&#32;&#32;<emphasis role="comment">/*&#32;no&#32;debug&#32;info&#32;or&#32;same&#32;source&#32;as&#32;its&#32;parent&#32;*/</emphasis>
00182 &#32;&#32;<emphasis role="keywordflow">else</emphasis>
00183 &#32;&#32;&#32;&#32;<link linkend="_ldump_8c_1a62dae3e1e70f0ded796f53a1571a3352">dumpString</link>(D,&#32;f-&gt;<link linkend="_struct_proto_1a47b5f25d6c53f3892e43702659c6de69">source</link>);
00184 &#32;&#32;<link linkend="_ldump_8c_1af18972a3be9ad820b0d677891405d15b">dumpInt</link>(D,&#32;f-&gt;<link linkend="_struct_proto_1a4dfda1a3839aa77fb8fc7626075151dd">linedefined</link>);
00185 &#32;&#32;<link linkend="_ldump_8c_1af18972a3be9ad820b0d677891405d15b">dumpInt</link>(D,&#32;f-&gt;<link linkend="_struct_proto_1a0129a289db231fbe2c6c3b3d6062979e">lastlinedefined</link>);
00186 &#32;&#32;<link linkend="_ldump_8c_1a4838cac003905fc2e95b522a03d4adfc">dumpByte</link>(D,&#32;f-&gt;<link linkend="_struct_proto_1a2c5c3bfc47c6c4b7b9f4eef47d7167e9">numparams</link>);
00187 &#32;&#32;<link linkend="_ldump_8c_1a4838cac003905fc2e95b522a03d4adfc">dumpByte</link>(D,&#32;f-&gt;<link linkend="_struct_proto_1a75232df840e02cfa8134903745579657">is_vararg</link>);
00188 &#32;&#32;<link linkend="_ldump_8c_1a4838cac003905fc2e95b522a03d4adfc">dumpByte</link>(D,&#32;f-&gt;<link linkend="_struct_proto_1ad11e004e7f14af7e281b6da69d08ad7a">maxstacksize</link>);
00189 &#32;&#32;<link linkend="_ldump_8c_1af4e6b3cad1a6436e065a811a3e6d4573">dumpCode</link>(D,&#32;f);
00190 &#32;&#32;<link linkend="_ldump_8c_1a03c1c48bb784b200a4f8e982c9235456">dumpConstants</link>(D,&#32;f);
00191 &#32;&#32;<link linkend="_ldump_8c_1aa91ee935a3a398fdb0228107f579fb75">dumpUpvalues</link>(D,&#32;f);
00192 &#32;&#32;<link linkend="_ldump_8c_1a34567bcb1204f914b0316d5ac5532ae0">dumpProtos</link>(D,&#32;f);
00193 &#32;&#32;<link linkend="_ldump_8c_1a57223a49768a740530eddd2f3ef19699">dumpDebug</link>(D,&#32;f);
00194 }
00195 
00196 
<anchor xml:id="_ldump_8c_source_1l00197"/><link linkend="_ldump_8c_1a7dff1d2107a66420c1476d4ecfa27b14">00197</link> <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_ldump_8c_1a7dff1d2107a66420c1476d4ecfa27b14">dumpHeader</link>&#32;(<link linkend="_struct_dump_state">DumpState</link>&#32;*D)&#32;{
00198 &#32;&#32;<link linkend="_ldump_8c_1a05e931c17f007b1c9d54080d6243af18">dumpLiteral</link>(D,&#32;<link linkend="_lua_8h_1af21c9fa681dc005c17a7b288882cae1b">LUA_SIGNATURE</link>);
00199 &#32;&#32;<link linkend="_ldump_8c_1a4838cac003905fc2e95b522a03d4adfc">dumpByte</link>(D,&#32;<link linkend="_lundump_8h_1aaef225d352d4ab1461adc02e4fa027cd">LUAC_VERSION</link>);
00200 &#32;&#32;<link linkend="_ldump_8c_1a4838cac003905fc2e95b522a03d4adfc">dumpByte</link>(D,&#32;<link linkend="_lundump_8h_1a1898203259aab6e1d60737b1e95c2adc">LUAC_FORMAT</link>);
00201 &#32;&#32;<link linkend="_ldump_8c_1a05e931c17f007b1c9d54080d6243af18">dumpLiteral</link>(D,&#32;<link linkend="_lundump_8h_1ad6f33b546a90e78ddb67428b712b48ae">LUAC_DATA</link>);
00202 &#32;&#32;<link linkend="_ldump_8c_1a4838cac003905fc2e95b522a03d4adfc">dumpByte</link>(D,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_llimits_8h_1aa81d2e7f7263ef29946852d4966a192e">Instruction</link>));
00203 &#32;&#32;<link linkend="_ldump_8c_1a4838cac003905fc2e95b522a03d4adfc">dumpByte</link>(D,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_lua_8h_1a362144baa0cfb14dc38fd21438053d73">lua_Integer</link>));
00204 &#32;&#32;<link linkend="_ldump_8c_1a4838cac003905fc2e95b522a03d4adfc">dumpByte</link>(D,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_lua_8h_1af0a6ed3b852d680769cfc410a0672172">lua_Number</link>));
00205 &#32;&#32;<link linkend="_ldump_8c_1a5bc42c8666f45652f5716243028c4b39">dumpInteger</link>(D,&#32;<link linkend="_lundump_8h_1af8b5bd7f864ed14aef7a9e7405ce6aad">LUAC_INT</link>);
00206 &#32;&#32;<link linkend="_ldump_8c_1a671751477d7f491c5e9b2affbcd517a0">dumpNumber</link>(D,&#32;<link linkend="_lundump_8h_1a83a08bb2d400b526bb4a2f449523dd62">LUAC_NUM</link>);
00207 }
00208 
00209 
00210 <emphasis role="comment">/*</emphasis>
00211 <emphasis role="comment">**&#32;dump&#32;Lua&#32;function&#32;as&#32;precompiled&#32;chunk</emphasis>
00212 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_ldump_8c_source_1l00213"/><link linkend="_lundump_8h_1a2b9d33dfd898f6284de183d168556786">00213</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_ldump_8c_1a808f6a29001ac6446f40c76014c6b6e9">luaU_dump</link>(<link linkend="_structlua___state">lua_State</link>&#32;*L,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_proto">Proto</link>&#32;*f,&#32;<link linkend="_lua_8h_1a855729196d7066b2da21178284868a8d">lua_Writer</link>&#32;w,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*data,
00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;strip)&#32;{
00215 &#32;&#32;<link linkend="_struct_dump_state">DumpState</link>&#32;D;
00216 &#32;&#32;D.<link linkend="_struct_dump_state_1a62f94dfc0036bec0c14106c2f15caf3e">L</link>&#32;=&#32;L;
00217 &#32;&#32;D.<link linkend="_struct_dump_state_1affca24c5f900e5840eacb95ed06ae5b2">writer</link>&#32;=&#32;w;
00218 &#32;&#32;D.<link linkend="_struct_dump_state_1a735984d41155bc1032e09bece8f8d66d">data</link>&#32;=&#32;data;
00219 &#32;&#32;D.<link linkend="_struct_dump_state_1a6e958fbc233c7ac8487110ad21718cf0">strip</link>&#32;=&#32;strip;
00220 &#32;&#32;D.<link linkend="_struct_dump_state_1a6e27f49150e9a14580fb313cc2777e00">status</link>&#32;=&#32;0;
00221 &#32;&#32;<link linkend="_ldump_8c_1a7dff1d2107a66420c1476d4ecfa27b14">dumpHeader</link>(&amp;D);
00222 &#32;&#32;<link linkend="_ldump_8c_1a4838cac003905fc2e95b522a03d4adfc">dumpByte</link>(&amp;D,&#32;f-&gt;<link linkend="_struct_proto_1a2e13a98343ef0d1233bb3e62ae519c5f">sizeupvalues</link>);
00223 &#32;&#32;<link linkend="_ldump_8c_1a2e1db7ac1fa976eb7e3b90ec15a576b2">dumpFunction</link>(&amp;D,&#32;f,&#32;NULL);
00224 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;D.<link linkend="_struct_dump_state_1a6e27f49150e9a14580fb313cc2777e00">status</link>;
00225 }
00226 
</programlisting></section>
