.TH "C:/Users/longyg/Documents/gitprojects/lua/src/ltable.h" 3 "2020年 九月 9日 星期三" "Version 1.0" "Lua_Docmention" \" -*- nroff -*-
.ad l
.nh
.SH NAME
C:/Users/longyg/Documents/gitprojects/lua/src/ltable.h
.SH SYNOPSIS
.br
.PP
\fC#include 'lobject\&.h'\fP
.br

.SS "宏定义"

.in +1c
.ti -1c
.RI "#define \fBgnode\fP(t,  i)   (&(t)\->node[i])"
.br
.ti -1c
.RI "#define \fBgval\fP(n)   (&(n)\->i_val)"
.br
.ti -1c
.RI "#define \fBgnext\fP(n)   ((n)\->\fBu\&.next\fP)"
.br
.ti -1c
.RI "#define \fBinvalidateTMcache\fP(t)   ((t)\->flags = 0)"
.br
.ti -1c
.RI "#define \fBisdummy\fP(t)   ((t)\->lastfree == NULL)"
.br
.ti -1c
.RI "#define \fBallocsizenode\fP(t)   (\fBisdummy\fP(t) ? 0 : \fBsizenode\fP(t))"
.br
.ti -1c
.RI "#define \fBnodefromval\fP(v)   \fBcast\fP(\fBNode\fP *, (v))"
.br
.in -1c
.SS "函数"

.in +1c
.ti -1c
.RI "\fBLUAI_FUNC\fP const \fBTValue\fP * \fBluaH_getint\fP (\fBTable\fP *t, \fBlua_Integer\fP key)"
.br
.ti -1c
.RI "\fBLUAI_FUNC\fP void \fBluaH_setint\fP (\fBlua_State\fP *L, \fBTable\fP *t, \fBlua_Integer\fP key, \fBTValue\fP *value)"
.br
.ti -1c
.RI "\fBLUAI_FUNC\fP const \fBTValue\fP * \fBluaH_getshortstr\fP (\fBTable\fP *t, \fBTString\fP *key)"
.br
.ti -1c
.RI "\fBLUAI_FUNC\fP const \fBTValue\fP * \fBluaH_getstr\fP (\fBTable\fP *t, \fBTString\fP *key)"
.br
.ti -1c
.RI "\fBLUAI_FUNC\fP const \fBTValue\fP * \fBluaH_get\fP (\fBTable\fP *t, const \fBTValue\fP *key)"
.br
.ti -1c
.RI "\fBLUAI_FUNC\fP \fBTValue\fP * \fBluaH_newkey\fP (\fBlua_State\fP *L, \fBTable\fP *t, const \fBTValue\fP *key)"
.br
.ti -1c
.RI "\fBLUAI_FUNC\fP \fBTValue\fP * \fBluaH_set\fP (\fBlua_State\fP *L, \fBTable\fP *t, const \fBTValue\fP *key)"
.br
.ti -1c
.RI "\fBLUAI_FUNC\fP \fBTable\fP * \fBluaH_new\fP (\fBlua_State\fP *L)"
.br
.ti -1c
.RI "\fBLUAI_FUNC\fP void \fBluaH_resize\fP (\fBlua_State\fP *L, \fBTable\fP *t, unsigned int nasize, unsigned int nhsize)"
.br
.ti -1c
.RI "\fBLUAI_FUNC\fP void \fBluaH_resizearray\fP (\fBlua_State\fP *L, \fBTable\fP *t, unsigned int nasize)"
.br
.ti -1c
.RI "\fBLUAI_FUNC\fP void \fBluaH_free\fP (\fBlua_State\fP *L, \fBTable\fP *t)"
.br
.ti -1c
.RI "\fBLUAI_FUNC\fP int \fBluaH_next\fP (\fBlua_State\fP *L, \fBTable\fP *t, \fBStkId\fP key)"
.br
.ti -1c
.RI "\fBLUAI_FUNC\fP \fBlua_Unsigned\fP \fBluaH_getn\fP (\fBTable\fP *t)"
.br
.ti -1c
.RI "\fBLUAI_FUNC\fP unsigned int \fBluaH_realasize\fP (const \fBTable\fP *t)"
.br
.in -1c
.SH "宏定义说明"
.PP 
.SS "#define allocsizenode(t)   (\fBisdummy\fP(t) ? 0 : \fBsizenode\fP(t))"

.PP
在文件 ltable\&.h 第 26 行定义\&.
.SS "#define gnext(n)   ((n)\->\fBu\&.next\fP)"

.PP
在文件 ltable\&.h 第 15 行定义\&.
.SS "#define gnode(t, i)   (&(t)\->node[i])"

.PP
在文件 ltable\&.h 第 13 行定义\&.
.SS "#define gval(n)   (&(n)\->i_val)"

.PP
在文件 ltable\&.h 第 14 行定义\&.
.SS "#define invalidateTMcache(t)   ((t)\->flags = 0)"

.PP
在文件 ltable\&.h 第 18 行定义\&.
.SS "#define isdummy(t)   ((t)\->lastfree == NULL)"

.PP
在文件 ltable\&.h 第 22 行定义\&.
.SS "#define nodefromval(v)   \fBcast\fP(\fBNode\fP *, (v))"

.PP
在文件 ltable\&.h 第 30 行定义\&.
.SH "函数说明"
.PP 
.SS "\fBLUAI_FUNC\fP void luaH_free (\fBlua_State\fP * L, \fBTable\fP * t)"

.PP
在文件 ltable\&.c 第 594 行定义\&.
.SS "\fBLUAI_FUNC\fP const \fBTValue\fP* luaH_get (\fBTable\fP * t, const \fBTValue\fP * key)"

.PP
在文件 ltable\&.c 第 741 行定义\&.
.SS "\fBLUAI_FUNC\fP const \fBTValue\fP* luaH_getint (\fBTable\fP * t, \fBlua_Integer\fP key)"

.PP
在文件 ltable\&.c 第 683 行定义\&.
.SS "\fBLUAI_FUNC\fP \fBlua_Unsigned\fP luaH_getn (\fBTable\fP * t)"

.PP
在文件 ltable\&.c 第 865 行定义\&.
.SS "\fBLUAI_FUNC\fP const \fBTValue\fP* luaH_getshortstr (\fBTable\fP * t, \fBTString\fP * key)"

.PP
在文件 ltable\&.c 第 711 行定义\&.
.SS "\fBLUAI_FUNC\fP const \fBTValue\fP* luaH_getstr (\fBTable\fP * t, \fBTString\fP * key)"

.PP
在文件 ltable\&.c 第 727 行定义\&.
.SS "\fBLUAI_FUNC\fP \fBTable\fP* luaH_new (\fBlua_State\fP * L)"

.PP
在文件 ltable\&.c 第 582 行定义\&.
.SS "\fBLUAI_FUNC\fP \fBTValue\fP* luaH_newkey (\fBlua_State\fP * L, \fBTable\fP * t, const \fBTValue\fP * key)"

.PP
在文件 ltable\&.c 第 621 行定义\&.
.SS "\fBLUAI_FUNC\fP int luaH_next (\fBlua_State\fP * L, \fBTable\fP * t, \fBStkId\fP key)"

.PP
在文件 ltable\&.c 第 305 行定义\&.
.SS "\fBLUAI_FUNC\fP unsigned int luaH_realasize (const \fBTable\fP * t)"

.PP
在文件 ltable\&.c 第 209 行定义\&.
.SS "\fBLUAI_FUNC\fP void luaH_resize (\fBlua_State\fP * L, \fBTable\fP * t, unsigned int nasize, unsigned int nhsize)"

.PP
在文件 ltable\&.c 第 509 行定义\&.
.SS "\fBLUAI_FUNC\fP void luaH_resizearray (\fBlua_State\fP * L, \fBTable\fP * t, unsigned int nasize)"

.PP
在文件 ltable\&.c 第 546 行定义\&.
.SS "\fBLUAI_FUNC\fP \fBTValue\fP* luaH_set (\fBlua_State\fP * L, \fBTable\fP * t, const \fBTValue\fP * key)"

.PP
在文件 ltable\&.c 第 762 行定义\&.
.SS "\fBLUAI_FUNC\fP void luaH_setint (\fBlua_State\fP * L, \fBTable\fP * t, \fBlua_Integer\fP key, \fBTValue\fP * value)"

.PP
在文件 ltable\&.c 第 770 行定义\&.
.SH "作者"
.PP 
由 Doyxgen 通过分析 Lua_Docmention 的 源代码自动生成\&.
